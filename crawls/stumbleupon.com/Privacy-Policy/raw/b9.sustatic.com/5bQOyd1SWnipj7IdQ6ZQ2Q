(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!ck[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){cl||(cl=c.createElement("iframe"),cl.frameBorder=cl.width=cl.height=0),b.appendChild(cl);if(!cm||!cl.createElement)cm=(cl.contentWindow||cl.contentDocument).document,cm.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),cm.close();d=cm.createElement(a),cm.body.appendChild(d),e=f.css(d,"display"),b.removeChild(cl)}ck[a]=e}return ck[a]}function cu(a,b){var c={};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=a});return c}function ct(){cr=b}function cs(){setTimeout(ct,0);return cr=f.now()}function cj(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ci(){try{return new a.XMLHttpRequest}catch(b){}}function cc(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function cb(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function ca(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bE.test(a)?d(a,e):ca(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)ca(a+"["+e+"]",b[e],c,d);else d(a,b)}function b_(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function b$(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bT,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=b$(a,c,d,e,"*",g));return l}function bZ(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bP),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bC(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bx:by,g=0,h=e.length;if(d>0){if(c!=="border")for(;g<h;g++)c||(d-=parseFloat(f.css(a,"padding"+e[g]))||0),c==="margin"?d+=parseFloat(f.css(a,c+e[g]))||0:d-=parseFloat(f.css(a,"border"+e[g]+"Width"))||0;return d+"px"}d=bz(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0;if(c)for(;g<h;g++)d+=parseFloat(f.css(a,"padding"+e[g]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+e[g]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+e[g]))||0);return d+"px"}function bp(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.1",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?m(g):h==="function"&&(!a.unique||!o.has(g))&&c.push(g)},n=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,l=j||0,j=0,k=c.length;for(;c&&l<k;l++)if(c[l].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}i=!1,c&&(a.once?e===!0?o.disable():c=[]:d&&d.length&&(e=d.shift(),o.fireWith(e[0],e[1])))},o={add:function(){if(c){var a=c.length;m(arguments),i?k=c.length:e&&e!==!0&&(j=a,n(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){i&&f<=k&&(k--,f<=l&&l--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&o.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(i?a.once||d.push([b,c]):(!a.once||!e)&&n(b,c));return this},fire:function(){o.fireWith(this,arguments);return this},fired:function(){return!!e}};return o};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p,q=c.createElement("div"),r=c.documentElement;q.setAttribute("className","t"),q.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=q.getElementsByTagName("*"),e=q.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=q.getElementsByTagName("input")[0],b={leadingWhitespace:q.firstChild.nodeType===3,tbody:!q.getElementsByTagName("tbody").length,htmlSerialize:!!q.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:q.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete q.test}catch(s){b.deleteExpando=!1}!q.addEventListener&&q.attachEvent&&q.fireEvent&&(q.attachEvent("onclick",function(){b.noCloneEvent=!1}),q.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),q.appendChild(i),k=c.createDocumentFragment(),k.appendChild(q.lastChild),b.checkClone=k.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,k.removeChild(i),k.appendChild(q),q.innerHTML="",a.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",q.style.width="2px",q.appendChild(j),b.reliableMarginRight=(parseInt((a.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0);if(q.attachEvent)for(o in{submit:1,change:1,focusin:1})n="on"+o,p=n in q,p||(q.setAttribute(n,"return;"),p=typeof q[n]=="function"),b[o+"Bubbles"]=p;k.removeChild(q),k=g=h=j=q=i=null,f(function(){var a,d,e,g,h,i,j,k,m,n,o,r=c.getElementsByTagName("body")[0];!r||(j=1,k="position:absolute;top:0;left:0;width:1px;height:1px;margin:0;",m="visibility:hidden;border:0;",n="style='"+k+"border:5px solid #000;padding:0;'",o="<div "+n+"><div></div></div>"+"<table "+n+" cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",a=c.createElement("div"),a.style.cssText=m+"width:0;height:0;position:static;top:0;margin-top:"+j+"px",r.insertBefore(a,r.firstChild),q=c.createElement("div"),a.appendChild(q),q.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",l=q.getElementsByTagName("td"),p=l[0].offsetHeight===0,l[0].style.display="",l[1].style.display="none",b.reliableHiddenOffsets=p&&l[0].offsetHeight===0,q.innerHTML="",q.style.width=q.style.paddingLeft="1px",f.boxModel=b.boxModel=q.offsetWidth===2,typeof q.style.zoom!="undefined"&&(q.style.display="inline",q.style.zoom=1,b.inlineBlockNeedsLayout=q.offsetWidth===2,q.style.display="",q.innerHTML="<div style='width:4px;'></div>",b.shrinkWrapBlocks=q.offsetWidth!==2),q.style.cssText=k+m,q.innerHTML=o,d=q.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,i={doesNotAddBorder:e.offsetTop!==5,doesAddBorderForTableAndCells:h.offsetTop===5},e.style.position="fixed",e.style.top="20px",i.fixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",i.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,i.doesNotIncludeMarginInBodyOffset=r.offsetTop!==j,r.removeChild(a),q=a=null,f.extend(b,i))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h=null;if(typeof a=="undefined"){if(this.length){h=f.data(this[0]);if(this[0].nodeType===1&&!f._data(this[0],"parsedAttrs")){e=this[0].attributes;for(var i=0,j=e.length;i<j;i++)g=e[i].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],"parsedAttrs",!0)}}return h}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split("."),d[1]=d[1]?"."+d[1]:"";if(c===b){h=this.triggerHandler("getData"+d[1]+"!",[d[0]]),h===b&&this.length&&(h=f.data(this[0],a),h=l(this[0],a,h));return h===b&&d[1]?this.data(d[0]):h}return this.each(function(){var b=f(this),e=[d[0],c];b.triggerHandler("setData"+d[1]+"!",e),f.data(this,a,c),b.triggerHandler("changeData"+d[1]+"!",e)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise()}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;h<g;h++)e=d[h],e&&(c=f.propFix[e]||e,f.attr(a,e,""),a.removeAttribute(v?e:c),u.test(e)&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/\bhover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=[],j,k,l,m,n,o,p,q,r,s,t;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!=="click")){m=f(this),m.context=this.ownerDocument||this;for(l=c.target;l!=this;l=l.parentNode||this){o={},q=[],m[0]=l;for(j=0;j<e;j++)r=d[j],s=r.selector,o[s]===b&&(o[s]=r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,matches:q})}}d.length>e&&i.push({elem:this,matches:d.slice(e)});for(j=0;j<i.length&&!c.isPropagationStopped();j++){p=i[j],c.currentTarget=p.elem;for(k=0;k<p.matches.length&&!c.isImmediatePropagationStopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleObj=r,n=((f.event.special[r.origType]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventDefault(),c.stopPropagation()))}}return c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0)}),d._submit_attached=!0)})},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.type+"."+e.namespace:e.type,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.POS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function()
{for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||!bc.test("<"+a.nodeName)?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement("div");b===c?bh.appendChild(o):U(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof(r=k.length)=="number")for(i=0;i<r;i++)bn(k[i]);else bn(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bq=/alpha\([^)]*\)/i,br=/opacity=([^)]*)/,bs=/([A-Z]|^ms)/g,bt=/^-?\d+(?:px)?$/i,bu=/^-?\d/,bv=/^([\-+])=([\-+.\de]+)/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Left","Right"],by=["Top","Bottom"],bz,bA,bB;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bz(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bv.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bz)return bz(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bC(a,b,d);f.swap(a,bw,function(){e=bC(a,b,d)});return e}},set:function(a,b){if(!bt.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bq,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bq.test(g)?g.replace(bq,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bz(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,b){var c,d,e;b=b.replace(bs,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b)));return c}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bt.test(f)&&bu.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f||0,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bD=/%20/g,bE=/\[\]$/,bF=/\r?\n/g,bG=/#.*$/,bH=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bI=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bJ=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bK=/^(?:GET|HEAD)$/,bL=/^\/\//,bM=/\?/,bN=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bO=/^(?:select|textarea)/i,bP=/\s+/,bQ=/([?&])_=[^&]*/,bR=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bS=f.fn.load,bT={},bU={},bV,bW,bX=["*/"]+["*"];try{bV=e.href}catch(bY){bV=c.createElement("a"),bV.href="",bV=bV.href}bW=bR.exec(bV.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bS)return bS.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bN,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bO.test(this.nodeName)||bI.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bF,"\r\n")}}):{name:b.name,value:c.replace(bF,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b_(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b_(a,b);return a},ajaxSettings:{url:bV,isLocal:bJ.test(bW[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bX},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bZ(bT),ajaxTransport:bZ(bU),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?cb(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cc(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bH.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bG,"").replace(bL,bW[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bP),d.crossDomain==null&&(r=bR.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bW[1]&&r[2]==bW[2]&&(r[3]||(r[1]==="http:"?80:443))==(bW[3]||(bW[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),b$(bT,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bK.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bM.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bQ,"$1_="+x);d.url=y+(y===d.url?(bM.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bX+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=b$(bU,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)ca(g,a[g],c,e);return d.join("&").replace(bD,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cd=f.now(),ce=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cd++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ce.test(b.url)||e&&ce.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ce,l),b.url===j&&(e&&(k=k.replace(ce,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cf=a.ActiveXObject?function(){for(var a in ch)ch[a](0,1)}:!1,cg=0,ch;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ci()||cj()}:ci,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cf&&delete ch[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cg,cf&&(ch||(ch={},f(a).unload(cf)),ch[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var ck={},cl,cm,cn=/^(?:toggle|show|hide)$/,co=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cp,cq=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cr;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cu("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cv(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cu("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cu("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cv(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cn.test(h)?(o=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),o?(f._data(this,"toggle"+i,o==="show"?"hide":"show"),j[o]()):j[h]()):(k=co.exec(h),l=j.cur(),k?(m=parseFloat(k[2]),n=k[3]||(f.cssNumber[i]?"":"px"),n!=="px"&&(f.style(this,i,(m||1)+n),l=(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=(k[1]==="-="?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:cu("show",1),slideUp:cu("hide",1),slideToggle:cu("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cr||cs(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){e.options.hide&&f._data(e.elem,"fxshow"+e.prop)===b&&f._data(e.elem,"fxshow"+e.prop,e.start)},h()&&f.timers.push(h)&&!cp&&(cp=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cr||cs(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cp),cp=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(["width","height"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cy(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.support.fixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.support.fixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cy(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,d,"padding")):this[d]():null},f.fn["outer"+c]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,d,a?"margin":"border")):this[d]():null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNumeric(j)?j:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);var Base,Browser,$,jQuery,press,$win,$doc,$body,clone,extend;(function(){window.Base=Base={_init:{},addInit:function(name,callback){Base._init[name]=callback;},initialize:function(inits){$(function(){for(var prop in inits){if(Base._init[prop]){Base._init[prop](inits[prop]);}}});}};window.Browser=Browser={};window.$=$=jQuery=window.jQuery||window.jq;window.press="click";window.$win=$win=$(window);window.$doc=$doc=$(document);window.$body=null;$(function(){window.$body=$body=$("body");});window.clone=clone=function(obj){var newObj=(obj instanceof Array)?[]:{};for(i in obj){if(i=="clone"){continue;}
if(obj[i]&&typeof obj[i]=="object"){newObj[i]=clone(obj[i]);}
else{newObj[i]=obj[i];}}
return newObj;};window.extend=extend=function(){var root=arguments[0];for(var i=1,obj;obj=arguments[i];i++){for(var prop in obj){root[prop]=obj[prop];}};return root;};var ctor=function(){};var inherits=function(parent,protoProps,staticProps){var child;if(protoProps&&protoProps.hasOwnProperty('constructor')){child=protoProps.constructor;}else{child=function(){return parent.apply(this,arguments);};}
extend(child,parent);ctor.prototype=parent.prototype;child.prototype=new ctor();if(protoProps){extend(child.prototype,protoProps);}
if(staticProps){extend(child,staticProps);}
child.prototype.constructor=child;child.__super__=parent.prototype;return child;};Base.extend=function(protoProps,classProps){var child=inherits(this,protoProps,classProps);child.extend=this.extend;return child;};Base.Events={bind:function(ev,callback,data){var calls=(this._callbacks||(this._callbacks={})),list;list=calls[ev]||(calls[ev]=[]);list.push([callback,data]);return this;},unbind:function(ev,callback){var calls,list,i,item;if(ev=="all"){this._callbacks={};}
else if(calls=this._callbacks){if(!callback){calls[ev]=[];}else{list=calls[ev];if(!list){return this;}
for(i=0;item=list[i];i++){if(item&&callback===item[0]){item=null;break;}}}}
return this;},trigger:function(eventName){if(!this._callbacks){return;}
var calls=[],i,event,params=Array.prototype.slice.call(arguments,1);if(calls=this._callbacks[eventName]){for(i=0;event=calls[i];i++){if(event[1]){params.unshift(this);event[0].apply(event[1],params);}else{event[0](this,params);}}}
return this;}};Base.Model=function(attributes){var arg=arguments[0],controller=arg instanceof Base.Controller?arg:null,$el=arg instanceof $?arg:null,attributes=!controller&&!$el?arg:{};if(controller){if(this.restURL){this.sync=new Base.Sync(this.restURL);}
else if(controller.sync){this.sync=controller.sync;}
return this;}
if($el){this.$el=$el;attributes=Base.View.prototype.extractData($el);}
var _defaults=clone(this.defaults);attributes=extend(_defaults,attributes);this.attributes={};this._changed=false;this._previousAttributes=clone(attributes);this.set(attributes,{silent:true});this.initialize.apply(this,Array.prototype.slice.call(arguments,1));return this;};Base.Model.extend=Base.extend;extend(Base.Model.prototype,Base.Events,{defaults:{},idAttribute:"id",_previousAttributes:null,initialize:function(){},toJSON:function(){return this.attributes;},get:function(attr){return this.attributes[attr]||null;},getInt:function(attr,radix){var value=parseInt(this.get(attr),radix);return!isNaN(value)?value:0;},getEscaped:function(attr){var val=this.attributes[attr];return window.Utils.escapeHTML(val==null?'':''+ val);},has:function(attr){if(!window.Utils.isArray(attr)){return(this.get(attr)!==null);}else{for(var i=0,a;a=attr[i];i++){if(this.get(a)===null){return false;}}
return true;}},set:function(attrs){this.attributes=this.attributes||{};this._previousAttributes=this._previousAttributes||{};var now=this.attributes,prev=this._previousAttributes,data={},options={};if(typeof attrs=="string"){data[attrs]=arguments[1];options=arguments[2]||{};}else{data=attrs;options=arguments[1]||{};}
if(!options.silent&&this.validate&&!this._performValidation(data,options)){return false;}
if(this.idAttribute in data){this[this.idAttribute]=data[this.idAttribute];}
var alreadyChanging=this._changing;this._changing=true;for(var attr in data){var val=data[attr];now[attr]=now[attr]||null;if(now[attr]!==val){prev[attr]=now[attr];now[attr]=val;if(!options.silent){this.trigger('change:'+ attr,val);}}}
if(!alreadyChanging&&!options.silent&&this._changed){this.trigger("all");}
this._changing=false;return this;},setInt:function(attr,value){var radix=null,options={},arg2Type=arguments[2]?typeof arguments[2]:false;if(arg2Type=="number"){radix=arguments[2];}
else if(arg2Type=="object"){options=arguments[2];}
if(arguments[3]){options=arguments[3];}
value=parseInt(value,radix);value=!isNaN(value)?value:0;return this.set(attr,value,options);},unset:function(attr,options){if(!(attr in this.attributes)){return this;}
options=options||{};var validObj={};validObj[attr]=void 0;if(!options.silent&&this.validate&&!this._performValidation(validObj,options)){return false;}
delete this.attributes[attr];this._changed=true;if(!options.silent){this.trigger("change:"+ attr);this.trigger("all");}
return this;},parse:function(resp,xhr){return resp;},save:function(options){if(!this._changed){return true;}
options||(options={});var model=this,success=options.success;options.success=function(resp,status,xhr){if(!model.set(model.parse(resp,xhr),options)){return false;}
if(success){success(model,resp,xhr);}};options.error=wrapError(options.error,model,options);var method=model.get("id")?'create':'update';return this.sync[method](this.toJSON(),options).success(function(response){if(response.success&&response.success===true){model._changed=false;}});},destroy:function(options){options||(options={});if(this.isNew()){return this.trigger("destroy",this,this.collection,options);}
var model=this,success=options.success;options.success=function(resp){model.trigger('destroy',model,model.collection,options);if(success){success(model,resp);}};options.error=wrapError(options.error,model,options);return this.sync.del.call(this,options);},clone:function(){return new this.constructor(this);},_performValidation:function(attrs,options){var error=!this.validate(this);if(error){if(options.error){options.error(this,error,options);}else{this.trigger('error',error,options);}
return false;}
return true;}});Base.Collection=function(controller){if(!controller){return this;}
if(controller.sync){this.sync=controller.sync;}
this._reset();this.initialize.apply(this,Array.prototype.slice.call(arguments,1));};Base.Collection.extend=Base.extend;extend(Base.Collection.prototype,Base.Events,{model:Base.Model,initialize:function(){},toJSON:function(){var models=[];for(var i=0,model;model=this.models[i];i++){models.push(model.toJSON());}
return models;},add:function(data,options){options=options||{};if(!this.models){options.silent=true;}
if(data instanceof $){this._add(Base.View.prototype.extractData(data),options);}
else if(window.Utils.isArray(data)){for(var i=0,l=data.length;i<l;i++){this._add(data[i],options);}}else{this._add(data,options);}
return this;},remove:function(models,options){if(Utils.isArray(models)){for(var i=0,l=models.length;i<l;i++){this._remove(models[i],options);}}else{this._remove(models,options);}
return this;},getById:function(id){return this._byId[id];},reset:function(models,options){models||(models=[]);options||(options={});this._reset();this.add(models,{silent:true});if(!options.silent){this.trigger("reset",this,options);}
return this;},create:function(model,options){var coll=this;options||(options={});model=this._prepareModel(model,options);if(!model){return false;}
var success=options.success;options.success=function(nextModel,resp,xhr){coll.add(nextModel,options);if(success){success(nextModel,resp,xhr);}};model.save(null,options);return model;},_reset:function(options){this.length=0;this.models=[];this._byId={};},_prepareModel:function(model,options){if(!(model instanceof Base.Model)){var attrs=model;model=new this.model(attrs,{collection:this});if(model.validate&&!model._performValidation(attrs,options)){model=false;}
else if(!model.collection){model.collection=this;}
return model;}},_add:function(model,options){var self=this;options||(options={});model=this._prepareModel(model,options);if(!model){return false;}
var already=this.getById(model[this.model.prototype.idAttribute]);if(already){throw new Error(["Can't add the same model to a set twice",already.id]);}
if(this.sync){model.sync=this.sync;}
model.collection=this;if(typeof model.attributes[this.model.prototype.idAttribute]!=="undefined"){this._byId[model[this.model.prototype.idAttribute]]=model;}
this.models.push(model);this.length++;model.bind('all',function(){self._onModelEvent(arguments);});if(!options.silent){this.trigger('add',model,options);}
return model;},_remove:function(model,options){options||(options={});if(model.id){delete this._byId[model.id];}
this.models.splice(this.models.indexOf(model),1);this.length--;if(!options.silent){this.trigger('remove',model,options);}
this._removeReference(model);return model;},_removeReference:function(model){if(this==model.collection){delete model.collection;}
model.unbind('all',this._onModelEvent);},_onModelEvent:function(ev,model,collection,options){if((ev=='add'||ev=='remove')&&collection!=this){return;}
if(ev=='destroy'){this._remove(model,options);}
this.trigger.apply(this,arguments);}});Base.View=function(controller){if(!controller){return this;}
if(controller.$el){this.$el=controller.$el;}
controller.__view__=this;this.initialize.apply(this,Array.prototype.slice.call(arguments,1));};Base.View.extend=Base.extend;extend(Base.View.prototype,Base.Events,{initialize:function(){},findModelElement:function($el,idAttrName){try{var $parent=$el.parent(),parentId=$parent.data(idAttrName);if(parentId){return $parent;}else{return Base.View.prototype.findModelElement($parent,idAttrName);}}catch(e){return false;}},extractData:function($el){return $el.data();}});Base.Sync=function(restURL){this._settings={};this._data={};if(restURL){this._settings.url=restURL;}
this._methodData={"GET":{},"PUT":{},"DELETE":{},"POST":{}}
extend(this._data,Base.Sync.prototype._data);extend(this._methodData.GET,Base.Sync.prototype._methodData.GET);extend(this._methodData.PUT,Base.Sync.prototype._methodData.PUT);extend(this._methodData.DELETE,Base.Sync.prototype._methodData.DELETE);extend(this._methodData.POST,Base.Sync.prototype._methodData.POST);return this;};extend(Base.Sync.prototype,{_data:{},_methodData:{"GET":{},"PUT":{},"DELETE":{},"POST":{}},set:function(){var method,data;if(typeof arguments[0]=="object"){method=null;data=arguments[0];}else{method=arguments[0];data=arguments[1];}
if(!method){extend(this._data,data);}else{extend(this._methodData[method],data);}},emulateMethods:function(methodParam){this._methodParam=methodParam;},_process:function(type,method,model,params){params=params||{};extend(params,this._settings);params.type=type;params.data=(model instanceof Base.Model)?model.toJSON():model;params.data=extend({},this._data,this._methodData[type],params.data);if(this._methodParam){params.data[this._methodParam]=method;if(params.type!="GET"){params.type="POST";}}
if(params.data._output!="html"){params.dataType="json";}
return $.ajax(params);},create:function(model,params){return this._process("POST","create",model,params);},read:function(model,params){return this._process("GET","read",model,params);},update:function(model,params){return this._process("PUT","update",model,params);},del:function(model,params){return this._process("DELETE","delete",model,params);}});Base.Controller=function(options){if(this.selector){this.$el=typeof this.selector=="object"?this.selector:$(this.selector);}else{this.$el=$body;}
if(this.restURL){this.sync=new Base.Sync(this.restURL);}
this.initialize(options);return this;};Base.Controller.extend=Base.extend;var eventSplitter=/^(\S+)\s*(.*)$/;extend(Base.Controller.prototype,Base.Events,{model:Base.Model,initialize:function(){},bindEvents:function(){var source,events,key,callback;if(arguments.length===1){source=null;events=arguments[0];}else{source=arguments[0];events=arguments[1];}
for(key in events){if(typeof events[key]=="string"){callback=this[events[key]];}else{callback=events[key];}
this._bindEvent(source,key,callback);}
return this;},_bindEvent:function(source,key,callback){var self=this,events,noDelegation=["focus","blur","change","submit","reset"],method;if(!source){method=function(event){if(source!==false){event.preventDefault();}
var $this=$(this);callback.call(self,$this,event);};}
else if(source instanceof Base.Model){method=function(event){event.preventDefault();callback.call(self,source,event);};}
else{method=function(event){event.preventDefault();var $this=$(this),model=null,id=null,data=null,$el,idAttrName=source.model.prototype.idAttribute,id=$this.data(idAttrName);if(typeof id!="undefined"){model=source.getById(id);if(!model){source.add(Base.View.prototype.extractData($this));model=source.getById(id);model.$el=$this;}}
if(!model&&(id=$this.data("__id__"))){model=source.getById(id);}
if(!model&&($el=Base.View.prototype.findModelElement($this,idAttrName))){data=Base.View.prototype.extractData($el);model=source.getById(data[idAttrName]);if(!model){source.add(data);model=source.getById(data[idAttrName]);}
if(model){model.$el=$el;}
$this.data("__id__",data[idAttrName]);}
if(model){callback.call(self,model,event);}else{}};}
var match=key.match(eventSplitter);if(match[1]=="press"){match[1]=press;}
var eventName=match[1],selector=match[2];eventName+=".delegateEvents";if(selector===""){this.$el.bind(eventName,method);}else{if(!Utils.inArray(match[1],noDelegation)){this.$el.delegate(selector,eventName,method);}else{this.$el.find(selector).live(eventName,method);}}},_bindPaginationEvents:function(){var self=this;this.$el.delegate(".pagination a",(press+".delegateEvents"),function(e){e.preventDefault();self.__router__.navigate($(this).attr("href"));});this.$el.delegate(".pagination input[type=text]","keydown.delegateEvents",function(e){if(e.which>31&&(e.which<48||e.which>57)){return false;}
return true;});var goToPage=function(){var $input=self.$el.find(".pagination input[type=text]"),page=parseInt($input.val()),max=parseInt($input.data("max")),current=parseInt($input.data("current")),perPage=parseInt($input.data("perpage"));if(!isNaN(page)&&page>0&&page<=max&&page!=current){var newPage=isNaN(perPage)?page:((page- 1)*perPage)
self.__router__.navigate(_Router.getPageURL(newPage));}};this.$el.delegate(".pagination input[type=text]","keyup.delegateEvents",function(e){if(e.which==13){goToPage();}});this.$el.delegate(".pagination button",(press+".delegateEvents"),function(e){goToPage();});},unbindEvents:function(){this.$el.unbind(".delegateEvents");return this;},__attemptFetchState__:function(routeObj){if(_Router.extractParameters(routeObj,routeObj._url)&&_Router.updateParameters(routeObj)){routeObj.trigger("pending");this.fetchState();}}});var namedParam=/:([\w\d]+)/g,splatParam=/\*([\w\d]+)/g,sanitizeRoute=/[[\]{}()+?.,\\^$|#\s][:|\[\\d\]\+]?/g,stripPage=/\/\d+\/?$/;var _Router={patterns:{},initialize:function(routeObj,config){var popped=false;if(!this._initialized&&Browser.supports("pushState")){window.onpopstate=function(event){popped=true;_Router.pop(event);return true;};}
setTimeout(function(){if(!popped){if(_Router.extractParameters(routeObj,_Router.getLocation())&&_Router.updateParameters(routeObj)){routeObj.trigger("fetch-state");}}},250);this._initialized=true;},pop:function(event){var pattern,routeObj,params,currentURL=this.getLocation();for(pattern in this.patterns){routeObj=this.patterns[pattern];if(this.extractParameters(routeObj,currentURL)){this.updateParameters(routeObj);routeObj.event=event||{state:{}};routeObj._source="pop";routeObj._prevURL=routeObj._url;routeObj._url=currentURL;routeObj.trigger("fetch-state");break;}}},getBaseURL:function(){return window.location.pathname.replace(stripPage,"");},getPageURL:function(page){var url=this.getBaseURL();if(page>1){url=url+"/"+ page}
return this.formatLocation(url);},getLocation:function(){return this.formatLocation(window.location.pathname);},formatLocation:function(location){if(window.location.search.length>0){location=location+ window.location.search;}
if(window.location.hash.length>0){location=location+ window.location.hash;}
return location;},triggerUpdate:function(routeObj){window.history[routeObj._method](routeObj._state,routeObj._title,routeObj._url);},routeToRegExp:function(route){route=route.replace(namedParam,"[^\/]*").replace(splatParam,"(.*?)");return new RegExp('^'+ route);},routeToParams:function(route){var pattern=route.replace(namedParam,"[^\/]*");route=route.replace(sanitizeRoute,"");var params=new RegExp('^'+ pattern+'$').exec(route).slice(1);var lastIndex=params.length- 1;if(typeof params[lastIndex]=="undefined"){params[lastIndex]="page";}
return params;},extractParameters:function(routerObj,fragment){var match=routerObj._regex.exec(fragment);if(match){match=match.slice(1);var data=clone(routerObj.defaults);for(var i=0,val;val=match[i];i++){data[routerObj._paramNames[i]]=val;}
data.page=data.page||1;if(!routerObj.validate||(routerObj.validate&&routerObj.validate(data))){routerObj._tempParams=data;return true;}}
return false;},updateParameters:function(router){for(var key in router._tempParams){router.params[key]=router._tempParams[key];if(router._initialized){router.trigger("change:"+ key);}}
if(router._initialized){router.trigger("all");}
router._initialized=true;return true;},changeState:function(){this._url=null;this._state=null;this._title=null;this._source="direct";this._method="pushState";var arg0Type=typeof arguments[0],arg1Type=typeof arguments[1],arg2Type=typeof arguments[2];if(arg0Type=="string"){this._url=arguments[0];if(this._url.indexOf("http://")>-1||this._url.indexOf("https://")>-1){this._url=this._url.replace("http://","").replace("https://","");this._url=this._url.substr(this._url.indexOf("/"));}}
else if(arg0Type=="object"){this._method="replaceState";this._state=arguments[0];}
if(arg1Type=="object"){this._state=arguments[1];}
else{this._title=arguments[1];}
if(arg2Type=="string"){this._title=arguments[2];}
if(Browser.supports("pushState")){this.trigger("attempt-fetch-state");}else{window.location=this._url;}}};Base.Router=function(controller){if(controller){var self=this;controller.__router__=this;this.bind("fetch-state",function(){this._url=_Router.getLocation();controller.fetchState();});this.bind("attempt-fetch-state",function(){controller.__attemptFetchState__.apply(controller,arguments);});this.bind("ready",function(){_Router.triggerUpdate(self);self._prevURL=self._url;});if(controller.__view__){this.bind("pending",controller.__view__.pageUpdateInProgress,controller.__view__);this.bind("ready",controller.__view__.pageUpdateCompleted,controller.__view__);this.bind("error",controller.__view__.pageUpdateError,controller.__view__);}
if(this.pagination===true){controller._bindPaginationEvents();};this.initialize.apply(this,Array.prototype.slice.call(arguments,1));}
return this;};Base.Router.extend=Base.extend;extend(Base.Router.prototype,Base.Events,{defaults:{},initialize:function(routePattern){if(routePattern){this.pattern=routePattern;}
this.params={};this._tempParams={};this.event={state:{}};this.pattern="/"+ this.pattern.replace(/^\/+/,"");this._url=this._prevURL=_Router.getLocation();this._method="pushState";if(this.pagination===true){this.pattern=this.pattern+"/?([\\d]+)?/?";}
this._regex=_Router.routeToRegExp(this.pattern);this._paramNames=_Router.routeToParams(this.pattern);_Router.patterns[this.pattern]=this;_Router.initialize(this,{silent:true});},get:function(key){switch(key){case"page":return this.params.page?parseInt(this.params.page):1;break;case"url":return this._url;break;case"__source__":return this._source;break;default:return this.params[key]||this.defaults[key]||null;}},_set:function(key,value){if(this.params[key]!=value){this._tempParams[key]=value;}},navigate:function(){this._method="pushState";return _Router.changeState.apply(this,arguments);},replaceState:function(){this._method="replaceState";return _Router.changeState.apply(this,arguments);},isNewURL:function(){return this._url!=this._prevURL;},getBaseURL:function(){return _Router.getBaseURL();}});var docMode=document.documentMode||null;Browser.evaluate
Browser={_supports:{"touch":("createTouch"in document),"pushState":(("pushState"in window.history)&&(!docMode||docMode>8)),"orientationChange":(typeof window.onorientationchange!="undefined")},supports:function(feature){return this._supports[feature];}};window.Utils={_ids:{},uniqueId:function(prefix){if(!this._ids[prefix]){this._ids[prefix]=0;}
return prefix+"-"+(++this._ids[prefix]);},isArray:function(obj){return Object.prototype.toString.call(obj)==='[object Array]';},inArray:function(needle,haystack){var length=haystack.length;for(var i=0;i<length;i++){if(haystack[i]==needle){return true;}}
return false;},escapeHTML:function(string){return string.replace(/&(?!\w+;|#\d+;|#x[\da-f]+;)/gi,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#x27;').replace(/\//g,'&#x2F;');}};var wrapError=function(onError,model,options){return function(resp){if(onError){onError(model,resp,options);}else{model.trigger('error',model,resp,options);}};};}).call(this);var Handlebars={};Handlebars.VERSION="1.0.beta.6";Handlebars.helpers={};Handlebars.partials={};Handlebars.registerHelper=function(name,fn,inverse){if(inverse){fn.not=inverse;}
this.helpers[name]=fn;};Handlebars.registerPartial=function(name,str){this.partials[name]=str;};Handlebars.registerHelper('helperMissing',function(arg){if(arguments.length===2){return undefined;}else{throw new Error("Could not find property '"+ arg+"'");}});var toString=Object.prototype.toString,functionType="[object Function]";Handlebars.registerHelper('blockHelperMissing',function(context,options){var inverse=options.inverse||function(){},fn=options.fn;var ret="";var type=toString.call(context);if(type===functionType){context=context.call(this);}
if(context===true){return fn(this);}else if(context===false||context==null){return inverse(this);}else if(type==="[object Array]"){if(context.length>0){for(var i=0,j=context.length;i<j;i++){ret=ret+ fn(context[i]);}}else{ret=inverse(this);}
return ret;}else{return fn(context);}});Handlebars.registerHelper('each',function(context,options){var fn=options.fn,inverse=options.inverse;var ret="";if(context&&context.length>0){for(var i=0,j=context.length;i<j;i++){ret=ret+ fn(context[i]);}}else{ret=inverse(this);}
return ret;});Handlebars.registerHelper('if',function(context,options){var type=toString.call(context);if(type===functionType){context=context.call(this);}
if(!context||Handlebars.Utils.isEmpty(context)){return options.inverse(this);}else{return options.fn(this);}});Handlebars.registerHelper('unless',function(context,options){var fn=options.fn,inverse=options.inverse;options.fn=inverse;options.inverse=fn;return Handlebars.helpers['if'].call(this,context,options);});Handlebars.registerHelper('with',function(context,options){return options.fn(context);});Handlebars.registerHelper('log',function(context){Handlebars.log(context);});;Handlebars.Exception=function(message){var tmp=Error.prototype.constructor.apply(this,arguments);for(var p in tmp){if(tmp.hasOwnProperty(p)){this[p]=tmp[p];}}
this.message=tmp.message;};Handlebars.Exception.prototype=new Error;Handlebars.SafeString=function(string){this.string=string;};Handlebars.SafeString.prototype.toString=function(){return this.string.toString();};(function(){var escape={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"};var badChars=/&(?!\w+;)|[<>"'`]/g;var possible=/[&<>"'`]/;var escapeChar=function(chr){return escape[chr]||"&amp;";};Handlebars.Utils={escapeExpression:function(string){if(string instanceof Handlebars.SafeString){return string.toString();}else if(string==null||string===false){return"";}
if(!possible.test(string)){return string;}
return string.replace(badChars,escapeChar);},isEmpty:function(value){if(typeof value==="undefined"){return true;}else if(value===null){return true;}else if(value===false){return true;}else if(Object.prototype.toString.call(value)==="[object Array]"&&value.length===0){return true;}else{return false;}}};})();;Handlebars.VM={template:function(templateSpec){var container={escapeExpression:Handlebars.Utils.escapeExpression,invokePartial:Handlebars.VM.invokePartial,programs:[],program:function(i,fn,data){var programWrapper=this.programs[i];if(data){return Handlebars.VM.program(fn,data);}else if(programWrapper){return programWrapper;}else{programWrapper=this.programs[i]=Handlebars.VM.program(fn);return programWrapper;}},programWithDepth:Handlebars.VM.programWithDepth,noop:Handlebars.VM.noop};return function(context,options){options=options||{};return templateSpec.call(container,Handlebars,context,options.helpers,options.partials,options.data);};},programWithDepth:function(fn,data,$depth){var args=Array.prototype.slice.call(arguments,2);return function(context,options){options=options||{};return fn.apply(this,[context,options.data||data].concat(args));};},program:function(fn,data){return function(context,options){options=options||{};return fn(context,options.data||data);};},noop:function(){return"";},invokePartial:function(partial,name,context,helpers,partials,data){options={helpers:helpers,partials:partials,data:data};if(partial===undefined){throw new Handlebars.Exception("The partial "+ name+" could not be found");}else if(partial instanceof Function){return partial(context,options);}else if(!Handlebars.compile){throw new Handlebars.Exception("The partial "+ name+" could not be compiled when running in runtime-only mode");}else{partials[name]=Handlebars.compile(partial);return partials[name](context,options);}}};Handlebars.template=Handlebars.VM.template;;(function(){var root=this;var previousUnderscore=root._;var breaker={};var ArrayProto=Array.prototype,ObjProto=Object.prototype,FuncProto=Function.prototype;var push=ArrayProto.push,slice=ArrayProto.slice,concat=ArrayProto.concat,unshift=ArrayProto.unshift,toString=ObjProto.toString,hasOwnProperty=ObjProto.hasOwnProperty;var
nativeForEach=ArrayProto.forEach,nativeMap=ArrayProto.map,nativeReduce=ArrayProto.reduce,nativeReduceRight=ArrayProto.reduceRight,nativeFilter=ArrayProto.filter,nativeEvery=ArrayProto.every,nativeSome=ArrayProto.some,nativeIndexOf=ArrayProto.indexOf,nativeLastIndexOf=ArrayProto.lastIndexOf,nativeIsArray=Array.isArray,nativeKeys=Object.keys,nativeBind=FuncProto.bind;var _=function(obj){if(obj instanceof _)return obj;if(!(this instanceof _))return new _(obj);this._wrapped=obj;};if(typeof exports!=='undefined'){if(typeof module!=='undefined'&&module.exports){exports=module.exports=_;}
exports._=_;}else{root['_']=_;}
_.VERSION='1.4.2';var each=_.each=_.forEach=function(obj,iterator,context){if(obj==null)return;if(nativeForEach&&obj.forEach===nativeForEach){obj.forEach(iterator,context);}else if(obj.length===+obj.length){for(var i=0,l=obj.length;i<l;i++){if(iterator.call(context,obj[i],i,obj)===breaker)return;}}else{for(var key in obj){if(_.has(obj,key)){if(iterator.call(context,obj[key],key,obj)===breaker)return;}}}};_.map=_.collect=function(obj,iterator,context){var results=[];if(obj==null)return results;if(nativeMap&&obj.map===nativeMap)return obj.map(iterator,context);each(obj,function(value,index,list){results[results.length]=iterator.call(context,value,index,list);});return results;};_.reduce=_.foldl=_.inject=function(obj,iterator,memo,context){var initial=arguments.length>2;if(obj==null)obj=[];if(nativeReduce&&obj.reduce===nativeReduce){if(context)iterator=_.bind(iterator,context);return initial?obj.reduce(iterator,memo):obj.reduce(iterator);}
each(obj,function(value,index,list){if(!initial){memo=value;initial=true;}else{memo=iterator.call(context,memo,value,index,list);}});if(!initial)throw new TypeError('Reduce of empty array with no initial value');return memo;};_.reduceRight=_.foldr=function(obj,iterator,memo,context){var initial=arguments.length>2;if(obj==null)obj=[];if(nativeReduceRight&&obj.reduceRight===nativeReduceRight){if(context)iterator=_.bind(iterator,context);return arguments.length>2?obj.reduceRight(iterator,memo):obj.reduceRight(iterator);}
var length=obj.length;if(length!==+length){var keys=_.keys(obj);length=keys.length;}
each(obj,function(value,index,list){index=keys?keys[--length]:--length;if(!initial){memo=obj[index];initial=true;}else{memo=iterator.call(context,memo,obj[index],index,list);}});if(!initial)throw new TypeError('Reduce of empty array with no initial value');return memo;};_.find=_.detect=function(obj,iterator,context){var result;any(obj,function(value,index,list){if(iterator.call(context,value,index,list)){result=value;return true;}});return result;};_.filter=_.select=function(obj,iterator,context){var results=[];if(obj==null)return results;if(nativeFilter&&obj.filter===nativeFilter)return obj.filter(iterator,context);each(obj,function(value,index,list){if(iterator.call(context,value,index,list))results[results.length]=value;});return results;};_.reject=function(obj,iterator,context){var results=[];if(obj==null)return results;each(obj,function(value,index,list){if(!iterator.call(context,value,index,list))results[results.length]=value;});return results;};_.every=_.all=function(obj,iterator,context){iterator||(iterator=_.identity);var result=true;if(obj==null)return result;if(nativeEvery&&obj.every===nativeEvery)return obj.every(iterator,context);each(obj,function(value,index,list){if(!(result=result&&iterator.call(context,value,index,list)))return breaker;});return!!result;};var any=_.some=_.any=function(obj,iterator,context){iterator||(iterator=_.identity);var result=false;if(obj==null)return result;if(nativeSome&&obj.some===nativeSome)return obj.some(iterator,context);each(obj,function(value,index,list){if(result||(result=iterator.call(context,value,index,list)))return breaker;});return!!result;};_.contains=_.include=function(obj,target){var found=false;if(obj==null)return found;if(nativeIndexOf&&obj.indexOf===nativeIndexOf)return obj.indexOf(target)!=-1;found=any(obj,function(value){return value===target;});return found;};_.invoke=function(obj,method){var args=slice.call(arguments,2);return _.map(obj,function(value){return(_.isFunction(method)?method:value[method]).apply(value,args);});};_.pluck=function(obj,key){return _.map(obj,function(value){return value[key];});};_.where=function(obj,attrs){if(_.isEmpty(attrs))return[];return _.filter(obj,function(value){for(var key in attrs){if(attrs[key]!==value[key])return false;}
return true;});};_.max=function(obj,iterator,context){if(!iterator&&_.isArray(obj)&&obj[0]===+obj[0]&&obj.length<65535){return Math.max.apply(Math,obj);}
if(!iterator&&_.isEmpty(obj))return-Infinity;var result={computed:-Infinity};each(obj,function(value,index,list){var computed=iterator?iterator.call(context,value,index,list):value;computed>=result.computed&&(result={value:value,computed:computed});});return result.value;};_.min=function(obj,iterator,context){if(!iterator&&_.isArray(obj)&&obj[0]===+obj[0]&&obj.length<65535){return Math.min.apply(Math,obj);}
if(!iterator&&_.isEmpty(obj))return Infinity;var result={computed:Infinity};each(obj,function(value,index,list){var computed=iterator?iterator.call(context,value,index,list):value;computed<result.computed&&(result={value:value,computed:computed});});return result.value;};_.shuffle=function(obj){var rand;var index=0;var shuffled=[];each(obj,function(value){rand=_.random(index++);shuffled[index- 1]=shuffled[rand];shuffled[rand]=value;});return shuffled;};var lookupIterator=function(value){return _.isFunction(value)?value:function(obj){return obj[value];};};_.sortBy=function(obj,value,context){var iterator=lookupIterator(value);return _.pluck(_.map(obj,function(value,index,list){return{value:value,index:index,criteria:iterator.call(context,value,index,list)};}).sort(function(left,right){var a=left.criteria;var b=right.criteria;if(a!==b){if(a>b||a===void 0)return 1;if(a<b||b===void 0)return-1;}
return left.index<right.index?-1:1;}),'value');};var group=function(obj,value,context,behavior){var result={};var iterator=lookupIterator(value);each(obj,function(value,index){var key=iterator.call(context,value,index,obj);behavior(result,key,value);});return result;};_.groupBy=function(obj,value,context){return group(obj,value,context,function(result,key,value){(_.has(result,key)?result[key]:(result[key]=[])).push(value);});};_.countBy=function(obj,value,context){return group(obj,value,context,function(result,key,value){if(!_.has(result,key))result[key]=0;result[key]++;});};_.sortedIndex=function(array,obj,iterator,context){iterator=iterator==null?_.identity:lookupIterator(iterator);var value=iterator.call(context,obj);var low=0,high=array.length;while(low<high){var mid=(low+ high)>>>1;iterator.call(context,array[mid])<value?low=mid+ 1:high=mid;}
return low;};_.toArray=function(obj){if(!obj)return[];if(obj.length===+obj.length)return slice.call(obj);return _.values(obj);};_.size=function(obj){return(obj.length===+obj.length)?obj.length:_.keys(obj).length;};_.first=_.head=_.take=function(array,n,guard){return(n!=null)&&!guard?slice.call(array,0,n):array[0];};_.initial=function(array,n,guard){return slice.call(array,0,array.length-((n==null)||guard?1:n));};_.last=function(array,n,guard){if((n!=null)&&!guard){return slice.call(array,Math.max(array.length- n,0));}else{return array[array.length- 1];}};_.rest=_.tail=_.drop=function(array,n,guard){return slice.call(array,(n==null)||guard?1:n);};_.compact=function(array){return _.filter(array,function(value){return!!value;});};var flatten=function(input,shallow,output){each(input,function(value){if(_.isArray(value)){shallow?push.apply(output,value):flatten(value,shallow,output);}else{output.push(value);}});return output;};_.flatten=function(array,shallow){return flatten(array,shallow,[]);};_.without=function(array){return _.difference(array,slice.call(arguments,1));};_.uniq=_.unique=function(array,isSorted,iterator,context){var initial=iterator?_.map(array,iterator,context):array;var results=[];var seen=[];each(initial,function(value,index){if(isSorted?(!index||seen[seen.length- 1]!==value):!_.contains(seen,value)){seen.push(value);results.push(array[index]);}});return results;};_.union=function(){return _.uniq(concat.apply(ArrayProto,arguments));};_.intersection=function(array){var rest=slice.call(arguments,1);return _.filter(_.uniq(array),function(item){return _.every(rest,function(other){return _.indexOf(other,item)>=0;});});};_.difference=function(array){var rest=concat.apply(ArrayProto,slice.call(arguments,1));return _.filter(array,function(value){return!_.contains(rest,value);});};_.zip=function(){var args=slice.call(arguments);var length=_.max(_.pluck(args,'length'));var results=new Array(length);for(var i=0;i<length;i++){results[i]=_.pluck(args,""+ i);}
return results;};_.object=function(list,values){var result={};for(var i=0,l=list.length;i<l;i++){if(values){result[list[i]]=values[i];}else{result[list[i][0]]=list[i][1];}}
return result;};_.indexOf=function(array,item,isSorted){if(array==null)return-1;var i=0,l=array.length;if(isSorted){if(typeof isSorted=='number'){i=(isSorted<0?Math.max(0,l+ isSorted):isSorted);}else{i=_.sortedIndex(array,item);return array[i]===item?i:-1;}}
if(nativeIndexOf&&array.indexOf===nativeIndexOf)return array.indexOf(item,isSorted);for(;i<l;i++)if(array[i]===item)return i;return-1;};_.lastIndexOf=function(array,item,from){if(array==null)return-1;var hasIndex=from!=null;if(nativeLastIndexOf&&array.lastIndexOf===nativeLastIndexOf){return hasIndex?array.lastIndexOf(item,from):array.lastIndexOf(item);}
var i=(hasIndex?from:array.length);while(i--)if(array[i]===item)return i;return-1;};_.range=function(start,stop,step){if(arguments.length<=1){stop=start||0;start=0;}
step=arguments[2]||1;var len=Math.max(Math.ceil((stop- start)/step),0);var idx=0;var range=new Array(len);while(idx<len){range[idx++]=start;start+=step;}
return range;};var ctor=function(){};_.bind=function bind(func,context){var bound,args;if(func.bind===nativeBind&&nativeBind)return nativeBind.apply(func,slice.call(arguments,1));if(!_.isFunction(func))throw new TypeError;args=slice.call(arguments,2);return bound=function(){if(!(this instanceof bound))return func.apply(context,args.concat(slice.call(arguments)));ctor.prototype=func.prototype;var self=new ctor;var result=func.apply(self,args.concat(slice.call(arguments)));if(Object(result)===result)return result;return self;};};_.bindAll=function(obj){var funcs=slice.call(arguments,1);if(funcs.length==0)funcs=_.functions(obj);each(funcs,function(f){obj[f]=_.bind(obj[f],obj);});return obj;};_.memoize=function(func,hasher){var memo={};hasher||(hasher=_.identity);return function(){var key=hasher.apply(this,arguments);return _.has(memo,key)?memo[key]:(memo[key]=func.apply(this,arguments));};};_.delay=function(func,wait){var args=slice.call(arguments,2);return setTimeout(function(){return func.apply(null,args);},wait);};_.defer=function(func){return _.delay.apply(_,[func,1].concat(slice.call(arguments,1)));};_.throttle=function(func,wait){var context,args,timeout,throttling,more,result;var whenDone=_.debounce(function(){more=throttling=false;},wait);return function(){context=this;args=arguments;var later=function(){timeout=null;if(more){result=func.apply(context,args);}
whenDone();};if(!timeout)timeout=setTimeout(later,wait);if(throttling){more=true;}else{throttling=true;result=func.apply(context,args);}
whenDone();return result;};};_.debounce=function(func,wait,immediate){var timeout,result;return function(){var context=this,args=arguments;var later=function(){timeout=null;if(!immediate)result=func.apply(context,args);};var callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow)result=func.apply(context,args);return result;};};_.once=function(func){var ran=false,memo;return function(){if(ran)return memo;ran=true;memo=func.apply(this,arguments);func=null;return memo;};};_.wrap=function(func,wrapper){return function(){var args=[func];push.apply(args,arguments);return wrapper.apply(this,args);};};_.compose=function(){var funcs=arguments;return function(){var args=arguments;for(var i=funcs.length- 1;i>=0;i--){args=[funcs[i].apply(this,args)];}
return args[0];};};_.after=function(times,func){if(times<=0)return func();return function(){if(--times<1){return func.apply(this,arguments);}};};_.keys=nativeKeys||function(obj){if(obj!==Object(obj))throw new TypeError('Invalid object');var keys=[];for(var key in obj)if(_.has(obj,key))keys[keys.length]=key;return keys;};_.values=function(obj){var values=[];for(var key in obj)if(_.has(obj,key))values.push(obj[key]);return values;};_.pairs=function(obj){var pairs=[];for(var key in obj)if(_.has(obj,key))pairs.push([key,obj[key]]);return pairs;};_.invert=function(obj){var result={};for(var key in obj)if(_.has(obj,key))result[obj[key]]=key;return result;};_.functions=_.methods=function(obj){var names=[];for(var key in obj){if(_.isFunction(obj[key]))names.push(key);}
return names.sort();};_.extend=function(obj){each(slice.call(arguments,1),function(source){for(var prop in source){obj[prop]=source[prop];}});return obj;};_.pick=function(obj){var copy={};var keys=concat.apply(ArrayProto,slice.call(arguments,1));each(keys,function(key){if(key in obj)copy[key]=obj[key];});return copy;};_.omit=function(obj){var copy={};var keys=concat.apply(ArrayProto,slice.call(arguments,1));for(var key in obj){if(!_.contains(keys,key))copy[key]=obj[key];}
return copy;};_.defaults=function(obj){each(slice.call(arguments,1),function(source){for(var prop in source){if(obj[prop]==null)obj[prop]=source[prop];}});return obj;};_.clone=function(obj){if(!_.isObject(obj))return obj;return _.isArray(obj)?obj.slice():_.extend({},obj);};_.tap=function(obj,interceptor){interceptor(obj);return obj;};var eq=function(a,b,aStack,bStack){if(a===b)return a!==0||1/a==1/b;if(a==null||b==null)return a===b;if(a instanceof _)a=a._wrapped;if(b instanceof _)b=b._wrapped;var className=toString.call(a);if(className!=toString.call(b))return false;switch(className){case'[object String]':return a==String(b);case'[object Number]':return a!=+a?b!=+b:(a==0?1/a==1/b:a==+b);case'[object Date]':case'[object Boolean]':return+a==+b;case'[object RegExp]':return a.source==b.source&&a.global==b.global&&a.multiline==b.multiline&&a.ignoreCase==b.ignoreCase;}
if(typeof a!='object'||typeof b!='object')return false;var length=aStack.length;while(length--){if(aStack[length]==a)return bStack[length]==b;}
aStack.push(a);bStack.push(b);var size=0,result=true;if(className=='[object Array]'){size=a.length;result=size==b.length;if(result){while(size--){if(!(result=eq(a[size],b[size],aStack,bStack)))break;}}}else{var aCtor=a.constructor,bCtor=b.constructor;if(aCtor!==bCtor&&!(_.isFunction(aCtor)&&(aCtor instanceof aCtor)&&_.isFunction(bCtor)&&(bCtor instanceof bCtor))){return false;}
for(var key in a){if(_.has(a,key)){size++;if(!(result=_.has(b,key)&&eq(a[key],b[key],aStack,bStack)))break;}}
if(result){for(key in b){if(_.has(b,key)&&!(size--))break;}
result=!size;}}
aStack.pop();bStack.pop();return result;};_.isEqual=function(a,b){return eq(a,b,[],[]);};_.isEmpty=function(obj){if(obj==null)return true;if(_.isArray(obj)||_.isString(obj))return obj.length===0;for(var key in obj)if(_.has(obj,key))return false;return true;};_.isElement=function(obj){return!!(obj&&obj.nodeType===1);};_.isArray=nativeIsArray||function(obj){return toString.call(obj)=='[object Array]';};_.isObject=function(obj){return obj===Object(obj);};each(['Arguments','Function','String','Number','Date','RegExp'],function(name){_['is'+ name]=function(obj){return toString.call(obj)=='[object '+ name+']';};});if(!_.isArguments(arguments)){_.isArguments=function(obj){return!!(obj&&_.has(obj,'callee'));};}
if(typeof(/./)!=='function'){_.isFunction=function(obj){return typeof obj==='function';};}
_.isFinite=function(obj){return _.isNumber(obj)&&isFinite(obj);};_.isNaN=function(obj){return _.isNumber(obj)&&obj!=+obj;};_.isBoolean=function(obj){return obj===true||obj===false||toString.call(obj)=='[object Boolean]';};_.isNull=function(obj){return obj===null;};_.isUndefined=function(obj){return obj===void 0;};_.has=function(obj,key){return hasOwnProperty.call(obj,key);};_.noConflict=function(){root._=previousUnderscore;return this;};_.identity=function(value){return value;};_.times=function(n,iterator,context){for(var i=0;i<n;i++)iterator.call(context,i);};_.random=function(min,max){if(max==null){max=min;min=0;}
return min+(0|Math.random()*(max- min+ 1));};var entityMap={escape:{'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#x27;','/':'&#x2F;'}};entityMap.unescape=_.invert(entityMap.escape);var entityRegexes={escape:new RegExp('['+ _.keys(entityMap.escape).join('')+']','g'),unescape:new RegExp('('+ _.keys(entityMap.unescape).join('|')+')','g')};_.each(['escape','unescape'],function(method){_[method]=function(string){if(string==null)return'';return(''+ string).replace(entityRegexes[method],function(match){return entityMap[method][match];});};});_.result=function(object,property){if(object==null)return null;var value=object[property];return _.isFunction(value)?value.call(object):value;};_.mixin=function(obj){each(_.functions(obj),function(name){var func=_[name]=obj[name];_.prototype[name]=function(){var args=[this._wrapped];push.apply(args,arguments);return result.call(this,func.apply(_,args));};});};var idCounter=0;_.uniqueId=function(prefix){var id=idCounter++;return prefix?prefix+ id:id;};_.templateSettings={};var noMatch=/(.)^/;var escapes={"'":"'",'\\':'\\','\r':'r','\n':'n','\t':'t','\u2028':'u2028','\u2029':'u2029'};var escaper=/\\|'|\r|\n|\t|\u2028|\u2029/g;_.template=function(text,data,settings){settings=_.defaults({},settings,_.templateSettings);var matcher=new RegExp([(settings.escape||noMatch).source,(settings.interpolate||noMatch).source,(settings.evaluate||noMatch).source].join('|')+'|$','g');var index=0;var source="__p+='";text.replace(matcher,function(match,escape,interpolate,evaluate,offset){source+=text.slice(index,offset).replace(escaper,function(match){return'\\'+ escapes[match];});source+=escape?"'+\n((__t=("+ escape+"))==null?'':_.escape(__t))+\n'":interpolate?"'+\n((__t=("+ interpolate+"))==null?'':__t)+\n'":evaluate?"';\n"+ evaluate+"\n__p+='":'';index=offset+ match.length;});source+="';\n";if(!settings.variable)source='with(obj||{}){\n'+ source+'}\n';source="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+
source+"return __p;\n";try{var render=new Function(settings.variable||'obj','_',source);}catch(e){e.source=source;throw e;}
if(data)return render(data,_);var template=function(data){return render.call(this,data,_);};template.source='function('+(settings.variable||'obj')+'){\n'+ source+'}';return template;};_.chain=function(obj){return _(obj).chain();};var result=function(obj){return this._chain?_(obj).chain():obj;};_.mixin(_);each(['pop','push','reverse','shift','sort','splice','unshift'],function(name){var method=ArrayProto[name];_.prototype[name]=function(){var obj=this._wrapped;method.apply(obj,arguments);if((name=='shift'||name=='splice')&&obj.length===0)delete obj[0];return result.call(this,obj);};});each(['concat','join','slice'],function(name){var method=ArrayProto[name];_.prototype[name]=function(){return result.call(this,method.apply(this._wrapped,arguments));};});_.extend(_.prototype,{chain:function(){this._chain=true;return this;},value:function(){return this._wrapped;}});}).call(this);(function(){var root=this;var previousBackbone=root.Backbone;var slice=Array.prototype.slice;var splice=Array.prototype.splice;var Backbone;if(typeof exports!=='undefined'){Backbone=exports;}else{Backbone=root.Backbone={};}
Backbone.VERSION='0.9.2';var _=root._;if(!_&&(typeof require!=='undefined'))_=require('underscore');var $=root.jQuery||root.Zepto||root.ender;Backbone.setDomLibrary=function(lib){$=lib;};Backbone.noConflict=function(){root.Backbone=previousBackbone;return this;};Backbone.emulateHTTP=false;Backbone.emulateJSON=false;var eventSplitter=/\s+/;var Events=Backbone.Events={on:function(events,callback,context){var calls,event,node,tail,list;if(!callback)return this;events=events.split(eventSplitter);calls=this._callbacks||(this._callbacks={});while(event=events.shift()){list=calls[event];node=list?list.tail:{};node.next=tail={};node.context=context;node.callback=callback;calls[event]={tail:tail,next:list?list.next:node};}
return this;},off:function(events,callback,context){var event,calls,node,tail,cb,ctx;if(!(calls=this._callbacks))return;if(!(events||callback||context)){delete this._callbacks;return this;}
events=events?events.split(eventSplitter):_.keys(calls);while(event=events.shift()){node=calls[event];delete calls[event];if(!node||!(callback||context))continue;tail=node.tail;while((node=node.next)!==tail){cb=node.callback;ctx=node.context;if((callback&&cb!==callback)||(context&&ctx!==context)){this.on(event,cb,ctx);}}}
return this;},trigger:function(events){var event,node,calls,tail,args,all,rest;if(!(calls=this._callbacks))return this;all=calls.all;events=events.split(eventSplitter);rest=slice.call(arguments,1);while(event=events.shift()){if(node=calls[event]){tail=node.tail;while((node=node.next)!==tail){node.callback.apply(node.context||this,rest);}}
if(node=all){tail=node.tail;args=[event].concat(rest);while((node=node.next)!==tail){node.callback.apply(node.context||this,args);}}}
return this;}};Events.bind=Events.on;Events.unbind=Events.off;var Model=Backbone.Model=function(attributes,options){var defaults;attributes||(attributes={});if(options&&options.parse)attributes=this.parse(attributes);if(defaults=getValue(this,'defaults')){attributes=_.extend({},defaults,attributes);}
if(options&&options.collection)this.collection=options.collection;this.attributes={};this._escapedAttributes={};this.cid=_.uniqueId('c');this.changed={};this._silent={};this._pending={};this.set(attributes,{silent:true});this.changed={};this._silent={};this._pending={};this._previousAttributes=_.clone(this.attributes);this.initialize.apply(this,arguments);};_.extend(Model.prototype,Events,{changed:null,_silent:null,_pending:null,idAttribute:'id',initialize:function(){},toJSON:function(options){return _.clone(this.attributes);},get:function(attr){return this.attributes[attr];},escape:function(attr){var html;if(html=this._escapedAttributes[attr])return html;var val=this.get(attr);return this._escapedAttributes[attr]=_.escape(val==null?'':''+ val);},has:function(attr){return this.get(attr)!=null;},set:function(key,value,options){var attrs,attr,val;if(_.isObject(key)||key==null){attrs=key;options=value;}else{attrs={};attrs[key]=value;}
options||(options={});if(!attrs)return this;if(attrs instanceof Model)attrs=attrs.attributes;if(options.unset)for(attr in attrs)attrs[attr]=void 0;if(!this._validate(attrs,options))return false;if(this.idAttribute in attrs)this.id=attrs[this.idAttribute];var changes=options.changes={};var now=this.attributes;var escaped=this._escapedAttributes;var prev=this._previousAttributes||{};for(attr in attrs){val=attrs[attr];if(!_.isEqual(now[attr],val)||(options.unset&&_.has(now,attr))){delete escaped[attr];(options.silent?this._silent:changes)[attr]=true;}
options.unset?delete now[attr]:now[attr]=val;if(!_.isEqual(prev[attr],val)||(_.has(now,attr)!=_.has(prev,attr))){this.changed[attr]=val;if(!options.silent)this._pending[attr]=true;}else{delete this.changed[attr];delete this._pending[attr];}}
if(!options.silent)this.change(options);return this;},unset:function(attr,options){(options||(options={})).unset=true;return this.set(attr,null,options);},clear:function(options){(options||(options={})).unset=true;return this.set(_.clone(this.attributes),options);},fetch:function(options){options=options?_.clone(options):{};var model=this;var success=options.success;options.success=function(resp,status,xhr){if(!model.set(model.parse(resp,xhr),options))return false;if(success)success(model,resp);};options.error=Backbone.wrapError(options.error,model,options);return(this.sync||Backbone.sync).call(this,'read',this,options);},save:function(key,value,options){var attrs,current;if(_.isObject(key)||key==null){attrs=key;options=value;}else{attrs={};attrs[key]=value;}
options=options?_.clone(options):{};if(options.wait){if(!this._validate(attrs,options))return false;current=_.clone(this.attributes);}
var silentOptions=_.extend({},options,{silent:true});if(attrs&&!this.set(attrs,options.wait?silentOptions:options)){return false;}
var model=this;var success=options.success;options.success=function(resp,status,xhr){var serverAttrs=model.parse(resp,xhr);if(options.wait){delete options.wait;serverAttrs=_.extend(attrs||{},serverAttrs);}
if(!model.set(serverAttrs,options))return false;if(success){success(model,resp);}else{model.trigger('sync',model,resp,options);}};options.error=Backbone.wrapError(options.error,model,options);var method=this.isNew()?'create':'update';var xhr=(this.sync||Backbone.sync).call(this,method,this,options);if(options.wait)this.set(current,silentOptions);return xhr;},destroy:function(options){options=options?_.clone(options):{};var model=this;var success=options.success;var triggerDestroy=function(){model.trigger('destroy',model,model.collection,options);};if(this.isNew()){triggerDestroy();return false;}
options.success=function(resp){if(options.wait)triggerDestroy();if(success){success(model,resp);}else{model.trigger('sync',model,resp,options);}};options.error=Backbone.wrapError(options.error,model,options);var xhr=(this.sync||Backbone.sync).call(this,'delete',this,options);if(!options.wait)triggerDestroy();return xhr;},url:function(){var base=getValue(this,'urlRoot')||getValue(this.collection,'url')||urlError();if(this.isNew())return base;return base+(base.charAt(base.length- 1)=='/'?'':'/')+ encodeURIComponent(this.id);},parse:function(resp,xhr){return resp;},clone:function(){return new this.constructor(this.attributes);},isNew:function(){return this.id==null;},change:function(options){options||(options={});var changing=this._changing;this._changing=true;for(var attr in this._silent)this._pending[attr]=true;var changes=_.extend({},options.changes,this._silent);this._silent={};for(var attr in changes){this.trigger('change:'+ attr,this,this.get(attr),options);}
if(changing)return this;while(!_.isEmpty(this._pending)){this._pending={};this.trigger('change',this,options);for(var attr in this.changed){if(this._pending[attr]||this._silent[attr])continue;delete this.changed[attr];}
this._previousAttributes=_.clone(this.attributes);}
this._changing=false;return this;},hasChanged:function(attr){if(!arguments.length)return!_.isEmpty(this.changed);return _.has(this.changed,attr);},changedAttributes:function(diff){if(!diff)return this.hasChanged()?_.clone(this.changed):false;var val,changed=false,old=this._previousAttributes;for(var attr in diff){if(_.isEqual(old[attr],(val=diff[attr])))continue;(changed||(changed={}))[attr]=val;}
return changed;},previous:function(attr){if(!arguments.length||!this._previousAttributes)return null;return this._previousAttributes[attr];},previousAttributes:function(){return _.clone(this._previousAttributes);},isValid:function(){return!this.validate(this.attributes);},_validate:function(attrs,options){if(options.silent||!this.validate)return true;attrs=_.extend({},this.attributes,attrs);var error=this.validate(attrs,options);if(!error)return true;if(options&&options.error){options.error(this,error,options);}else{this.trigger('error',this,error,options);}
return false;}});var Collection=Backbone.Collection=function(models,options){options||(options={});if(options.model)this.model=options.model;if(options.comparator)this.comparator=options.comparator;this._reset();this.initialize.apply(this,arguments);if(models)this.reset(models,{silent:true,parse:options.parse});};_.extend(Collection.prototype,Events,{model:Model,initialize:function(){},toJSON:function(options){return this.map(function(model){return model.toJSON(options);});},add:function(models,options){var i,index,length,model,cid,id,cids={},ids={},dups=[];options||(options={});models=_.isArray(models)?models.slice():[models];for(i=0,length=models.length;i<length;i++){if(!(model=models[i]=this._prepareModel(models[i],options))){throw new Error("Can't add an invalid model to a collection");}
cid=model.cid;id=model.id;if(cids[cid]||this._byCid[cid]||((id!=null)&&(ids[id]||this._byId[id]))){dups.push(i);continue;}
cids[cid]=ids[id]=model;}
i=dups.length;while(i--){models.splice(dups[i],1);}
for(i=0,length=models.length;i<length;i++){(model=models[i]).on('all',this._onModelEvent,this);this._byCid[model.cid]=model;if(model.id!=null)this._byId[model.id]=model;}
this.length+=length;index=options.at!=null?options.at:this.models.length;splice.apply(this.models,[index,0].concat(models));if(this.comparator)this.sort({silent:true});if(options.silent)return this;for(i=0,length=this.models.length;i<length;i++){if(!cids[(model=this.models[i]).cid])continue;options.index=i;model.trigger('add',model,this,options);}
return this;},remove:function(models,options){var i,l,index,model;options||(options={});models=_.isArray(models)?models.slice():[models];for(i=0,l=models.length;i<l;i++){model=this.getByCid(models[i])||this.get(models[i]);if(!model)continue;delete this._byId[model.id];delete this._byCid[model.cid];index=this.indexOf(model);this.models.splice(index,1);this.length--;if(!options.silent){options.index=index;model.trigger('remove',model,this,options);}
this._removeReference(model);}
return this;},push:function(model,options){model=this._prepareModel(model,options);this.add(model,options);return model;},pop:function(options){var model=this.at(this.length- 1);this.remove(model,options);return model;},unshift:function(model,options){model=this._prepareModel(model,options);this.add(model,_.extend({at:0},options));return model;},shift:function(options){var model=this.at(0);this.remove(model,options);return model;},get:function(id){if(id==null)return void 0;return this._byId[id.id!=null?id.id:id];},getByCid:function(cid){return cid&&this._byCid[cid.cid||cid];},at:function(index){return this.models[index];},where:function(attrs){if(_.isEmpty(attrs))return[];return this.filter(function(model){for(var key in attrs){if(attrs[key]!==model.get(key))return false;}
return true;});},sort:function(options){options||(options={});if(!this.comparator)throw new Error('Cannot sort a set without a comparator');var boundComparator=_.bind(this.comparator,this);if(this.comparator.length==1){this.models=this.sortBy(boundComparator);}else{this.models.sort(boundComparator);}
if(!options.silent)this.trigger('reset',this,options);return this;},pluck:function(attr){return _.map(this.models,function(model){return model.get(attr);});},reset:function(models,options){models||(models=[]);options||(options={});for(var i=0,l=this.models.length;i<l;i++){this._removeReference(this.models[i]);}
this._reset();this.add(models,_.extend({silent:true},options));if(!options.silent)this.trigger('reset',this,options);return this;},fetch:function(options){options=options?_.clone(options):{};if(options.parse===undefined)options.parse=true;var collection=this;var success=options.success;options.success=function(resp,status,xhr){collection[options.add?'add':'reset'](collection.parse(resp,xhr),options);if(success)success(collection,resp);};options.error=Backbone.wrapError(options.error,collection,options);return(this.sync||Backbone.sync).call(this,'read',this,options);},create:function(model,options){var coll=this;options=options?_.clone(options):{};model=this._prepareModel(model,options);if(!model)return false;if(!options.wait)coll.add(model,options);var success=options.success;options.success=function(nextModel,resp,xhr){if(options.wait)coll.add(nextModel,options);if(success){success(nextModel,resp);}else{nextModel.trigger('sync',model,resp,options);}};model.save(null,options);return model;},parse:function(resp,xhr){return resp;},chain:function(){return _(this.models).chain();},_reset:function(options){this.length=0;this.models=[];this._byId={};this._byCid={};},_prepareModel:function(model,options){options||(options={});if(!(model instanceof Model)){var attrs=model;options.collection=this;model=new this.model(attrs,options);if(!model._validate(model.attributes,options))model=false;}else if(!model.collection){model.collection=this;}
return model;},_removeReference:function(model){if(this==model.collection){delete model.collection;}
model.off('all',this._onModelEvent,this);},_onModelEvent:function(event,model,collection,options){if((event=='add'||event=='remove')&&collection!=this)return;if(event=='destroy'){this.remove(model,options);}
if(model&&event==='change:'+ model.idAttribute){delete this._byId[model.previous(model.idAttribute)];this._byId[model.id]=model;}
this.trigger.apply(this,arguments);}});var methods=['forEach','each','map','reduce','reduceRight','find','detect','filter','select','reject','every','all','some','any','include','contains','invoke','max','min','sortBy','sortedIndex','toArray','size','first','initial','rest','last','without','indexOf','shuffle','lastIndexOf','isEmpty','groupBy'];_.each(methods,function(method){Collection.prototype[method]=function(){return _[method].apply(_,[this.models].concat(_.toArray(arguments)));};});var Router=Backbone.Router=function(options){options||(options={});if(options.routes)this.routes=options.routes;this._bindRoutes();this.initialize.apply(this,arguments);};var namedParam=/:\w+/g;var splatParam=/\*\w+/g;var escapeRegExp=/[-[\]{}()+?.,\\^$|#\s]/g;_.extend(Router.prototype,Events,{initialize:function(){},route:function(route,name,callback){Backbone.history||(Backbone.history=new History);if(!_.isRegExp(route))route=this._routeToRegExp(route);if(!callback)callback=this[name];Backbone.history.route(route,_.bind(function(fragment){var args=this._extractParameters(route,fragment);callback&&callback.apply(this,args);this.trigger.apply(this,['route:'+ name].concat(args));Backbone.history.trigger('route',this,name,args);},this));return this;},navigate:function(fragment,options){Backbone.history.navigate(fragment,options);},_bindRoutes:function(){if(!this.routes)return;var routes=[];for(var route in this.routes){routes.unshift([route,this.routes[route]]);}
for(var i=0,l=routes.length;i<l;i++){this.route(routes[i][0],routes[i][1],this[routes[i][1]]);}},_routeToRegExp:function(route){route=route.replace(escapeRegExp,'\\$&').replace(namedParam,'([^\/]+)').replace(splatParam,'(.*?)');return new RegExp('^'+ route+'$');},_extractParameters:function(route,fragment){return route.exec(fragment).slice(1);}});var History=Backbone.History=function(){this.handlers=[];_.bindAll(this,'checkUrl');};var routeStripper=/^[#\/]/;var isExplorer=/msie [\w.]+/;History.started=false;_.extend(History.prototype,Events,{interval:50,getHash:function(windowOverride){var loc=windowOverride?windowOverride.location:window.location;var match=loc.href.match(/#(.*)$/);return match?match[1]:'';},getFragment:function(fragment,forcePushState){if(fragment==null){if(this._hasPushState||forcePushState){fragment=window.location.pathname;var search=window.location.search;if(search)fragment+=search;}else{fragment=this.getHash();}}
if(!fragment.indexOf(this.options.root))fragment=fragment.substr(this.options.root.length);return fragment.replace(routeStripper,'');},start:function(options){if(History.started)throw new Error("Backbone.history has already been started");History.started=true;this.options=_.extend({},{root:'/'},this.options,options);this._wantsHashChange=this.options.hashChange!==false;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.options.pushState&&window.history&&window.history.pushState);var fragment=this.getFragment();var docMode=document.documentMode;var oldIE=(isExplorer.exec(navigator.userAgent.toLowerCase())&&(!docMode||docMode<=7));if(oldIE){this.iframe=$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;this.navigate(fragment);}
if(this._hasPushState){$(window).bind('popstate',this.checkUrl);}else if(this._wantsHashChange&&('onhashchange'in window)&&!oldIE){$(window).bind('hashchange',this.checkUrl);}else if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval);}
this.fragment=fragment;var loc=window.location;var atRoot=loc.pathname==this.options.root;if(this._wantsHashChange&&this._wantsPushState&&!this._hasPushState&&!atRoot){this.fragment=this.getFragment(null,true);window.location.replace(this.options.root+'#'+ this.fragment);return true;}else if(this._wantsPushState&&this._hasPushState&&atRoot&&loc.hash){this.fragment=this.getHash().replace(routeStripper,'');window.history.replaceState({},document.title,loc.protocol+'//'+ loc.host+ this.options.root+ this.fragment);}
if(!this.options.silent){return this.loadUrl();}},stop:function(){$(window).unbind('popstate',this.checkUrl).unbind('hashchange',this.checkUrl);clearInterval(this._checkUrlInterval);History.started=false;},route:function(route,callback){this.handlers.unshift({route:route,callback:callback});},checkUrl:function(e){var current=this.getFragment();if(current==this.fragment&&this.iframe)current=this.getFragment(this.getHash(this.iframe));if(current==this.fragment)return false;if(this.iframe)this.navigate(current);this.loadUrl()||this.loadUrl(this.getHash());},loadUrl:function(fragmentOverride){var fragment=this.fragment=this.getFragment(fragmentOverride);var matched=_.any(this.handlers,function(handler){if(handler.route.test(fragment)){handler.callback(fragment);return true;}});return matched;},navigate:function(fragment,options){if(!History.started)return false;if(!options||options===true)options={trigger:options};var frag=(fragment||'').replace(routeStripper,'');if(this.fragment==frag)return;if(this._hasPushState){if(frag.indexOf(this.options.root)!=0)frag=this.options.root+ frag;this.fragment=frag;window.history[options.replace?'replaceState':'pushState']({},document.title,frag);}else if(this._wantsHashChange){this.fragment=frag;this._updateHash(window.location,frag,options.replace);if(this.iframe&&(frag!=this.getFragment(this.getHash(this.iframe)))){if(!options.replace)this.iframe.document.open().close();this._updateHash(this.iframe.location,frag,options.replace);}}else{window.location.assign(this.options.root+ fragment);}
if(options.trigger)this.loadUrl(fragment);},_updateHash:function(location,fragment,replace){if(replace){location.replace(location.toString().replace(/(javascript:|#).*$/,'')+'#'+ fragment);}else{location.hash=fragment;}}});var View=Backbone.View=function(options){this.cid=_.uniqueId('view');this._configure(options||{});this._ensureElement();this.initialize.apply(this,arguments);this.delegateEvents();};var delegateEventSplitter=/^(\S+)\s*(.*)$/;var viewOptions=['model','collection','el','id','attributes','className','tagName'];_.extend(View.prototype,Events,{tagName:'div',$:function(selector){return this.$el.find(selector);},initialize:function(){},render:function(){return this;},remove:function(){this.$el.remove();return this;},make:function(tagName,attributes,content){var el=document.createElement(tagName);if(attributes)$(el).attr(attributes);if(content)$(el).html(content);return el;},setElement:function(element,delegate){if(this.$el)this.undelegateEvents();this.$el=(element instanceof $)?element:$(element);this.el=this.$el[0];if(delegate!==false)this.delegateEvents();return this;},delegateEvents:function(events){if(!(events||(events=getValue(this,'events'))))return;this.undelegateEvents();for(var key in events){var method=events[key];if(!_.isFunction(method))method=this[events[key]];if(!method)throw new Error('Method "'+ events[key]+'" does not exist');var match=key.match(delegateEventSplitter);var eventName=match[1],selector=match[2];method=_.bind(method,this);eventName+='.delegateEvents'+ this.cid;if(selector===''){this.$el.bind(eventName,method);}else{this.$el.delegate(selector,eventName,method);}}},undelegateEvents:function(){this.$el.unbind('.delegateEvents'+ this.cid);},_configure:function(options){if(this.options)options=_.extend({},this.options,options);for(var i=0,l=viewOptions.length;i<l;i++){var attr=viewOptions[i];if(options[attr])this[attr]=options[attr];}
this.options=options;},_ensureElement:function(){if(!this.el){var attrs=getValue(this,'attributes')||{};if(this.id)attrs.id=this.id;if(this.className)attrs['class']=this.className;this.setElement(this.make(this.tagName,attrs),false);}else{this.setElement(this.el,false);}}});var extend=function(protoProps,classProps){var child=inherits(this,protoProps,classProps);child.extend=this.extend;return child;};Model.extend=Collection.extend=Router.extend=View.extend=extend;var methodMap={'create':'POST','update':'PUT','delete':'DELETE','read':'GET'};Backbone.sync=function(method,model,options){var type=methodMap[method];options||(options={});var params={type:type,dataType:'json'};if(!options.url){params.url=getValue(model,'url')||urlError();}
if(!options.data&&model&&(method=='create'||method=='update')){params.contentType='application/json';params.data=JSON.stringify(model.toJSON());}
if(Backbone.emulateJSON){params.contentType='application/x-www-form-urlencoded';params.data=params.data?{model:params.data}:{};}
if(Backbone.emulateHTTP){if(type==='PUT'||type==='DELETE'){if(Backbone.emulateJSON)params.data._method=type;params.type='POST';params.beforeSend=function(xhr){xhr.setRequestHeader('X-HTTP-Method-Override',type);};}}
if(params.type!=='GET'&&!Backbone.emulateJSON){params.processData=false;}
return $.ajax(_.extend(params,options));};Backbone.wrapError=function(onError,originalModel,options){return function(model,resp){resp=model===originalModel?resp:model;if(onError){onError(originalModel,resp,options);}else{originalModel.trigger('error',originalModel,resp,options);}};};var ctor=function(){};var inherits=function(parent,protoProps,staticProps){var child;if(protoProps&&protoProps.hasOwnProperty('constructor')){child=protoProps.constructor;}else{child=function(){parent.apply(this,arguments);};}
_.extend(child,parent);ctor.prototype=parent.prototype;child.prototype=new ctor();if(protoProps)_.extend(child.prototype,protoProps);if(staticProps)_.extend(child,staticProps);child.prototype.constructor=child;child.__super__=parent.prototype;return child;};var getValue=function(object,prop){if(!(object&&object[prop]))return null;return _.isFunction(object[prop])?object[prop]():object[prop];};var urlError=function(){throw new Error('A "url" property or function must be specified');};}).call(this);(function(a,b){function G(a,b,c){this._d=a,this._isUTC=!!b,this._a=a._a||null,a._a=null,this._lang=c||!1}function H(a){var b=this._data={},c=a.years||a.y||0,d=a.months||a.M||0,e=a.weeks||a.w||0,f=a.days||a.d||0,g=a.hours||a.h||0,h=a.minutes||a.m||0,i=a.seconds||a.s||0,j=a.milliseconds||a.ms||0;this._milliseconds=j+i*1e3+h*6e4+g*36e5,this._days=f+e*7,this._months=d+c*12,b.milliseconds=j%1e3,i+=I(j/1e3),b.seconds=i%60,h+=I(i/60),b.minutes=h%60,g+=I(h/60),b.hours=g%24,f+=I(g/24),f+=e*7,b.days=f%30,d+=I(f/30),b.months=d%12,c+=I(d/12),b.years=c,this._lang=!1}function I(a){return a<0?Math.ceil(a):Math.floor(a)}function J(a,b){var c=a+"";while(c.length<b)c="0"+c;return c}function K(a,b,c){var d=b._milliseconds,e=b._days,f=b._months,g;d&&a._d.setTime(+a+d*c),e&&a.date(a.date()+e*c),f&&(g=a.date(),a.date(1).month(a.month()+f*c).date(Math.min(g,a.daysInMonth())))}function L(a){return Object.prototype.toString.call(a)==="[object Array]"}function M(a,b){var c=Math.min(a.length,b.length),d=Math.abs(a.length-b.length),e=0,f;for(f=0;f<c;f++)~~a[f]!==~~b[f]&&e++;return e+d}function N(b,c){var d,e;for(d=1;d<7;d++)b[d]=b[d]==null?d===2?1:0:b[d];return b[7]=c,e=new a(0),c?(e.setUTCFullYear(b[0],b[1],b[2]),e.setUTCHours(b[3],b[4],b[5],b[6])):(e.setFullYear(b[0],b[1],b[2]),e.setHours(b[3],b[4],b[5],b[6])),e._a=b,e}function O(a,b){var d,e,f=[];!b&&i&&(b=require("./lang/"+a));for(d=0;d<j.length;d++)b[j[d]]=b[j[d]]||g.en[j[d]];for(d=0;d<12;d++)e=c([2e3,d]),f[d]=new RegExp("^"+(b.months[d]||b.months(e,""))+"|^"+(b.monthsShort[d]||b.monthsShort(e,"")).replace(".",""),"i");return b.monthsParse=b.monthsParse||f,g[a]=b,b}function P(a){var b=typeof a=="string"&&a||a&&a._lang||null;return b?g[b]||O(b):c}function Q(a){return D[a]?"'+("+D[a]+")+'":a.replace(n,"").replace(/\\?'/g,"\\'")}function R(a){return P().longDateFormat[a]||a}function S(a){var b="var a,b;return '"+a.replace(l,Q)+"';",c=Function;return new c("t","v","o","p","m",b)}function T(a){return C[a]||(C[a]=S(a)),C[a]}function U(a,b){function d(d,e){return c[d].call?c[d](a,b):c[d][e]}var c=P(a);while(m.test(b))b=b.replace(m,R);return C[b]||(C[b]=S(b)),C[b](a,d,c.ordinal,J,c.meridiem)}function V(a){switch(a){case"DDDD":return r;case"YYYY":return s;case"S":case"SS":case"SSS":case"DDD":return q;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":case"a":case"A":return t;case"Z":case"ZZ":return u;case"T":return v;case"MM":case"DD":case"YY":case"HH":case"hh":case"mm":case"ss":case"M":case"D":case"d":case"H":case"h":case"m":case"s":return p;default:return new RegExp(a.replace("\\",""))}}function W(a,b,c,d){var e;switch(a){case"M":case"MM":c[1]=b==null?0:~~b-1;break;case"MMM":case"MMMM":for(e=0;e<12;e++)if(P().monthsParse[e].test(b)){c[1]=e;break}break;case"D":case"DD":case"DDD":case"DDDD":b!=null&&(c[2]=~~b);break;case"YY":b=~~b,c[0]=b+(b>70?1900:2e3);break;case"YYYY":c[0]=~~Math.abs(b);break;case"a":case"A":d.isPm=(b+"").toLowerCase()==="pm";break;case"H":case"HH":case"h":case"hh":c[3]=~~b;break;case"m":case"mm":c[4]=~~b;break;case"s":case"ss":c[5]=~~b;break;case"S":case"SS":case"SSS":c[6]=~~(("0."+b)*1e3);break;case"Z":case"ZZ":d.isUTC=!0,e=(b+"").match(z),e&&e[1]&&(d.tzh=~~e[1]),e&&e[2]&&(d.tzm=~~e[2]),e&&e[0]==="+"&&(d.tzh=-d.tzh,d.tzm=-d.tzm)}}function X(a,b){var c=[0,0,1,0,0,0,0],d={tzh:0,tzm:0},e=b.match(l),f,g;for(f=0;f<e.length;f++)g=(V(e[f]).exec(a)||[])[0],a=a.replace(V(e[f]),""),W(e[f],g,c,d);return d.isPm&&c[3]<12&&(c[3]+=12),d.isPm===!1&&c[3]===12&&(c[3]=0),c[3]+=d.tzh,c[4]+=d.tzm,N(c,d.isUTC)}function Y(a,b){var c,d=a.match(o)||[],e,f=99,g,h,i;for(g=0;g<b.length;g++)h=X(a,b[g]),e=U(new G(h),b[g]).match(o)||[],i=M(d,e),i<f&&(f=i,c=h);return c}function Z(b){var c="YYYY-MM-DDT",d;if(w.exec(b)){for(d=0;d<4;d++)if(y[d][1].exec(b)){c+=y[d][0];break}return u.exec(b)?X(b,c+" Z"):X(b,c)}return new a(b)}function $(a,b,c,d,e){var f=e.relativeTime[a];return typeof f=="function"?f(b||1,!!c,a,d):f.replace(/%d/i,b||1)}function _(a,b,c){var d=e(Math.abs(a)/1e3),f=e(d/60),g=e(f/60),h=e(g/24),i=e(h/365),j=d<45&&["s",d]||f===1&&["m"]||f<45&&["mm",f]||g===1&&["h"]||g<22&&["hh",g]||h===1&&["d"]||h<=25&&["dd",h]||h<=45&&["M"]||h<345&&["MM",e(h/30)]||i===1&&["y"]||["yy",i];return j[2]=b,j[3]=a>0,j[4]=c,$.apply({},j)}function ab(a,b){c.fn[a]=function(a){var c=this._isUTC?"UTC":"";return a!=null?(this._d["set"+c+b](a),this):this._d["get"+c+b]()}}function bb(a){c.duration.fn[a]=function(){return this._data[a]}}function cb(a,b){c.duration.fn["as"+a]=function(){return+this/b}}var c,d="1.7.0",e=Math.round,f,g={},h="en",i=typeof module!="undefined"&&module.exports,j="months|monthsShort|weekdays|weekdaysShort|weekdaysMin|longDateFormat|calendar|relativeTime|ordinal|meridiem".split("|"),k=/^\/?Date\((\-?\d+)/i,l=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?)/g,m=/(LT|LL?L?L?)/g,n=/(^\[)|(\\)|\]$/g,o=/([0-9a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)/gi,p=/\d\d?/,q=/\d{1,3}/,r=/\d{3}/,s=/\d{1,4}/,t=/[0-9a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+/i,u=/Z|[\+\-]\d\d:?\d\d/i,v=/T/i,w=/^\s*\d{4}-\d\d-\d\d(T(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,x="YYYY-MM-DDTHH:mm:ssZ",y=[["HH:mm:ss.S",/T\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/T\d\d:\d\d:\d\d/],["HH:mm",/T\d\d:\d\d/],["HH",/T\d\d/]],z=/([\+\-]|\d\d)/gi,A="Month|Date|Hours|Minutes|Seconds|Milliseconds".split("|"),B={Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6},C={},D={M:"(a=t.month()+1)",MMM:'v("monthsShort",t.month())',MMMM:'v("months",t.month())',D:"(a=t.date())",DDD:"(a=new Date(t.year(),t.month(),t.date()),b=new Date(t.year(),0,1),a=~~(((a-b)/864e5)+1.5))",d:"(a=t.day())",dd:'v("weekdaysMin",t.day())',ddd:'v("weekdaysShort",t.day())',dddd:'v("weekdays",t.day())',w:"(a=new Date(t.year(),t.month(),t.date()-t.day()+5),b=new Date(a.getFullYear(),0,4),a=~~((a-b)/864e5/7+1.5))",YY:"p(t.year()%100,2)",YYYY:"p(t.year(),4)",a:"m(t.hours(),t.minutes(),!0)",A:"m(t.hours(),t.minutes(),!1)",H:"t.hours()",h:"t.hours()%12||12",m:"t.minutes()",s:"t.seconds()",S:"~~(t.milliseconds()/100)",SS:"p(~~(t.milliseconds()/10),2)",SSS:"p(t.milliseconds(),3)",Z:'((a=-t.zone())<0?((a=-a),"-"):"+")+p(~~(a/60),2)+":"+p(~~a%60,2)',ZZ:'((a=-t.zone())<0?((a=-a),"-"):"+")+p(~~(10*a/6),4)'},E="DDD w M D d".split(" "),F="M D H h m s w".split(" ");while(E.length)f=E.pop(),D[f+"o"]=D[f]+"+o(a)";while(F.length)f=F.pop(),D[f+f]="p("+D[f]+",2)";D.DDDD="p("+D.DDD+",3)",c=function(d,e){if(d===null||d==="")return null;var f,g;return c.isMoment(d)?new G(new a(+d._d),d._isUTC,d._lang):(e?L(e)?f=Y(d,e):f=X(d,e):(g=k.exec(d),f=d===b?new a:g?new a(+g[1]):d instanceof a?d:L(d)?N(d):typeof d=="string"?Z(d):new a(d)),new G(f))},c.utc=function(a,b){return L(a)?new G(N(a,!0),!0):(typeof a=="string"&&!u.exec(a)&&(a+=" +0000",b&&(b+=" Z")),c(a,b).utc())},c.unix=function(a){return c(a*1e3)},c.duration=function(a,b){var d=c.isDuration(a),e=typeof a=="number",f=d?a._data:e?{}:a,g;return e&&(b?f[b]=a:f.milliseconds=a),g=new H(f),d&&(g._lang=a._lang),g},c.humanizeDuration=function(a,b,d){return c.duration(a,b===!0?null:b).humanize(b===!0?!0:d)},c.version=d,c.defaultFormat=x,c.lang=function(a,b){var d;if(!a)return h;(b||!g[a])&&O(a,b);if(g[a]){for(d=0;d<j.length;d++)c[j[d]]=g[a][j[d]];c.monthsParse=g[a].monthsParse,h=a}},c.langData=P,c.isMoment=function(a){return a instanceof G},c.isDuration=function(a){return a instanceof H},c.lang("en",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},ordinal:function(a){var b=a%10;return~~(a%100/10)===1?"th":b===1?"st":b===2?"nd":b===3?"rd":"th"}}),c.fn=G.prototype={clone:function(){return c(this)},valueOf:function(){return+this._d},unix:function(){return Math.floor(+this._d/1e3)},toString:function(){return this._d.toString()},toDate:function(){return this._d},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds(),!!this._isUTC]},isValid:function(){return this._a?!M(this._a,(this._a[7]?c.utc(this):this).toArray()):!isNaN(this._d.getTime())},utc:function(){return this._isUTC=!0,this},local:function(){return this._isUTC=!1,this},format:function(a){return U(this,a?a:c.defaultFormat)},add:function(a,b){var d=b?c.duration(+b,a):c.duration(a);return K(this,d,1),this},subtract:function(a,b){var d=b?c.duration(+b,a):c.duration(a);return K(this,d,-1),this},diff:function(a,b,d){var f=this._isUTC?c(a).utc():c(a).local(),g=(this.zone()-f.zone())*6e4,h=this._d-f._d-g,i=this.year()-f.year(),j=this.month()-f.month(),k=this.date()-f.date(),l;return b==="months"?l=i*12+j+k/30:b==="years"?l=i+(j+k/30)/12:l=b==="seconds"?h/1e3:b==="minutes"?h/6e4:b==="hours"?h/36e5:b==="days"?h/864e5:b==="weeks"?h/6048e5:h,d?l:e(l)},from:function(a,b){return c.duration(this.diff(a)).lang(this._lang).humanize(!b)},fromNow:function(a){return this.from(c(),a)},calendar:function(){var a=this.diff(c().sod(),"days",!0),b=this.lang().calendar,d=b.sameElse,e=a<-6?d:a<-1?b.lastWeek:a<0?b.lastDay:a<1?b.sameDay:a<2?b.nextDay:a<7?b.nextWeek:d;return this.format(typeof e=="function"?e.apply(this):e)},isLeapYear:function(){var a=this.year();return a%4===0&&a%100!==0||a%400===0},isDST:function(){return this.zone()<c([this.year()]).zone()||this.zone()<c([this.year(),5]).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return a==null?b:this.add({d:a-b})},startOf:function(a){switch(a.replace(/s$/,"")){case"year":this.month(0);case"month":this.date(1);case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return this},endOf:function(a){return this.startOf(a).add(a.replace(/s?$/,"s"),1).subtract("ms",1)},sod:function(){return this.clone().startOf("day")},eod:function(){return this.clone().endOf("day")},zone:function(){return this._isUTC?0:this._d.getTimezoneOffset()},daysInMonth:function(){return c.utc([this.year(),this.month()+1,0]).date()},lang:function(a){return a===b?P(this):(this._lang=a,this)}};for(f=0;f<A.length;f++)ab(A[f].toLowerCase(),A[f]);ab("year","FullYear"),c.duration.fn=H.prototype={weeks:function(){return I(this.days()/7)},valueOf:function(){return this._milliseconds+this._days*864e5+this._months*2592e6},humanize:function(a){var b=+this,c=this.lang().relativeTime,d=_(b,!a,this.lang());return a&&(d=(b<=0?c.past:c.future).replace(/%s/i,d)),d},lang:c.fn.lang};for(f in B)B.hasOwnProperty(f)&&(cb(f,B[f]),bb(f.toLowerCase()));cb("Weeks",6048e5),i&&(module.exports=c),typeof ender=="undefined"&&(this.moment=c),typeof define=="function"&&define.amd&&define("moment",[],function(){return c})}).call(this,Date);!function(window,document,undefined){var prefixes=['webkit','Moz','ms','O'],animations={},useCssAnimations
function createEl(tag,prop){var el=document.createElement(tag||'div'),n
for(n in prop)el[n]=prop[n]
return el}
function ins(parent){for(var i=1,n=arguments.length;i<n;i++)
parent.appendChild(arguments[i])
return parent}
var sheet=function(){var el=createEl('style',{type:'text/css'})
ins(document.getElementsByTagName('head')[0],el)
return el.sheet||el.styleSheet}()
function addAnimation(alpha,trail,i,lines){var name=['opacity',trail,~~(alpha*100),i,lines].join('-'),start=0.01+ i/lines*100,z=Math.max(1-(1-alpha)/trail*(100-start),alpha),prefix=useCssAnimations.substring(0,useCssAnimations.indexOf('Animation')).toLowerCase(),pre=prefix&&'-'+prefix+'-'||''
if(!animations[name]){sheet.insertRule('@'+ pre+'keyframes '+ name+'{'+'0%{opacity:'+ z+'}'+
start+'%{opacity:'+ alpha+'}'+
(start+0.01)+'%{opacity:1}'+
(start+trail)%100+'%{opacity:'+ alpha+'}'+'100%{opacity:'+ z+'}'+'}',sheet.cssRules.length)
animations[name]=1}
return name}
function vendor(el,prop){var s=el.style,pp,i
if(s[prop]!==undefined)return prop
prop=prop.charAt(0).toUpperCase()+ prop.slice(1)
for(i=0;i<prefixes.length;i++){pp=prefixes[i]+prop
if(s[pp]!==undefined)return pp}}
function css(el,prop){for(var n in prop)
el.style[vendor(el,n)||n]=prop[n]
return el}
function merge(obj){for(var i=1;i<arguments.length;i++){var def=arguments[i]
for(var n in def)
if(obj[n]===undefined)obj[n]=def[n]}
return obj}
function pos(el){var o={x:el.offsetLeft,y:el.offsetTop}
while((el=el.offsetParent))
o.x+=el.offsetLeft,o.y+=el.offsetTop
return o}
var defaults={lines:12,length:7,width:5,radius:10,rotate:0,corners:1,color:'#000',speed:1,trail:100,opacity:1/4,fps:20,zIndex:2e9,className:'spinner',top:'auto',left:'auto'}
var Spinner=function Spinner(o){if(!this.spin)return new Spinner(o)
this.opts=merge(o||{},Spinner.defaults,defaults)}
Spinner.defaults={}
merge(Spinner.prototype,{spin:function(target){this.stop()
var self=this,o=self.opts,el=self.el=css(createEl(0,{className:o.className}),{position:'relative',width:0,zIndex:o.zIndex}),mid=o.radius+o.length+o.width,ep,tp
if(target){target.insertBefore(el,target.firstChild||null)
tp=pos(target)
ep=pos(el)
css(el,{left:'0px',top:'0px'})}
el.setAttribute('aria-role','progressbar')
self.lines(el,self.opts)
if(!useCssAnimations){var i=0,fps=o.fps,f=fps/o.speed,ostep=(1-o.opacity)/(f*o.trail/100),astep=f/o.lines;(function anim(){i++;for(var s=o.lines;s;s--){var alpha=Math.max(1-(i+s*astep)%f*ostep,o.opacity)
self.opacity(el,o.lines-s,alpha,o)}
self.timeout=self.el&&setTimeout(anim,~~(1000/fps))})()}
return self},stop:function(){var el=this.el
if(el){clearTimeout(this.timeout)
if(el.parentNode)el.parentNode.removeChild(el)
this.el=undefined}
return this},lines:function(el,o){var i=0,seg
function fill(color,shadow){return css(createEl(),{position:'absolute',width:(o.length+o.width)+'px',height:o.width+'px',background:color,boxShadow:shadow,transformOrigin:'left',transform:'rotate('+~~(360/o.lines*i+o.rotate)+'deg) translate('+ o.radius+'px'+',0)',borderRadius:(o.corners*o.width>>1)+'px'})}
for(;i<o.lines;i++){seg=css(createEl(),{position:'absolute',top:1+~(o.width/2)+'px',transform:o.hwaccel?'translate3d(0,0,0)':'',opacity:o.opacity,animation:useCssAnimations&&addAnimation(o.opacity,o.trail,i,o.lines)+' '+ 1/o.speed+'s linear infinite'})
if(o.shadow)ins(seg,css(fill('#000','0 0 4px '+'#000'),{top:2+'px'}))
ins(el,ins(seg,fill(o.color,'0 0 1px rgba(0,0,0,.1)')))}
return el},opacity:function(el,i,val){if(i<el.childNodes.length)el.childNodes[i].style.opacity=val}});(function(){function vml(tag,attr){return createEl('<'+ tag+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',attr)}
var s=css(createEl('group'),{behavior:'url(#default#VML)'})
if(!vendor(s,'transform')&&s.adj){sheet.addRule('.spin-vml','behavior:url(#default#VML)')
Spinner.prototype.lines=function(el,o){var r=o.length+o.width,s=2*r
function grp(){return css(vml('group',{coordsize:s+' '+ s,coordorigin:-r+' '+-r}),{width:s,height:s})}
var margin=-(o.width+o.length)*2+'px',g=css(grp(),{position:'absolute',top:margin,left:margin}),i
function seg(i,dx,filter){ins(g,ins(css(grp(),{rotation:360/o.lines*i+'deg',left:~~dx}),ins(css(vml('roundrect',{arcsize:o.corners}),{width:r,height:o.width,left:o.radius,top:-o.width>>1,filter:filter}),vml('fill',{color:o.color,opacity:o.opacity}),vml('stroke',{opacity:0}))))}
if(o.shadow)
for(i=1;i<=o.lines;i++)
seg(i,-2,'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')
for(i=1;i<=o.lines;i++)seg(i)
return ins(el,g)}
Spinner.prototype.opacity=function(el,i,val,o){var c=el.firstChild
o=o.shadow&&o.lines||0
if(c&&i+o<c.childNodes.length){c=c.childNodes[i+o];c=c&&c.firstChild;c=c&&c.firstChild
if(c)c.opacity=val}}}
else
useCssAnimations=vendor(s,'animation')})()
if(typeof define=='function'&&define.amd)
define(function(){return Spinner})
else
window.Spinner=Spinner}(window,document);(function(){Backbone.sync=(function(){var getValue=function(object,prop){if(!(object&&object[prop]))return null;return _.isFunction(object[prop])?object[prop]():object[prop];};var urlError=function(){throw new Error('A "url" property or function must be specified');};return function(method,model,options){var methodMap={'create':'POST','update':'PUT','delete':'DELETE','read':'GET'},type=methodMap[method];options||(options={});var params={type:type,dataType:'json',contentType:"application/x-www-form-urlencoded; charset=UTF-8",cache:false};if(!options.url){params.url=getValue(model,'url')||urlError();}
if(model&&(method=='create'||method=='update')){params.contentType='application/x-www-form-urlencoded';options.data||(options.data={});params.data=_.extend(model.toJSON(),options.data);delete options.data;params.data=$.param(params.data);}
if(params.type!=='GET'){params.processData=false;}
return $.ajax(_.extend(params,options));};}());(function(old){Backbone.History.prototype.getFragment=function(){return old.apply(this,arguments).replace(/\?.*/,'');};})(Backbone.History.prototype.getFragment);}());(function(){"use strict";function buildContext(str,obj){var pattern=/%(\w*)%/g;return str.replace(pattern,function(m,key){return obj[key];});}
function buildContent(text,data){var content,field,replacement,renderer,rendererParameters,replacements={};if(data){for(field in data){replacement=data[field];if(replacement.url){renderer='simpleLink';rendererParameters={href:replacement.url,text:replacement.text};}else{renderer='simpleSpan';rendererParameters={text:replacement.text};}
replacements[field]=Handlebars.templates[renderer](rendererParameters);}
content=text?buildContext(text,replacements):'';}else{content=text;}
return content;}
function truncate(str,data){var splitString=[],outputString='',str=str||'',data=data||{},max=data.max||40,type=data.type||'end',strLength=str.length,ellipsis=data.ellipsis||'&hellip;',i,ii;function endTruncate(str,max,ellipsis){var strArr=[];strArr.push(str.slice(0,max));strArr.push(ellipsis);return strArr.join('');}
function middleTruncate(str,max,ellipsis){var strArr=[];strArr.push(str.slice(0,max/2));strArr.push(ellipsis);strArr.push(str.slice(-max/2));return strArr.join('');}
function wordTruncate(str,max,ellipsis){var strLength=0,str=$('<div/>').html(str).text(),strArr=[],endIndex,i,ii;strArr=str.split(/\b/);if(1==strArr.length){return endTruncate(str,max,ellipsis);}
for(i=0,ii=strArr.length;i<ii;i++){strLength+=strArr[i].length;if(strLength>=max){break;}}
endIndex=i- 1;strArr.length=endIndex;if(strArr.length&&strArr[endIndex-1].match(/[!;:|,.?\/\s]/)){strArr.pop();}
strArr.push(ellipsis);return strArr.join('');}
if(strLength<=max){return str;}
switch(type){case"word":outputString=wordTruncate(str,max,ellipsis);break;case"center":case"middle":outputString=middleTruncate(str,max,ellipsis);break;default:outputString=endTruncate(str,max,ellipsis);break;}
return outputString;}
Handlebars.registerHelper("debug",function(optionalValue){console.log("Current Context");console.log("====================");console.log(this);if(optionalValue){console.log("Value");console.log("====================");console.log(optionalValue);}});Handlebars.registerHelper('truncate',function(str,options){var data={type:options.hash.type||options.hash.position||'end',max:options.hash.max||40,ellipsis:options.hash.ellipsis||"&hellip;"};return new Handlebars.SafeString(truncate(str,data));});Handlebars.registerHelper('truncateClean',function(str,options){var data={type:options.hash.type||options.hash.position||'end',max:options.hash.max||40,ellipsis:options.hash.ellipsis||"&hellip;"};return truncate(str,data);});Handlebars.registerHelper("ifEqual",function(one,two,val){if(one===two){return val;}
return"";});Handlebars.registerHelper('if_eq',function(context,options){if(context==options.hash.compare){return options.fn(this);}
return options.inverse(this);});Handlebars.registerHelper("classFormatter",function(string){if(!string){return;}
return string.replace(/\//g,'-').toLowerCase();});Handlebars.registerHelper('subtemplate',function(options){var data=options.hash,subtemplate=data.template||'';if(''!=subtemplate){return Handlebars.templates[subtemplate](data);}});Handlebars.registerHelper('dateFormat',function(timestamp,format){return moment(timestamp*1000).format(format);});Handlebars.registerHelper('seconds_to_hms',function(seconds){var hours=Math.floor(seconds/3600),minutes=Math.floor(seconds%3600/60),seconds=Math.floor(seconds%60);if(minutes<10){minutes='0'+ minutes;}
if(seconds<10){seconds='0'+ seconds;}
return hours+':'+ minutes+':'+ seconds;});Handlebars.registerHelper("withInteraction",function(interaction,block){if(interaction.data.count){return block.fn(interaction.data.items[0]);}});Handlebars.registerHelper("tileContext",function(context,split,destination){var content,output='';if(!context){return;}
if(context.text){content=buildContent(context.text.text,context.text.data);output+=Handlebars.templates["tileContextText"]({content:content,type:context.text.type});}
if(context.users){output+=Handlebars.templates["tileContextUsers"]({users:context.users.slice(0,split),overflow:(context.users.length>split)?context.users.length- split:null,destination:destination});}
return output;});Handlebars.registerHelper("contentBuilder",function(activity){return buildContent(activity.text,activity.data);});Handlebars.registerHelper("userHoverThumb",function(user,elClass,size){_.isString(size)||(size="small");elClass||(elClass="");return"<img src='"+ user.thumbs[size].url+"' class='hover-user "+ elClass+"' data-user='"+ user.urlProfile+"'/>";});Handlebars.registerHelper("notificationUrlThumbHandler",function(thumb){var outputString=[],widthConstant=228,width,height,resizeConstant;if(!thumb){return;}
width=thumb.width||false;height=thumb.height||false;outputString.push(' src="');outputString.push(thumb.url);outputString.push('" style="width:');outputString.push(widthConstant);outputString.push('px; ');if(width&&height){resizeConstant=widthConstant/width;outputString.push(' height:');outputString.push(parseInt(height*resizeConstant,10));outputString.push('px;');}
outputString.push('"');return outputString.join('');;});Handlebars.registerHelper('truncateTitle',function(title,titleType,options){var truncateOptions=options.hash||{},pattern=/[^:]*:\/\/([^\/]*)([^?]*)(.*)/,urlArray;if(!title){return"";}
switch(titleType){case"url":urlArray=title.match(pattern);title=urlArray[1].replace(/^www[.]/,'');if(truncateOptions.max){truncateOptions.type='middle';title=truncate(title,truncateOptions);}
break;case"title":case"comment":if(truncateOptions.max){truncateOptions.type='word';title=truncate(title,truncateOptions);}
break;}
return title;});Handlebars.registerHelper('stringSub',function(str,obj){return buildContext(str,obj);});Handlebars.registerHelper('url_encode',function(str){return encodeURIComponent(str);});var cycleVal=0;Handlebars.registerHelper('cycle',function(options){var defaultClass=options.hash.defaultClass||'s-odd',modClass=options.hash.modClass||'s-even',modValue=options.hash.modValue||2;cycleVal++;return cycleVal%modValue?defaultClass:modClass;});Handlebars.registerHelper('number_format',function(number,decimals,dec_point,thousands_sep){number=(number+'').replace(/[^0-9+\-Ee.]/g,'');var n=!isFinite(+number)?0:+number,prec=!isFinite(+decimals)?0:Math.abs(decimals),sep=(typeof thousands_sep==='undefined'||typeof thousands_sep==='object')?',':thousands_sep,dec=(typeof dec_point==='undefined'||typeof dec_point==='object')?'.':dec_point,s='',toFixedFix=function(n,prec){var k=Math.pow(10,prec);return''+ Math.round(n*k)/k;};s=(prec?toFixedFix(n,prec):''+ Math.round(n)).split('.');if(s[0].length>3){s[0]=s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,sep);}
if((s[1]||'').length<prec){s[1]=s[1]||'';s[1]+=new Array(prec- s[1].length+ 1).join('0');}
return s.join(dec);});Handlebars.registerHelper('nl2br',function(text){var nl2br=(text+'').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g,'$1'+'<br>'+'$2');return new Handlebars.SafeString(nl2br);});})();var SU,Handlebars,FB,console,Sync;(function(){"use strict";if(typeof console=="undefined"){var _null=function(){};window.console=console={'error':_null,'warn':_null,'info':_null,'debug':_null,'log':_null};}
window.Handlebars=Handlebars=window.Handlebars||false;window.FB=FB=window.FB||false;window.SU=SU={Captcha:{_callbacks:[],isRequired:function(data){return(data&&data._captcha);},show:function(callback){SU.Captcha._callbacks.push(callback);SU.Modal.loadURL("/captcha",{iframe:true}).open();},executeCallbacks:function(){for(var i=0,callback;callback=SU.Captcha._callbacks[i];i++){callback();}}}};SU.addInit=Base.addInit;SU.initialize=Base.initialize;SU.log=function(msg){var text='SU:';if(typeof window.console==='undefined'){return;}
if(window!=window.top){text+='CF:';}
text+=msg;window.console.log(text);}
Base.Sync.prototype.emulateMethods("_method");Base.Sync.prototype.set({"_output":"Json"});Base.Sync.prototype.set("GET",{"_action":"get"});var _sync=new Base.Sync;window.Sync=Sync=function(url){_sync._settings.url=url;return _sync;};extend(Base.Controller.prototype,{fetchState:function(){var self=this;if(this.route.isNewURL()){if(self.__router__.get("__source__")=="direct"){$('html,body').animate({scrollTop:$("#content").offset().top},"fast");}
Sync(this.__router__.get("url")).read({"_nohead":true,"_output":"html"}).success(function(response){$("#content").html($(response).html());self.__router__.trigger("ready");}).error(function(jqXHR,textStatus,errorThrown){if(errorThrown){self.__router__.trigger("error");}});}},unauthorizedRequest:function(source){var url="/login",segments=[];if(source){url=url+"?";var i=0;for(var key in source){segments[i]=key+"="+ source[key];i++;}}
window.location=url+ segments.join("&");}});extend(Base.View.prototype,{_selectorCache:{},$sel:function(query){if(this._selectorCache[query]){return this._selectorCache[query];}else{this._selectorCache[query]=this.$el.find(query);return this._selectorCache[query];}},pageUpdateInProgress:function(route){this.$sel(".page-loading-overlay").height(this.$sel(".l-content-primary-wrap").height()+ 50);this.$sel(".page-loading-wrapper").css("height","auto");},pageUpdateCompleted:function(route){this.initialize();this._selectorCache={};var $h1=this.$el.find(".l-content-primary h1:first");if($h1){var dataTitle=$h1.data("title"),pageTitle=dataTitle?dataTitle:$h1.text();document.title=pageTitle+" | StumbleUpon.com";}},pageUpdateError:function(route){alert("Oops! Something went wrong while processing your request. Please try again");this.$sel(".page-loading-wrapper").hide();}});SU.addInit("mModal",function(config){SU.Modal=new Base.Modal(config);});}).call(this);(function(){SU.SER=function(previousHandler,app){this.previousHandler=previousHandler;this.app=app;this.language='javascript';this.limit=1;this.current=0;return true;};SU.SER.prototype={onError:function(errorMsg,url,lineNumber){if(this.current>=this.limit)return;this.current++;this.reportError(errorMsg,url,lineNumber);if(this.previousHandler){try{this.previousHandler(errorMsg,url,lineNumber);}catch(err){}}},reportError:function(errorMsg,url,lineNumber){this.reportMessage('error',errorMsg,url,lineNumber);},reportMessage:function(type,message,url,lineNumber){var referer='',location='';try{referer=document.referer;}catch(err){}
try{location=document.location.href;}catch(err){}
$.post("/report/message",{type:type,message:message,url:url,location:location,referer:referer,linenumber:lineNumber,app:this.app,language:this.language});}};var handler=new SU.SER(window.onerror,'web');window.onerror=function(errorMsg,url,lineNumber){try{handler.onError(errorMsg,url,lineNumber);}catch(err){}};}).call(this);$.fn.spin=function(opts){this.each(function(){var $this=$(this),data=$this.data();if(data.spinner){data.spinner.stop();delete data.spinner;}
if(opts!==false){data.spinner=new Spinner($.extend({color:$this.css('color')},opts)).spin(this);}});return this;};(function(window,document,undefined){(function(factory){"use strict";if(typeof define==='function'&&define.amd){define(['jquery'],factory);}
else if(jQuery&&!jQuery.fn.qtip){factory(jQuery);}}
(function($){var TRUE=true,FALSE=false,NULL=null,X='x',Y='y',WIDTH='width',HEIGHT='height',TOP='top',LEFT='left',BOTTOM='bottom',RIGHT='right',CENTER='center',FLIP='flip',FLIPINVERT='flipinvert',SHIFT='shift',QTIP,PLUGINS,MOUSE,usedIDs={},uitooltip='ui-tooltip',widget='ui-widget',disabled='ui-state-disabled',selector='div.qtip.'+uitooltip,defaultClass=uitooltip+'-default',focusClass=uitooltip+'-focus',hoverClass=uitooltip+'-hover',replaceSuffix='_replacedByqTip',oldtitle='oldtitle',trackingBound,redrawContainer;redrawContainer=$('<div/>',{id:'qtip-rcontainer'});$(function(){redrawContainer.appendTo(document.body);});function sanitizeOptions(opts)
{var invalid=function(a){return a===NULL||'object'!==typeof a;},invalidContent=function(c){return!$.isFunction(c)&&((!c&&!c.attr)||c.length<1||('object'===typeof c&&!c.jquery));};if(!opts||'object'!==typeof opts){return FALSE;}
if(invalid(opts.metadata)){opts.metadata={type:opts.metadata};}
if('content'in opts){if(invalid(opts.content)||opts.content.jquery){opts.content={text:opts.content};}
if(invalidContent(opts.content.text||FALSE)){opts.content.text=FALSE;}
if('title'in opts.content){if(invalid(opts.content.title)){opts.content.title={text:opts.content.title};}
if(invalidContent(opts.content.title.text||FALSE)){opts.content.title.text=FALSE;}}}
if('position'in opts&&invalid(opts.position)){opts.position={my:opts.position,at:opts.position};}
if('show'in opts&&invalid(opts.show)){opts.show=opts.show.jquery?{target:opts.show}:{event:opts.show};}
if('hide'in opts&&invalid(opts.hide)){opts.hide=opts.hide.jquery?{target:opts.hide}:{event:opts.hide};}
if('style'in opts&&invalid(opts.style)){opts.style={classes:opts.style};}
$.each(PLUGINS,function(){if(this.sanitize){this.sanitize(opts);}});return opts;}
function QTip(target,options,id,attr)
{var self=this,docBody=document.body,tooltipID=uitooltip+'-'+ id,isPositioning=0,isDrawing=0,tooltip=$(),namespace='.qtip-'+ id,elements,cache;self.id=id;self.rendered=FALSE;self.destroyed=FALSE;self.elements=elements={target:target};self.timers={img:{}};self.options=options;self.checks={};self.plugins={};self.cache=cache={event:{},target:$(),disabled:FALSE,attr:attr,onTarget:FALSE,lastClass:''};function convertNotation(notation)
{var i=0,obj,option=options,levels=notation.split('.');while(option=option[levels[i++]]){if(i<levels.length){obj=option;}}
return[obj||options,levels.pop()];}
function triggerEvent(type,args,event){var callback=$.Event('tooltip'+type);callback.originalEvent=(event?$.extend({},event):NULL)||cache.event||NULL;tooltip.trigger(callback,[self].concat(args||[]));return!callback.isDefaultPrevented();}
function setWidget()
{var on=options.style.widget;tooltip.toggleClass('ui-helper-reset '+widget,on).toggleClass(defaultClass,options.style.def&&!on);if(elements.content){elements.content.toggleClass(widget+'-content',on);}
if(elements.titlebar){elements.titlebar.toggleClass(widget+'-header',on);}
if(elements.button){elements.button.toggleClass(uitooltip+'-icon',!on);}}
function removeTitle(reposition)
{if(elements.title){elements.titlebar.remove();elements.titlebar=elements.title=elements.button=NULL;if(reposition!==FALSE){self.reposition();}}}
function createButton()
{var button=options.content.title.button,isString=typeof button==='string',close=isString?button:'Close tooltip';if(elements.button){elements.button.remove();}
if(button.jquery){elements.button=button;}
else{elements.button=$('<a />',{'class':'ui-state-default ui-tooltip-close '+(options.style.widget?'':uitooltip+'-icon'),'title':close,'aria-label':close}).prepend($('<span />',{'class':'ui-icon ui-icon-close','html':'&times;'}));}
elements.button.appendTo(elements.titlebar).attr('role','button').click(function(event){if(!tooltip.hasClass(disabled)){self.hide(event);}
return FALSE;});self.redraw();}
function createTitle()
{var id=tooltipID+'-title';if(elements.titlebar){removeTitle();}
elements.titlebar=$('<div />',{'class':uitooltip+'-titlebar '+(options.style.widget?'ui-widget-header':'')}).append(elements.title=$('<div />',{'id':id,'class':uitooltip+'-title','aria-atomic':TRUE})).insertBefore(elements.content).delegate('.ui-tooltip-close','mousedown keydown mouseup keyup mouseout',function(event){$(this).toggleClass('ui-state-active ui-state-focus',event.type.substr(-4)==='down');}).delegate('.ui-tooltip-close','mouseover mouseout',function(event){$(this).toggleClass('ui-state-hover',event.type==='mouseover');});if(options.content.title.button){createButton();}
else if(self.rendered){self.redraw();}}
function updateButton(button)
{var elem=elements.button,title=elements.title;if(!self.rendered){return FALSE;}
if(!button){elem.remove();}
else{if(!title){createTitle();}
createButton();}}
function updateTitle(content,reposition)
{var elem=elements.title;if(!self.rendered||!content){return FALSE;}
if($.isFunction(content)){content=content.call(target,cache.event,self);}
if(content===FALSE||(!content&&content!=='')){return removeTitle(FALSE);}
else if(content.jquery&&content.length>0){elem.empty().append(content.css({display:'block'}));}
else{elem.html(content);}
self.redraw();if(reposition!==FALSE&&self.rendered&&tooltip[0].offsetWidth>0){self.reposition(cache.event);}}
function updateContent(content,reposition)
{var elem=elements.content;if(!self.rendered||!content){return FALSE;}
if($.isFunction(content)){content=content.call(target,cache.event,self)||'';}
if(content.jquery&&content.length>0){elem.empty().append(content.css({display:'block'}));}
else{elem.html(content);}
function detectImages(next){var images,srcs={};function imageLoad(image){if(image){delete srcs[image.src];clearTimeout(self.timers.img[image.src]);$(image).unbind(namespace);}
if($.isEmptyObject(srcs)){self.redraw();if(reposition!==FALSE){self.reposition(cache.event);}
next();}}
if((images=elem.find('img[src]:not([height]):not([width])')).length===0){return imageLoad();}
images.each(function(i,elem){if(srcs[elem.src]!==undefined){return;}
var iterations=0,maxIterations=3;(function timer(){if(elem.height||elem.width||(iterations>maxIterations)){return imageLoad(elem);}
iterations+=1;self.timers.img[elem.src]=setTimeout(timer,700);}());$(elem).bind('error'+namespace+' load'+namespace,function(){imageLoad(this);});srcs[elem.src]=elem;});}
if(self.rendered<0){tooltip.queue('fx',detectImages);}
else{isDrawing=0;detectImages($.noop);}
return self;}
function assignEvents()
{var posOptions=options.position,targets={show:options.show.target,hide:options.hide.target,viewport:$(posOptions.viewport),document:$(document),body:$(document.body),window:$(window)},events={show:$.trim(''+ options.show.event).split(' '),hide:$.trim(''+ options.hide.event).split(' ')},IE6=$.browser.msie&&parseInt($.browser.version,10)===6;function showMethod(event)
{if(tooltip.hasClass(disabled)){return FALSE;}
clearTimeout(self.timers.show);clearTimeout(self.timers.hide);var callback=function(){self.toggle(TRUE,event);};if(options.show.delay>0){self.timers.show=setTimeout(callback,options.show.delay);}
else{callback();}}
function hideMethod(event)
{if(tooltip.hasClass(disabled)||isPositioning||isDrawing){return FALSE;}
var relatedTarget=$(event.relatedTarget||event.target),ontoTooltip=relatedTarget.closest(selector)[0]===tooltip[0],ontoTarget=relatedTarget[0]===targets.show[0];clearTimeout(self.timers.show);clearTimeout(self.timers.hide);if((posOptions.target==='mouse'&&ontoTooltip)||(options.hide.fixed&&((/mouse(out|leave|move)/).test(event.type)&&(ontoTooltip||ontoTarget)))){try{event.preventDefault();event.stopImmediatePropagation();}catch(e){}return;}
if(options.hide.delay>0){self.timers.hide=setTimeout(function(){self.hide(event);},options.hide.delay);}
else{self.hide(event);}}
function inactiveMethod(event)
{if(tooltip.hasClass(disabled)){return FALSE;}
clearTimeout(self.timers.inactive);self.timers.inactive=setTimeout(function(){self.hide(event);},options.hide.inactive);}
function repositionMethod(event){if(self.rendered&&tooltip[0].offsetWidth>0){self.reposition(event);}}
tooltip.bind('mouseenter'+namespace+' mouseleave'+namespace,function(event){var state=event.type==='mouseenter';if(state){self.focus(event);}
tooltip.toggleClass(hoverClass,state);});if(/mouse(out|leave)/i.test(options.hide.event)){if(options.hide.leave==='window'){targets.window.bind('mouseout'+namespace+' blur'+namespace,function(event){if(!/select|option/.test(event.target.nodeName)&&!event.relatedTarget){self.hide(event);}});}}
if(options.hide.fixed){targets.hide=targets.hide.add(tooltip);tooltip.bind('mouseover'+namespace,function(){if(!tooltip.hasClass(disabled)){clearTimeout(self.timers.hide);}});}
else if(/mouse(over|enter)/i.test(options.show.event)){targets.hide.bind('mouseleave'+namespace,function(event){clearTimeout(self.timers.show);});}
if((''+ options.hide.event).indexOf('unfocus')>-1){posOptions.container.closest('html').bind('mousedown'+namespace,function(event){var elem=$(event.target),enabled=self.rendered&&!tooltip.hasClass(disabled)&&tooltip[0].offsetWidth>0,isAncestor=elem.parents(selector).filter(tooltip[0]).length>0;if(elem[0]!==target[0]&&elem[0]!==tooltip[0]&&!isAncestor&&!target.has(elem[0]).length&&!elem.attr('disabled')){self.hide(event);}});}
if('number'===typeof options.hide.inactive){targets.show.bind('qtip-'+id+'-inactive',inactiveMethod);$.each(QTIP.inactiveEvents,function(index,type){targets.hide.add(elements.tooltip).bind(type+namespace+'-inactive',inactiveMethod);});}
$.each(events.hide,function(index,type){var showIndex=$.inArray(type,events.show),targetHide=$(targets.hide);if((showIndex>-1&&targetHide.add(targets.show).length===targetHide.length)||type==='unfocus')
{targets.show.bind(type+namespace,function(event){if(tooltip[0].offsetWidth>0){hideMethod(event);}
else{showMethod(event);}});delete events.show[showIndex];}
else{targets.hide.bind(type+namespace,hideMethod);}});$.each(events.show,function(index,type){targets.show.bind(type+namespace,showMethod);});if('number'===typeof options.hide.distance){targets.show.add(tooltip).bind('mousemove'+namespace,function(event){var origin=cache.origin||{},limit=options.hide.distance,abs=Math.abs;if(abs(event.pageX- origin.pageX)>=limit||abs(event.pageY- origin.pageY)>=limit){self.hide(event);}});}
if(posOptions.target==='mouse'){targets.show.bind('mousemove'+namespace,function(event){MOUSE={pageX:event.pageX,pageY:event.pageY,type:'mousemove'};});if(posOptions.adjust.mouse){if(options.hide.event){tooltip.bind('mouseleave'+namespace,function(event){if((event.relatedTarget||event.target)!==targets.show[0]){self.hide(event);}});elements.target.bind('mouseenter'+namespace+' mouseleave'+namespace,function(event){cache.onTarget=event.type==='mouseenter';});}
targets.document.bind('mousemove'+namespace,function(event){if(self.rendered&&cache.onTarget&&!tooltip.hasClass(disabled)&&tooltip[0].offsetWidth>0){self.reposition(event||MOUSE);}});}}
if(posOptions.adjust.resize||targets.viewport.length){($.event.special.resize?targets.viewport:targets.window).bind('resize'+namespace,repositionMethod);}
if(targets.viewport.length||(IE6&&tooltip.css('position')==='fixed')){targets.viewport.bind('scroll'+namespace,repositionMethod);}}
function unassignEvents()
{var targets=[options.show.target[0],options.hide.target[0],self.rendered&&elements.tooltip[0],options.position.container[0],options.position.viewport[0],options.position.container.closest('html')[0],window,document];if(self.rendered){$([]).pushStack($.grep(targets,function(i){return typeof i==='object';})).unbind(namespace);}
else{options.show.target.unbind(namespace+'-create');}}
self.checks.builtin={'^id$':function(obj,o,v){var id=v===TRUE?QTIP.nextid:v,tooltipID=uitooltip+'-'+ id;if(id!==FALSE&&id.length>0&&!$('#'+tooltipID).length){tooltip[0].id=tooltipID;elements.content[0].id=tooltipID+'-content';elements.title[0].id=tooltipID+'-title';}},'^content.text$':function(obj,o,v){updateContent(v);},'^content.title.text$':function(obj,o,v){if(!v){return removeTitle();}
if(!elements.title&&v){createTitle();}
updateTitle(v);},'^content.title.button$':function(obj,o,v){updateButton(v);},'^position.(my|at)$':function(obj,o,v){if('string'===typeof v){obj[o]=new PLUGINS.Corner(v);}},'^position.container$':function(obj,o,v){if(self.rendered){tooltip.appendTo(v);}},'^show.ready$':function(){if(!self.rendered){self.render(1);}
else{self.toggle(TRUE);}},'^style.classes$':function(obj,o,v){tooltip.attr('class',uitooltip+' qtip '+ v);},'^style.widget|content.title':setWidget,'^events.(render|show|move|hide|focus|blur)$':function(obj,o,v){tooltip[($.isFunction(v)?'':'un')+'bind']('tooltip'+o,v);},'^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)':function(){var posOptions=options.position;tooltip.attr('tracking',posOptions.target==='mouse'&&posOptions.adjust.mouse);unassignEvents();assignEvents();}};$.extend(self,{render:function(show)
{if(self.rendered){return self;}
var text=options.content.text,title=options.content.title.text,posOptions=options.position;$.attr(target[0],'aria-describedby',tooltipID);tooltip=elements.tooltip=$('<div/>',{'id':tooltipID,'class':uitooltip+' qtip '+ defaultClass+' '+ options.style.classes+' '+ uitooltip+'-pos-'+ options.position.my.abbrev(),'width':options.style.width||'','height':options.style.height||'','tracking':posOptions.target==='mouse'&&posOptions.adjust.mouse,'role':'alert','aria-live':'polite','aria-atomic':FALSE,'aria-describedby':tooltipID+'-content','aria-hidden':TRUE}).toggleClass(disabled,cache.disabled).data('qtip',self).appendTo(options.position.container).append(elements.content=$('<div />',{'class':uitooltip+'-content','id':tooltipID+'-content','aria-atomic':TRUE}));self.rendered=-1;isDrawing=1;isPositioning=1;if(title){createTitle();if(!$.isFunction(title)){updateTitle(title,FALSE);}}
if(!$.isFunction(text)){updateContent(text,FALSE);}
self.rendered=TRUE;setWidget();$.each(options.events,function(name,callback){if($.isFunction(callback)){tooltip.bind(name==='toggle'?'tooltipshow tooltiphide':'tooltip'+name,callback);}});$.each(PLUGINS,function(){if(this.initialize==='render'){this(self);}});assignEvents();tooltip.queue('fx',function(next){triggerEvent('render');isDrawing=0;isPositioning=0;self.redraw();if(options.show.ready||show){self.toggle(TRUE,cache.event,FALSE);}
next();});return self;},get:function(notation)
{var result,o;switch(notation.toLowerCase())
{case'dimensions':result={height:tooltip.outerHeight(),width:tooltip.outerWidth()};break;case'offset':result=PLUGINS.offset(tooltip,options.position.container);break;default:o=convertNotation(notation.toLowerCase());result=o[0][o[1]];result=result.precedance?result.string():result;break;}
return result;},set:function(option,value)
{var rmove=/^position\.(my|at|adjust|target|container)|style|content|show\.ready/i,rdraw=/^content\.(title|attr)|style/i,reposition=FALSE,redraw=FALSE,checks=self.checks,name;function callback(notation,args){var category,rule,match;for(category in checks){for(rule in checks[category]){if(match=(new RegExp(rule,'i')).exec(notation)){args.push(match);checks[category][rule].apply(self,args);}}}}
if('string'===typeof option){name=option;option={};option[name]=value;}
else{option=$.extend(TRUE,{},option);}
$.each(option,function(notation,value){var obj=convertNotation(notation.toLowerCase()),previous;previous=obj[0][obj[1]];obj[0][obj[1]]='object'===typeof value&&value.nodeType?$(value):value;option[notation]=[obj[0],obj[1],value,previous];reposition=rmove.test(notation)||reposition;redraw=rdraw.test(notation)||redraw;});sanitizeOptions(options);isPositioning=isDrawing=1;$.each(option,callback);isPositioning=isDrawing=0;if(self.rendered&&tooltip[0].offsetWidth>0){if(reposition){self.reposition(options.position.target==='mouse'?NULL:cache.event);}
if(redraw){self.redraw();}}
return self;},toggle:function(state,event)
{if(!self.rendered){return state?self.render(1):self;}
var type=state?'show':'hide',opts=options[type],otherOpts=options[!state?'show':'hide'],posOptions=options.position,contentOptions=options.content,visible=tooltip[0].offsetWidth>0,animate=state||opts.target.length===1,sameTarget=!event||opts.target.length<2||cache.target[0]===event.target,showEvent,delay;if((typeof state).search('boolean|number')){state=!visible;}
if(!tooltip.is(':animated')&&visible===state&&sameTarget){return self;}
if(event){if((/over|enter/).test(event.type)&&(/out|leave/).test(cache.event.type)&&options.show.target.add(event.target).length===options.show.target.length&&tooltip.has(event.relatedTarget).length){return self;}
cache.event=$.extend({},event);}
if(!triggerEvent(type,[90])){return self;}
$.attr(tooltip[0],'aria-hidden',!!!state);if(state){cache.origin=$.extend({},MOUSE);self.focus(event);if($.isFunction(contentOptions.text)){updateContent(contentOptions.text,FALSE);}
if($.isFunction(contentOptions.title.text)){updateTitle(contentOptions.title.text,FALSE);}
if(!trackingBound&&posOptions.target==='mouse'&&posOptions.adjust.mouse){$(document).bind('mousemove.qtip',function(event){MOUSE={pageX:event.pageX,pageY:event.pageY,type:'mousemove'};});trackingBound=TRUE;}
self.reposition(event,arguments[2]);if(!!opts.solo){$(selector,opts.solo).not(tooltip).qtip('hide',$.Event('tooltipsolo'));}}
else{clearTimeout(self.timers.show);delete cache.origin;if(trackingBound&&!$(selector+'[tracking="true"]:visible',opts.solo).not(tooltip).length){$(document).unbind('mousemove.qtip');trackingBound=FALSE;}
self.blur(event);}
function after(){if(state){if($.browser.msie){tooltip[0].style.removeAttribute('filter');}
tooltip.css('overflow','');if('string'===typeof opts.autofocus){$(opts.autofocus,tooltip).focus();}
opts.target.trigger('qtip-'+id+'-inactive');}
else{tooltip.css({display:'',visibility:'',opacity:'',left:'',top:''});}
triggerEvent(state?'visible':'hidden');}
if(opts.effect===FALSE||animate===FALSE){tooltip[type]();after.call(tooltip);}
else if($.isFunction(opts.effect)){tooltip.stop(1,1);opts.effect.call(tooltip,self);tooltip.queue('fx',function(n){after();n();});}
else{tooltip.fadeTo(90,state?1:0,after);}
if(state){opts.target.trigger('qtip-'+id+'-inactive');}
return self;},show:function(event){return self.toggle(TRUE,event);},hide:function(event){return self.toggle(FALSE,event);},focus:function(event)
{if(!self.rendered){return self;}
var qtips=$(selector),curIndex=parseInt(tooltip[0].style.zIndex,10),newIndex=QTIP.zindex+ qtips.length,cachedEvent=$.extend({},event),focusedElem;if(!tooltip.hasClass(focusClass))
{if(triggerEvent('focus',[newIndex],cachedEvent)){if(curIndex!==newIndex){qtips.each(function(){if(this.style.zIndex>curIndex){this.style.zIndex=this.style.zIndex- 1;}});qtips.filter('.'+ focusClass).qtip('blur',cachedEvent);}
tooltip.addClass(focusClass)[0].style.zIndex=newIndex;}}
return self;},blur:function(event){tooltip.removeClass(focusClass);triggerEvent('blur',[tooltip.css('zIndex')],event);return self;},reposition:function(event,effect)
{if(!self.rendered||isPositioning){return self;}
isPositioning=1;var target=options.position.target,posOptions=options.position,my=posOptions.my,at=posOptions.at,adjust=posOptions.adjust,method=adjust.method.split(' '),elemWidth=tooltip.outerWidth(),elemHeight=tooltip.outerHeight(),targetWidth=0,targetHeight=0,fixed=tooltip.css('position')==='fixed',viewport=posOptions.viewport,position={left:0,top:0},container=posOptions.container,visible=tooltip[0].offsetWidth>0,adjusted,offset,win;if($.isArray(target)&&target.length===2){at={x:LEFT,y:TOP};position={left:target[0],top:target[1]};}
else if(target==='mouse'&&((event&&event.pageX)||cache.event.pageX)){at={x:LEFT,y:TOP};event=(event&&(event.type==='resize'||event.type==='scroll')?cache.event:event&&event.pageX&&event.type==='mousemove'?event:MOUSE&&MOUSE.pageX&&(adjust.mouse||!event||!event.pageX)?{pageX:MOUSE.pageX,pageY:MOUSE.pageY}:!adjust.mouse&&cache.origin&&cache.origin.pageX&&options.show.distance?cache.origin:event)||event||cache.event||MOUSE||{};position={top:event.pageY,left:event.pageX};}
else{if(target==='event'&&event&&event.target&&event.type!=='scroll'&&event.type!=='resize'){cache.target=$(event.target);}
else if(target!=='event'){cache.target=$(target.jquery?target:elements.target);}
target=cache.target;target=$(target).eq(0);if(target.length===0){return self;}
else if(target[0]===document||target[0]===window){targetWidth=PLUGINS.iOS?window.innerWidth:target.width();targetHeight=PLUGINS.iOS?window.innerHeight:target.height();if(target[0]===window){position={top:(viewport||target).scrollTop(),left:(viewport||target).scrollLeft()};}}
else if(PLUGINS.imagemap&&target.is('area')){adjusted=PLUGINS.imagemap(self,target,at,PLUGINS.viewport?method:FALSE);}
else if(PLUGINS.svg&&typeof target[0].xmlbase==='string'){adjusted=PLUGINS.svg(self,target,at,PLUGINS.viewport?method:FALSE);}
else{targetWidth=target.outerWidth();targetHeight=target.outerHeight();position=PLUGINS.offset(target,container);}
if(adjusted){targetWidth=adjusted.width;targetHeight=adjusted.height;offset=adjusted.offset;position=adjusted.position;}
if((PLUGINS.iOS>3.1&&PLUGINS.iOS<4.1)||(PLUGINS.iOS>=4.3&&PLUGINS.iOS<4.33)||(!PLUGINS.iOS&&fixed)){win=$(window);position.left-=win.scrollLeft();position.top-=win.scrollTop();}
position.left+=at.x===RIGHT?targetWidth:at.x===CENTER?targetWidth/2:0;position.top+=at.y===BOTTOM?targetHeight:at.y===CENTER?targetHeight/2:0;}
position.left+=adjust.x+(my.x===RIGHT?-elemWidth:my.x===CENTER?-elemWidth/2:0);position.top+=adjust.y+(my.y===BOTTOM?-elemHeight:my.y===CENTER?-elemHeight/2:0);if(PLUGINS.viewport){position.adjusted=PLUGINS.viewport(self,position,posOptions,targetWidth,targetHeight,elemWidth,elemHeight);if(offset&&position.adjusted.left){position.left+=offset.left;}
if(offset&&position.adjusted.top){position.top+=offset.top;}}
else{position.adjusted={left:0,top:0};}
if(!triggerEvent('move',[position,viewport.elem||viewport],event)){return self;}
delete position.adjusted;if(effect===FALSE||!visible||isNaN(position.left)||isNaN(position.top)||target==='mouse'||!$.isFunction(posOptions.effect)){tooltip.css(position);}
else if($.isFunction(posOptions.effect)){posOptions.effect.call(tooltip,self,$.extend({},position));tooltip.queue(function(next){$(this).css({opacity:'',height:''});if($.browser.msie){this.style.removeAttribute('filter');}
next();});}
isPositioning=0;return self;},redraw:function()
{if(self.rendered<1||isDrawing){return self;}
var style=options.style,container=options.position.container,perc,width,max,min;isDrawing=1;triggerEvent('redraw');if(style.height){tooltip.css(HEIGHT,style.height);}
if(style.width){tooltip.css(WIDTH,style.width);}
else{tooltip.css(WIDTH,'').appendTo(redrawContainer);width=tooltip.width();if(width%2<1){width+=1;}
max=tooltip.css('max-width')||'';min=tooltip.css('min-width')||'';perc=(max+ min).indexOf('%')>-1?container.width()/100:0;max=((max.indexOf('%')>-1?perc:1)*parseInt(max,10))||width;min=((min.indexOf('%')>-1?perc:1)*parseInt(min,10))||0;width=max+ min?Math.min(Math.max(width,min),max):width;tooltip.css(WIDTH,Math.round(width)).appendTo(container);}
triggerEvent('redrawn');isDrawing=0;return self;},disable:function(state)
{if('boolean'!==typeof state){state=!(tooltip.hasClass(disabled)||cache.disabled);}
if(self.rendered){tooltip.toggleClass(disabled,state);$.attr(tooltip[0],'aria-disabled',state);}
else{cache.disabled=!!state;}
return self;},enable:function(){return self.disable(FALSE);},destroy:function()
{var t=target[0],title=$.attr(t,oldtitle),elemAPI=target.data('qtip');self.destroyed=TRUE;if(self.rendered){tooltip.stop(1,0).remove();$.each(self.plugins,function(){if(this.destroy){this.destroy();}});}
clearTimeout(self.timers.show);clearTimeout(self.timers.hide);unassignEvents();if(!elemAPI||self===elemAPI){$.removeData(t,'qtip');if(options.suppress&&title){$.attr(t,'title',title);target.removeAttr(oldtitle);}
target.removeAttr('aria-describedby');}
target.unbind('.qtip-'+id);delete usedIDs[self.id];return target;}});}
function init(id,opts)
{var obj,posOptions,attr,config,title,elem=$(this),docBody=$(document.body),newTarget=this===document?docBody:elem,metadata=(elem.metadata)?elem.metadata(opts.metadata):NULL,metadata5=opts.metadata.type==='html5'&&metadata?metadata[opts.metadata.name]:NULL,html5=elem.data(opts.metadata.name||'qtipopts');try{html5=typeof html5==='string'?$.parseJSON(html5):html5;}catch(e){}
config=$.extend(TRUE,{},QTIP.defaults,opts,typeof html5==='object'?sanitizeOptions(html5):NULL,sanitizeOptions(metadata5||metadata));posOptions=config.position;config.id=id;if('boolean'===typeof config.content.text){attr=elem.attr(config.content.attr);if(config.content.attr!==FALSE&&attr){config.content.text=attr;}
else{return FALSE;}}
if(!posOptions.container.length){posOptions.container=docBody;}
if(posOptions.target===FALSE){posOptions.target=newTarget;}
if(config.show.target===FALSE){config.show.target=newTarget;}
if(config.show.solo===TRUE){config.show.solo=posOptions.container.closest('body');}
if(config.hide.target===FALSE){config.hide.target=newTarget;}
if(config.position.viewport===TRUE){config.position.viewport=posOptions.container;}
posOptions.container=posOptions.container.eq(0);posOptions.at=new PLUGINS.Corner(posOptions.at);posOptions.my=new PLUGINS.Corner(posOptions.my);if($.data(this,'qtip')){if(config.overwrite){elem.qtip('destroy');}
else if(config.overwrite===FALSE){return FALSE;}}
if(config.suppress&&(title=$.attr(this,'title'))){$(this).removeAttr('title').attr(oldtitle,title).attr('title','');}
obj=new QTip(elem,config,id,!!attr);$.data(this,'qtip',obj);elem.bind('remove.qtip-'+id+' removeqtip.qtip-'+id,function(){obj.destroy();});return obj;}
QTIP=$.fn.qtip=function(options,notation,newValue)
{var command=(''+ options).toLowerCase(),returned=NULL,args=$.makeArray(arguments).slice(1),event=args[args.length- 1],opts=this[0]?$.data(this[0],'qtip'):NULL;if((!arguments.length&&opts)||command==='api'){return opts;}
else if('string'===typeof options)
{this.each(function()
{var api=$.data(this,'qtip');if(!api){return TRUE;}
if(event&&event.timeStamp){api.cache.event=event;}
if((command==='option'||command==='options')&&notation){if($.isPlainObject(notation)||newValue!==undefined){api.set(notation,newValue);}
else{returned=api.get(notation);return FALSE;}}
else if(api[command]){api[command].apply(api[command],args);}});return returned!==NULL?returned:this;}
else if('object'===typeof options||!arguments.length)
{opts=sanitizeOptions($.extend(TRUE,{},options));return QTIP.bind.call(this,opts,event);}};QTIP.bind=function(opts,event)
{return this.each(function(i){var options,targets,events,namespace,api,id;id=$.isArray(opts.id)?opts.id[i]:opts.id;id=!id||id===FALSE||id.length<1||usedIDs[id]?QTIP.nextid++:(usedIDs[id]=id);namespace='.qtip-'+id+'-create';api=init.call(this,id,opts);if(api===FALSE){return TRUE;}
options=api.options;$.each(PLUGINS,function(){if(this.initialize==='initialize'){this(api);}});targets={show:options.show.target,hide:options.hide.target};events={show: $.trim('' + options.show.event).replace(/ /g, namespace+' ') + namespace,
            hide: $.trim('' + options.hide.event).replace(/ /g, namespace+' ') + namespace
        };

        /*
        * Make sure hoverIntent functions properly by using mouseleave as a hide event if
        * mouseenter/mouseout is used for show.event, even if it isn't in the users options.
        */
        if(/mouse(over|enter)/i.test(events.show) && !/mouse(out|leave)/i.test(events.hide)) {
            events.hide += ' mouseleave' + namespace;
        }

        /*
        * Also make sure initial mouse targetting works correctly by caching mousemove coords
        * on show targets before the tooltip has rendered.
        *
        * Also set onTarget when triggered to keep mouse tracking working
        */
        targets.show.bind('mousemove'+namespace, function(event) {
            MOUSE = { pageX: event.pageX, pageY: event.pageY, type: 'mousemove' };
            api.cache.onTarget = TRUE;
        });

        // Define hoverIntent function
        function hoverIntent(event) {
            function render() {
                // Cache mouse coords,render and render the tooltip
                api.render(typeof event === 'object' || options.show.ready);

                // Unbind show and hide events
                targets.show.add(targets.hide).unbind(namespace);
            }

            // Only continue if tooltip isn't disabled
            if(api.cache.disabled) { return FALSE; }

            // Cache the event data
            api.cache.event = $.extend({}, event);
            api.cache.target = event ? $(event.target) : [undefined];

            // Start the event sequence
            if(options.show.delay > 0) {
                clearTimeout(api.timers.show);
                api.timers.show = setTimeout(render, options.show.delay);
                if(events.show !== events.hide) {
                    targets.hide.bind(events.hide, function() { clearTimeout(api.timers.show); });
                }
            }
            else { render(); }
        }

        // Bind show events to target
        targets.show.bind(events.show, hoverIntent);

        // Prerendering is enabled, create tooltip now
        if(options.show.ready || options.prerender) { hoverIntent(event); }
    });
};

// Setup base plugins
PLUGINS = QTIP.plugins = {
    // Corner object parser
    Corner: function(corner) {
        corner = ('' + corner).replace(/([A-Z])/, ' $1').replace(/middle/gi, CENTER).toLowerCase();
        this.x = (corner.match(/left|right/i) || corner.match(/center/) || ['inherit'])[0].toLowerCase();
        this.y = (corner.match(/top|bottom|center/i) || ['inherit'])[0].toLowerCase();

        var f = corner.charAt(0); this.precedance = (f === 't' || f === 'b' ? Y : X);

        this.string = function() { return this.precedance === Y ? this.y+this.x : this.x+this.y; };
        this.abbrev = function() {
            var x = this.x.substr(0,1), y = this.y.substr(0,1);
            return x === y ? x : this.precedance === Y ? y + x : x + y;
        };

        this.invertx = function(center) { this.x = this.x === LEFT ? RIGHT : this.x === RIGHT ? LEFT : center || this.x; };
        this.inverty = function(center) { this.y = this.y === TOP ? BOTTOM : this.y === BOTTOM ? TOP : center || this.y; };

        this.clone = function() {
            return {
                x: this.x, y: this.y, precedance: this.precedance,
                string: this.string, abbrev: this.abbrev, clone: this.clone,
                invertx: this.invertx, inverty: this.inverty
            };
        };
    },

    // Custom (more correct for qTip!) offset calculator
    offset: function(elem, container) {
        var pos = elem.offset(),
            docBody = elem.closest('body')[0],
            parent = container, scrolled,
            coffset, overflow;

        function scroll(e, i) {
            pos.left += i * e.scrollLeft();
            pos.top += i * e.scrollTop();
        }

        if(parent) {
            // Compensate for non-static containers offset
            do {
                if(parent.css('position') !== 'static') {
                    coffset = parent.position();

                    // Account for element positioning, borders and margins
                    pos.left -= coffset.left + (parseInt(parent.css('borderLeftWidth'), 10) || 0) + (parseInt(parent.css('marginLeft'), 10) || 0);
                    pos.top -= coffset.top + (parseInt(parent.css('borderTopWidth'), 10) || 0) + (parseInt(parent.css('marginTop'), 10) || 0);

                    // If this is the first parent element with an overflow of "scroll" or "auto", store it
                    if(!scrolled && (overflow = parent.css('overflow')) !== 'hidden' && overflow !== 'visible') { scrolled = parent; }
                }
            }
            while((parent = $(parent[0].offsetParent)).length);

            // Compensate for containers scroll if it also has an offsetParent
            if(scrolled && scrolled[0] !== docBody) { scroll( scrolled, 1 ); }
        }

        return pos;
    },

    /*
    * iOS version detection
    */
    iOS: parseFloat(
        ('' + (/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0,''])[1])
        .replace('undefined', '3_2').replace('_', '.').replace('_', '')
    ) || FALSE,

    /*
    * jQuery-specific $.fn overrides
    */
    fn: {
        /* Allow other plugins to successfully retrieve the title of an element with a qTip applied */
        attr: function(attr, val) {
            if(this.length) {
                var self = this[0],
                    title = 'title',
                    api = $.data(self, 'qtip');

                if(attr === title && api && 'object' === typeof api && api.options.suppress) {
                    if(arguments.length < 2) {
                        return $.attr(self, oldtitle);
                    }

                    // If qTip is rendered and title was originally used as content, update it
                    if(api && api.options.content.attr === title && api.cache.attr) {
                        api.set('content.text', val);
                    }

                    // Use the regular attr method to set, then cache the result
                    return this.attr(oldtitle, val);
                }
            }

            return $.fn['attr'+replaceSuffix].apply(this, arguments);
        },

        /* Allow clone to correctly retrieve cached title attributes */
        clone: function(keepData) {
            var titles = $([]), title = 'title',

            // Clone our element using the real clone method
            elems = $.fn['clone'+replaceSuffix].apply(this, arguments);

            // Grab all elements with an oldtitle set, and change it to regular title attribute, if keepData is false
            if(!keepData) {
                elems.filter('['+oldtitle+']').attr('title', function() {
                    return $.attr(this, oldtitle);
                })
                .removeAttr(oldtitle);
            }

            return elems;
        }
    }
};

// Apply the fn overrides above
$.each(PLUGINS.fn, function(name, func) {
    if(!func || $.fn[name+replaceSuffix]) { return TRUE; }

    var old = $.fn[name+replaceSuffix] = $.fn[name];
    $.fn[name] = function() {
        return func.apply(this, arguments) || old.apply(this, arguments);
    };
});

/* Fire off 'removeqtip' handler in $.cleanData if jQuery UI not present (it already does similar).
 * This snippet is taken directly from jQuery UI source code found here:
 *     http://code.jquery.com/ui/jquery-ui-git.js
 */
if(!$.ui) {
    $['cleanData'+replaceSuffix] = $.cleanData;
    $.cleanData = function( elems ) {
        for(var i = 0, elem; (elem = elems[i]) !== undefined; i++) {
            try { $( elem ).triggerHandler('removeqtip'); }
            catch( e ) {}
        }
        $['cleanData'+replaceSuffix]( elems );
    };
}

// Set global qTip properties
QTIP.version = '@VERSION';
QTIP.nextid = 0;
QTIP.inactiveEvents = 'click dblclick mousedown mouseup mousemove mouseleave mouseenter'.split(' ');
QTIP.zindex = 15000;

// Define configuration defaults
QTIP.defaults = {
    prerender: FALSE,
    id: FALSE,
    overwrite: TRUE,
    suppress: TRUE,
    content: {
        text: TRUE,
        attr: 'title',
        title: {
            text: FALSE,
            button: FALSE
        }
    },
    position: {
        my: 'top left',
        at: 'bottom right',
        target: FALSE,
        container: FALSE,
        viewport: FALSE,
        adjust: {
            x: 0, y: 0,
            mouse: TRUE,
            resize: TRUE,
            method: 'flip flip'
        },
        effect: function(api, pos, viewport) {
            $(this).animate(pos, {
                duration: 200,
                queue: FALSE
            });
        }
    },
    show: {
        target: FALSE,
        event: 'mouseenter',
        effect: TRUE,
        delay: 90,
        solo: FALSE,
        ready: FALSE,
        autofocus: FALSE
    },
    hide: {
        target: FALSE,
        event: 'mouseleave',
        effect: TRUE,
        delay: 0,
        fixed: FALSE,
        inactive: FALSE,
        leave: 'window',
        distance: FALSE
    },
    style: {
        classes: '',
        widget: FALSE,
        width: FALSE,
        height: FALSE,
        def: TRUE
    },
    events: {
        render: NULL,
        move: NULL,
        show: NULL,
        hide: NULL,
        toggle: NULL,
        visible: NULL,
        hidden: NULL,
        focus: NULL,
        blur: NULL
    }
};


PLUGINS.svg = function(api, svg, corner, adjustMethod)
{
    var doc = $(document),
        elem = svg[0],
        result = {
            width: 0, height: 0,
            position: { top: 1e10, left: 1e10 }
        },
        box, mtx, root, point, tPoint;

    // Ascend the parentNode chain until we find an element with getBBox()
    while(!elem.getBBox) { elem = elem.parentNode; }

    // Check for a valid bounding box method
    if (elem.getBBox && elem.parentNode) {
        box = elem.getBBox();
        mtx = elem.getScreenCTM();
        root = elem.farthestViewportElement || elem;

        // Return if no method is found
        if(!root.createSVGPoint) { return result; }

        // Create our point var
        point = root.createSVGPoint();

        // Adjust top and left
        point.x = box.x;
        point.y = box.y;
        tPoint = point.matrixTransform(mtx);
        result.position.left = tPoint.x;
        result.position.top = tPoint.y;

        // Adjust width and height
        point.x += box.width;
        point.y += box.height;
        tPoint = point.matrixTransform(mtx);
        result.width = tPoint.x - result.position.left;
        result.height = tPoint.y - result.position.top;

        // Adjust by scroll offset
        result.position.left += doc.scrollLeft();
        result.position.top += doc.scrollTop();
    }

    return result;
};


function Ajax(api)
{
    var self = this,
        tooltip = api.elements.tooltip,
        opts = api.options.content.ajax,
        defaults = QTIP.defaults.content.ajax,
        namespace = '.qtip-ajax',
        rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        first = TRUE,
        stop = FALSE,
        xhr;

    api.checks.ajax = {
        '^content.ajax': function(obj, name, v) {
            // If content.ajax object was reset, set our local var
            if(name === 'ajax') { opts = v; }

            if(name === 'once') {
                self.init();
            }
            else if(opts && opts.url) {
                self.load();
            }
            else {
                tooltip.unbind(namespace);
            }
        }
    };

    $.extend(self, {
        init: function() {
            // Make sure ajax options are enabled and bind event
            if(opts && opts.url) {
                tooltip.unbind(namespace)[ opts.once ? 'one' : 'bind' ]('tooltipshow'+namespace, self.load);
            }

            return self;
        },

        load: function(event) {
            if(stop) {stop = FALSE; return; }

            var hasSelector = opts.url.lastIndexOf(' '),
                url = opts.url,
                selector,
                hideFirst = !opts.loading && first;

            // If loading option is disabled, prevent the tooltip showing until we've completed the request
            if(hideFirst) { try{ event.preventDefault(); } catch(e) {} }

            // Make sure default event hasn't been prevented
            else if(event && event.isDefaultPrevented()) { return self; }

            // Cancel old request
            if(xhr && xhr.abort) { xhr.abort(); }

            // Check if user delcared a content selector like in .load()
            if(hasSelector > -1) {
                selector = url.substr(hasSelector);
                url = url.substr(0, hasSelector);
            }

            // Define common after callback for both success/error handlers
            function after() {
                var complete;

                // Don't proceed if tooltip is destroyed
                if(api.destroyed) { return; }

                // Set first flag to false
                first = FALSE;

                // Re-display tip if loading and first time, and reset first flag
                if(hideFirst) { stop = TRUE; api.show(event.originalEvent); }

                // Call users complete method if it was defined
                if((complete = defaults.complete || opts.complete) && $.isFunction(complete)) {
                    complete.apply(opts.context || api, arguments);
                }
            }

            // Define success handler
            function successHandler(content, status, jqXHR) {
                var success;

                // Don't proceed if tooltip is destroyed
                if(api.destroyed) { return; }

                // If URL contains a selector
                if(selector && 'string' === typeof content) {
                    // Create a dummy div to hold the results and grab the selector element
                    content = $('<div/>')
                        // inject the contents of the document in, removing the scripts
                        // to avoid any 'Permission Denied' errors in IE
                        .append(content.replace(rscript, ""))

                        // Locate the specified elements
                        .find(selector);
                }

                // Call the success function if one is defined
                if((success = defaults.success || opts.success) && $.isFunction(success)) {
                    success.call(opts.context || api, content, status, jqXHR);
                }

                // Otherwise set the content
                else { api.set('content.text', content); }
            }

            // Error handler
            function errorHandler(xhr, status, error) {
                if(api.destroyed || xhr.status === 0) { return; }
                api.set('content.text', status + ': ' + error);
            }

            // Setup $.ajax option object and process the request
            xhr = $.ajax(
                $.extend({
                    error: defaults.error || errorHandler,
                    context: api
                },
                opts, { url: url, success: successHandler, complete: after })
            );
        },

        destroy: function() {
            // Cancel ajax request if possible
            if(xhr && xhr.abort) { xhr.abort(); }

            // Set api.destroyed flag
            api.destroyed = TRUE;
        }
    });

    self.init();
}


PLUGINS.ajax = function(api)
{
    var self = api.plugins.ajax;

    return 'object' === typeof self ? self : (api.plugins.ajax = new Ajax(api));
};

PLUGINS.ajax.initialize = 'render';

// Setup plugin sanitization
PLUGINS.ajax.sanitize = function(options)
{
    var content = options.content, opts;
    if(content && 'ajax' in content) {
        opts = content.ajax;
        if(typeof opts !== 'object') { opts = options.content.ajax = { url: opts }; }
        if('boolean' !== typeof opts.once && opts.once) { opts.once = !!opts.once; }
    }
};

// Extend original api defaults
$.extend(TRUE, QTIP.defaults, {
    content: {
        ajax: {
            loading: TRUE,
            once: TRUE
        }
    }
});


// Tip coordinates calculator
function calculateTip(corner, width, height)
{
    var width2 = Math.ceil(width / 2), height2 = Math.ceil(height / 2),

    // Define tip coordinates in terms of height and width values
    tips = {
        bottomright:    [[0,0],             [width,height],     [width,0]],
        bottomleft:     [[0,0],             [width,0],              [0,height]],
        topright:       [[0,height],        [width,0],              [width,height]],
        topleft:            [[0,0],             [0,height],             [width,height]],
        topcenter:      [[0,height],        [width2,0],             [width,height]],
        bottomcenter:   [[0,0],             [width,0],              [width2,height]],
        rightcenter:    [[0,0],             [width,height2],        [0,height]],
        leftcenter:     [[width,0],         [width,height],     [0,height2]]
    };

    // Set common side shapes
    tips.lefttop = tips.bottomright; tips.righttop = tips.bottomleft;
    tips.leftbottom = tips.topright; tips.rightbottom = tips.topleft;

    return tips[ corner.string() ];
}


function Tip(qTip, command)
{
    var self = this,
        opts = qTip.options.style.tip,
        elems = qTip.elements,
        tooltip = elems.tooltip,
        cache = { top: 0, left: 0 },
        size = {
            width: opts.width,
            height: opts.height
        },
        color = { },
        border = opts.border || 0,
        namespace = '.qtip-tip',
        hasCanvas = !!($('<canvas />')[0] || {}).getContext,
        tiphtml;

    self.corner = NULL;
    self.mimic = NULL;
    self.border = border;
    self.offset = opts.offset;
    self.size = size;

    // Add new option checks for the plugin
    qTip.checks.tip = {
        '^position.my|style.tip.(corner|mimic|border)$': function() {
            // Make sure a tip can be drawn
            if(!self.init()) {
                self.destroy();
            }

            // Reposition the tooltip
            qTip.reposition();
        },
        '^style.tip.(height|width)$': function() {
            // Re-set dimensions and redraw the tip
            size = {
                width: opts.width,
                height: opts.height
            };
            self.create();
            self.update();

            // Reposition the tooltip
            qTip.reposition();
        },
        '^content.title.text|style.(classes|widget)$': function() {
            if(elems.tip && elems.tip.length) {
                self.update();
            }
        }
    };

    function whileVisible(callback) {
        var visible = tooltip.is(':visible');
        tooltip.show(); callback(); tooltip.toggle(visible);
    }

    function swapDimensions() {
        size.width = opts.height;
        size.height = opts.width;
    }

    function resetDimensions() {
        size.width = opts.width;
        size.height = opts.height;
    }

    function reposition(event, api, pos, viewport) {
        if(!elems.tip) { return; }

        var newCorner = self.corner.clone(),
            adjust = pos.adjusted,
            method = qTip.options.position.adjust.method.split(' '),
            horizontal = method[0],
            vertical = method[1] || method[0],
            shift = { left: FALSE, top: FALSE, x: 0, y: 0 },
            offset, css = {}, props;

        // If our tip position isn't fixed e.g. doesn't adjust with viewport...
        if(self.corner.fixed !== TRUE) {
            // Horizontal - Shift or flip method
            if(horizontal === SHIFT && newCorner.precedance === X && adjust.left && newCorner.y !== CENTER) {
                newCorner.precedance = newCorner.precedance === X ? Y : X;
            }
            else if(horizontal !== SHIFT && adjust.left){
                newCorner.x = newCorner.x === CENTER ? (adjust.left > 0 ? LEFT : RIGHT) : (newCorner.x === LEFT ? RIGHT : LEFT);
            }

            // Vertical - Shift or flip method
            if(vertical === SHIFT && newCorner.precedance === Y && adjust.top && newCorner.x !== CENTER) {
                newCorner.precedance = newCorner.precedance === Y ? X : Y;
            }
            else if(vertical !== SHIFT && adjust.top) {
                newCorner.y = newCorner.y === CENTER ? (adjust.top > 0 ? TOP : BOTTOM) : (newCorner.y === TOP ? BOTTOM : TOP);
            }

            // Update and redraw the tip if needed (check cached details of last drawn tip)
            if(newCorner.string() !== cache.corner.string() && (cache.top !== adjust.top || cache.left !== adjust.left)) {
                self.update(newCorner, FALSE);
            }
        }

        // Setup tip offset properties
        offset = self.position(newCorner, adjust);
        offset[ newCorner.x ] += parseWidth(newCorner, newCorner.x);
        offset[ newCorner.y ] += parseWidth(newCorner, newCorner.y);

        // Readjust offset object to make it left/top
        if(offset.right !== undefined) { offset.left = -offset.right; }
        if(offset.bottom !== undefined) { offset.top = -offset.bottom; }
        offset.user = Math.max(0, opts.offset);

        // Viewport "shift" specific adjustments
        if(shift.left = (horizontal === SHIFT && !!adjust.left)) {
            if(newCorner.x === CENTER) {
                css['margin-left'] = shift.x = offset['margin-left'] - adjust.left;
            }
            else {
                props = offset.right !== undefined ?
                    [ adjust.left, -offset.left ] : [ -adjust.left, offset.left ];

                if( (shift.x = Math.max(props[0], props[1])) > props[0] ) {
                    pos.left -= adjust.left;
                    shift.left = FALSE;
                }

                css[ offset.right !== undefined ? RIGHT : LEFT ] = shift.x;
            }
        }
        if(shift.top = (vertical === SHIFT && !!adjust.top)) {
            if(newCorner.y === CENTER) {
                css['margin-top'] = shift.y = offset['margin-top'] - adjust.top;
            }
            else {
                props = offset.bottom !== undefined ?
                    [ adjust.top, -offset.top ] : [ -adjust.top, offset.top ];

                if( (shift.y = Math.max(props[0], props[1])) > props[0] ) {
                    pos.top -= adjust.top;
                    shift.top = FALSE;
                }

                css[ offset.bottom !== undefined ? BOTTOM : TOP ] = shift.y;
            }
        }

        /*
        * If the tip is adjusted in both dimensions, or in a
        * direction that would cause it to be anywhere but the
        * outer border, hide it!
        */
        elems.tip.css(css).toggle(
            !((shift.x && shift.y) || (newCorner.x === CENTER && shift.y) || (newCorner.y === CENTER && shift.x))
        );

        // Adjust position to accomodate tip dimensions
        pos.left -= offset.left.charAt ? offset.user : horizontal !== SHIFT || shift.top || !shift.left && !shift.top ? offset.left : 0;
        pos.top -= offset.top.charAt ? offset.user : vertical !== SHIFT || shift.left || !shift.left && !shift.top ? offset.top : 0;

        // Cache details
        cache.left = adjust.left; cache.top = adjust.top;
        cache.corner = newCorner.clone();
    }

    function parseCorner() {
        var corner = opts.corner,
            posOptions = qTip.options.position,
            at = posOptions.at,
            my = posOptions.my.string ? posOptions.my.string() : posOptions.my;

        // Detect corner and mimic properties
        if(corner === FALSE || (my === FALSE && at === FALSE)) {
            return FALSE;
        }
        else {
            if(corner === TRUE) {
                self.corner = new PLUGINS.Corner(my);
            }
            else if(!corner.string) {
                self.corner = new PLUGINS.Corner(corner);
                self.corner.fixed = TRUE;
            }
        }

        // Cache it
        cache.corner = new PLUGINS.Corner( self.corner.string() );

        return self.corner.string() !== 'centercenter';
    }

    /* border width calculator */
    function parseWidth(corner, side, use) {
        side = !side ? corner[corner.precedance] : side;

        var isTitleTop = elems.titlebar && corner.y === TOP,
            elem = isTitleTop ? elems.titlebar : tooltip,
            borderSide = 'border-' + side + '-width',
            css = function(elem) { return parseInt(elem.css(borderSide), 10); },
            val;

        // Grab the border-width value (make tooltip visible first)
        whileVisible(function() {
            val = (use ? css(use) : (css(elems.content) || css(elem) || css(tooltip))) || 0;
        });
        return val;
    }

    function parseRadius(corner) {
        var isTitleTop = elems.titlebar && corner.y === TOP,
            elem = isTitleTop ? elems.titlebar : elems.content,
            moz = $.browser.mozilla,
            prefix = moz ? '-moz-' : $.browser.webkit ? '-webkit-' : '',
            nonStandard = 'border-radius-' + corner.y + corner.x,
            standard = 'border-' + corner.y + '-' + corner.x + '-radius',
            css = function(c) { return parseInt(elem.css(c), 10) || parseInt(tooltip.css(c), 10); },
            val;

        whileVisible(function() {
            val = css(standard) || css(prefix + standard) || css(prefix + nonStandard) || css(nonStandard) || 0;
        });
        return val;
    }

    function parseColours(actual) {
        var i, fill, border,
            tip = elems.tip.css('cssText', ''),
            corner = actual || self.corner,
            invalid = /rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i,
            borderSide = 'border-' + corner[ corner.precedance ] + '-color',
            bgColor = 'background-color',
            transparent = 'transparent',
            important = ' !important',

            titlebar = elems.titlebar,
            useTitle = titlebar && (corner.y === TOP || (corner.y === CENTER && tip.position().top + (size.height / 2) + opts.offset < titlebar.outerHeight(TRUE))),
            colorElem = useTitle ? titlebar : elems.content;

        function css(elem, prop, compare) {
            var val = elem.css(prop) || transparent;
            if(compare && val === elem.css(compare)) { return FALSE; }
            else { return invalid.test(val) ? FALSE : val; }
        }

        // Ensure tooltip is visible then...
        whileVisible(function() {
            // Attempt to detect the background colour from various elements, left-to-right precedance
            color.fill = css(tip, bgColor) || css(colorElem, bgColor) || css(elems.content, bgColor) ||
                css(tooltip, bgColor) || tip.css(bgColor);

            // Attempt to detect the correct border side colour from various elements, left-to-right precedance
            color.border = css(tip, borderSide, 'color') || css(colorElem, borderSide, 'color') ||
                css(elems.content, borderSide, 'color') || css(tooltip, borderSide, 'color') || tooltip.css(borderSide);

            // Reset background and border colours
            $('*', tip).add(tip).css('cssText', bgColor+':'+transparent+important+';border:0'+important+';');
        });
    }

    function calculateSize(corner) {
        var y = corner.precedance === Y,
            width = size [ y ? WIDTH : HEIGHT ],
            height = size [ y ? HEIGHT : WIDTH ],
            isCenter = corner.string().indexOf(CENTER) > -1,
            base = width * (isCenter ? 0.5 : 1),
            pow = Math.pow,
            round = Math.round,
            bigHyp, ratio, result,

        smallHyp = Math.sqrt( pow(base, 2) + pow(height, 2) ),

        hyp = [
            (border / base) * smallHyp, (border / height) * smallHyp
        ];
        hyp[2] = Math.sqrt( pow(hyp[0], 2) - pow(border, 2) );
        hyp[3] = Math.sqrt( pow(hyp[1], 2) - pow(border, 2) );

        bigHyp = smallHyp + hyp[2] + hyp[3] + (isCenter ? 0 : hyp[0]);
        ratio = bigHyp / smallHyp;

        result = [ round(ratio * height), round(ratio * width) ];
        return { height: result[ y ? 0 : 1 ], width: result[ y ? 1 : 0 ] };
    }

    function createVML(tag, props, style) {
        return '<qvml:'+tag+' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" '+(props||'')+
            ' style="behavior: url(#default#VML); '+(style||'')+ '" />';
    }

    $.extend(self, {
        init: function()
        {
            var enabled = parseCorner() && (hasCanvas || $.browser.msie);

            // Determine tip corner and type
            if(enabled) {
                // Create a new tip and draw it
                self.create();
                self.update();

                // Bind update events
                tooltip.unbind(namespace).bind('tooltipmove'+namespace, reposition);

                // Fix for issue of tips not showing after redraw in IE (VML...)
                if(!hasCanvas) {
                    tooltip.bind('tooltipredraw tooltipredrawn', function(event) {
                        if(event.type === 'tooltipredraw') {
                            tiphtml = elems.tip.html();
                            elems.tip.html('');
                        }
                        else { elems.tip.html(tiphtml); }
                    });
                }
            }

            return enabled;
        },

        create: function()
        {
            var width = size.width,
                height = size.height,
                vml;

            // Remove previous tip element if present
            if(elems.tip) { elems.tip.remove(); }

            // Create tip element and prepend to the tooltip
            elems.tip = $('<div />', { 'class': 'ui-tooltip-tip' }).css({ width: width, height: height }).prependTo(tooltip);

            // Create tip drawing element(s)
            if(hasCanvas) {
                // save() as soon as we create the canvas element so FF2 doesn't bork on our first restore()!
                $('<canvas />').appendTo(elems.tip)[0].getContext('2d').save();
            }
            else {
                vml = createVML('shape', 'coordorigin="0,0"', 'position:absolute;');
                elems.tip.html(vml + vml);

                // Prevent mousing down on the tip since it causes problems with .live() handling in IE due to VML
                $('*', elems.tip).bind('click mousedown', function(event) { event.stopPropagation(); });
            }
        },

        update: function(corner, position)
        {
            var tip = elems.tip,
                inner = tip.children(),
                width = size.width,
                height = size.height,
                mimic = opts.mimic,
                round = Math.round,
                precedance, context, coords, translate, newSize;

            // Re-determine tip if not already set
            if(!corner) { corner = cache.corner || self.corner; }

            // Use corner property if we detect an invalid mimic value
            if(mimic === FALSE) { mimic = corner; }

            // Otherwise inherit mimic properties from the corner object as necessary
            else {
                mimic = new PLUGINS.Corner(mimic);
                mimic.precedance = corner.precedance;

                if(mimic.x === 'inherit') { mimic.x = corner.x; }
                else if(mimic.y === 'inherit') { mimic.y = corner.y; }
                else if(mimic.x === mimic.y) {
                    mimic[ corner.precedance ] = corner[ corner.precedance ];
                }
            }
            precedance = mimic.precedance;

            // Ensure the tip width.height are relative to the tip position
            if(corner.precedance === X) { swapDimensions(); }
            else { resetDimensions(); }

            // Set the tip dimensions
            elems.tip.css({
                width: (width = size.width),
                height: (height = size.height)
            });

            // Update our colours
            parseColours(corner);

            // Detect border width, taking into account colours
            if(color.border !== 'transparent') {
                // Grab border width
                border = parseWidth(corner, NULL);

                // If border width isn't zero, use border color as fill (1.0 style tips)
                if(opts.border === 0 && border > 0) { color.fill = color.border; }

                // Set border width (use detected border width if opts.border is true)
                self.border = border = opts.border !== TRUE ? opts.border : border;
            }

            // Border colour was invalid, set border to zero
            else { self.border = border = 0; }

            // Calculate coordinates
            coords = calculateTip(mimic, width , height);

            // Determine tip size
            self.size = newSize = calculateSize(corner);
            tip.css(newSize);

            // Calculate tip translation
            if(corner.precedance === Y) {
                translate = [
                    round(mimic.x === LEFT ? border : mimic.x === RIGHT ? newSize.width - width - border : (newSize.width - width) / 2),
                    round(mimic.y === TOP ? newSize.height - height : 0)
                ];
            }
            else {
                translate = [
                    round(mimic.x === LEFT ? newSize.width - width : 0),
                    round(mimic.y === TOP ? border : mimic.y === BOTTOM ? newSize.height - height - border : (newSize.height - height) / 2)
                ];
            }

            // Canvas drawing implementation
            if(hasCanvas) {
                // Set the canvas size using calculated size
                inner.attr(newSize);

                // Grab canvas context and clear/save it
                context = inner[0].getContext('2d');
                context.restore(); context.save();
                context.clearRect(0,0,3000,3000);

                // Set properties
                context.fillStyle = color.fill;
                context.strokeStyle = color.border;
                context.lineWidth = border * 2;
                context.lineJoin = 'miter';
                context.miterLimit = 100;

                // Translate origin
                context.translate(translate[0], translate[1]);

                // Draw the tip
                context.beginPath();
                context.moveTo(coords[0][0], coords[0][1]);
                context.lineTo(coords[1][0], coords[1][1]);
                context.lineTo(coords[2][0], coords[2][1]);
                context.closePath();

                // Apply fill and border
                if(border) {
                    // Make sure transparent borders are supported by doing a stroke
                    // of the background colour before the stroke colour
                    if(tooltip.css('background-clip') === 'border-box') {
                        context.strokeStyle = color.fill;
                        context.stroke();
                    }
                    context.strokeStyle = color.border;
                    context.stroke();
                }
                context.fill();
            }

            // VML (IE Proprietary implementation)
            else {
                // Setup coordinates string
                coords = 'm' + coords[0][0] + ',' + coords[0][1] + ' l' + coords[1][0] +
                    ',' + coords[1][1] + ' ' + coords[2][0] + ',' + coords[2][1] + ' xe';

                // Setup VML-specific offset for pixel-perfection
                translate[2] = border && /^(r|b)/i.test(corner.string()) ?
                    parseFloat($.browser.version, 10) === 8 ? 2 : 1 : 0;

                // Set initial CSS
                inner.css({
                    coordsize: (width+border) + ' ' + (height+border),
                    antialias: ''+(mimic.string().indexOf(CENTER) > -1),
                    left: translate[0],
                    top: translate[1],
                    width: width + border,
                    height: height + border
                })
                .each(function(i) {
                    var $this = $(this);

                    // Set shape specific attributes
                    $this[ $this.prop ? 'prop' : 'attr' ]({
                        coordsize: (width+border) + ' ' + (height+border),
                        path: coords,
                        fillcolor: color.fill,
                        filled: !!i,
                        stroked: !i
                    })
                    .toggle(!!(border || i));

                    // Check if border is enabled and add stroke element
                    if(!i && $this.html() === '') {
                        $this.html(
                            createVML('stroke', 'weight="'+(border*2)+'px" color="'+color.border+'" miterlimit="1000" joinstyle="miter"')
                        );
                    }
                });
            }

            // Position if needed
            if(position !== FALSE) { self.position(corner); }
        },

        // Tip positioning method
        position: function(corner)
        {
            var tip = elems.tip,
                position = {},
                userOffset = Math.max(0, opts.offset),
                precedance, dimensions, corners;

            // Return if tips are disabled or tip is not yet rendered
            if(opts.corner === FALSE || !tip) { return FALSE; }

            // Inherit corner if not provided
            corner = corner || self.corner;
            precedance = corner.precedance;

            // Determine which tip dimension to use for adjustment
            dimensions = calculateSize(corner);

            // Setup corners and offset array
            corners = [ corner.x, corner.y ];
            if(precedance === X) { corners.reverse(); }

            // Calculate tip position
            $.each(corners, function(i, side) {
                var b, bc, br;

                if(side === CENTER) {
                    b = precedance === Y ? LEFT : TOP;
                    position[ b ] = '50%';
                    position['margin-' + b] = -Math.round(dimensions[ precedance === Y ? WIDTH : HEIGHT ] / 2) + userOffset;
                }
                else {
                    b = parseWidth(corner, side);
                    bc = parseWidth(corner, side, elems.content);
                    br = parseRadius(corner);

                    position[ side ] = i ? bc : (userOffset + (br > b ? br : -b));
                }
            });

            // Adjust for tip dimensions
            position[ corner[precedance] ] -= dimensions[ precedance === X ? WIDTH : HEIGHT ];

            // Set and return new position
            tip.css({ top: '', bottom: '', left: '', right: '', margin: '' }).css(position);
            return position;
        },

        destroy: function()
        {
            // Remove the tip element
            if(elems.tip) { elems.tip.remove(); }
            elems.tip = false;

            // Unbind events
            tooltip.unbind(namespace);
        }
    });

    self.init();
}

PLUGINS.tip = function(api)
{
    var self = api.plugins.tip;

    return 'object' === typeof self ? self : (api.plugins.tip = new Tip(api));
};

// Initialize tip on render
PLUGINS.tip.initialize = 'render';

// Setup plugin sanitization options
PLUGINS.tip.sanitize = function(options)
{
    var style = options.style, opts;
    if(style && 'tip' in style) {
        opts = options.style.tip;
        if(typeof opts !== 'object'){ options.style.tip = { corner: opts }; }
        if(!(/string|boolean/i).test(typeof opts['corner'])) { opts['corner'] = TRUE; }
        if(typeof opts.width !== 'number'){ delete opts.width; }
        if(typeof opts.height !== 'number'){ delete opts.height; }
        if(typeof opts.border !== 'number' && opts.border !== TRUE){ delete opts.border; }
        if(typeof opts.offset !== 'number'){ delete opts.offset; }
    }
};

// Extend original qTip defaults
$.extend(TRUE, QTIP.defaults, {
    style: {
        tip: {
            corner: TRUE,
            mimic: FALSE,
            width: 6,
            height: 6,
            border: TRUE,
            offset: 0
        }
    }
});


function Modal(api)
{
    var self = this,
        options = api.options.show.modal,
        elems = api.elements,
        tooltip = elems.tooltip,
        overlaySelector = '#qtip-overlay',
        globalNamespace = '.qtipmodal',
        namespace = globalNamespace + api.id,
        attr = 'is-modal-qtip',
        docBody = $(document.body),
        focusableSelector = PLUGINS.modal.focusable.join(','),
        focusableElems = {}, overlay;

    // Setup option set checks
    api.checks.modal = {
        '^show.modal.(on|blur)$': function() {
            // Initialise
            self.init();

            // Show the modal if not visible already and tooltip is visible
            elems.overlay.toggle( tooltip.is(':visible') );
        },
        '^content.text$': function() {
            updateFocusable();
        }
    };

    function updateFocusable() {
        focusableElems = $(focusableSelector, tooltip).not('[disabled]').map(function() {
            return typeof this.focus === 'function' ? this : null;
        });
    }

    function focusInputs(blurElems) {
        // Blurring body element in IE causes window.open windows to unfocus!
        if(focusableElems.length < 1 && blurElems.length) { blurElems.not('body').blur(); }

        // Focus the inputs
        else { focusableElems.first().focus(); }
    }

    function stealFocus(event) {
        var target = $(event.target),
            container = target.closest('.qtip'),
            targetOnTop;

        // Determine if input container target is above this
        targetOnTop = container.length < 1 ? FALSE :
            (parseInt(container[0].style.zIndex, 10) > parseInt(tooltip[0].style.zIndex, 10));

        // If we're showing a modal, but focus has landed on an input below
        // this modal, divert focus to the first visible input in this modal
        // or if we can't find one... the tooltip itself
        if(!targetOnTop && ($(event.target).closest(selector)[0] !== tooltip[0])) {
            focusInputs(target);
        }
    }

    $.extend(self, {
        init: function()
        {
            // If modal is disabled... return
            if(!options.on) { return self; }

            // Create the overlay if needed
            overlay = self.create();

            // Add unique attribute so we can grab modal tooltips easily via a selector
            tooltip.attr(attr, TRUE)

            // Set z-index
            .css('z-index', PLUGINS.modal.zindex + $(selector+'['+attr+']').length)

            // Remove previous bound events in globalNamespace
            .unbind(globalNamespace).unbind(namespace)

            // Apply our show/hide/focus modal events
            .bind('tooltipshow'+globalNamespace+' tooltiphide'+globalNamespace, function(event, api, duration) {
                var oEvent = event.originalEvent;

                // Make sure mouseout doesn't trigger a hide when showing the modal and mousing onto backdrop
                if(event.target === tooltip[0]) {
                    if(oEvent && event.type === 'tooltiphide' && /mouse(leave|enter)/.test(oEvent.type) && $(oEvent.relatedTarget).closest(overlay[0]).length) {
                        try { event.preventDefault(); } catch(e) {}
                    }
                    else if(!oEvent || (oEvent && !oEvent.solo)) {
                        self[ event.type.replace('tooltip', '') ](event, duration);
                    }
                }
            })

            // Adjust modal z-index on tooltip focus
            .bind('tooltipfocus'+globalNamespace, function(event) {
                // If focus was cancelled before it reearch us, don't do anything
                if(event.isDefaultPrevented() || event.target !== tooltip[0]) { return; }

                var qtips = $(selector).filter('['+attr+']'),

                // Keep the modal's lower than other, regular qtips
                newIndex = PLUGINS.modal.zindex + qtips.length,
                curIndex = parseInt(tooltip[0].style.zIndex, 10);

                // Set overlay z-index
                overlay[0].style.zIndex = newIndex - 2;

                // Reduce modal z-index's and keep them properly ordered
                qtips.each(function() {
                    if(this.style.zIndex > curIndex) {
                        this.style.zIndex -= 1;
                    }
                });

                // Fire blur event for focused tooltip
                qtips.end().filter('.' + focusClass).qtip('blur', event.originalEvent);

                // Set the new z-index
                tooltip.addClass(focusClass)[0].style.zIndex = newIndex;

                // Prevent default handling
                try { event.preventDefault(); } catch(e) {}
            })

            // Focus any other visible modals when this one hides
            .bind('tooltiphide'+globalNamespace, function(event) {
                if(event.target === tooltip[0]) {
                    $('[' + attr + ']').filter(':visible').not(tooltip).last().qtip('focus', event);
                }
            });

            // Apply keyboard "Escape key" close handler
            if(options.escape) {
                $(document).unbind(namespace).bind('keydown'+namespace, function(event) {
                    if(event.keyCode === 27 && tooltip.hasClass(focusClass)) {
                        api.hide(event);
                    }
                });
            }

            // Apply click handler for blur option
            if(options.blur) {
                elems.overlay.unbind(namespace).bind('click'+namespace, function(event) {
                    if(tooltip.hasClass(focusClass)) { api.hide(event); }
                });
            }

            // Update focusable elements
            updateFocusable();

            return self;
        },

        create: function()
        {
            var elem = $(overlaySelector);

            // Return if overlay is already rendered
            if(elem.length) {
                // Modal overlay should always be below all tooltips if possible
                return (elems.overlay = elem.insertAfter( $(selector).last() ));
            }

            // Create document overlay
            overlay = elems.overlay = $('<div />', {
                id: overlaySelector.substr(1),
                html: '<div></div>',
                mousedown: function() { return FALSE; }
            })
            .hide()
            .insertAfter( $(selector).last() );

            // Update position on window resize or scroll
            function resize() {
                overlay.css({
                    height: $(window).height(),
                    width: $(window).width()
                });
            }
            $(window).unbind(globalNamespace).bind('resize'+globalNamespace, resize);
            resize(); // Fire it initially too

            return overlay;
        },

        toggle: function(event, state, duration)
        {
            // Make sure default event hasn't been prevented
            if(event && event.isDefaultPrevented()) { return self; }

            var effect = options.effect,
                type = state ? 'show': 'hide',
                visible = overlay.is(':visible'),
                modals = $('[' + attr + ']').filter(':visible').not(tooltip),
                zindex;

            // Create our overlay if it isn't present already
            if(!overlay) { overlay = self.create(); }

            // Prevent modal from conflicting with show.solo, and don't hide backdrop is other modals are visible
            if((overlay.is(':animated') && visible === state) || (!state && modals.length)) { return self; }

            // State specific...
            if(state) {
                // Set position
                overlay.css({ left: 0, top: 0 });

                // Toggle backdrop cursor style on show
                overlay.toggleClass('blurs', options.blur);

                // IF the modal can steal the focus
                if(options.stealfocus !== FALSE) {
                    // Make sure we can't focus anything outside the tooltip
                    docBody.bind('focusin'+namespace, stealFocus);

                    // Blur the current item and focus anything in the modal we an
                    focusInputs( $('body :focus') );
                }
            }
            else {
                // Undelegate focus handler
                docBody.unbind('focusin'+namespace);
            }

            // Stop all animations
            overlay.stop(TRUE, FALSE);

            // Use custom function if provided
            if($.isFunction(effect)) {
                effect.call(overlay, state);
            }

            // If no effect type is supplied, use a simple toggle
            else if(effect === FALSE) {
                overlay[ type ]();
            }

            // Use basic fade function
            else {
                overlay.fadeTo( parseInt(duration, 10) || 90, state ? 1 : 0, function() {
                    if(!state) { $(this).hide(); }
                });
            }

            // Reset position on hide
            if(!state) {
                overlay.queue(function(next) {
                    overlay.css({ left: '', top: '' });
                    next();
                });
            }

            return self;
        },

        show: function(event, duration) { return self.toggle(event, TRUE, duration); },
        hide: function(event, duration) { return self.toggle(event, FALSE, duration); },

        destroy: function()
        {
            var delBlanket = overlay;

            if(delBlanket) {
                // Check if any other modal tooltips are present
                delBlanket = $('[' + attr + ']').not(tooltip).length < 1;

                // Remove overlay if needed
                if(delBlanket) {
                    elems.overlay.remove();
                    $(document).unbind(globalNamespace);
                }
                else {
                    elems.overlay.unbind(globalNamespace+api.id);
                }

                // Undelegate focus handler
                docBody.undelegate('*', 'focusin'+namespace);
            }

            // Remove bound events
            return tooltip.removeAttr(attr).unbind(globalNamespace);
        }
    });

    self.init();
}

PLUGINS.modal = function(api) {
    var self = api.plugins.modal;

    return 'object' === typeof self ? self : (api.plugins.modal = new Modal(api));
};

// Plugin needs to be initialized on render
PLUGINS.modal.initialize = 'render';

// Setup sanitiztion rules
PLUGINS.modal.sanitize = function(opts) {
    if(opts.show) {
        if(typeof opts.show.modal !== 'object') { opts.show.modal = { on: !!opts.show.modal }; }
        else if(typeof opts.show.modal.on === 'undefined') { opts.show.modal.on = TRUE; }
    }
};

// Base z-index for all modal tooltips (use qTip core z-index as a base)
PLUGINS.modal.zindex = QTIP.zindex - 200;

// Defines the selector used to select all 'focusable' elements within the modal when using the show.modal.stealfocus option.
// Selectors initially taken from http://stackoverflow.com/questions/7668525/is-there-a-jquery-selector-to-get-all-elements-that-can-get-focus
PLUGINS.modal.focusable = ['a[href]', 'area[href]', 'input', 'select', 'textarea', 'button', 'iframe', 'object', 'embed', '[tabindex]', '[contenteditable]'];

// Extend original api defaults
$.extend(TRUE, QTIP.defaults, {
    show: {
        modal: {
            on: FALSE,
            effect: TRUE,
            blur: TRUE,
            stealfocus: TRUE,
            escape: TRUE
        }
    }
});


PLUGINS.viewport = function(api, position, posOptions, targetWidth, targetHeight, elemWidth, elemHeight)
{
    var target = posOptions.target,
        tooltip = api.elements.tooltip,
        my = posOptions.my,
        at = posOptions.at,
        adjust = posOptions.adjust,
        method = adjust.method.split(' '),
        methodX = method[0],
        methodY = method[1] || method[0],
        viewport = posOptions.viewport,
        container = posOptions.container,
        cache = api.cache,
        tip = api.plugins.tip,
        adjusted = { left: 0, top: 0 },
        fixed, newMy, newClass;

    // If viewport is not a jQuery element, or it's the window/document or no adjustment method is used... return
    if(!viewport.jquery || target[0] === window || target[0] === document.body || adjust.method === 'none') {
        return adjusted;
    }

    // Cache our viewport details
    fixed = tooltip.css('position') === 'fixed';
    viewport = {
        elem: viewport,
        height: viewport[ (viewport[0] === window ? 'h' : 'outerH') + 'eight' ](),
        width: viewport[ (viewport[0] === window ? 'w' : 'outerW') + 'idth' ](),
        scrollleft: fixed ? 0 : viewport.scrollLeft(),
        scrolltop: fixed ? 0 : viewport.scrollTop(),
        offset: viewport.offset() || { left: 0, top: 0 }
    };
    container = {
        elem: container,
        scrollLeft: container.scrollLeft(),
        scrollTop: container.scrollTop(),
        offset: container.offset() || { left: 0, top: 0 }
    };

    // Generic calculation method
    function calculate(side, otherSide, type, adjust, side1, side2, lengthName, targetLength, elemLength) {
        var initialPos = position[side1],
            mySide = my[side], atSide = at[side],
            isShift = type === SHIFT,
            viewportScroll = -container.offset[side1] + viewport.offset[side1] + viewport['scroll'+side1],
            myLength = mySide === side1 ? elemLength : mySide === side2 ? -elemLength : -elemLength / 2,
            atLength = atSide === side1 ? targetLength : atSide === side2 ? -targetLength : -targetLength / 2,
            tipLength = tip && tip.size ? tip.size[lengthName] || 0 : 0,
            tipAdjust = tip && tip.corner && tip.corner.precedance === side && !isShift ? tipLength : 0,
            overflow1 = viewportScroll - initialPos + tipAdjust,
            overflow2 = initialPos + elemLength - viewport[lengthName] - viewportScroll + tipAdjust,
            offset = myLength - (my.precedance === side || mySide === my[otherSide] ? atLength : 0) - (atSide === CENTER ? targetLength / 2 : 0);

        // shift
        if(isShift) {
            tipAdjust = tip && tip.corner && tip.corner.precedance === otherSide ? tipLength : 0;
            offset = (mySide === side1 ? 1 : -1) * myLength - tipAdjust;

            // Adjust position but keep it within viewport dimensions
            position[side1] += overflow1 > 0 ? overflow1 : overflow2 > 0 ? -overflow2 : 0;
            position[side1] = Math.max(
                -container.offset[side1] + viewport.offset[side1] + (tipAdjust && tip.corner[side] === CENTER ? tip.offset : 0),
                initialPos - offset,
                Math.min(
                    Math.max(-container.offset[side1] + viewport.offset[side1] + viewport[lengthName], initialPos + offset),
                    position[side1]
                )
            );
        }

        // flip/flipinvert
        else {
            // Update adjustment amount depending on if using flipinvert or flip
            adjust *= (type === FLIPINVERT ? 2 : 0);

            // Check for overflow on the left/top
            if(overflow1 > 0 && (mySide !== side1 || overflow2 > 0)) {
                position[side1] -= offset + adjust;
                newMy['invert'+side](side1);
            }

            // Check for overflow on the bottom/right
            else if(overflow2 > 0 && (mySide !== side2 || overflow1 > 0)  ) {
                position[side1] -= (mySide === CENTER ? -offset : offset) + adjust;
                newMy['invert'+side](side2);
            }

            // Make sure we haven't made things worse with the adjustment and reset if so
            if(position[side1] < viewportScroll && -position[side1] > overflow2) {
                position[side1] = initialPos; newMy = my.clone();
            }
        }

        return position[side1] - initialPos;
    }

    // Set newMy if using flip or flipinvert methods
    if(methodX !== 'shift' || methodY !== 'shift') { newMy = my.clone(); }

    // Adjust position based onviewport and adjustment options
    adjusted = {
        left: methodX !== 'none' ? calculate( X, Y, methodX, adjust.x, LEFT, RIGHT, WIDTH, targetWidth, elemWidth ) : 0,
        top: methodY !== 'none' ? calculate( Y, X, methodY, adjust.y, TOP, BOTTOM, HEIGHT, targetHeight, elemHeight ) : 0
    };

    // Set tooltip position class if it's changed
    if(newMy && cache.lastClass !== (newClass = uitooltip + '-pos-' + newMy.abbrev())) {
        tooltip.removeClass(api.cache.lastClass).addClass( (api.cache.lastClass = newClass) );
    }

    return adjusted;
};
PLUGINS.imagemap = function(api, area, corner, adjustMethod)
{
    if(!area.jquery) { area = $(area); }

    var cache = (api.cache.areas = {}),
        shape = (area[0].shape || area.attr('shape')).toLowerCase(),
        coordsString = area[0].coords || area.attr('coords'),
        baseCoords = coordsString.split(','),
        coords = [],
        image = $('img[usemap="#'+area.parent('map').attr('name')+'"]'),
        imageOffset = image.offset(),
        result = {
            width: 0, height: 0,
            position: {
                top: 1e10, right: 0,
                bottom: 0, left: 1e10
            }
        },
        i = 0, next = 0, dimensions;

    // POLY area coordinate calculator
    //  Special thanks to Ed Cradock for helping out with this.
    //  Uses a binary search algorithm to find suitable coordinates.
    function polyCoordinates(result, coords, corner)
    {
        var i = 0,
            compareX = 1, compareY = 1,
            realX = 0, realY = 0,
            newWidth = result.width,
            newHeight = result.height;

        // Use a binary search algorithm to locate most suitable coordinate (hopefully)
        while(newWidth > 0 && newHeight > 0 && compareX > 0 && compareY > 0)
        {
            newWidth = Math.floor(newWidth / 2);
            newHeight = Math.floor(newHeight / 2);

            if(corner.x === LEFT){ compareX = newWidth; }
            else if(corner.x === RIGHT){ compareX = result.width - newWidth; }
            else{ compareX += Math.floor(newWidth / 2); }

            if(corner.y === TOP){ compareY = newHeight; }
            else if(corner.y === BOTTOM){ compareY = result.height - newHeight; }
            else{ compareY += Math.floor(newHeight / 2); }

            i = coords.length; while(i--)
            {
                if(coords.length < 2){ break; }

                realX = coords[i][0] - result.position.left;
                realY = coords[i][1] - result.position.top;

                if((corner.x === LEFT && realX >= compareX) ||
                (corner.x === RIGHT && realX <= compareX) ||
                (corner.x === CENTER && (realX < compareX || realX > (result.width - compareX))) ||
                (corner.y === TOP && realY >= compareY) ||
                (corner.y === BOTTOM && realY <= compareY) ||
                (corner.y === CENTER && (realY < compareY || realY > (result.height - compareY)))) {
                    coords.splice(i, 1);
                }
            }
        }

        return { left: coords[0][0], top: coords[0][1] };
    }

    // Make sure we account for padding and borders on the image
    imageOffset.left += Math.ceil((image.outerWidth() - image.width()) / 2);
    imageOffset.top += Math.ceil((image.outerHeight() - image.height()) / 2);

    // Parse coordinates into proper array
    if(shape === 'poly') {
        i = baseCoords.length; while(i--)
        {
            next = [ parseInt(baseCoords[--i], 10), parseInt(baseCoords[i+1], 10) ];

            if(next[0] > result.position.right){ result.position.right = next[0]; }
            if(next[0] < result.position.left){ result.position.left = next[0]; }
            if(next[1] > result.position.bottom){ result.position.bottom = next[1]; }
            if(next[1] < result.position.top){ result.position.top = next[1]; }

            coords.push(next);
        }
    }
    else {
        i = -1; while(i++ < baseCoords.length) {
            coords.push( parseInt(baseCoords[i], 10) );
        }
    }

    // Calculate details
    switch(shape)
    {
        case 'rect':
            result = {
                width: Math.abs(coords[2] - coords[0]),
                height: Math.abs(coords[3] - coords[1]),
                position: {
                    left: Math.min(coords[0], coords[2]),
                    top: Math.min(coords[1], coords[3])
                }
            };
        break;

        case 'circle':
            result = {
                width: coords[2] + 2,
                height: coords[2] + 2,
                position: { left: coords[0], top: coords[1] }
            };
        break;

        case 'poly':
            result.width = Math.abs(result.position.right - result.position.left);
            result.height = Math.abs(result.position.bottom - result.position.top);

            if(corner.abbrev() === 'c') {
                result.position = {
                    left: result.position.left + (result.width / 2),
                    top: result.position.top + (result.height / 2)
                };
            }
            else {
                // Calculate if we can't find a cached value
                if(!cache[corner+coordsString]) {
                    result.position = polyCoordinates(result, coords.slice(), corner);

                    // If flip adjustment is enabled, also calculate the closest opposite point
                    if(adjustMethod && (adjustMethod[0] === 'flip' || adjustMethod[1] === 'flip')) {
                        result.offset = polyCoordinates(result, coords.slice(), {
                            x: corner.x === LEFT ? RIGHT : corner.x === RIGHT ? LEFT : CENTER,
                            y: corner.y === TOP ? BOTTOM : corner.y === BOTTOM ? TOP : CENTER
                        });

                        result.offset.left -= result.position.left;
                        result.offset.top -= result.position.top;
                    }

                    // Store the result
                    cache[corner+coordsString] = result;
                }

                // Grab the cached result
                result = cache[corner+coordsString];
            }

            result.width = result.height = 0;
        break;
    }

    // Add image position to offset coordinates
    result.position.left += imageOffset.left;
    result.position.top += imageOffset.top;

    return result;
};


/*
 * BGIFrame adaption (http://plugins.jquery.com/project/bgiframe)
 * Special thanks to Brandon Aaron
 */
function BGIFrame(api)
{
    var self = this,
        elems = api.elements,
        tooltip = elems.tooltip,
        namespace = '.bgiframe-' + api.id;

    $.extend(self, {
        init: function()
        {
            // Create the BGIFrame element
            elems.bgiframe = $('<iframe class="ui-tooltip-bgiframe" frameborder="0" tabindex="-1" src="javascript:\'\';" ' +
                ' style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=0); ' +
                    '-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";"></iframe>');

            // Append the new element to the tooltip
            elems.bgiframe.appendTo(tooltip);

            // Update BGIFrame on tooltip move
            tooltip.bind('tooltipmove'+namespace, self.adjust);
        },

        adjust: function()
        {
            var dimensions = api.get('dimensions'), // Determine current tooltip dimensions
                plugin = api.plugins.tip,
                tip = elems.tip,
                tipAdjust, offset;

            // Adjust border offset
            offset = parseInt(tooltip.css('border-left-width'), 10) || 0;
            offset = { left: -offset, top: -offset };

            // Adjust for tips plugin
            if(plugin && tip) {
                tipAdjust = (plugin.corner.precedance === 'x') ? ['width', 'left'] : ['height', 'top'];
                offset[ tipAdjust[1] ] -= tip[ tipAdjust[0] ]();
            }

            // Update bgiframe
            elems.bgiframe.css(offset).css(dimensions);
        },

        destroy: function()
        {
            // Remove iframe
            elems.bgiframe.remove();

            // Remove bound events
            tooltip.unbind(namespace);
        }
    });

    self.init();
}

PLUGINS.bgiframe = function(api)
{
    var browser = $.browser,
        self = api.plugins.bgiframe;

        // Proceed only if the browser is IE6 and offending elements are present
        if($('select, object').length < 1 || !(browser.msie && (''+browser.version).charAt(0) === '6')) {
        return FALSE;
    }

    return 'object' === typeof self ? self : (api.plugins.bgiframe = new BGIFrame(api));
};

// Plugin needs to be initialized on render
PLUGINS.bgiframe.initialize = 'render';


}));
}( window, document ));/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
 * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
 * Thanks to: Seamus Leahy for adding deltaX and deltaY
 *
 * Version: 3.0.6
 *
 * Requires: 1.2.2+
 */

(function($) {

var types = ['DOMMouseScroll', 'mousewheel'];

if ($.event.fixHooks) {
    for ( var i=types.length; i; ) {
        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;
    }
}

$.event.special.mousewheel = {
    setup: function() {
        if ( this.addEventListener ) {
            for ( var i=types.length; i; ) {
                this.addEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = handler;
        }
    },

    teardown: function() {
        if ( this.removeEventListener ) {
            for ( var i=types.length; i; ) {
                this.removeEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = null;
        }
    }
};

$.fn.extend({
    mousewheel: function(fn) {
        return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
    },

    unmousewheel: function(fn) {
        return this.unbind("mousewheel", fn);
    }
});


function handler(event) {
    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;
    event = $.event.fix(orgEvent);
    event.type = "mousewheel";

    // Old school scrollwheel delta
    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }
    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }

    // New school multidimensional scroll (touchpads) deltas
    deltaY = delta;

    // Gecko
    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
        deltaY = 0;
        deltaX = -1*delta;
    }

    // Webkit
    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }
    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }

    // Add event and delta to the front of the arguments
    args.unshift(event, delta, deltaX, deltaY);

    return ($.event.dispatch || $.event.handle).apply(this, args);
}

})(jQuery);(function ($) {

  /**
   * Augment jQuery prototype.
   */

  $.fn.antiscroll = function (options) {
    return this.each(function () {
      if ($(this).data('antiscroll')) {
        $(this).data('antiscroll').destroy();
      }

      $(this).data('antiscroll', new $.Antiscroll(this, options));
    });
  };

  /**
   * Expose constructor.
   */

  $.Antiscroll = Antiscroll;

  /**
   * Antiscroll pane constructor.
   *
   * @param {Element|jQuery} main pane
   * @parma {Object} options
   * @api public
   */

  function Antiscroll (el, opts) {
    this.el = $(el);
    this.options = opts || {};

    this.x = false !== this.options.x;
    this.y = false !== this.options.y;
    this.padding = undefined == this.options.padding ? 2 : this.options.padding;

    this.inner = this.el.find('.antiscroll-inner');
    this.inner.css({
        'width': '+=' + scrollbarSize()
      , 'height': '+=' + scrollbarSize()
    });

    this.refresh();
  };

  /**
   * refresh scrollbars
   *
   * @api public
   */

  Antiscroll.prototype.refresh = function() {
    var needHScroll = this.inner.get(0).scrollWidth > this.el.width()
      , needVScroll = this.inner.get(0).scrollHeight > this.el.height();

    if (!this.horizontal && needHScroll && this.x) {
      this.horizontal = new Scrollbar.Horizontal(this);
    } else if (this.horizontal && !needHScroll)  {
      this.horizontal.destroy();
      this.horizontal = null
    }

    if (!this.vertical && needVScroll && this.y) {
      this.vertical = new Scrollbar.Vertical(this);
    } else if (this.vertical && !needVScroll)  {
      this.vertical.destroy();
      this.vertical = null
    }
  };

  /**
   * Cleans up.
   *
   * @return {Antiscroll} for chaining
   * @api public
   */

  Antiscroll.prototype.destroy = function () {
    if (this.horizontal) {
      this.horizontal.destroy();
    }
    if (this.vertical) {
      this.vertical.destroy();
    }
    return this;
  };

  /**
   * Rebuild Antiscroll.
   *
   * @return {Antiscroll} for chaining
   * @api public
   */

  Antiscroll.prototype.rebuild = function () {
    this.destroy();
    this.inner.attr('style', '');
    Antiscroll.call(this, this.el, this.options);
    return this;
  };

  /**
   * Scrollbar constructor.
   *
   * @param {Element|jQuery} element
   * @api public
   */

  function Scrollbar (pane) {
    this.pane = pane;
    this.pane.el.append(this.el);
    this.innerEl = this.pane.inner.get(0);

    this.dragging = false;
    this.enter = false;
    this.shown = false;

    // hovering
    this.pane.el.mouseenter($.proxy(this, 'mouseenter'));
    this.pane.el.mouseleave($.proxy(this, 'mouseleave'));

    // dragging
    this.el.mousedown($.proxy(this, 'mousedown'));

    // scrolling
    this.pane.inner.scroll($.proxy(this, 'scroll'));

    // wheel -optional-
    this.pane.inner.bind('mousewheel', $.proxy(this, 'mousewheel'));

    // show
    var initialDisplay = this.pane.options.initialDisplay;

    if (initialDisplay !== false) {
      this.show();
      // this.hiding = setTimeout($.proxy(this, 'hide'), parseInt(initialDisplay, 10) || 3000);
    }
  }

  /**
   * Cleans up.
   *
   * @return {Scrollbar} for chaining
   * @api public
   */

  Scrollbar.prototype.destroy = function () {
    this.el.remove();
    return this;
  };

  /**
   * Called upon mouseenter.
   *
   * @api private
   */

  Scrollbar.prototype.mouseenter = function () {
    this.enter = true;
    this.show();
  };

  /**
   * Called upon mouseleave.
   *
   * @api private
   */

  Scrollbar.prototype.mouseleave = function () {
    this.enter = false;

    // if (!this.dragging) {
    //   this.hide();
    // }
  };

  /**
   * Called upon wrap scroll.
   *
   * @api private
   */

  Scrollbar.prototype.scroll = function () {
    if (!this.shown) {
      this.show();
      // if (!this.enter && !this.dragging) {
      //   this.hiding = setTimeout($.proxy(this, 'hide'), 1500);
      // }
    }

    this.update();
  };

  /**
   * Called upon scrollbar mousedown.
   *
   * @api private
   */

  Scrollbar.prototype.mousedown = function (ev) {
    ev.preventDefault();

    this.dragging = true;

    this.startPageY = ev.pageY - parseInt(this.el.css('top'), 10);
    this.startPageX = ev.pageX - parseInt(this.el.css('left'), 10);

    // prevent crazy selections on IE
    document.onselectstart = function () { return false; };

    var pane = this.pane
      , move = $.proxy(this, 'mousemove')
      , self = this

    $(document)
      .mousemove(move)
      .mouseup(function () {
        self.dragging = false;
        document.onselectstart = null;

        $(document).unbind('mousemove', move);

        // if (!self.enter) {
        //   self.hide();
        // }
      });
  };

  /**
   * Show scrollbar.
   *
   * @api private
   */

  Scrollbar.prototype.show = function (duration) {
    if (!this.shown) {
      this.update();
      this.el.addClass('antiscroll-scrollbar-shown');
      if (this.hiding) {
        clearTimeout(this.hiding);
        this.hiding = null;
      }
      this.shown = true;
    }
  };

  /**
   * Hide scrollbar.
   *
   * @api private
   */

  Scrollbar.prototype.hide = function () {
    var autoHide = this.pane.options.autoHide;
    if (autoHide !== false && this.shown) {
      // check for dragging
      this.el.removeClass('antiscroll-scrollbar-shown');
      this.shown = false;
    }
  };

  /**
   * Horizontal scrollbar constructor
   *
   * @api private
   */

  Scrollbar.Horizontal = function (pane) {
    this.el = $('<div class="antiscroll-scrollbar antiscroll-scrollbar-horizontal">');
    Scrollbar.call(this, pane);
  };

  /**
   * Inherits from Scrollbar.
   */

  inherits(Scrollbar.Horizontal, Scrollbar);

  /**
   * Updates size/position of scrollbar.
   *
   * @api private
   */

  Scrollbar.Horizontal.prototype.update = function () {
    var paneWidth = this.pane.el.width()
      , trackWidth = paneWidth - this.pane.padding * 2
      , innerEl = this.pane.inner.get(0)

    this.el
      .css('width', trackWidth * paneWidth / innerEl.scrollWidth)
      .css('left', trackWidth * innerEl.scrollLeft / innerEl.scrollWidth);
  };

  /**
   * Called upon drag.
   *
   * @api private
   */

  Scrollbar.Horizontal.prototype.mousemove = function (ev) {
    var trackWidth = this.pane.el.width() - this.pane.padding * 2
      , pos = ev.pageX - this.startPageX
      , barWidth = this.el.width()
      , innerEl = this.pane.inner.get(0)

    // minimum top is 0, maximum is the track height
    var y = Math.min(Math.max(pos, 0), trackWidth - barWidth)

    innerEl.scrollLeft = (innerEl.scrollWidth - this.pane.el.width())
      * y / (trackWidth - barWidth)
  };

  /**
   * Called upon container mousewheel.
   *
   * @api private
   */

  Scrollbar.Horizontal.prototype.mousewheel = function (ev, delta, x, y) {
    if ((x < 0 && 0 == this.pane.inner.get(0).scrollLeft) ||
        (x > 0 && (this.innerEl.scrollLeft + Math.ceil(this.pane.el.width())
          == this.innerEl.scrollWidth))) {
      ev.preventDefault();
      return false;
    }
  };

  /**
   * Vertical scrollbar constructor
   *
   * @api private
   */

  Scrollbar.Vertical = function (pane) {
    this.el = $('<div class="antiscroll-scrollbar antiscroll-scrollbar-vertical">');
    Scrollbar.call(this, pane);
  };

  /**
   * Inherits from Scrollbar.
   */

  inherits(Scrollbar.Vertical, Scrollbar);

  /**
   * Updates size/position of scrollbar.
   *
   * @api private
   */

  Scrollbar.Vertical.prototype.update = function () {
    var paneHeight = this.pane.el.height()
      , trackHeight = paneHeight - this.pane.padding * 2
      , innerEl = this.innerEl

    this.el
      .css('height', trackHeight * paneHeight / innerEl.scrollHeight)
      .css('top', trackHeight * innerEl.scrollTop / innerEl.scrollHeight)
  };

  /**
   * Called upon drag.
   *
   * @api private
   */

  Scrollbar.Vertical.prototype.mousemove = function (ev) {
    var paneHeight = this.pane.el.height()
      , trackHeight = paneHeight - this.pane.padding * 2
      , pos = ev.pageY - this.startPageY
      , barHeight = this.el.height()
      , innerEl = this.innerEl

    // minimum top is 0, maximum is the track height
    var y = Math.min(Math.max(pos, 0), trackHeight - barHeight)

    innerEl.scrollTop = (innerEl.scrollHeight - paneHeight)
      * y / (trackHeight - barHeight)
  };

  /**
   * Called upon container mousewheel.
   *
   * @api private
   */

  Scrollbar.Vertical.prototype.mousewheel = function (ev, delta, x, y) {
    if ((y > 0 && 0 == this.innerEl.scrollTop) ||
        (y < 0 && (this.innerEl.scrollTop + Math.ceil(this.pane.el.height())
          == this.innerEl.scrollHeight))) {
      ev.preventDefault();
      return false;
    }
  };

  /**
   * Cross-browser inheritance.
   *
   * @param {Function} constructor
   * @param {Function} constructor we inherit from
   * @api private
   */

  function inherits (ctorA, ctorB) {
    function f() {};
    f.prototype = ctorB.prototype;
    ctorA.prototype = new f;
  }

  /**
   * Scrollbar size detection.
   */

  var size;

  function scrollbarSize () {
    if (size === undefined) {
      var div = $(
          '<div style="width:50px;height:50px;overflow:hidden;'
        + 'position:absolute;top:-200px;left:-200px;"><div style="height:100px;">'
        + '</div>'
      );

      $('body').append(div);

      var w1 = $('div', div).innerWidth();
      div.css('overflow-y', 'scroll');
      var w2 = $('div', div).innerWidth();
      $(div).remove();

      size = w1 - w2;
    }

    return size;
  }

})(jQuery);// Chosen, a Select Box Enhancer for jQuery and Protoype
// by Patrick Filler for Harvest, http://getharvest.com
//
// Version 0.9.8
// Full source at https://github.com/harvesthq/chosen
// Copyright (c) 2011 Harvest http://getharvest.com

// MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md
// This file is generated by `cake build`, do not edit it by hand.
(function() {
  var SelectParser;

  SelectParser = (function() {

    function SelectParser() {
      this.options_index = 0;
      this.parsed = [];
    }

    SelectParser.prototype.add_node = function(child) {
      if (child.nodeName.toUpperCase() === "OPTGROUP") {
        return this.add_group(child);
      } else {
        return this.add_option(child);
      }
    };

    SelectParser.prototype.add_group = function(group) {
      var group_position, option, _i, _len, _ref, _results;
      group_position = this.parsed.length;
      this.parsed.push({
        array_index: group_position,
        group: true,
        label: group.label,
        children: 0,
        disabled: group.disabled
      });
      _ref = group.childNodes;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        option = _ref[_i];
        _results.push(this.add_option(option, group_position, group.disabled));
      }
      return _results;
    };

    SelectParser.prototype.add_option = function(option, group_position, group_disabled) {
      if (option.nodeName.toUpperCase() === "OPTION") {
        if (option.text !== "") {
          if (group_position != null) this.parsed[group_position].children += 1;
          this.parsed.push({
            array_index: this.parsed.length,
            options_index: this.options_index,
            value: option.value,
            text: option.text,
            html: option.innerHTML,
            selected: option.selected,
            disabled: group_disabled === true ? group_disabled : option.disabled,
            group_array_index: group_position,
            classes: option.className,
            style: option.style.cssText
          });
        } else {
          this.parsed.push({
            array_index: this.parsed.length,
            options_index: this.options_index,
            empty: true
          });
        }
        return this.options_index += 1;
      }
    };

    return SelectParser;

  })();

  SelectParser.select_to_array = function(select) {
    var child, parser, _i, _len, _ref;
    parser = new SelectParser();
    _ref = select.childNodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      child = _ref[_i];
      parser.add_node(child);
    }
    return parser.parsed;
  };

  this.SelectParser = SelectParser;

}).call(this);

/*
Chosen source: generate output using 'cake build'
Copyright (c) 2011 by Harvest
*/

(function() {
  var AbstractChosen, root;

  root = this;

  AbstractChosen = (function() {

    function AbstractChosen(form_field, options) {
      this.form_field = form_field;
      this.options = options != null ? options : {};
      this.set_default_values();
      this.is_multiple = this.form_field.multiple;
      this.set_default_text();
      this.setup();
      this.set_up_html();
      this.register_observers();
      this.finish_setup();
    }

    AbstractChosen.prototype.set_default_values = function() {
      var _this = this;
      this.click_test_action = function(evt) {
        return _this.test_active_click(evt);
      };
      this.activate_action = function(evt) {
        return _this.activate_field(evt);
      };
      this.active_field = false;
      this.mouse_on_container = false;
      this.results_showing = false;
      this.result_highlighted = null;
      this.result_single_selected = null;
      this.allow_single_deselect = (this.options.allow_single_deselect != null) && (this.form_field.options[0] != null) && this.form_field.options[0].text === "" ? this.options.allow_single_deselect : false;
      this.disable_search_threshold = this.options.disable_search_threshold || 0;
      this.disable_search = this.options.disable_search || false;
      this.search_contains = this.options.search_contains || false;
      this.choices = 0;
      this.single_backstroke_delete = this.options.single_backstroke_delete || false;
      return this.max_selected_options = this.options.max_selected_options || Infinity;
    };

    AbstractChosen.prototype.set_default_text = function() {
      if (this.form_field.getAttribute("data-placeholder")) {
        this.default_text = this.form_field.getAttribute("data-placeholder");
      } else if (this.is_multiple) {
        this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || "Select Some Options";
      } else {
        this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || "Select an Option";
      }
      return this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || "No results match";
    };

    AbstractChosen.prototype.mouse_enter = function() {
      return this.mouse_on_container = true;
    };

    AbstractChosen.prototype.mouse_leave = function() {
      return this.mouse_on_container = false;
    };

    AbstractChosen.prototype.input_focus = function(evt) {
      var _this = this;
      if (this.is_multiple) {
        if (!this.active_field) {
          return setTimeout((function() {
            return _this.container_mousedown();
          }), 50);
        }
      } else {
        if (!this.active_field) return this.activate_field();
      }
    };

    AbstractChosen.prototype.input_blur = function(evt) {
      var _this = this;
      if (!this.mouse_on_container) {
        this.active_field = false;
        return setTimeout((function() {
          return _this.blur_test();
        }), 100);
      }
    };

    AbstractChosen.prototype.result_add_option = function(option) {
      var classes, style;
      if (!option.disabled) {
        option.dom_id = this.container_id + "_o_" + option.array_index;
        classes = option.selected && this.is_multiple ? [] : ["active-result"];
        if (option.selected) classes.push("result-selected");
        if (option.group_array_index != null) classes.push("group-option");
        if (option.classes !== "") classes.push(option.classes);
        style = option.style.cssText !== "" ? " style=\"" + option.style + "\"" : "";
        return '<li id="' + option.dom_id + '" class="' + classes.join(' ') + '"' + style + '>' + option.html + '</li>';
      } else {
        return "";
      }
    };

    AbstractChosen.prototype.results_update_field = function() {
      if (!this.is_multiple) this.results_reset_cleanup();
      this.result_clear_highlight();
      this.result_single_selected = null;
      return this.results_build();
    };

    AbstractChosen.prototype.results_toggle = function() {
      if (this.results_showing) {
        return this.results_hide();
      } else {
        return this.results_show();
      }
    };

    AbstractChosen.prototype.results_search = function(evt) {
      if (this.results_showing) {
        return this.winnow_results();
      } else {
        return this.results_show();
      }
    };

    AbstractChosen.prototype.keyup_checker = function(evt) {
      var stroke, _ref;
      stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;
      this.search_field_scale();
      switch (stroke) {
        case 8:
          if (this.is_multiple && this.backstroke_length < 1 && this.choices > 0) {
            return this.keydown_backstroke();
          } else if (!this.pending_backstroke) {
            this.result_clear_highlight();
            return this.results_search();
          }
          break;
        case 13:
          evt.preventDefault();
          if (this.results_showing) return this.result_select(evt);
          break;
        case 27:
          if (this.results_showing) this.results_hide();
          return true;
        case 9:
        case 38:
        case 40:
        case 16:
        case 91:
        case 17:
          break;
        default:
          return this.results_search();
      }
    };

    AbstractChosen.prototype.generate_field_id = function() {
      var new_id;
      new_id = this.generate_random_id();
      this.form_field.id = new_id;
      return new_id;
    };

    AbstractChosen.prototype.generate_random_char = function() {
      var chars, newchar, rand;
      chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      rand = Math.floor(Math.random() * chars.length);
      return newchar = chars.substring(rand, rand + 1);
    };

    return AbstractChosen;

  })();

  root.AbstractChosen = AbstractChosen;

}).call(this);

/*
Chosen source: generate output using 'cake build'
Copyright (c) 2011 by Harvest
*/

(function() {
  var $, Chosen, get_side_border_padding, root,
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  root = this;

  $ = jQuery;

  $.fn.extend({
    chosen: function(options) {
      if ($.browser.msie && ($.browser.version === "6.0" || ($.browser.version === "7.0" && document.documentMode === 7))) {
        return this;
      }
      return this.each(function(input_field) {
        var $this;
        $this = $(this);
        if (!$this.hasClass("chzn-done")) {
          return $this.data('chosen', new Chosen(this, options));
        }
      });
    }
  });

  Chosen = (function(_super) {

    __extends(Chosen, _super);

    function Chosen() {
      Chosen.__super__.constructor.apply(this, arguments);
    }

    Chosen.prototype.setup = function() {
      this.form_field_jq = $(this.form_field);
      this.current_value = this.form_field_jq.val();
      return this.is_rtl = this.form_field_jq.hasClass("chzn-rtl");
    };

    Chosen.prototype.finish_setup = function() {
      return this.form_field_jq.addClass("chzn-done");
    };

    Chosen.prototype.set_up_html = function() {
      var container_div, dd_top, dd_width, sf_width;
      this.container_id = this.form_field.id.length ? this.form_field.id.replace(/[^\w]/g, '_') : this.generate_field_id();
      this.container_id += "_chzn";
      this.f_width = this.form_field_jq.outerWidth();
      container_div = $("<div />", {
        id: this.container_id,
        "class": "chzn-container" + (this.is_rtl ? ' chzn-rtl' : ''),
        style: 'width: ' + this.f_width + 'px;'
      });
      if (this.is_multiple) {
        container_div.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="' + this.default_text + '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop" style="left:-9000px;"><ul class="chzn-results"></ul></div>');
      } else {
        container_div.html('<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>' + this.default_text + '</span><div><b></b></div></a><div class="chzn-drop" style="left:-9000px;"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>');
      }
      this.form_field_jq.hide().after(container_div);
      this.container = $('#' + this.container_id);
      this.container.addClass("chzn-container-" + (this.is_multiple ? "multi" : "single"));
      this.dropdown = this.container.find('div.chzn-drop').first();
      dd_top = this.container.height();
      dd_width = this.f_width - get_side_border_padding(this.dropdown);
      this.dropdown.css({
        "width": dd_width + "px",
        "top": dd_top + "px"
      });
      this.search_field = this.container.find('input').first();
      this.search_results = this.container.find('ul.chzn-results').first();
      this.search_field_scale();
      this.search_no_results = this.container.find('li.no-results').first();
      if (this.is_multiple) {
        this.search_choices = this.container.find('ul.chzn-choices').first();
        this.search_container = this.container.find('li.search-field').first();
      } else {
        this.search_container = this.container.find('div.chzn-search').first();
        this.selected_item = this.container.find('.chzn-single').first();
        sf_width = dd_width - get_side_border_padding(this.search_container) - get_side_border_padding(this.search_field);
        this.search_field.css({
          "width": sf_width + "px"
        });
      }
      this.results_build();
      this.set_tab_index();
      return this.form_field_jq.trigger("liszt:ready", {
        chosen: this
      });
    };

    Chosen.prototype.register_observers = function() {
      var _this = this;
      this.container.mousedown(function(evt) {
        return _this.container_mousedown(evt);
      });
      this.container.mouseup(function(evt) {
        return _this.container_mouseup(evt);
      });
      this.container.mouseenter(function(evt) {
        return _this.mouse_enter(evt);
      });
      this.container.mouseleave(function(evt) {
        return _this.mouse_leave(evt);
      });
      this.search_results.mouseup(function(evt) {
        return _this.search_results_mouseup(evt);
      });
      this.search_results.mouseover(function(evt) {
        return _this.search_results_mouseover(evt);
      });
      this.search_results.mouseout(function(evt) {
        return _this.search_results_mouseout(evt);
      });
      this.form_field_jq.bind("liszt:updated", function(evt) {
        return _this.results_update_field(evt);
      });
      this.form_field_jq.bind("liszt:activate", function(evt) {
        return _this.activate_field(evt);
      });
      this.form_field_jq.bind("liszt:open", function(evt) {
        return _this.container_mousedown(evt);
      });
      this.search_field.blur(function(evt) {
        return _this.input_blur(evt);
      });
      this.search_field.keyup(function(evt) {
        return _this.keyup_checker(evt);
      });
      this.search_field.keydown(function(evt) {
        return _this.keydown_checker(evt);
      });
      this.search_field.focus(function(evt) {
        return _this.input_focus(evt);
      });
      if (this.is_multiple) {
        return this.search_choices.click(function(evt) {
          return _this.choices_click(evt);
        });
      } else {
        return this.container.click(function(evt) {
          return evt.preventDefault();
        });
      }
    };

    Chosen.prototype.search_field_disabled = function() {
      this.is_disabled = this.form_field_jq[0].disabled;
      if (this.is_disabled) {
        this.container.addClass('chzn-disabled');
        this.search_field[0].disabled = true;
        if (!this.is_multiple) {
          this.selected_item.unbind("focus", this.activate_action);
        }
        return this.close_field();
      } else {
        this.container.removeClass('chzn-disabled');
        this.search_field[0].disabled = false;
        if (!this.is_multiple) {
          return this.selected_item.bind("focus", this.activate_action);
        }
      }
    };

    Chosen.prototype.container_mousedown = function(evt) {
      var target_closelink;
      if (!this.is_disabled) {
        target_closelink = evt != null ? ($(evt.target)).hasClass("search-choice-close") : false;
        if (evt && evt.type === "mousedown" && !this.results_showing) {
          evt.stopPropagation();
        }
        if (!this.pending_destroy_click && !target_closelink) {
          if (!this.active_field) {
            if (this.is_multiple) this.search_field.val("");
            $(document).click(this.click_test_action);
            this.results_show();
          } else if (!this.is_multiple && evt && (($(evt.target)[0] === this.selected_item[0]) || $(evt.target).parents("a.chzn-single").length)) {
            evt.preventDefault();
            this.results_toggle();
          }
          return this.activate_field();
        } else {
          return this.pending_destroy_click = false;
        }
      }
    };

    Chosen.prototype.container_mouseup = function(evt) {
      if (evt.target.nodeName === "ABBR" && !this.is_disabled) {
        return this.results_reset(evt);
      }
    };

    Chosen.prototype.blur_test = function(evt) {
      if (!this.active_field && this.container.hasClass("chzn-container-active")) {
        return this.close_field();
      }
    };

    Chosen.prototype.close_field = function() {
      $(document).unbind("click", this.click_test_action);
      this.active_field = false;
      this.results_hide();
      this.container.removeClass("chzn-container-active");
      this.winnow_results_clear();
      this.clear_backstroke();
      this.show_search_field_default();
      return this.search_field_scale();
    };

    Chosen.prototype.activate_field = function() {
      this.container.addClass("chzn-container-active");
      this.active_field = true;
      this.search_field.val(this.search_field.val());
      return this.search_field.focus();
    };

    Chosen.prototype.test_active_click = function(evt) {
      if ($(evt.target).parents('#' + this.container_id).length) {
        return this.active_field = true;
      } else {
        return this.close_field();
      }
    };

    Chosen.prototype.results_build = function() {
      var content, data, _i, _len, _ref;
      this.parsing = true;
      this.results_data = root.SelectParser.select_to_array(this.form_field);
      if (this.is_multiple && this.choices > 0) {
        this.search_choices.find("li.search-choice").remove();
        this.choices = 0;
      } else if (!this.is_multiple) {
        this.selected_item.addClass("chzn-default").find("span").text(this.default_text);
        if (this.disable_search || this.form_field.options.length <= this.disable_search_threshold) {
          this.container.addClass("chzn-container-single-nosearch");
        } else {
          this.container.removeClass("chzn-container-single-nosearch");
        }
      }
      content = '';
      _ref = this.results_data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        data = _ref[_i];
        if (data.group) {
          content += this.result_add_group(data);
        } else if (!data.empty) {
          content += this.result_add_option(data);
          if (data.selected && this.is_multiple) {
            this.choice_build(data);
          } else if (data.selected && !this.is_multiple) {
            this.selected_item.removeClass("chzn-default").find("span").text(data.text);
            if (this.allow_single_deselect) this.single_deselect_control_build();
          }
        }
      }
      this.search_field_disabled();
      this.show_search_field_default();
      this.search_field_scale();
      this.search_results.html(content);
      return this.parsing = false;
    };

    Chosen.prototype.result_add_group = function(group) {
      if (!group.disabled) {
        group.dom_id = this.container_id + "_g_" + group.array_index;
        return '<li id="' + group.dom_id + '" class="group-result">' + $("<div />").text(group.label).html() + '</li>';
      } else {
        return "";
      }
    };

    Chosen.prototype.result_do_highlight = function(el) {
      var high_bottom, high_top, maxHeight, visible_bottom, visible_top;
      if (el.length) {
        this.result_clear_highlight();
        this.result_highlight = el;
        this.result_highlight.addClass("highlighted");
        maxHeight = parseInt(this.search_results.css("maxHeight"), 10);
        visible_top = this.search_results.scrollTop();
        visible_bottom = maxHeight + visible_top;
        high_top = this.result_highlight.position().top + this.search_results.scrollTop();
        high_bottom = high_top + this.result_highlight.outerHeight();
        if (high_bottom >= visible_bottom) {
          return this.search_results.scrollTop((high_bottom - maxHeight) > 0 ? high_bottom - maxHeight : 0);
        } else if (high_top < visible_top) {
          return this.search_results.scrollTop(high_top);
        }
      }
    };

    Chosen.prototype.result_clear_highlight = function() {
      if (this.result_highlight) this.result_highlight.removeClass("highlighted");
      return this.result_highlight = null;
    };

    Chosen.prototype.results_show = function() {
      var dd_top;
      if (!this.is_multiple) {
        this.selected_item.addClass("chzn-single-with-drop");
        if (this.result_single_selected) {
          this.result_do_highlight(this.result_single_selected);
        }
      } else if (this.max_selected_options <= this.choices) {
        this.form_field_jq.trigger("liszt:maxselected", {
          chosen: this
        });
        return false;
      }
      dd_top = this.is_multiple ? this.container.height() : this.container.height() - 1;
      this.form_field_jq.trigger("liszt:showing_dropdown", {
        chosen: this
      });
      this.dropdown.css({
        "top": dd_top + "px",
        "left": 0
      });
      this.results_showing = true;
      this.search_field.focus();
      this.search_field.val(this.search_field.val());
      return this.winnow_results();
    };

    Chosen.prototype.results_hide = function() {
      if (!this.is_multiple) {
        this.selected_item.removeClass("chzn-single-with-drop");
      }
      this.result_clear_highlight();
      this.form_field_jq.trigger("liszt:hiding_dropdown", {
        chosen: this
      });
      this.dropdown.css({
        "left": "-9000px"
      });
      return this.results_showing = false;
    };

    Chosen.prototype.set_tab_index = function(el) {
      var ti;
      if (this.form_field_jq.attr("tabindex")) {
        ti = this.form_field_jq.attr("tabindex");
        this.form_field_jq.attr("tabindex", -1);
        return this.search_field.attr("tabindex", ti);
      }
    };

    Chosen.prototype.show_search_field_default = function() {
      if (this.is_multiple && this.choices < 1 && !this.active_field) {
        this.search_field.val(this.default_text);
        return this.search_field.addClass("default");
      } else {
        this.search_field.val("");
        return this.search_field.removeClass("default");
      }
    };

    Chosen.prototype.search_results_mouseup = function(evt) {
      var target;
      target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
      if (target.length) {
        this.result_highlight = target;
        this.result_select(evt);
        return this.search_field.focus();
      }
    };

    Chosen.prototype.search_results_mouseover = function(evt) {
      var target;
      target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
      if (target) return this.result_do_highlight(target);
    };

    Chosen.prototype.search_results_mouseout = function(evt) {
      if ($(evt.target).hasClass("active-result" || $(evt.target).parents('.active-result').first())) {
        return this.result_clear_highlight();
      }
    };

    Chosen.prototype.choices_click = function(evt) {
      evt.preventDefault();
      if (this.active_field && !($(evt.target).hasClass("search-choice" || $(evt.target).parents('.search-choice').first)) && !this.results_showing) {
        return this.results_show();
      }
    };

    Chosen.prototype.choice_build = function(item) {
      var choice_id, html, link,
        _this = this;
      if (this.is_multiple && this.max_selected_options <= this.choices) {
        this.form_field_jq.trigger("liszt:maxselected", {
          chosen: this
        });
        return false;
      }
      choice_id = this.container_id + "_c_" + item.array_index;
      this.choices += 1;
      if (item.disabled) {
        html = '<li class="search-choice search-choice-disabled" id="' + choice_id + '"><span>' + item.html + '</span></li>';
      } else {
        html = '<li class="search-choice" id="' + choice_id + '"><span>' + item.html + '</span><a href="javascript:void(0)" class="search-choice-close" rel="' + item.array_index + '"></a></li>';
      }
      this.search_container.before(html);
      link = $('#' + choice_id).find("a").first();
      return link.click(function(evt) {
        return _this.choice_destroy_link_click(evt);
      });
    };

    Chosen.prototype.choice_destroy_link_click = function(evt) {
      evt.preventDefault();
      if (!this.is_disabled) {
        this.pending_destroy_click = true;
        return this.choice_destroy($(evt.target));
      } else {
        return evt.stopPropagation;
      }
    };

    Chosen.prototype.choice_destroy = function(link) {
      if (this.result_deselect(link.attr("rel"))) {
        this.choices -= 1;
        this.show_search_field_default();
        if (this.is_multiple && this.choices > 0 && this.search_field.val().length < 1) {
          this.results_hide();
        }
        return link.parents('li').first().remove();
      }
    };

    Chosen.prototype.results_reset = function() {
      this.form_field.options[0].selected = true;
      this.selected_item.find("span").text(this.default_text);
      if (!this.is_multiple) this.selected_item.addClass("chzn-default");
      this.show_search_field_default();
      this.results_reset_cleanup();
      this.form_field_jq.trigger("change");
      if (this.active_field) return this.results_hide();
    };

    Chosen.prototype.results_reset_cleanup = function() {
      this.current_value = this.form_field_jq.val();
      return this.selected_item.find("abbr").remove();
    };

    Chosen.prototype.result_select = function(evt) {
      var high, high_id, item, position;
      if (this.result_highlight) {
        high = this.result_highlight;
        high_id = high.attr("id");
        this.result_clear_highlight();
        if (this.is_multiple) {
          this.result_deactivate(high);
        } else {
          this.search_results.find(".result-selected").removeClass("result-selected");
          this.result_single_selected = high;
          this.selected_item.removeClass("chzn-default");
        }
        high.addClass("result-selected");
        position = high_id.substr(high_id.lastIndexOf("_") + 1);
        item = this.results_data[position];
        item.selected = true;
        this.form_field.options[item.options_index].selected = true;
        if (this.is_multiple) {
          this.choice_build(item);
        } else {
          this.selected_item.find("span").first().text(item.text);
          if (this.allow_single_deselect) this.single_deselect_control_build();
        }
        if (!(evt.metaKey && this.is_multiple)) this.results_hide();
        this.search_field.val("");
        if (this.is_multiple || this.form_field_jq.val() !== this.current_value) {
          this.form_field_jq.trigger("change", {
            'selected': this.form_field.options[item.options_index].value
          });
        }
        this.current_value = this.form_field_jq.val();
        return this.search_field_scale();
      }
    };

    Chosen.prototype.result_activate = function(el) {
      return el.addClass("active-result");
    };

    Chosen.prototype.result_deactivate = function(el) {
      return el.removeClass("active-result");
    };

    Chosen.prototype.result_deselect = function(pos) {
      var result, result_data;
      result_data = this.results_data[pos];
      if (!this.form_field.options[result_data.options_index].disabled) {
        result_data.selected = false;
        this.form_field.options[result_data.options_index].selected = false;
        result = $("#" + this.container_id + "_o_" + pos);
        result.removeClass("result-selected").addClass("active-result").show();
        this.result_clear_highlight();
        this.winnow_results();
        this.form_field_jq.trigger("change", {
          deselected: this.form_field.options[result_data.options_index].value
        });
        this.search_field_scale();
        return true;
      } else {
        return false;
      }
    };

    Chosen.prototype.single_deselect_control_build = function() {
      if (this.allow_single_deselect && this.selected_item.find("abbr").length < 1) {
        return this.selected_item.find("span").first().after("<abbr class=\"search-choice-close\"></abbr>");
      }
    };

    Chosen.prototype.winnow_results = function() {
      var found, option, part, parts, regex, regexAnchor, result, result_id, results, searchText, startpos, text, zregex, _i, _j, _len, _len2, _ref;
      this.no_results_clear();
      results = 0;
      searchText = this.search_field.val() === this.default_text ? "" : $('<div/>').text($.trim(this.search_field.val())).html();
      regexAnchor = this.search_contains ? "" : "^";
      regex = new RegExp(regexAnchor + searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), 'i');
      zregex = new RegExp(searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), 'i');
      _ref = this.results_data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        option = _ref[_i];
        if (!option.disabled && !option.empty) {
          if (option.group) {
            $('#' + option.dom_id).css('display', 'none');
          } else if (!(this.is_multiple && option.selected)) {
            found = false;
            result_id = option.dom_id;
            result = $("#" + result_id);
            if (regex.test(option.html)) {
              found = true;
              results += 1;
            } else if (option.html.indexOf(" ") >= 0 || option.html.indexOf("[") === 0) {
              parts = option.html.replace(/\[|\]/g, "").split(" ");
              if (parts.length) {
                for (_j = 0, _len2 = parts.length; _j < _len2; _j++) {
                  part = parts[_j];
                  if (regex.test(part)) {
                    found = true;
                    results += 1;
                  }
                }
              }
            }
            if (found) {
              if (searchText.length) {
                startpos = option.html.search(zregex);
                text = option.html.substr(0, startpos + searchText.length) + '</em>' + option.html.substr(startpos + searchText.length);
                text = text.substr(0, startpos) + '<em>' + text.substr(startpos);
              } else {
                text = option.html;
              }
              result.html(text);
              this.result_activate(result);
              if (option.group_array_index != null) {
                $("#" + this.results_data[option.group_array_index].dom_id).css('display', 'list-item');
              }
            } else {
              if (this.result_highlight && result_id === this.result_highlight.attr('id')) {
                this.result_clear_highlight();
              }
              this.result_deactivate(result);
            }
          }
        }
      }
      if (results < 1 && searchText.length) {
        return this.no_results(searchText);
      } else {
        return this.winnow_results_set_highlight();
      }
    };

    Chosen.prototype.winnow_results_clear = function() {
      var li, lis, _i, _len, _results;
      this.search_field.val("");
      lis = this.search_results.find("li");
      _results = [];
      for (_i = 0, _len = lis.length; _i < _len; _i++) {
        li = lis[_i];
        li = $(li);
        if (li.hasClass("group-result")) {
          _results.push(li.css('display', 'auto'));
        } else if (!this.is_multiple || !li.hasClass("result-selected")) {
          _results.push(this.result_activate(li));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Chosen.prototype.winnow_results_set_highlight = function() {
      var do_high, selected_results;
      if (!this.result_highlight) {
        selected_results = !this.is_multiple ? this.search_results.find(".result-selected.active-result") : [];
        do_high = selected_results.length ? selected_results.first() : this.search_results.find(".active-result").first();
        if (do_high != null) return this.result_do_highlight(do_high);
      }
    };

    Chosen.prototype.no_results = function(terms) {
      var no_results_html;
      no_results_html = $('<li class="no-results">' + this.results_none_found + ' "<span></span>"</li>');
      no_results_html.find("span").first().html(terms);
      return this.search_results.append(no_results_html);
    };

    Chosen.prototype.no_results_clear = function() {
      return this.search_results.find(".no-results").remove();
    };

    Chosen.prototype.keydown_arrow = function() {
      var first_active, next_sib;
      if (!this.result_highlight) {
        first_active = this.search_results.find("li.active-result").first();
        if (first_active) this.result_do_highlight($(first_active));
      } else if (this.results_showing) {
        next_sib = this.result_highlight.nextAll("li.active-result").first();
        if (next_sib) this.result_do_highlight(next_sib);
      }
      if (!this.results_showing) return this.results_show();
    };

    Chosen.prototype.keyup_arrow = function() {
      var prev_sibs;
      if (!this.results_showing && !this.is_multiple) {
        return this.results_show();
      } else if (this.result_highlight) {
        prev_sibs = this.result_highlight.prevAll("li.active-result");
        if (prev_sibs.length) {
          return this.result_do_highlight(prev_sibs.first());
        } else {
          if (this.choices > 0) this.results_hide();
          return this.result_clear_highlight();
        }
      }
    };

    Chosen.prototype.keydown_backstroke = function() {
      var next_available_destroy;
      if (this.pending_backstroke) {
        this.choice_destroy(this.pending_backstroke.find("a").first());
        return this.clear_backstroke();
      } else {
        next_available_destroy = this.search_container.siblings("li.search-choice").last();
        if (next_available_destroy.length && !next_available_destroy.hasClass("search-choice-disabled")) {
          this.pending_backstroke = next_available_destroy;
          if (this.single_backstroke_delete) {
            return this.keydown_backstroke();
          } else {
            return this.pending_backstroke.addClass("search-choice-focus");
          }
        }
      }
    };

    Chosen.prototype.clear_backstroke = function() {
      if (this.pending_backstroke) {
        this.pending_backstroke.removeClass("search-choice-focus");
      }
      return this.pending_backstroke = null;
    };

    Chosen.prototype.keydown_checker = function(evt) {
      var stroke, _ref;
      stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;
      this.search_field_scale();
      if (stroke !== 8 && this.pending_backstroke) this.clear_backstroke();
      switch (stroke) {
        case 8:
          this.backstroke_length = this.search_field.val().length;
          break;
        case 9:
          if (this.results_showing && !this.is_multiple) this.result_select(evt);
          this.mouse_on_container = false;
          break;
        case 13:
          evt.preventDefault();
          break;
        case 38:
          evt.preventDefault();
          this.keyup_arrow();
          break;
        case 40:
          this.keydown_arrow();
          break;
      }
    };

    Chosen.prototype.search_field_scale = function() {
      var dd_top, div, h, style, style_block, styles, w, _i, _len;
      if (this.is_multiple) {
        h = 0;
        w = 0;
        style_block = "position:absolute; left: -1000px; top: -1000px; display:none;";
        styles = ['font-size', 'font-style', 'font-weight', 'font-family', 'line-height', 'text-transform', 'letter-spacing'];
        for (_i = 0, _len = styles.length; _i < _len; _i++) {
          style = styles[_i];
          style_block += style + ":" + this.search_field.css(style) + ";";
        }
        div = $('<div />', {
          'style': style_block
        });
        div.text(this.search_field.val());
        $('body').append(div);
        w = div.width() + 25;
        div.remove();
        if (w > this.f_width - 10) w = this.f_width - 10;
        this.search_field.css({
          'width': w + 'px'
        });
        dd_top = this.container.height();
        return this.dropdown.css({
          "top": dd_top + "px"
        });
      }
    };

    Chosen.prototype.generate_random_id = function() {
      var string;
      string = "sel" + this.generate_random_char() + this.generate_random_char() + this.generate_random_char();
      while ($("#" + string).length > 0) {
        string += this.generate_random_char();
      }
      return string;
    };

    return Chosen;

  })(AbstractChosen);

  get_side_border_padding = function(elmt) {
    var side_border_padding;
    return side_border_padding = elmt.outerWidth() - elmt.width();
  };

  root.get_side_border_padding = get_side_border_padding;

}).call(this);$.fn.fookmark = function(options) {
    var defaultDividerText = "Page",
        supportsOrientationChange = "onorientationchange" in window,
        orientationEvent = supportsOrientationChange ? "orientationchange" : "resize";

    if(!this.fookmarkOptions) {
        this.fookmarkOptions = $.extend( {
            container: $('body'),
            offset: 2,
            autoResize: false,
            itemWidth: $(this[0]).outerWidth(),
            dividerClass: "page-divider",
            resizeDelay: 50,
            pageOffset: 50,
            divider: true,
            dividerValue: defaultDividerText,
            dividerFallback: true,
            fuzzyBottom: 200,
            minHeight: 1400,
            onReflow: function() {}
        }, options);
    } else if(options) {
        this.fookmarkOptions = $.extend(this.fookmarkOptions, options);
    }

    // Layout variables.
    if(!this.fookmarkColumns) {
        this.fookmarkColumns = null;
        this.fookmarkContainerWidth = null;
    }

    // Main layout function.
    this.fookmarkLayout = function() {
        // Calculate basic layout parameters.
        var columnWidth = this.fookmarkOptions.itemWidth + this.fookmarkOptions.offset;
        var containerWidth = this.fookmarkOptions.container.width();
        var columns = Math.floor((containerWidth+this.fookmarkOptions.offset)/columnWidth);
        var offset = Math.round((containerWidth - (columns*columnWidth-this.fookmarkOptions.offset))/2);

        // If container and column count hasn't changed, we can only update the columns.
        var bottom = this.fookmarkLayoutFull(columnWidth, columns, offset);

        // Set container height to height of the grid.
        this.fookmarkOptions.container.css('height', bottom+'px');
        this.fookmarkOptions.onReflow({
            columnWidth: columnWidth,
            containerWidth: containerWidth,
            columns: columns,
            bottom: bottom
        });
    };

    this.fookmarkLayoutFull = function(columnWidth, columns, offset) {
        // Prepare Array to store height of columns.
        var viewportHeight = $(window).height(),
            itemsToPosition = $(this).toArray(),
            itemsInPage = 0,
            pageOffset = 0,
            page = 1,
            heights,
            nextTop = 0,
            nextBottom = 0,
            shortestIndex = 0,
            itemHeight,
            division,
            tallest,
            shortest,
            item,
            k,
            i;

        // Remove all dividers
        this.fookmarkOptions.container.find("." + this.fookmarkOptions.dividerClass).remove();
        heights = this.resetHeight(columns);

        while(itemsToPosition.length) {
            shortest = null;
            shortestIndex = 0;
            for(k=0; k<columns; k++) {
                if(shortest == null || heights[k] < shortest) {
                    shortest = heights[k];
                    shortestIndex = k;
                }
            }

            item = $(itemsToPosition.shift());
            itemHeight = heights[shortestIndex];
            nextTop = itemHeight + this.fookmarkOptions.offset;
            nextBottom = nextTop + item.outerHeight();

            // Determine if break is needed
            if (nextBottom - this.fookmarkOptions.fuzzyBottom > viewportHeight &&
                nextBottom - this.fookmarkOptions.fuzzyBottom > this.fookmarkOptions.minHeight &&
                itemsInPage >= columns) {
                // try and fill in gaps for remaining columns
                for (i = shortestIndex + 1; i < columns; i++) {
                    itemHeight = heights[i];
                    nextTop = itemHeight + this.fookmarkOptions.offset;
                    nextBottom = nextTop + item.outerHeight();

                    if (nextBottom - this.fookmarkOptions.fuzzyBottom < viewportHeight) {
                        heights[i] = nextBottom;
                        item.css({
                            position: "absolute",
                            top: pageOffset + itemHeight + "px",
                            left: (i * columnWidth + offset) + "px"
                        });
                        item = $(itemsToPosition.shift());
                    }
                }

                tallest = this.getTallest(heights);
                pageOffset += tallest + this.fookmarkOptions.pageOffset;
                page += 1;

                heights = this.resetHeight(columns);
                nextBottom = item.outerHeight() + this.fookmarkOptions.offset;
                itemsInPage = 0;
                shortestIndex = 0;
                itemHeight = 0;

                if (this.fookmarkOptions.divider) {
                    division = pageOffset - ((this.fookmarkOptions.pageOffset + this.fookmarkOptions.offset) / 2);

                    this.drawDivider(division, this.getDividerText(item, page));
                }
            }

            // Postion the item.
            item.css({
                position: "absolute",
                top: pageOffset + itemHeight + "px",
                left: (shortestIndex * columnWidth + offset) + "px"
            });

            // Update column height.
            heights[shortestIndex] = nextBottom;

            itemsInPage += 1;
        }

        return pageOffset + this.getTallest(heights);
    };

    this.resetHeight = function(columns) {
        var heights = [];

        while(heights.length < columns) {
            heights.push(0);
        }

        return heights;
    };

    this.getTallest = function(heights) {
        return Math.max.apply(null, heights);
    };

    this.getDividerText = function($el, page) {
        var defaultText = defaultDividerText + " " + page,
            dividerText;

        if (typeof this.fookmarkOptions.dividerValue === "function") {
            dividerText = this.fookmarkOptions.dividerValue($el);
        }
        if (!dividerText && this.fookmarkOptions.dividerFallback) {
            dividerText = defaultText;
        }

        return dividerText;
    };

    this.drawDivider = function(y, blockStr) {
        blockStr || (blockStr = "");

        var divider = "<div class='" + this.fookmarkOptions.dividerClass + "' style='" +
                        "position: absolute;" +
                        "top: " + y + "px;' " +
                        "data-block='" + blockStr + "' " +
                        "><span class='page-divider-text'>" + blockStr + "</span></div>";

        this.fookmarkOptions.container.append(divider);
    };

    // Listen to resize event if requested.
    this.fookmarkResizeTimer = null;
    if(!this.fookmarkResizeMethod) {
        this.fookmarkResizeMethod = null;
    }
    if(this.fookmarkOptions.autoResize) {
        // This timer ensures that layout is not continuously called as window is being dragged.
        this.fookmarkOnResize = function(event) {
            if(this.fookmarkResizeTimer) {
                clearTimeout(this.fookmarkResizeTimer);
            }
            this.fookmarkResizeTimer = setTimeout($.proxy(this.fookmarkLayout, this), this.fookmarkOptions.resizeDelay);
        };

        // Bind event listener.
        if(!this.fookmarkResizeMethod) {
            this.fookmarkResizeMethod = $.proxy(this.fookmarkOnResize, this);
        }
        $(window).off(orientationEvent, this.fookmarkResizeMethod);
        $(window).on(orientationEvent, this.fookmarkResizeMethod);
    }

    /**
    * Clear event listeners and time outs.
    */
    this.fookmarkClear = function() {
        if(this.fookmarkResizeTimer) {
            clearTimeout(this.fookmarkResizeTimer);
            this.fookmarkResizeTimer = null;
        }
        if(this.fookmarkResizeMethod) {
            $(window).off(orientationEvent, this.fookmarkResizeMethod);
        }
    };

    // Apply layout
    this.fookmarkLayout();

    // Display items (if hidden).
    this.show();

    return this;
};/**
 * Click tracking: go/clicktracking
 *
 * Reports clicks
 *
 */

(function() {
    "use strict";

    SU.UserClickTracking = (function() {

        var cookieNamePrefix = "ct_",
            nbCookiesForBatch = 8,
            maxCookies = 10,
            previousElementClicked = null,
            loggingInProgress = false,
            $body = $(document.body),
            maxScroll = 0; // maxScroll records the max vertical scroll during the page session


        $(window).scroll(function(evt) {
            var st = $body.scrollTop();
            if (st > maxScroll)
                maxScroll = st;
        });

        function getEdid(e) {
            var edid = '';

            edid += e.attr('data-id');
            edid += ":";
            if (e.data('type')) {
                edid += e.data('type');
            }
            edid += ":";
            edid += e.index();

            return edid;
        };

        function getData(e) {
            var result = {},
                t = e.currentTarget,
                $t = $(e.currentTarget),
                l = null,
                p = null,
                parents = null,
                i = 0,
                thref = '',
                mediator;

            // Coordonates info
            result.cx = e.clientX;
            result.cy = e.clientY;
            result.st = $body.scrollTop();
            result.sl = $body.scrollLeft();
            // max scroll info
            if (maxScroll > 0)
                result.ms = maxScroll;
            // Element info
            result.e = t.tagName;
            result.e += ':' + (t.type ? t.type : '');
            result.e += ':' + ((!t.id && t.name) ? t.name : '');
            result.e += ':' + (t.id ? t.id : '');
            result.e += ':';
            if ($t.data('type')) {
                result.e += $t.data('type');
            }
            // Extra element info
            /*
            try {
                mediator = require("module/mediator");
                if (mediator) {
                    mediator.trigger("tracking:getModel", e, function (model, index) {
                        // Get the model name if possible
                    })
                }
            } catch (err) {}
            */

            // Try to get a data-id either from the element or a parent
            if ($t.data('id') !== undefined) {
                result.edid = getEdid($t);
            } else {
                parents = $t.parents();
                l = parents.length;
                for (i = 0 ; i < l ; i++) {
                    var p = $(parents[i]);
                    if (p.data('id') !== undefined) {
                        result.edid = getEdid(p);
                        break;
                    }
                }
            }

            // origin url
            result.ou = window.location.href;
            // target url
            thref = $t.attr('href');
            if (t.tagName == 'A' && thref && thref != '#') {
                result.tu = t.href;
            }
            result.t = new Date().getTime();

            return result;
        };

        function S4() {
            return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
        };

        function getClickCookies() {
            var a = document.cookie.match(/ct_[0-9]{13}_[0-9a-z]{4}=/gi);
            if (a) {
                return a.length;
            }
            return 0;
        };

        return {
            logClickFromMouseDownUp: function(e) {
                if (e._suEventLogged) {
                    return;
                }
                e._suEventLogged = true;
                if (e.type == "mousedown") {
                    previousElementClicked = e.currentTarget;
                    return;
                }
                if (e.currentTarget != previousElementClicked) {
                    return;
                }
                SU.UserClickTracking.logClick(e);
            },

            logClick: function(e) {
                var nbCookies = getClickCookies(),
                    data,
                    cookieName,
                    cookieValue;

                if (nbCookies < maxCookies) {
                    data = getData(e);
                    // Create the cookie
                    cookieName = cookieNamePrefix + data.t + "_" + S4();
                    cookieValue = $.param(data);
                    document.cookie = cookieName + "=" + cookieValue + "; ; path=/; ;";
                }

                if (nbCookies+1 >= nbCookiesForBatch && !loggingInProgress) {
                    loggingInProgress = true;
                    $.ajax("/p", {
                        complete: function() {
                            loggingInProgress = false;
                        }
                    });
                }
            }
        };

    })();

    // Install click tracking when page is loaded
    $(function() {
        $(document.body).on("mousedown mouseup", "a, .btn, input, textarea", SU.UserClickTracking.logClickFromMouseDownUp);
    });

}).call(this);/**
 * Class_toggle extends jquery and zepto
 * adds ability to add arbitrary class on event
 */

(function(){
    $.fn.classToggle = function(options) {
        var opts = $.extend({}, $.fn.classToggle.defaults, options),
            $self = $( this ),
            $targ; 
        if ( !opts.targElem ){
            return;
        }
        $targ = $( opts.targElem );

        function toggler() {
            $( opts.targElem ).toggleClass( opts.newClass );
        }

        if ( opts.onEvent == 'hover' ){
//            $self.hover( function (){ toggler(); toggler(); });
            $self.bind('mouseenter mouseleave', toggler() );
console.log('bear');
        } else {
            $self.bind( opts.onEvent, function(){
                toggler();
                console.log('pooh');
            });
        }
    };
    $.fn.classToggle.defaults = {
        "onEvent" : "hover",
        "newClass" : "active",
        "targElem" : false
    };
    // Call init
}).call(this);/**
 * toolbar_action.js
 *
 * Facade to send calls to the toolbars
 *
 * @author fabrice
 */
(function(){
    SU.ToolbarAction = {

        _hasCorrectExtension: function() {
            if (typeof suExtensionApi == "undefined") {
                return false;
            }

            var info = suExtensionApi._info;
            if (!info) {
                return false;
            }

            if ($.inArray(info.provider, ["webtb", "ios", "android"]) > -1) {
                return true;
            }

            if ((info.provider == "chromebar") && (parseInt(info._providerVersion) >= 4)) {
                return true;
            }

            return false;
        },

        _getWebTb: function() {
            if (SU.WebToolbar) {
                return SU.WebToolbar;
            } else if (top.SU && top.SU.WebToolbar) {
                return top.SU.WebToolbar;
            }
            return null;
        },

        _getChromebar: function() {
            try {
                var el = document.getElementById("__su__tbcont");
                if(el) {
                    return el.contentWindow;
                }
            } catch (err) {}
            return null;
        },

        _convertModeToChromebar: function(mode) {
            // Copy the existing mode, then change it
            var modeCopy = jQuery.extend({}, mode);
            var chromebar_mode = {mode: modeCopy};
            chromebar_mode.mode.method = mode.mode;
            if (chromebar_mode.mode.method == 'videos'){chromebar_mode.mode.method = 'video';}else if (chromebar_mode.mode.method == 'photos')
            {
                chromebar_mode.mode.mode   = 'topic';
                chromebar_mode.mode.method = 'topic';
                chromebar_mode.mode.topic  = 302;
            }
            delete chromebar_mode.mode.mode;
            if (mode.contextual)
            {
                chromebar_mode.label = mode.contextual;
            }
            return chromebar_mode;
        },
        /**
         * Tell the toolbar to start stumbling.
         * if mode is null, the current mode is not changed
         * if a nextpid is given, the mode (if not null) will change
         * but the next displayed stumble is the nextpid given
         * nextpid can also be passed as a property in the mode object (precedence to the second arg)
         */
        stumble: function(mode, nextpid) {
            SU.log('TA: stumble button clicked');
            if (!nextpid && mode != null && typeof mode.nextpid != 'undefined'){nextpid = mode.nextpid;}

            // Check if mozbar installed
            if (typeof suExtensionApi != 'undefined' && suExtensionApi.getProviderInfo)
            {
                suExtensionApi.getProviderInfo(function(info){providerInfo = info;});
                if (providerInfo.provider == "mozbar")
                {
                    if (mode != null)
                    {
                        mode.method = mode.mode;
                        if (mode.mode == 'stumblethru'){mode.domain = mode.partner;}
                        if (mode.mode == 'topic'){mode.topicid = mode.topic;}
                        if (mode.mode == 'tag'){mode.tag = mode.q;}
                        if (mode.mode == 'instumbler' && mode.stumblername){mode.stumbler = mode.stumblername + '';} // We need to be sure we have a string and not a number here
                        if (mode.mode == 'stumblelist') {mode.listid = mode.s_prefixed_listid.substring(1);}

                        if (mode.mode == 'photos')
                        {
                            mode.method  = 'topic';
                            mode.topicid = 302;
                        }
                        if (mode.mode == 'all'){mode.method = 'general';}
                        if (mode.mode == 'videos'){mode.method = 'video';}
                        if (mode.mode == 'channels'){mode.method = 'channel';}
                        suExtensionApi.stumble.setMode(mode);
                    }

                    if (nextpid)
                    {
                        try {
                            window.top.location.href = '/su/' + nextpid;
                            return true;
                        } catch (err) {}
                        window.location.href = '/su/' + nextpid;
                    } else {suExtensionApi.stumble.stumble();}
                    return true;
                }
                else if (providerInfo.provider == "chromebar")
                {
                    if (mode == null && suExtensionApi.stumble)
                    {
                        suExtensionApi.stumble.stumble();
                        return true;
                    }

                    // todo:  Why is this necessary?  Something seems whack
                    delete mode.stumblername;

                    // New toolbars directly support stumble functionality
                    suExtensionApi.stumble.setMode(mode, function() {
                        if (nextpid)
                        {
                            try {
                                window.top.location.href = '/su/' + nextpid;
                            } catch (err) {}
                            window.location.href = '/su/' + nextpid;
                        } else {suExtensionApi.stumble.stumble();}
                    });
                    return true;
                }
                else if (providerInfo.provider == "ios" || providerInfo.provider == "android")
                {
                    if (mode)
                    {
                        switch (mode.mode)
                        {
                            case 'instumbler':
                                mode.mode    = 'user';
                                mode.userids = [ mode.stumbler ];
                                break;

                            case 'stumblethru':
                                mode.mode    = 'domain';
                                mode.domains = [ mode.partner ];
                                break;

                            case 'tag':
                                mode.mode    = 'keyword';
                                mode.keyword = mode.q;
                                break;

                            case 'topic':
                                mode.mode      = 'interest';
                                mode.interests = [ mode.topic ];
                                break;

                            case 'friends':
                                mode.mode = 'following';
                                break;

                            case 'related_url':
                                mode.url = mode.related_url;
                                break;

                            case 'videos':
                                mode.mode      = 'video';
                                mode.interests = [ mode.topic ];
                                mode.domains   = [ mode.partner ];
                                break;
                        }
                    }
                }
            }

            if (mode != null){delete mode.stumblername;}

            // Check if webtb suExtensionApi present
            if (this._hasCorrectExtension())
            {
                SU.log('TA:stumble:using broadcastMessage');
                if (mode){suExtensionApi.message.broadcastMessage('externalModeSelect', mode);}
                SU.log('TA:stumble:posting stumbleNow');
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'stumbleNow', true);
                return true;
            }

            SU.log('TA:stumble:Checking for webtb');
            // Check if webtoolbar installed without suExtensionApiWebTb instantiated
            var _webtb = this._getWebTb();

            if (_webtb)
            {
                try
                {
                    if (mode)
                    {
                        SU.log('TA:stumble:setting the stumble mode');
                        _webtb.setStumblingMode(mode);
                        if (mode.contextual){_webtb.setModeLabel(mode.contextual);}
                    }
                    SU.log('TA:stumble:performing the stumble');
                    _webtb.performStumble(null, nextpid);
                    return true;
                }
                catch (err) {
                    SU.log('TA:stumble:error occured performing stumble: ' + err.message);
                }
            }
            SU.log('TA:stumble:falling back to stumble link method');

            // We fallback to a basic link because we don't have any toolbar installed
            return this._stumblelink(mode, nextpid);
        },

        _stumblelink: function(mode, nextpid) {
            var stumblelink = '/to/stumble/go';
            if (mode)
            {
                switch (mode.mode)
                {
                case 'topic':
                    if (mode.topic){stumblelink = '/to/stumble/topic:' + mode.topic;}
                    break;
                case 'videos':
                case 'news':
                case 'photos':
                case 'friends':
                    stumblelink = '/to/stumble/metatopic:' + mode.mode;
                    break;
                case 'instumbler':
                    if (mode.stumbler){stumblelink = '/to/stumble/stumbler:' + mode.stumbler;}
                    break;
                case 'stumblethru':
                    if (mode.partner){stumblelink = '/to/stumble/stumblethru:' + mode.partner;}
                    break;
                case 'tag':
                    if (mode.q){stumblelink = '/to/stumble/tag:' + mode.q;}
                    break;
                case 'stumblelist':
                    // We use s_prefixed_listid because jquery data attributes are cast as floats for big numbers
                    if (mode.s_prefixed_listid) {
                        stumblelink = '/to/stumble/stumblelist:'+mode.s_prefixed_listid.substring(1);
                    }
                }
            }

            if (nextpid) {
                stumblelink += ';pid=' + nextpid;
            }
            stumblelink += ';src=website';
            if (nextpid && mode.m){stumblelink += '?m=' + encodeURIComponent(mode.m);}
            try {
                window.top.location.href = stumblelink;
                return true;
            } catch (err) {}
            window.location.href = stumblelink;

            return true;
        },

        _getFullPath: function(url) {
            var ourOrigin,
                regex,
                match;
            // Turn relative paths into full paths
            if (url.match(/^https?:/))
                return url;

            // If it starts with '/', then append it to our domain
            if (url.indexOf("/") === 0) {
                regex = /^https?:\/\/[^\/]*/;
                ourOrigin = document.location.href.match(regex)[0];
                url = ourOrigin + url;
                return url;
            }

            // It doesn't start with '/' or 'https?:', use the current path to build the url
            regex = /(.*\/)/; // Greedily grab everything up to the last /
            match = document.body.baseURI.match(regex);
            url = match[0] + url;
            return url;
        },

        rate: function(pid, rating) {
            // Check if suExtensionApi present
            if (this._hasCorrectExtension())
            {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'rate', {pid: pid, rating: rating});
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    if (_webtb.currentStumble.publicid == pid
                            && $.inArray(rating, [1, 0, -1]) != -1){_webtb.performRating(rating);}
                }
            }
        },

        subrate: function(pid, subrating) {
            if (this._hasCorrectExtension())
            {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener,
                        'thumbDownMenu_subrate',
                        {pid: pid, subrating: subrating});
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.onMessage('thumbDownMenu_subrate', {
                        pid: pid,
                        subrating: subrating
                    }, null);
                }
            }
        },

        blocksite: function(pid, blocksite) {
            if (this._hasCorrectExtension())
            {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener,
                        'thumbDownMenu_blocksite',
                        {pid: pid, blocksite: blocksite});
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.onMessage('thumbDownMenu_blocksite', {
                        pid: pid,
                        blocksite: blocksite
                    }, null);
                }
            }
        },

        showShare: function(sharePid, sharedUrl, webbarUrl) {
            sharedUrl = this._getFullPath(sharedUrl);
            webbarUrl = this._getFullPath(webbarUrl);
            if (suExtensionApi && suExtensionApi.overlay && suExtensionApi.overlay.showUrlWithOverlay) {
                var messageUrl = '/su/overlay/sharemsg?sharepid=' + encodeURIComponent(sharePid) + '&markseen=1';
                messageUrl = this._getFullPath(messageUrl);
                var options = {
                    url: messageUrl,
                    position: { top: 0, height: 40 },
                    css: {
                        "width": "100%",
                        "box-shadow" : "2px 6px 6px rgba(0,0,0,0.2), -2px 6px 6px rgba(0,0,0,0.2)",
                        "background-color" : "#F1F1EE"
                    }
                };
                suExtensionApi.overlay.showUrlWithOverlay(sharedUrl, 'share-panel', options);
            } else {
                SU.ToolbarAction.navigateWithOAuth(webbarUrl);
            }
        },

        openSharePanel: function(pid) {
            if (this._hasCorrectExtension())
            {
                var info = suExtensionApi._info;
                if (suExtensionApi.overlay.opener) {
                    var target = suExtensionApi.overlay.opener;
                } else if (info.provider == 'chromebar') {
                    var target = document.getElementById('__su__toolbar').contentWindow.suExtensionApi;
                }

                suExtensionApi.message.postMessage(target, 'showSharePanel', {pid: pid});
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.showSharePanel(pid);
                }
            }
        },

        showShareMessageReply: function(pid) {
            if (this._hasCorrectExtension())
            {
                if (suExtensionApi.message.postToCurrentBar) {
                    suExtensionApi.message.postToCurrentBar('showShareMessageReply', pid);
                } else {
                    suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'showShareMessageReply', pid);
                }
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.onMessage('showShareMessageReply', pid, null);
                }
            }
        },

        displayNotification: function(data) {
            if (this._hasCorrectExtension())
            {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'displayNotification', data);
                return true;
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    try
                    {
                        _webtb.displayNotification(data);
                    }
                    catch (err)
                    {
                        return false;
                    }
                    return true;
                }
            }
            return false;
        },

        closeOverlay: function(data) {
            if (this._hasCorrectExtension())
            {
                if (suExtensionApi.message.postToCurrentBar)
                    suExtensionApi.message.postToCurrentBar('overlayClose', data);
                else
                    suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'overlayClose', data);
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.overlayManager.closeOverlay(data);
                }
            }
        },

        destroyOverlay: function(id) {
            var _webtb;

            if (this._hasCorrectExtension()) {
                if (suExtensionApi.message.postToCurrentBar)
                    suExtensionApi.message.postToCurrentBar('overlayDestroy', id);
                else
                    suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'overlayDestroy', id);
            }
            else {
                _webtb = this._getWebTb();
                if (_webtb)
                    _webtb.overlayManager.destroyOverlay(id);
            }
        },

        handleImplication: function(data) {
            if (this._hasCorrectExtension()) {
                    suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'handleImplication', data);
            } else {
                var _webtb = this._getWebTb();
                if (_webtb) {
                    _webtb.handleImplication(data);
                }
            }
        },

        implicationSubmit: function(response) {
            if (this._hasCorrectExtension()) {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'implicationSubmit', response);
            } else {
                var _webtb = this._getWebTb();
                if (_webtb) {
                    _webtb.handleImplication(data);
                }
            }
        },

        resizePanel: function(data) {
            if (this._hasCorrectExtension())
            {
                suExtensionApi.message.postMessage(suExtensionApi.overlay.opener, 'resizePanel', data);
            }
            else
            {
                var _webtb = this._getWebTb();
                if (_webtb)
                {
                    _webtb.overlayManager.repositionOverlay(data.id, data.size);
                }
            }
        },

        navigateWithOAuth: function(url) {
            // If there's no extension api then just navigate the top frame
            if (!suExtensionApi || !suExtensionApi.litebar) {
                window.top.location = url;
                return;
            }

            // Convert it to a full path
            url = this._getFullPath(url);

            // Make sure the url we are adding the tokens to is for our own domain
            var regex = /^https?:\/\/([^\/]*?)(\/|$)/;
            var match = url.match(regex);
            if (!match || (match[1] != document.domain)) {
                window.top.location = url;
                return;
            }

            suExtensionApi.litebar.getOAuthInfo(function(info) {
                if (info) {
                    // We are going to append credentials, make sure we're using https
                    if(url.match(/^http\:/))
                        url = url.replace("http:", "https:");

                    // Now append the args (respecting any existing url args)
                    var argIndex = url.indexOf('?');
                    if (argIndex == -1)
                        url += '?';
                    else
                        url += '&';
                    url += 'x_su_consumer_key=' + info.consumer_key + '&x_su_access_token_key=' + info.token;

                    suExtensionApi.litebar.setContentLocation(url);

                } else {
                    window.top.location = url;
                }
            });
        },

        /**
         * If we are using an extension with OAuth credentials, this function will ensure we
         * open an authenticated session before navigating a site url.
         */
        sessionNavigate: function(url) {
            // If there's no extension api then just navigate the top frame
            if (!suExtensionApi || !suExtensionApi.litebar) {
                window.top.location = url;
                return;
            }

            suExtensionApi.litebar.getOAuthInfo(function(info) {
                if (info) {
                    // Build the session url with the tokens and the final landing page
                    var sessionUrl = "https://www.stumbleupon.com/su/api/startSession";
                    sessionUrl += '?x_su_consumer_key=' + info.consumer_key + '&x_su_access_token_key=' + info.token;
                    sessionUrl += '&url=' + encodeURIComponent(url);
                    suExtensionApi.litebar.setContentLocation(sessionUrl);

                } else {
                    window.top.location = url;
                }
            });
        },

        /**
         * logs the toolbar in
         * expects data to contain an array of data with the keys userid, hashedPassword and username
         *
         * currently this function only sure to work for mozbar
         *
         */
        login: function(data) {
            // Wait for the extension API to be available and ready
            if((typeof(suExtensionApi) == "undefined") || !suExtensionApi.isReady())
            {
                // Wait for the script ready event
                if (window.addEventListener){window.addEventListener("suScriptReadyExtensionApi", SU.ToolbarAction.doLogin(data), false);}else if (window.attachEvent){window.attachEvent("suScriptReadyExtensionApi", SU.ToolbarAction.doLogin(data));}
            }
            else
            {
                SU.ToolbarAction.doLogin(data);
            }

        },

        /*
         * performs a Sync(url).update, but adds OAuth params if they are available from the extension api
         *
         */
        syncUpdateWithOAuth: function(url, params, fnComplete) {
            try {
                suExtensionApi.litebar.getOAuthInfo(function(info){
                    params.x_su_consumer_key     = info.consumer_key;
                    params.x_su_access_token_key = info.token;
                    Sync(url).update(params).complete(fnComplete);
                });
            } catch (err) {
                Sync(url).update(params).complete(fnComplete);
            }
        },

        /**
         * This function actually does the login...currently works only with mozbar
         *
         */
        doLogin: function(data) {
            var do_login = 0, provider, version;
            suExtensionApi.getProviderInfo(function(info){provider = info.provider;version=info.providerVersion;});
            if (provider == 'mozbar' && parseFloat(version) >= 3.73){do_login = 1;}
            if (do_login && typeof(suExtensionApi) != "undefined") {
                suExtensionApi.message.broadcastMessage("msgLogin", data);
                location.reload();
            }
        },

        /**
         * Sends the new list of topics for the currently logged in user to the toolbar
         * @param topics: an object or an array.  If an object, then in the form:
         *          { topicid: topicname, topicid: topicname, ...}
         *          { 504: 'Photography', 21: 'Music', ...}
         *
         *      If an array then just an array of topic ids:
         *          [ "38", "49", "224", ... ]
         */
        updateTopics: function(topics) {
            try {
                if (suExtensionApi && suExtensionApi.oldbar && suExtensionApi.oldbar.processCommands)
                {
                    var command = "UPDATETOPICS ";
                    var isArray = (typeof(topics.length) != "undefined");
                    for (var key in topics) {
                        var topicId = isArray ? topics[key] : key;
                        command += topicId + " ";
                    }
                    suExtensionApi.oldbar.processCommands(command);
                }
            } catch (err) {}
        },

        /**
         * Invokes a callback when the extension api is ready
         *
         * @param callback: function(found)
         *                  Invokes the callback with found=true if the extension API was found
         *                  Invokes the callback with found=false if the wait timed out
         * @param timeout:  ms to wait for the extension api before calling callback(false) if it is not found
         */
        waitForExtensionApi: function(callback, timeout) {
            var finished = false;
            if ((typeof(suExtensionApi) != 'undefined') && suExtensionApi.isReady()) {
                callback(true);
                return;
            }

            if (timeout) {
                window.setTimeout(function() {
                    if (!finished) {
                        finished = true;
                        callback(false);
                    }
                }, timeout);
            }

            window.addEventListener('suScriptReadyExtensionApi', function() {
                if (!finished) {
                    finished = true;
                    callback(true);
                }
            }, false);
        }
    };

    SU.addInit("toolbarLogin", function(data) {
        SU.ToolbarAction.login(data);
    });
}).call(this);// Globals
var define,
    require,
    _loadedMods;

(function() {
    var modules = _loadedMods = {
        jQuery: jQuery,
        underscore: _,
        Backbone: Backbone
    };

    define = function(fn, name) {
        if (!name) {
            throw "Module name is required as second param";
        }

        modules[name] = fn.call(null, require, {}, {});
    };

    require = function(deps, fn) {
        var depModules;

        if (fn) {
            deps || (deps = []);
            depModules = loadDeps(deps);
            depModules = fn.apply(null, depModules);
        } else {
            deps = [deps];
            depModules = loadDeps(deps)[0];
        }

        return depModules;
    };

    function loadDeps(deps) {
        var depModules = [],
            dep,
            i;

        for (i = 0; i < deps.length; i++) {
            dep = modules[deps[i]];
            if (dep) {
                depModules.push(dep);
            }
        }

        return depModules;
    }
}).call(this);define(function() {
    var _ = require("underscore"),
        Backbone = require("Backbone"),
        parentMediator,
        mediator;

    mediator = _.extend({

    }, Backbone.Events);

    try {
        parentMediator = window.parent.require("module/mediator");
        if (parentMediator) {
            mediator = parentMediator;
        }
    } catch (e) { }

    return mediator;
}, "module/mediator");/**
 * master_init.js
 * global js init called from master
 */

(function(){
    "use strict";

    SU.addInit("gMasterInit", function(config){
        var CacheManager = require("module/cache_manager"),
            HeaderView = require('module/views/header_view'),
            HelpTip = require('module/help_tip'),
            UserHoverCard = require("module/user_hover_card"),
            ActionDropdown = require("module/action_dropdown"),
            tutorialStateMachine = require("module/routers/tutorial_machine"),
            adxMachine = require("module/routers/adx_machine"),
            DnaHover = require("module/hover_tip"),
            Rocket = require("module/rocket"),
            rocketOffset;

        try {
            rocketOffset = $(".content-primary").offset().top;
        } catch (e) {
            rocketOffset = 400;
        }

        $.fn.qtip.zindex = 5;

        new CacheManager();
        new DnaHover({
            wrapper: "body"
        });

        new HeaderView({
            el: '#header-top',
            visitor: config.visitor
        });

        new Rocket({
            el: ".rocket",
            offset: rocketOffset,
            paddingY: 40
        });
        new ActionDropdown({
            target: $(".admin-controls"),
            actionsTarget: $(".admin-actions"),
            show: {
                event: "mouseenter"
            },
            hide: {
                event: "mouseleave",
                fixed: true,
                delay: 150
            }
        });

        new UserHoverCard({
            target: ".hover-user",
            viewer: config.viewer
        });
        new HelpTip({
            target: ".tutorial-tip"
        });

        if (config.viewer && config.viewer.messages) {
            tutorialStateMachine.initialize({
                tutorialUrls: config.viewer.messages
            });
        }

        if (config.viewer && config.viewer.adxMessages) {
            adxMachine.initialize({
                adxUrls: config.viewer.adxMessages
            });
        }

    });
}).call(this);/*! http://mths.be/placeholder v2.0.7 by @mathias */
;(function(f,h,$){var a='placeholder' in h.createElement('input'),d='placeholder' in h.createElement('textarea'),i=$.fn,c=$.valHooks,k,j;if(a&&d){j=i.placeholder=function(){return this};j.input=j.textarea=true}else{j=i.placeholder=function(){var l=this;l.filter((a?'textarea':':input')+'[placeholder]').not('.placeholder').bind({'focus.placeholder':b,'blur.placeholder':e}).data('placeholder-enabled',true).trigger('blur.placeholder');return l};j.input=a;j.textarea=d;k={get:function(m){var l=$(m);return l.data('placeholder-enabled')&&l.hasClass('placeholder')?'':m.value},set:function(m,n){var l=$(m);if(!l.data('placeholder-enabled')){return m.value=n}if(n==''){m.value=n;if(m!=h.activeElement){e.call(m)}}else{if(l.hasClass('placeholder')){b.call(m,true,n)||(m.value=n)}else{m.value=n}}return l}};a||(c.input=k);d||(c.textarea=k);$(function(){$(h).delegate('form','submit.placeholder',function(){var l=$('.placeholder',this).each(b);setTimeout(function(){l.each(e)},10)})});$(f).bind('beforeunload.placeholder',function(){$('.placeholder').each(function(){this.value=''})})}function g(m){var l={},n=/^jQuery\d+$/;$.each(m.attributes,function(p,o){if(o.specified&&!n.test(o.name)){l[o.name]=o.value}});return l}function b(m,n){var l=this,o=$(l);if(l.value==o.attr('placeholder')&&o.hasClass('placeholder')){if(o.data('placeholder-password')){o=o.hide().next().show().attr('id',o.removeAttr('id').data('placeholder-id'));if(m===true){return o[0].value=n}o.focus()}else{l.value='';o.removeClass('placeholder');l==h.activeElement&&l.select()}}}function e(){var q,l=this,p=$(l),m=p,o=this.id;if(l.value==''){if(l.type=='password'){if(!p.data('placeholder-textinput')){try{q=p.clone().attr({type:'text'})}catch(n){q=$('<input>').attr($.extend(g(this),{type:'text'}))}q.removeAttr('name').data({'placeholder-password':true,'placeholder-id':o}).bind('focus.placeholder',b);p.data({'placeholder-textinput':q,'placeholder-id':o}).before(q)}p=p.removeAttr('id').hide().prev().attr('id',o).show()}p.addClass('placeholder');p[0].value=p.attr('placeholder')}else{p.removeClass('placeholder')}}}(this,document,jQuery));var _vwo_code=(function(){
    var account_id=30464,
    settings_tolerance=2000,
    library_tolerance=1500,
    use_existing_jquery=true,
    // DO NOT EDIT BELOW THIS LINE
    f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();