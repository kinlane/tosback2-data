if(typeof KIDS=="undefined"||!KIDS){var KIDS={};
}KIDS.IS_DEV=(window.location.hostname.indexOf("localhost")>=0||window.location.hostname.indexOf("d.mtvi.com")>0||window.location.port==9090);
KIDS.IS_QA=window.location.hostname.indexOf("q.mtvi.com")>0;
KIDS.IS_DEV_ENV=KIDS.IS_DEV||KIDS.IS_QA;
KIDS.IS_LIVE=!KIDS.IS_DEV_ENV;
KIDS.IS_DEBUG=KIDS.IS_DEV_ENV&&window&&typeof window.console!=="undefined";
KIDS.namespace=function(e,c){c=c==null?KIDS:c;
var b=e,k=null,g,f,h;
h=e.split(".");
k=c;
for(f=(h[0]==c)?1:0;
f<h.length;
f++){k[h[f]]=k[h[f]]||{};
k=k[h[f]];
}return k;
};
KIDS.namespace("utils",KIDS);
KIDS.utils.URL_DEV_NICK="www.nick-d.mtvi.com";
KIDS.utils.URL_QA_NICK="www.nick-q.mtvi.com";
KIDS.utils.URL_LIVE_NICK="www.nick.com";
KIDS.utils.URL_DEV_NICK_GAMES="games.nick-d.mtvi.com";
KIDS.utils.URL_QA_NICK_GAMES="games.nick-q.mtvi.com";
KIDS.utils.URL_LIVE_NICK_GAMES="games.nick.com";
KIDS.utils.isEmptyString=function(a){return a==null||a==undefined||a==""||a==="undefined"||a=="null";
};
KIDS.utils.trim=function(a){return a==null?"":a.replace(/^\s+|\s+$/g,"");
};
KIDS.utils.isValidEmail=function(b){if(KIDS.utils.isEmptyString(b)){return false;
}var a=/^([a-z0-9_\-\.%])+\@([A-Za-z0-9_\-\.])+\.([a-z]{2,4})$/i;
return a.test(b);
};
KIDS.utils.getCookie=function(c){if(KIDS.utils.isEmptyString(c)){return null;
}var a=document.cookie.toString();
if(a.length>0){var d=a.indexOf(c+"=");
if(d!=-1){d+=c.length+1;
var b=a.indexOf(";",d);
if(b==-1){b=a.length;
}return unescape(a.substring(d,b));
}}return null;
};
KIDS.utils.getDomain=function(){return window.location.hostname;
};
KIDS.utils.getNickDomain=function(){if(KIDS.IS_LIVE){return KIDS.utils.URL_LIVE_NICK;
}else{if(KIDS.IS_QA){return KIDS.utils.URL_QA_NICK;
}else{return KIDS.utils.URL_DEV_NICK;
}}};
KIDS.utils.getNickGamesDomain=function(){if(KIDS.IS_LIVE){return KIDS.utils.URL_LIVE_NICK_GAMES;
}else{if(KIDS.IS_QA){return KIDS.utils.URL_QA_NICK_GAMES;
}else{return KIDS.utils.URL_DEV_NICK_GAMES;
}}};
KIDS.utils.getQueryString=function(c){if(c==null){return"";
}var a="";
for(var b in c){if(!b||!c[b]){continue;
}if(a!=""){a+="&";
}a+=b+"="+escape(c[b]);
}return a;
};
KIDS.utils.getGdcXml=function(d,c){var b='<answers collectionID="'+d+'">';
for(var a in c){b+='<answer tag="'+a+'"><![CDATA['+c[a]+"]]></answer>";
}b+="</answers>";
return b;
};
KIDS.utils.getSwf=function(a){if(navigator.appName.indexOf("Microsoft")!=-1){return window[a];
}else{if(document[a]!=null&&document[a].length!=undefined){return document[a][1];
}return document[a];
}};
KIDS.utils.trimArray=function(a,c){if(a==null){return null;
}for(var b=0;
b<a.length;
b++){a[b]=c?a[b].toLowerCase():a[b];
a[b]=KIDS.utils.trim(a[b]);
}return a;
};
KIDS.utils.getUrlParts=function(b){var a=b.replace("//","/").split("/");
return a;
};
KIDS.utils.getUrlPath=function(c){var b=KIDS.utils.getUrlParts(c);
var d;
if(c.indexOf("http://")>-1){d=b.splice(0,2).join("/");
}var a=b.join("/");
return a;
};
KIDS.utils.getContextPath=function(a,b,e,f){var d=getUrlPath(a);
if(e&&d.lastIndexOf(".")>=0){d=d.substring(0,d.lastIndexOf("."));
}b=b==null||b==""?"":b;
var c=new RegExp("^"+b+"/","i");
d=d.replace(c,"");
if(f){d=d.replace(/\/index$/i,"");
}d=d.replace(/\/$/,"");
if(d.indexOf("/")>=0){d=d.replace(/\/$/,"");
}if(d==""){d="hub";
}d=b+"_"+d;
return d;
};
KIDS.properties=null;
KIDS.add=function(a,b){if(a==null||a==""){return;
}if(KIDS.properties==null){KIDS.properties={};
}KIDS.properties[a]=b;
};
KIDS.get=function(a){if(a==null||a==""){return null;
}if(KIDS.properties==null){return null;
}return KIDS.properties[a];
};
KIDS.utils.printObj=function(c){if(!c){NickLog.debug(">PrintObj: ["+c+"] -"+typeof(c));
}NickLog.debug(">PrintObj: type: "+typeof(c));
if(typeof(c)!="object"){return;
}for(var b in c){try{NickLog.debug(">PrintObj: key: "+b+" | "+c[b]);
}catch(a){NickLog.debug(">PrintObj: error: "+b+" | "+a);
}}};
KIDS.utils.doLog=function(a){NickLog.debug(a,false,arguments);
};
KIDS.utils.isNumeric=function(c){var b=true;
try{b=!isNaN(parseFloat(c))&&isFinite(c);
}catch(a){b=false;
}return b;
};
KIDS.utils.parseInt=function(c){var a=-1;
try{a=!isNaN(parseInt(c))&&isFinite(c)?parseFloat(c):-1;
}catch(b){a=-1;
}return a;
};
KIDS.utils.parseFloat=function(c){var a=-1;
try{a=!isNaN(parseFloat(c))&&isFinite(c)?parseFloat(c):-1;
}catch(b){a=-1;
}return a;
};
KIDS.utils.openBumper=function(a,e,h,b,g,f,d,c){NickLog.warn("openBumper: site specific override missing!");
window.open(e);
};

var NICK_LOG_ERROR=0;
var NICK_LOG_WARNING=2;
var NICK_LOG_DEBUG=4;
var NICK_LOG_INFO=8;
var NICK_LOG_FATAL=22;
var NickLog=function(){var f=KIDS&&KIDS.IS_DEBUG;
var d=f&&typeof window.console.log!="undefined";
var a=f&&!!window.console.firebug;
var b=f&&console.log.apply==="function";
function e(h){var g=h.callee.caller;
var i=[];
while(g!=null){var j=g.name||c(g.toString());
if(j.length!==0){i.push(j);
}g=g.caller;
}return"["+i.reverse().join(" -> ")+"]";
}function c(g){var h=/function\s*([\w\-$]+)?\s*\(/i;
return h.test(g)?RegExp.$1:"";
}return{addMessage:function(j,i,g,h){if(!f){return;
}if(a){var k;
switch(i){case NICK_LOG_FATAL:j="[FATAL]: "+j;
case NICK_LOG_ERROR:k="error";
break;
case NICK_LOG_WARNING:k="warn";
break;
case NICK_LOG_INFO:k="info";
break;
default:k="log";
}console[k](j+"\t%o",h.callee.caller);
if(g===true){console.trace();
}}else{if(d){if(b){window.console.log.apply(window.console,arguments);
}else{console.log(j);
}}}if(g===true&&!b&&!a){console.log("Stack: "+e(h));
}},debug:function(i,g,h){this.addMessage(i,NICK_LOG_DEBUG,g,h||arguments);
},warn:function(g){this.addMessage(g,NICK_LOG_WARNING,false,arguments);
},error:function(g){this.addMessage(g,NICK_LOG_ERROR,false,arguments);
},info:function(g){this.addMessage(g,NICK_LOG_INFO,false,arguments);
},fatal:function(g){this.addMessage(g,NICK_LOG_FATAL,false,arguments);
}};
}();

function init(){window.name="parentsWindow";
}function extlink(b){var a=window.open(b,"external","toolbar=yes,location=yes,directories=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=660,height=500");
if(a!=null){a.focus();
}else{alert("You may have your pop up blocker on. Please disable to view this page. Thanks!");
}}function print(b){var a=window.open(b,"print","toolbar=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=660,height=500");
a.focus();
}if(screen.width<=800){var ptWidth=800;
var ptHeight=560;
}else{var ptWidth=screen.width;
var ptHeight=screen.height;
}ptXpos=(screen.width-ptWidth)/2;
ptWindow=false;
var player;
function popPlaytime(a){ptWindow=window.open(a,"ptWindow","scrollbars=yes,resizable=yes,width="+ptWidth+",height="+ptHeight);
if(ptWindow!=null){ptWindow.resizeTo(ptWidth,ptHeight);
ptWindow.moveTo(ptXpos,0);
ptWindow.focus();
if(player){player.mute();
$.cookie("playtimePopupOpened",true);
}}else{alert("You may have your pop up blocker on. Please disable to view this page. Thanks!");
}return false;
}function bumper(c,a){var b=window.open(a,"adWindow","toolbar=yes,location=yes,directories=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=780,height=530");
}function openBumper(a,b){window.location.href=b;
}var cur_btn;
function setCurBtn(a){cur_btn=a;
imgOn(cur_btn);
}function imgOn(a,b){if(document.images){if(b==null){b=".jpg";
}document[a].src="/common/droplets/navbar/assets/"+a+"_over"+b;
}}function imgOff(a,b){if(document.images&&(a!=cur_btn)){if(b==null){b=".jpg";
}document[a].src="/common/droplets/navbar/assets/"+a+b;
}}function Go(a){window.top.location.href=a.options[a.selectedIndex].value;
a.selectedIndex=0;
}function popGo(a){var b=window.open(a.options[a.selectedIndex].value,"pulldownpop","scrollbars=yes,resizable=yes,width=700,height=500");
b.focus();
a.selectedIndex=0;
}function thisMovie(a){if(navigator.appName.indexOf("Microsoft")!=-1){return window[a];
}else{return document[a];
}}function embeddedPlayerAPI(a){epCommand(a);
}function moreOn(a){if(document.images){document.images[a].src="/categorical/common/assets/more_btn_over.jpg";
}}function moreOff(a){if(document.images){document.images[a].src="/categorical/common/assets/more_btn.jpg";
}}$(document).ready(function(){$("ul.filterDropdown:not(.large) > li").mtvnDropdown({offsetTop:"3px"});
$("ul.filterDropdown.large > li").mtvnDropdown({offsetTop:"3px",cssActiveOptions:{"background-position":"-484px 0px"}});
$(document).trigger("click");
});
function bumperParents(b){if(window.opener&&!window.opener.closed){window.opener.location=b;
window.opener.focus();
}else{var a=window.open(b,"parentsWindow","toolbar=yes,location=yes,directories=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=780,height=530");
"parentsWindow".focus();
}return false;
}
function MM_preloadImages(){var b=document;
if(b.images){if(!b.MM_p){b.MM_p=new Array();
}var c,d=b.MM_p.length,a=MM_preloadImages.arguments;
for(c=0;
c<a.length;
c++){if(a[c].indexOf("#")!=0){b.MM_p[d]=new Image;
b.MM_p[d++].src=a[c];
}}}}function MM_swapImgRestore(){var b,a,c=document.MM_sr;
for(b=0;
c&&b<c.length&&(a=c[b])&&a.oSrc;
b++){a.src=a.oSrc;
}}function MM_findObj(b,c){var d,e,a;
if(!c){c=document;
}if((d=b.indexOf("?"))>0&&parent.frames.length){c=parent.frames[b.substring(d+1)].document;
b=b.substring(0,d);
}if(!(a=c[b])&&c.all){a=c.all[b];
}for(e=0;
!a&&e<c.forms.length;
e++){a=c.forms[e][b];
}for(e=0;
!a&&c.layers&&e<c.layers.length;
e++){a=MM_findObj(b,c.layers[e].document);
}if(!a&&c.getElementById){a=c.getElementById(b);
}return a;
}function MM_swapImage(){var b,c=0,a,d=MM_swapImage.arguments;
document.MM_sr=new Array;
for(b=0;
b<(d.length-2);
b+=3){if((a=MM_findObj(d[b]))!=null){document.MM_sr[c++]=a;
if(!a.oSrc){a.oSrc=a.src;
}a.src=d[b+2];
}}}
function tracklink(b,a,d,c){TrackLinkNickJr(a,d,c);
location.href=b;
}function extTracklink(b,a,d,c){TrackLinkNickJr(a,d,c);
extlink(b);
}function popPLTracklink(b,a,d,c){TrackLinkNickJr(a,d,c);
popPlaytime(b);
}
if(typeof NICK=="undefined"||!NICK){var NICK={};
}NICK.request={lstnrs:{},defaults:{type:"GET",url:null,data:null,dataType:"jsonp",async:true,onSuccess:null,cache:false,onFail:null},messages:{INVALID_RESPONSE:"Invalid reponse",INVALID_URL:"Invalid url requested"},errors:{SERVER:"_ERROR_SERVER",REQUEST:"_ERROR_REQUEST",RESPONSE:"_ERROR_RESPONSE",URL:"_ERROR_URL"},codes:{RESPONSE_OK:"ok",RESPONSE_ERROR:"error"},doRequest:function(a){var b=new NICK.request.NickRequest(a);
b.doRequest();
}};
NICK.request.NickRequest=function(a){this.settings=$.extend({},NICK.request.defaults,a);
};
NICK.request.NickRequest.prototype.sanitizeUrlData=function(){var e=this.settings.url.indexOf("?");
if(e<=0){return;
}var d=this.settings.url.substring(e+1);
var c=d.split("&");
var b=null;
for(var a=0;
a<c.length;
a++){b=c[a].split("=");
if(b==null||b[0]==null||b[1]==null){continue;
}this.settings.data[b[0]]=b[1];
}this.settings.url=this.settings.url.substring(0,e);
};
NICK.request.NickRequest.prototype.doRequest=function(){this.settings.data=this.settings.data==null?{}:this.settings.data;
if(this.settings.url==null){this.onFail(this.getError(NICK.request.errors.URL,NICK.request.messages.INVALID_URL));
return;
}this.sanitizeUrlData();
if(this.settings.dataType=="jsonp"){this.initJsonpHandler();
}else{var b=this;
this.settings.success=function(c){b.doResponse.apply(b,arguments);
};
this.settings.error=function(c){b.doRequestError.apply(b,arguments);
};
}try{$.ajax(this.settings);
}catch(a){NickLog.error("NickRequest: error: "+a);
this.onFail({_ERROR_SERVER:a});
}};
NICK.request.NickRequest.prototype.initJsonpHandler=function(){var b=this;
var a=this.getJsonpKey();
this.settings.jsonpCallback='NICK.request.lstnrs["'+a+'"]';
NICK.request.lstnrs[a]=function(c){this.callback=b;
this.callback.doResponse(c);
NICK.request.lstnrs[a]=undefined;
try{delete NICK.request.lstnrs[a];
}catch(d){}};
};
NICK.request.NickRequest.prototype.getJsonpKey=function(){var a=this.settings.url.replace("http://","");
a=a.replace(/[\.\-/]/g,"");
var b=1;
while(NICK.request.lstnrs[a+b]!=null){b++;
}return a+b;
};
NICK.request.NickRequest.prototype.doResponse=function(a){switch(this.settings.dataType){case"jsonp":case"json":this.doResponseJson(a);
break;
case"xml":this.doResponseXml(a);
break;
case"html":this.doResponseHtml(a);
break;
default:NickLog.warn(">>NICK.request: No response handler for type: "+this.settings.dataType);
}};
NICK.request.NickRequest.prototype.doResponseJson=function(a){if(a==null){this.onFail(this.getError(NICK.request.errors.RESPONSE,NICK.request.messages.INVALID_RESPONSE));
}else{if(a.code==NICK.request.codes.RESPONSE_OK){this.onSuccess(a);
}else{if(a.code==NICK.request.codes.RESPONSE_ERROR){this.onFail(a.errors);
}else{this.onSuccess(a);
}}}};
NICK.request.NickRequest.prototype.doResponseXml=function(a){if(a==null){this.onFail(this.getError(NICK.request.errors.RESPONSE,NICK.request.messages.INVALID_RESPONSE));
}else{if($(a).find("response").attr("status")==NICK.request.codes.RESPONSE_OK){this.onSuccess(a);
}else{if($(a).find("response").attr("status")==NICK.request.codes.RESPONSE_ERROR){var b={};
$(a).find("error").each(function(){b[$(this).attr("name")]=$(this).text();
});
this.onFail(b);
}}}};
NICK.request.NickRequest.prototype.doResponseHtml=function(a){if(a==null){this.onFail(this.getError(NICK.request.errors.RESPONSE,NICK.request.messages.INVALID_RESPONSE));
return;
}else{this.onSuccess(a);
}};
NICK.request.NickRequest.prototype.onFail=function(a){var b=typeof a=="string"?{request:a}:a;
if(this.settings.onFail){this.settings.onFail(b);
}else{NickLog.error("NickRequest: doRequest: Failed: "+a);
}};
NICK.request.NickRequest.prototype.onSuccess=function(a){if(this.settings.onSuccess){this.settings.onSuccess(a);
}else{NickLog.info("NickRequest: doRequest: OK");
}};
NICK.request.NickRequest.prototype.doRequestError=function(c,a,b){this.onFail(this.getError(NICK.request.errors.REQUEST,a));
};
NICK.request.NickRequest.prototype.getError=function(b,c){var a=new Object();
a[b]=c;
return a;
};

if(typeof NICKJR=="undefined"||!NICKJR){var NICKJR={};
}KIDS.namespace("profile",NICKJR);
KIDS.namespace("profile.rest",NICKJR);
KIDS.namespace("profile.rest.url",NICKJR);
KIDS.namespace("types",NICKJR);
KIDS.namespace("page",NICKJR);
NICKJR.profile.rest.proxy="";
NICKJR.profile.rest.url.LIST_CHILDREN_LIGHT="/userprofile/listchildrenlight";
NICKJR.profile.rest.url.LIST_CHILDREN="/userprofile/listchildren";
NICKJR.profile.rest.url.GET_USER_ATTRIBUTE="/userprofile/getattribute/";
NICKJR.profile.rest.url.PUT_USER_ATTRIBUTE="/userprofile/putattributepost/";
NICKJR.profile.rest.url.PUT_GAME_ATTRIBUTE="/userprofile/putattributeforchild";
NICKJR.profile.rest.url.GET_CHILD="/userprofile/listchildren/";
NICKJR.profile.rest.url.UPDATE_CHILD="/userprofile/updatechild/";
NICKJR.profile.rest.url.CREATE_CHILD="/userprofile/createchild";
NICKJR.types.jsonAttr="pcProfileAttrbuteJSONWrapper";
NICKJR.types.single="singleAttribute";
NICKJR.types.list="listAttribute";
NICKJR.profile.rest.dora="doraGame";
NICKJR.page.children={};
NICKJR.types.isArray=function(a){return(typeof a=="object"&&typeof a.length=="number");
};
NICKJR.profile.child=function(){this.id;
this.avatar;
this.name;
this.age;
this.avatar;
};
NICKJR.profile.makeRestChild=function(a){var b=new NICKJR.profile.child();
b.index=a.index;
b.name=a.name;
b.avatar=a.avatarTranslatedToUrl;
return(b);
};
NICKJR.profile.fullChild=function(){this.index;
this.avatar;
this.name;
this.gender;
this.birthMonth;
this.birthDay;
this.birthYear;
};
NICKJR.profile.makeFullChild=function(b){var a=b.attributeData;
var c=new NICKJR.profile.fullChild();
c.index=b.index;
c.name=b.name;
c.gender=b.gender;
c.birthMonth=b.birthMonth;
c.birthDay=b.birthDay;
c.birthYear=b.birthYear;
c.avatar=b.avatarTranslatedToUrl;
KIDS.utils.doLog(b.name+" "+b.gender+" "+b.birthMonth+"/"+b.birthDay+"/"+b.birthYear);
return(c);
};
NICKJR.profile.rest.service=function(a){this.defaults={proxyPath:NICKJR.profile.rest.proxy,ajaxClient:NICK.request};
this.settings=$.extend({},this.defaults,a);
this.createChild=function(b,c){this.settings.ajaxClient.doRequest({type:"get",data:b,dataType:"json",contentType:"application/x-www-form-urlencoded",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.CREATE_CHILD,onSuccess:function(d){var e=NICKJR.profile.makeRestChild(d.child);
if(typeof e=="object"){KIDS.utils.doLog("new child: "+e.name);
typeof c=="function"?c(e):null;
}else{KIDS.utils.doLog("Problem with create child");
typeof c=="function"?c():null;
}},onFail:function(f){for(var e in f){KIDS.utils.doLog("NICKJR.profile.rest.url.CREATE_CHILD: Error: "+e+" - "+f[e]);
}var d={};
d.status="FAIL";
typeof c=="function"?c(d):null;
}});
};
this.getUserAttribute=function(d,c,b){this.settings.ajaxClient.doRequest({dataType:"json",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.GET_USER_ATTRIBUTE+d,async:typeof b=="undefined"?true:false,onSuccess:function(f){KIDS.utils.doLog("getuserAttribute "+d+" - "+f);
var e={};
if(f.singleAttribute!==null&&f.singleAttribute!=="undefined"&&f.singleAttribute!==""){KIDS.utils.doLog("attribute: "+d+" = "+f.singleAttribute);
e.type=NICKJR.types.single;
e.data=f.singleAttribute;
}else{if(f.listAttribute!==null&&f.listAttribute!=="undefined"&&f.listAttribute!==""){KIDS.utils.doLog("attribute: "+d+" = "+f.listAttribute);
e.type=NICKJR.types.list;
e.data=f.listAttribute;
}}typeof c=="function"?c(e):null;
},onFail:function(f){for(var e in f){KIDS.utils.doLog("NICKJR.profile.rest.GET_USER_ATTRIBUTE: Error: "+e+" - "+f[e]);
}return;
}});
};
this.listChildren=function(c,b){this.settings=$.extend({},this.defaults,a);
this.settings.ajaxClient.doRequest({dataType:"json",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.LIST_CHILDREN,async:typeof b=="undefined"?true:false,onSuccess:function(d){KIDS.utils.doLog(d);
var e=new Array();
var f=d.children;
KIDS.utils.doLog("data : "+typeof f);
if(NICKJR.types.isArray(f)){$.each(f,function(){e.push(NICKJR.profile.makeRestChild(this));
});
}else{if(typeof f=="object"){KIDS.utils.doLog("not an array");
e.push(NICKJR.profile.makeRestChild(f));
}}KIDS.utils.doLog("children: "+e);
typeof c=="function"?c(e):null;
},onFail:function(e){for(var d in e){KIDS.utils.doLog("NICKJR.profile.rest.LIST_CHILDREN: Error: "+d+" - "+e[d]);
}return;
}});
};
this.listFullChildren=function(c,b){this.settings=$.extend({},this.defaults,a);
this.settings.ajaxClient.doRequest({dataType:"json",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.LIST_CHILDREN,async:typeof b==="undefined"?true:false,onSuccess:function(d){KIDS.utils.doLog(d);
var e=[];
var f=d.children;
KIDS.utils.doLog("data : "+typeof f);
if(NICKJR.types.isArray(f)){$.each(f,function(){e.push(NICKJR.profile.makeFullChild(this));
});
}else{if(typeof f==="object"){KIDS.utils.doLog("not an array");
e.push(NICKJR.profile.makeFullChild(f));
}}KIDS.utils.doLog("children: "+e);
typeof c==="function"?c(e):null;
},onFail:function(e){for(var d in e){KIDS.utils.doLog("NICKJR.profile.rest.LIST_FULL_CHILDREN: Error: "+d+" - "+e[d]);
}return;
}});
};
this.putUserAttribute=function(c,d,b){this.settings.ajaxClient.doRequest({type:"post",data:{attributeValue:d},dataType:"html",contentType:"application/x-www-form-urlencoded",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.PUT_USER_ATTRIBUTE+c,onSuccess:function(f){var e={};
e.status="success";
KIDS.utils.doLog("putUserAttribute OK");
typeof b=="function"?b(e):null;
},onFail:function(g){for(var f in g){KIDS.utils.doLog("NICKJR.profile.rest.url.PUT_USER_ATTRIBUTE: Error: "+f+" - "+g[f]);
}var e={};
e.status="FAIL";
typeof b=="function"?b(e):null;
}});
};
this.putUserGameAttribute=function(e,c,d,b){KIDS.utils.doLog("-->putUserGameAttribute");
this.settings.ajaxClient.doRequest({type:"post",data:{attributeKey:NICKJR.profile.rest.dora,attributeValue:e,index:c},dataType:"html",async:typeof b=="undefined"?true:false,contentType:"application/x-www-form-urlencoded",url:NICKJR.profile.rest.proxy+NICKJR.profile.rest.url.PUT_GAME_ATTRIBUTE,onSuccess:function(g){var f={};
f.status="success";
KIDS.utils.doLog("putUserGameAttribute OK");
typeof d=="function"?d(f):null;
},onFail:function(h){for(var g in h){KIDS.utils.doLog("NICKJR.profile.rest.url.PUT_USER_ATTRIBUTE: Error: "+g+" - "+h[g]);
}var f={};
f.status="FAIL";
typeof d=="function"?d(f):null;
}});
};
};
var rest=new NICKJR.profile.rest.service();

if(typeof NickProxy=="undefined"||!NickProxy){var NickProxy={};
}function ObserverSwf(){this.listeners;
this.swfId;
this.swf;
}ObserverSwf.prototype={init:function(a){this.swfId=a;
this.swf=NickProxy.getSwf(this.swfId);
},addListener:function(a){if(a==null){return;
}if(this.listeners==null){this.listeners=[];
}this.listeners.push(a);
},removeListener:function(b){if(b==null||this.listeners==null){return;
}for(var a=0;
a<this.listeners.length;
a++){if(this.listeners[a]==b){this.listeners.splice(a,1);
}}},dispatch:function(b){if(this.swf==null){NickProxy.doLog("SWF: distpatch: no swf found!: "+this.swfId);
return;
}for(var a=0;
a<this.listeners.length;
a++){if(this.listeners[a]==b){this.swf[b].apply(this.swf,this.getDispatchArgs(arguments));
}}},getDispatchArgs:function(a){var c=[];
for(var b=1;
b<a.length;
b++){c.push(a[b]);
}return c;
}};

if(typeof NickProxy=="undefined"||!NickProxy){var NickProxy={};
}NickProxy.swfObserver;
NickProxy.DO_DEBUG=window&&typeof window.console!="undefined";
NickProxy.registerSwf=function(a){if(a==null){return;
}if(NickProxy.swfObserver==null){NickProxy.swfObserver=new ObserverSwf();
}NickProxy.swfObserver.init(a);
};
NickProxy.addListener=function(a){if(NickProxy.swfObserver==null){NickProxy.swfObserver=new ObserverSwf();
}NickProxy.swfObserver.addListener(a);
};
NickProxy.doLog=function(){if(!NickProxy.DO_DEBUG){return;
}if(typeof window.console.debug!="undefined"){window.console.debug.apply(window.console,arguments);
}else{if(typeof window.console.log!="undefined"){window.console.log.apply(window.console,arguments);
}}};
NickProxy.getSwf=function(a){if(navigator.appName.indexOf("Microsoft")!=-1){return window[a];
}else{if(document[a].length!=undefined){return document[a][1];
}return document[a];
}};

if(typeof NICKJR=="undefined"||!NICKJR){var NICKJR={};
}KIDS.namespace("profile",NICKJR);
if(typeof rest=="undefined"||!rest){var rest=new NICKJR.profile.rest.service();
}(function(a){NICKJR.profile.flashapi={isLoggedIn:function(){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.isLoggedIn");
var b=userMgr.getIsLoggedIn();
NickProxy.swfObserver.dispatch("response_isLoggedIn",b);
return b;
},loginOverlay:function(){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.loginOverlay");
var b=userMgr.initUser();
NickProxy.swfObserver.dispatch("response_loginOverlay",b);
},getCompletedActivities:function(){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.getCompletedActivities");
var b;
a("body").bind("getCompletedActivitiesComplete",function(d,c){NickProxy.swfObserver.dispatch("response_getCompletedActivities",c);
});
rest.getUserAttribute("doraActivities",function(c){(!c.data||c.data==null||c.data=="undefined")?b=null:b=c.data;
a("body").trigger("getCompletedActivitiesComplete",a.JSON.decode(b));
},false);
return b;
},getChildren:function(){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.getChildren");
var b;
a("body").bind("getChildrenComplete",function(d,c){KIDS.utils.doLog("dispatch: "+a.JSON.encode(c));
NickProxy.swfObserver.dispatch("response_getChildren",c);
});
rest.listChildren(function(c){var d=new Array();
d.push(c);
b=c;
KIDS.utils.doLog("returning children: "+a.JSON.encode(d));
a("body").trigger("getChildrenComplete",d);
},false);
return b;
},getChildGameData:function(c){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.getChildGameData");
var b;
a("body").bind("getChildGameDataComplete",function(f,d){KIDS.utils.doLog("Returning child game data");
NickProxy.swfObserver.dispatch("response_getChildGameData",d);
});
rest.getUserAttribute("doraGame",function(d){if(!d||d==null||typeof d=="undefined"){b=null;
}if(d.type==NICKJR.types.single&&c==1){b=a.JSON.decode(d.data);
}else{b=a.JSON.decode(d.data[c].singleAttribute);
}KIDS.utils.doLog("gameData: "+b);
a("body").trigger("getChildGameDataComplete",b);
},false);
return b;
},setChildGameData:function(c,d){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.setChildGameData");
NickProxy.swfObserver.dispatch("response_setChildGameData",true);
var b;
rest.putUserGameAttribute(d,c,function(e){b=e.status;
},false);
return b;
},setCompletedActivities:function(c){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.setCompletedActivities");
a("body").bind("setCompletedActivitiesComplete",function(f,d){NickProxy.swfObserver.dispatch("response_setCompletedActivities",d);
});
var b;
rest.putUserAttribute("doraActivities",c,function(d){b=d.status=="success"?"success":"failed";
a("body").trigger("setCompletedActivitiesComplete",b);
});
return b;
},addChildOverlay:function(){if(NickProxy.swfObserver==null){return;
}KIDS.utils.doLog("NICKJR.profile.flashapi.addChildOverlay");
a("body").bind("addChildClose",function(c,b){KIDS.utils.doLog("Response for Add Child Close: "+true);
NickProxy.swfObserver.dispatch("response_onAddChildClose",true);
});
userMgr.widget.createAddChildWidget();
}};
})(jQuery);

if(typeof NICKJR=="undefined"||!NICKJR){var NICKJR={};
}KIDS.namespace("links",NICKJR);
(function(a){NICKJR.links.external=function(b){KIDS.utils.doLog("NICKJR.links.external fired: "+b);
window.open(b);
return false;
};
NICKJR.links.overlay=function(b){KIDS.utils.doLog("NICKJR.links.overlay fired: "+b);
a("body").prepend('<div id="nickjrOverlay"></div>');
a("#nickjrOverlay").load(b).dialog({width:900,height:1300,modal:true,position:"center",zIndex:"99999999",close:function(d,c){a("#nickjrOverlay").remove();
a("body").trigger("nickjrOverlayClose");
}});
a(".ui-icon-closethick").html("[x]");
};
NICKJR.links.gated=function(b){KIDS.utils.doLog("NICKJR.links.gated fired: "+b);
userMgr.referralUrl=b;
var c=userMgr.initUser();
if(c){return false;
}else{location.href=b;
}};
NICKJR.links.gatedOverlay=function(b){KIDS.utils.doLog("NICKJR.links.gatedOverlay fired: "+b);
if(userMgr.getIsCommunityMember()){NICKJR.links.overlay(b);
}else{a.cookie("nickjr-overlay",b);
userMgr.initUser();
}};
NICKJR.links.gatedNewWindow=function(b){KIDS.utils.doLog("NICKJR.links.gatedNewWindow fired: "+b);
if(userMgr.getIsCommunityMember()){KIDS.utils.doLog("community member!");
NICKJR.links.external(b);
}else{KIDS.utils.doLog("not a community member, setting cookie");
a.cookie("nickjr-popup",b);
userMgr.initUser();
}};
NICKJR.links.signup=function(b){KIDS.utils.doLog("NICKJR.links.signup fired: "+b);
userMgr.referralUrl=b;
userMgr.widget.createSignUpWidget();
};
NICKJR.links.login=function(b){KIDS.utils.doLog("NICKJR.links.login fired: "+b);
userMgr.referralUrl=b;
userMgr.widget.createSignInWidget();
};
})(jQuery);

