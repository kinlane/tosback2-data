Namespace('modcloth.core.gatekeeper');(function($,self){self.extend({active:false,initialize:function(){if($.cookie('gatekeeper')){self.active=true;}
$('[data-authenticated-click]').live('click',function(event){event.stopImmediatePropagation();if(modcloth.storefront.model.account.isSignedIn()){$(this).trigger('authenticated-click');}else{if(self.active){self.showGatekeeperModal(this);}else{self.redirectToLoginUrl(this);}}
event.preventDefault();});},redirectToLoginUrl:function(target){var loginUrl=$(target).attr('data-authenticated-click-login-url');modcloth.util.redirect(loginUrl);},showGatekeeperModal:function(target){modcloth.core.modals.signInOrJoin.showModal({successFn:function(){$(target).trigger('authenticated-click');},signInRibbonText:$(target).attr('data-gatekeeper-sign-in-ribbon-text'),joinRibbonText:$(target).attr('data-gatekeeper-join-ribbon-text'),gateName:$(target).attr('data-gatekeeper-gate'),failureFn:function(){self.redirectToLoginUrl(target);}});}});})(jQuery,modcloth.core.gatekeeper);Namespace("modcloth.core.ajax.form",function(self){self.extend({initialize:function(){bindForms();},submitForm:function($form,e){var $errors=$('.errors',$form);var url=$form.attr('action');var successCallback=modcloth.lookup($form.attr('data-success-callback'))||$.noop;var errorCallback=modcloth.lookup($form.attr('data-error-callback'))||self.defaultErrorHandler;var failureCallback=modcloth.lookup($form.attr('data-failure-callback'))||function(xhr,errorContainer){errorCallback(xhr.responseText,errorContainer,self.parseJsonErrors(xhr));};self.clearServerSideErrors($form);$('input:focus').blur();scrollToCurrentModal();var method=(/jsonp/i.exec($form.attr('data-data-type')))?'get':($form.attr('method')||'get');var options={url:url,crossDomain:url.match(/^http/)&&(url.indexOf(modcloth.util.getProtocol())==-1),type:method,dataType:$form.attr('data-data-type')||'json',data:$form.serialize(),complete:function(){toggleSpindicator($submit,"hide");},success:function(data){if(data&&data.errors&&data.errors.length>0){errorCallback(data,$errors,data.errors);}else{successCallback(data,$errors);}},error:function(xhr){failureCallback(xhr,$errors);}};var $submit=$('input[type=submit]',$form);toggleSpindicator($submit,"show");$.ajax(options);},defaultErrorHandler:function(data,errorContainer,errors){var $html=$('<ul/>');if(errors.length==1){$html=$('<span/>').text(errors[0]);}else{$.each(errors,function(index,value){$html.append($('<li/>').text(value));});}
if(errors.length>1){errorContainer.html($('<h3/>').text('Please correct the following error(s):'));}
errorContainer.append($html).wrapInner('<div class="wrapper"/>');},parseJsonErrors:function(xhr){try{var data=JSON.parse(xhr.responseText||'{}');var errors=(data&&data.errors)?data.errors:[];return(errors instanceof Array)?errors:[errors];}catch(e){return['Something happened. Try again, please!'];}},clearServerSideErrors:function($form){$('.errors',$form).empty();}});function bindForms(){$('form[data-ajax="true"]').live('submit',function(e){self.submitForm($(this),e);e.preventDefault();e.stopImmediatePropagation();return false;});}
function scrollToCurrentModal(){if($.mcModal){$.mcModal.scrollToCurrentModal();}}
function toggleSpindicator(element,toggle){if($.fn.mcWorking){element.mcWorking(toggle);}}});(function($){$.fn.pause=function(duration){$(this).animate({dummy:1},duration);return this;};$(window).bind("resize",resizeWindow);function resizeWindow(e){if($('#jGrowl').html()!=null){var width=((document.body.clientWidth-1024)/2)+"px";$('#jGrowl').css('right',width);}}
$.jGrowl=function(m,o){var initial_width=((document.body.clientWidth-1024)/2)+"px";if($('#jGrowl').size()==0){$('<div id="jGrowl"></div>').addClass($.jGrowl.defaults.position).css('right',initial_width).appendTo('body');}
$('#jGrowl').jGrowl(m,o);};$.fn.jGrowl=function(m,o){if($.isFunction(this.each)){var args=arguments;return this.each(function(){var self=this;if($(this).data('jGrowl.instance')==undefined){$(this).data('jGrowl.instance',new $.fn.jGrowl());$(this).data('jGrowl.instance').startup(this);}
if($.isFunction($(this).data('jGrowl.instance')[m])){$(this).data('jGrowl.instance')[m].apply($(this).data('jGrowl.instance'),$.makeArray(args).slice(1));}else{$(this).data('jGrowl.instance').create(m,o);}});}};$.extend($.fn.jGrowl.prototype,{defaults:{pool:0,header:'',group:'',sticky:false,position:'top-right',glue:'after',theme:'default',corners:'10px',check:250,life:3000,speed:'normal',easing:'swing',closer:true,closeTemplate:'&times;',closerTemplate:'<div>[ close all ]</div>',log:function(e,m,o){},beforeOpen:function(e,m,o){},open:function(e,m,o){},beforeClose:function(e,m,o){},close:function(e,m,o){},animateOpen:{opacity:'show'},animateClose:{opacity:'hide'}},notifications:[],element:null,interval:null,create:function(message,o){o=$.extend({},this.defaults,o);this.notifications[this.notifications.length]={message:message,options:o};o.log.apply(this.element,[this.element,message,o]);},render:function(notification){var self=this;var message=notification.message;var o=notification.options;var ext='png';var header_image,shown_message;if(o.theme=="error_growl"){header_image="<img src='/images/modCloth-error."+ext+"' class='header-image'/>";}
else if(o.theme=='modal'){header_image="<img src='/images/modClothBag."+ext+"' class='header-image' />";}
else{header_image="<img src='/images/modCloth."+ext+"' class='header-image' />";}
if(message===''){shown_message='';}
else{shown_message='<div class="message">'+message+'</div>';}
notification=$('<div class="jGrowl-notification'+((o.group!=undefined&&o.group!='')?' '+o.group:'')+'"><div class="close">'+o.closeTemplate+'</div><div class="header">'+header_image+""+o.header+'</div>'+shown_message+'</div>').data("jGrowl",o).addClass(o.theme).children('div.close').bind("click.jGrowl",function(){$(this).parent().trigger('jGrowl.close');}).parent();if(o.glue=='after'){$('div.jGrowl-notification:last',this.element).after(notification);}
else{$('div.jGrowl-notification:first',this.element).before(notification);}
$(notification).bind("mouseover.jGrowl",function(){$(this).data("jGrowl").pause=true;}).bind("mouseout.jGrowl",function(){$(this).data("jGrowl").pause=false;}).bind('jGrowl.beforeOpen',function(){o.beforeOpen.apply(self.element,[self.element,message,o]);}).bind('jGrowl.open',function(){o.open.apply(self.element,[self.element,message,o]);}).bind('jGrowl.beforeClose',function(){o.beforeClose.apply(self.element,[self.element,message,o]);}).bind('jGrowl.close',function(){$(this).trigger('jGrowl.beforeClose').animate(o.animateClose,o.speed,o.easing,function(){$(this).remove();o.close.apply(self.element,[self.element,message,o]);});}).trigger('jGrowl.beforeOpen').animate(o.animateOpen,o.speed,o.easing,function(){$(this).data("jGrowl").created=new Date();}).trigger('jGrowl.open');if($.fn.corner!=undefined){$(notification).corner(o.corners);}
if($('div.jGrowl-notification:parent',this.element).size()>1&&$('div.jGrowl-closer',this.element).size()==0&&this.defaults.closer!=false){$(this.defaults.closerTemplate).addClass('jGrowl-closer').addClass(this.defaults.theme).appendTo(this.element).animate(this.defaults.animateOpen,this.defaults.speed,this.defaults.easing).bind("click.jGrowl",function(){$(this).siblings().children('div.close').trigger("click.jGrowl");if($.isFunction(self.defaults.closer)){self.defaults.closer.apply($(this).parent()[0],[$(this).parent()[0]]);}});}},update:function(){$(this.element).find('div.jGrowl-notification:parent').each(function(){if($(this).data("jGrowl")!=undefined&&$(this).data("jGrowl").created!=undefined&&($(this).data("jGrowl").created.getTime()+$(this).data("jGrowl").life)<(new Date()).getTime()&&$(this).data("jGrowl").sticky!=true&&($(this).data("jGrowl").pause==undefined||$(this).data("jGrowl").pause!=true)){$(this).trigger('jGrowl.close');}});if(this.notifications.length>0&&(this.defaults.pool==0||$(this.element).find('div.jGrowl-notification:parent').size()<this.defaults.pool)){this.render(this.notifications.shift());}
if($(this.element).find('div.jGrowl-notification:parent').size()<2){$(this.element).find('div.jGrowl-closer').animate(this.defaults.animateClose,this.defaults.speed,this.defaults.easing,function(){$(this).remove();});}},startup:function(e){this.element=$(e).addClass('jGrowl').append('<div class="jGrowl-notification"></div>');this.interval=setInterval(function(){jQuery(e).data('jGrowl.instance').update();},this.defaults.check);},shutdown:function(){$(this.element).removeClass('jGrowl').find('div.jGrowl-notification').remove();clearInterval(this.interval);}});$.jGrowl.defaults=$.fn.jGrowl.prototype.defaults;})(jQuery);Namespace('modcloth.product.lovelists',function(self){self.extend({elements:{loveItButton:null},options:{},initialize:function(options){$.extend(self.options,options);self.elements.loveItButton=$('input.love_it_button');self.attachHandlers();},attachHandlers:function(){self.elements.loveItButton.live('click',function(e){e.preventDefault();var action='';var loving=!$(this).hasClass('loved_button');if(loving){action='love_it_vote_ql';}else{action='un_love_ql';}
self.makeRequest(action,$(this).attr('data-product-id'),loving);});},makeRequest:function(action,productId,loving){$.ajax({dataType:'json',url:'/storefront/lovelists/'+action+'/'+productId,success:(loving?self.requestSuccess:self.replaceContent),error:self.requestError});},requestSuccess:function(data,textStatus,XMLHttpRequest){self.replaceContent(data);self.showAnimation(data);},requestError:function(data,textStatus,XMLHttpRequest){},replaceContent:function(data){modcloth.views.layouts.common.header.update_loved_item_count(data.user_loved_count);$('.love_message, #love_message_'+data.product.id).html(data.love_you_too_message);$('#love_buttons input, #love_buttons_'+data.product.id+' input').each(function(){if($(this).hasClass('loved_button')){$(this).val('Love It!').removeClass('loved_button selected').addClass('not_yet_loved_button').attr('data-analytics-love-product-action','love').attr('data-analytics-omnitureajax','["modcloth>love-it","event7","'+$(this).attr('data-omniture-product')+'"]');}else{$(this).val('Unlove').removeClass('not_yet_loved_button').addClass('loved_button selected').attr('data-analytics-love-product-action','unlove').attr('data-analytics-omnitureajax','["modcloth>unlove-it","event8","'+$(this).attr('data-omniture-product')+'"]');}});},showAnimation:function(data){$('#header-loved-items').animate({color:'#ff0000'},'slow',function(){$('#header-loved-items').animate({color:'#6699ff'});});$('#love-you-too-container, #love-you-too-container-'+data.product.id).fadeIn('fast',function(){$('#love-you-too-container, #love-you-too-container-'+data.product.id).delay(5000).fadeOut('slow');});}});});(function($,mc){mc.navigation=$.extend(mc.navigation,{});mc.navigation.search={initialize:function(){$('#nav_search form').submit(function(e){e.preventDefault();var keyword=encodeURIComponent($(this).find('#keyword').val().replace(/\s+/g,'-'));modcloth.util.redirect("/storefront/products/search/keyword/"+keyword);});$('#nav_search input[type="submit"]').click(function(e){e.preventDefault();$(this.form).submit();})}}})(jQuery,modcloth||{});Namespace('modcloth.core.timedSignInModal',function(self){self.extend({cookieKey:'numPageViews',initialize:function(){if(!self.hasBeenShown()){self.showIfItsTime();}},showIfItsTime:function(){var pageViewCount=self.cookieValue(),thisPageView=pageViewCount+1;if(thisPageView>=3&&self.shouldShowTimedModal()){modcloth.core.modals.signInOrJoin.showTimedModal();self.setCookieToHasBeenShownValue();}else{$.cookie(self.cookieKey,thisPageView,{expires:30,path:'/'});}},shouldShowTimedModal:function(){return!$.cookie('known_user')&&modcloth.core.gatekeeper.active&&!modcloth.storefront.model.account.isSignedIn()&&self.isOkPath(modcloth.util.getPathname())&&!self.is404Page()&&!modcloth.core.modals.isShowing();},isOkPath:function(path){return path.match(/^\/(shop.*|storefront\/cart.*|storefront\/products\/be_the_buyer|store\/modcloth.*)?$/);},is404Page:function(){return $("#error_404_container").length>0;},cookieValue:function(){return parseInt($.cookie(self.cookieKey)||'0',10);},setCookieToHasBeenShownValue:function(){$.cookie(self.cookieKey,'-1',{expires:30,path:'/'});},hasBeenShown:function(){return self.cookieValue()<0;}});});