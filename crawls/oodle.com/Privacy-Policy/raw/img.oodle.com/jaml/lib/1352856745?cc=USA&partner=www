/*! jQuery v1.7.1 jquery.com | jquery.org/license */
(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!ck[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){cl||(cl=c.createElement("iframe"),cl.frameBorder=cl.width=cl.height=0),b.appendChild(cl);if(!cm||!cl.createElement)cm=(cl.contentWindow||cl.contentDocument).document,cm.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),cm.close();d=cm.createElement(a),cm.body.appendChild(d),e=f.css(d,"display"),b.removeChild(cl)}ck[a]=e}return ck[a]}function cu(a,b){var c={};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=a});return c}function ct(){cr=b}function cs(){setTimeout(ct,0);return cr=f.now()}function cj(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ci(){try{return new a.XMLHttpRequest}catch(b){}}function cc(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function cb(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function ca(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bE.test(a)?d(a,e):ca(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)ca(a+"["+e+"]",b[e],c,d);else d(a,b)}function b_(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function b$(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bT,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=b$(a,c,d,e,"*",g));return l}function bZ(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bP),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bC(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bx:by,g=0,h=e.length;if(d>0){if(c!=="border")for(;g<h;g++)c||(d-=parseFloat(f.css(a,"padding"+e[g]))||0),c==="margin"?d+=parseFloat(f.css(a,c+e[g]))||0:d-=parseFloat(f.css(a,"border"+e[g]+"Width"))||0;return d+"px"}d=bz(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0;if(c)for(;g<h;g++)d+=parseFloat(f.css(a,"padding"+e[g]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+e[g]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+e[g]))||0);return d+"px"}function bp(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.1",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?m(g):h==="function"&&(!a.unique||!o.has(g))&&c.push(g)},n=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,l=j||0,j=0,k=c.length;for(;c&&l<k;l++)if(c[l].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}i=!1,c&&(a.once?e===!0?o.disable():c=[]:d&&d.length&&(e=d.shift(),o.fireWith(e[0],e[1])))},o={add:function(){if(c){var a=c.length;m(arguments),i?k=c.length:e&&e!==!0&&(j=a,n(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){i&&f<=k&&(k--,f<=l&&l--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&o.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(i?a.once||d.push([b,c]):(!a.once||!e)&&n(b,c));return this},fire:function(){o.fireWith(this,arguments);return this},fired:function(){return!!e}};return o};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p,q=c.createElement("div"),r=c.documentElement;q.setAttribute("className","t"),q.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=q.getElementsByTagName("*"),e=q.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=q.getElementsByTagName("input")[0],b={leadingWhitespace:q.firstChild.nodeType===3,tbody:!q.getElementsByTagName("tbody").length,htmlSerialize:!!q.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:q.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete q.test}catch(s){b.deleteExpando=!1}!q.addEventListener&&q.attachEvent&&q.fireEvent&&(q.attachEvent("onclick",function(){b.noCloneEvent=!1}),q.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),q.appendChild(i),k=c.createDocumentFragment(),k.appendChild(q.lastChild),b.checkClone=k.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,k.removeChild(i),k.appendChild(q),q.innerHTML="",a.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",q.style.width="2px",q.appendChild(j),b.reliableMarginRight=(parseInt((a.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0);if(q.attachEvent)for(o in{submit:1,change:1,focusin:1})n="on"+o,p=n in q,p||(q.setAttribute(n,"return;"),p=typeof q[n]=="function"),b[o+"Bubbles"]=p;k.removeChild(q),k=g=h=j=q=i=null,f(function(){var a,d,e,g,h,i,j,k,m,n,o,r=c.getElementsByTagName("body")[0];!r||(j=1,k="position:absolute;top:0;left:0;width:1px;height:1px;margin:0;",m="visibility:hidden;border:0;",n="style='"+k+"border:5px solid #000;padding:0;'",o="<div "+n+"><div></div></div>"+"<table "+n+" cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",a=c.createElement("div"),a.style.cssText=m+"width:0;height:0;position:static;top:0;margin-top:"+j+"px",r.insertBefore(a,r.firstChild),q=c.createElement("div"),a.appendChild(q),q.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",l=q.getElementsByTagName("td"),p=l[0].offsetHeight===0,l[0].style.display="",l[1].style.display="none",b.reliableHiddenOffsets=p&&l[0].offsetHeight===0,q.innerHTML="",q.style.width=q.style.paddingLeft="1px",f.boxModel=b.boxModel=q.offsetWidth===2,typeof q.style.zoom!="undefined"&&(q.style.display="inline",q.style.zoom=1,b.inlineBlockNeedsLayout=q.offsetWidth===2,q.style.display="",q.innerHTML="<div style='width:4px;'></div>",b.shrinkWrapBlocks=q.offsetWidth!==2),q.style.cssText=k+m,q.innerHTML=o,d=q.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,i={doesNotAddBorder:e.offsetTop!==5,doesAddBorderForTableAndCells:h.offsetTop===5},e.style.position="fixed",e.style.top="20px",i.fixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",i.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,i.doesNotIncludeMarginInBodyOffset=r.offsetTop!==j,r.removeChild(a),q=a=null,f.extend(b,i))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h=null;if(typeof a=="undefined"){if(this.length){h=f.data(this[0]);if(this[0].nodeType===1&&!f._data(this[0],"parsedAttrs")){e=this[0].attributes;for(var i=0,j=e.length;i<j;i++)g=e[i].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],"parsedAttrs",!0)}}return h}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split("."),d[1]=d[1]?"."+d[1]:"";if(c===b){h=this.triggerHandler("getData"+d[1]+"!",[d[0]]),h===b&&this.length&&(h=f.data(this[0],a),h=l(this[0],a,h));return h===b&&d[1]?this.data(d[0]):h}return this.each(function(){var b=f(this),e=[d[0],c];b.triggerHandler("setData"+d[1]+"!",e),f.data(this,a,c),b.triggerHandler("changeData"+d[1]+"!",e)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise()}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;h<g;h++)e=d[h],e&&(c=f.propFix[e]||e,f.attr(a,e,""),a.removeAttribute(v?e:c),u.test(e)&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/\bhover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};
f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=[],j,k,l,m,n,o,p,q,r,s,t;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!=="click")){m=f(this),m.context=this.ownerDocument||this;for(l=c.target;l!=this;l=l.parentNode||this){o={},q=[],m[0]=l;for(j=0;j<e;j++)r=d[j],s=r.selector,o[s]===b&&(o[s]=r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,matches:q})}}d.length>e&&i.push({elem:this,matches:d.slice(e)});for(j=0;j<i.length&&!c.isPropagationStopped();j++){p=i[j],c.currentTarget=p.elem;for(k=0;k<p.matches.length&&!c.isImmediatePropagationStopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleObj=r,n=((f.event.special[r.origType]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventDefault(),c.stopPropagation()))}}return c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0)}),d._submit_attached=!0)})},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.type+"."+e.namespace:e.type,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.POS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function()
{for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||!bc.test("<"+a.nodeName)?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement("div");b===c?bh.appendChild(o):U(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bn(k[i]);else bn(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bq=/alpha\([^)]*\)/i,br=/opacity=([^)]*)/,bs=/([A-Z]|^ms)/g,bt=/^-?\d+(?:px)?$/i,bu=/^-?\d/,bv=/^([\-+])=([\-+.\de]+)/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Left","Right"],by=["Top","Bottom"],bz,bA,bB;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bz(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bv.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bz)return bz(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bC(a,b,d);f.swap(a,bw,function(){e=bC(a,b,d)});return e}},set:function(a,b){if(!bt.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bq,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bq.test(g)?g.replace(bq,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bz(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,b){var c,d,e;b=b.replace(bs,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b)));return c}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bt.test(f)&&bu.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f||0,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bD=/%20/g,bE=/\[\]$/,bF=/\r?\n/g,bG=/#.*$/,bH=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bI=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bJ=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bK=/^(?:GET|HEAD)$/,bL=/^\/\//,bM=/\?/,bN=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bO=/^(?:select|textarea)/i,bP=/\s+/,bQ=/([?&])_=[^&]*/,bR=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bS=f.fn.load,bT={},bU={},bV,bW,bX=["*/"]+["*"];try{bV=e.href}catch(bY){bV=c.createElement("a"),bV.href="",bV=bV.href}bW=bR.exec(bV.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bS)return bS.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bN,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bO.test(this.nodeName)||bI.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bF,"\r\n")}}):{name:b.name,value:c.replace(bF,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b_(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b_(a,b);return a},ajaxSettings:{url:bV,isLocal:bJ.test(bW[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bX},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bZ(bT),ajaxTransport:bZ(bU),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?cb(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cc(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bH.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bG,"").replace(bL,bW[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bP),d.crossDomain==null&&(r=bR.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bW[1]&&r[2]==bW[2]&&(r[3]||(r[1]==="http:"?80:443))==(bW[3]||(bW[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),b$(bT,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bK.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bM.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bQ,"$1_="+x);d.url=y+(y===d.url?(bM.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bX+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=b$(bU,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)ca(g,a[g],c,e);return d.join("&").replace(bD,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cd=f.now(),ce=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cd++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ce.test(b.url)||e&&ce.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ce,l),b.url===j&&(e&&(k=k.replace(ce,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cf=a.ActiveXObject?function(){for(var a in ch)ch[a](0,1)}:!1,cg=0,ch;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ci()||cj()}:ci,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cf&&delete ch[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cg,cf&&(ch||(ch={},f(a).unload(cf)),ch[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var ck={},cl,cm,cn=/^(?:toggle|show|hide)$/,co=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cp,cq=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cr;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cu("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cv(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cu("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cu("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cv(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cn.test(h)?(o=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),o?(f._data(this,"toggle"+i,o==="show"?"hide":"show"),j[o]()):j[h]()):(k=co.exec(h),l=j.cur(),k?(m=parseFloat(k[2]),n=k[3]||(f.cssNumber[i]?"":"px"),n!=="px"&&(f.style(this,i,(m||1)+n),l=(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=(k[1]==="-="?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:cu("show",1),slideUp:cu("hide",1),slideToggle:cu("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cr||cs(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){e.options.hide&&f._data(e.elem,"fxshow"+e.prop)===b&&f._data(e.elem,"fxshow"+e.prop,e.start)},h()&&f.timers.push(h)&&!cp&&(cp=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cr||cs(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cp),cp=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(["width","height"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cy(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.support.fixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.support.fixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cy(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,d,"padding")):this[d]():null},f.fn["outer"+c]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,d,a?"margin":"border")):this[d]():null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNumeric(j)?j:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);
var jQ = jQuery.noConflict();

/**
 * jQuery BASE64 functions
 *
 * 	<code>
 * 		Encodes the given data with base64.
 * 		String $.base64Encode ( String str )
 *		<br />
 * 		Decodes a base64 encoded data.
 * 		String $.base64Decode ( String str )
 * 	</code>
 *
 * Encodes and Decodes the given data in base64.
 * This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies.
 * Base64-encoded data takes about 33% more space than the original data.
 * This javascript code is used to encode / decode data using base64 (this encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean). Script is fully compatible with UTF-8 encoding. You can use base64 encoded data as simple encryption mechanism.
 * If you plan using UTF-8 encoding in your project don't forget to set the page encoding to UTF-8 (Content-Type meta tag).
 * This function orginally get from the WebToolkit and rewrite for using as the jQuery plugin.
 *
 * Example
 * 	Code
 * 		<code>
 * 			$.base64Encode("I'm Persian.");
 * 		</code>
 * 	Result
 * 		<code>
 * 			"SSdtIFBlcnNpYW4u"
 * 		</code>
 * 	Code
 * 		<code>
 * 			$.base64Decode("SSdtIFBlcnNpYW4u");
 * 		</code>
 * 	Result
 * 		<code>
 * 			"I'm Persian."
 * 		</code>
 *
 * @alias Muhammad Hussein Fattahizadeh < muhammad [AT] semnanweb [DOT] com >
 * @link http://www.semnanweb.com/jquery-plugin/base64.html
 * @see http://www.webtoolkit.info/
 * @license http://www.gnu.org/licenses/gpl.html [GNU General Public License]
 * @param {jQuery} {base64Encode:function(input))
 * @param {jQuery} {base64Decode:function(input))
 * @return string
 */

(function($){

	var keyString = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

	var uTF8Encode = function(string) {
		string = string.replace(/\x0d\x0a/g, "\x0a");
		var output = "";
		for (var n = 0; n < string.length; n++) {
			var c = string.charCodeAt(n);
			if (c < 128) {
				output += String.fromCharCode(c);
			} else if ((c > 127) && (c < 2048)) {
				output += String.fromCharCode((c >> 6) | 192);
				output += String.fromCharCode((c & 63) | 128);
			} else {
				output += String.fromCharCode((c >> 12) | 224);
				output += String.fromCharCode(((c >> 6) & 63) | 128);
				output += String.fromCharCode((c & 63) | 128);
			}
		}
		return output;
	};

	var uTF8Decode = function(input) {
		var string = "";
		var i = 0;
		var c, c1, c2;
		c = c1 = c2 = 0;
		while ( i < input.length ) {
			c = input.charCodeAt(i);
			if (c < 128) {
				string += String.fromCharCode(c);
				i++;
			} else if ((c > 191) && (c < 224)) {
				c2 = input.charCodeAt(i+1);
				string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
				i += 2;
			} else {
				c2 = input.charCodeAt(i+1);
				c3 = input.charCodeAt(i+2);
				string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
				i += 3;
			}
		}
		return string;
	}

	$.extend({
		base64Encode: function(input) {
			var output = "";
			var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
			var i = 0;
			input = uTF8Encode(input);
			while (i < input.length) {
				chr1 = input.charCodeAt(i++);
				chr2 = input.charCodeAt(i++);
				chr3 = input.charCodeAt(i++);
				enc1 = chr1 >> 2;
				enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
				enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
				enc4 = chr3 & 63;
				if (isNaN(chr2)) {
					enc3 = enc4 = 64;
				} else if (isNaN(chr3)) {
					enc4 = 64;
				}
				output = output + keyString.charAt(enc1) + keyString.charAt(enc2) + keyString.charAt(enc3) + keyString.charAt(enc4);
			}
			return output;
		},
		base64Decode: function(input) {
			var output = "";
			var chr1, chr2, chr3;
			var enc1, enc2, enc3, enc4;
			var i = 0;
			input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
			while (i < input.length) {
				enc1 = keyString.indexOf(input.charAt(i++));
				enc2 = keyString.indexOf(input.charAt(i++));
				enc3 = keyString.indexOf(input.charAt(i++));
				enc4 = keyString.indexOf(input.charAt(i++));
				chr1 = (enc1 << 2) | (enc2 >> 4);
				chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
				chr3 = ((enc3 & 3) << 6) | enc4;
				output = output + String.fromCharCode(chr1);
				if (enc3 != 64) {
					output = output + String.fromCharCode(chr2);
				}
				if (enc4 != 64) {
					output = output + String.fromCharCode(chr3);
				}
			}
			output = uTF8Decode(output);
			return output;
		}
	});
})(jQuery);

window.JSON||(window.JSON={}),function(){function f(a){return a<10?"0"+a:a}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return typeof b=="string"?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i&&typeof i=="object"&&typeof i.toJSON=="function"&&(i=i.toJSON(a)),typeof rep=="function"&&(i=rep.call(b,a,i));switch(typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";gap+=indent,h=[];if(Object.prototype.toString.apply(i)==="[object Array]"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||"null";return e=h.length===0?"[]":gap?"[\n"+gap+h.join(",\n"+gap)+"\n"+g+"]":"["+h.join(",")+"]",gap=g,e}if(rep&&typeof rep=="object"){f=rep.length;for(c=0;c<f;c+=1)d=rep[c],typeof d=="string"&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e))}else for(d in i)Object.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e));return e=h.length===0?"{}":gap?"{\n"+gap+h.join(",\n"+gap)+"\n"+g+"}":"{"+h.join(",")+"}",gap=g,e}}"use strict",typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var JSON=window.JSON,cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(a,b,c){var d;gap="",indent="";if(typeof c=="number")for(d=0;d<c;d+=1)indent+=" ";else typeof c=="string"&&(indent=c);rep=b;if(!b||typeof b=="function"||typeof b=="object"&&typeof b.length=="number")return str("",{"":a});throw new Error("JSON.stringify")}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e=="object")for(c in e)Object.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),function(a,b){"use strict";var c=a.History=a.History||{},d=a.jQuery;if(typeof c.Adapter!="undefined")throw new Error("History.js Adapter has already been loaded...");c.Adapter={bind:function(a,b,c){d(a).bind(b,c)},trigger:function(a,b,c){d(a).trigger(b,c)},extractEventData:function(a,c,d){var e=c&&c.originalEvent&&c.originalEvent[a]||d&&d[a]||b;return e},onDomLoad:function(a){d(a)}},typeof c.init!="undefined"&&c.init()}(window),function(a,b){"use strict";var c=a.document,d=a.setTimeout||d,e=a.clearTimeout||e,f=a.setInterval||f,g=a.History=a.History||{};if(typeof g.initHtml4!="undefined")throw new Error("History.js HTML4 Support has already been loaded...");g.initHtml4=function(){if(typeof g.initHtml4.initialized!="undefined")return!1;g.initHtml4.initialized=!0,g.enabled=!0,g.savedHashes=[],g.isLastHash=function(a){var b=g.getHashByIndex(),c;return c=a===b,c},g.saveHash=function(a){return g.isLastHash(a)?!1:(g.savedHashes.push(a),!0)},g.getHashByIndex=function(a){var b=null;return typeof a=="undefined"?b=g.savedHashes[g.savedHashes.length-1]:a<0?b=g.savedHashes[g.savedHashes.length+a]:b=g.savedHashes[a],b},g.discardedHashes={},g.discardedStates={},g.discardState=function(a,b,c){var d=g.getHashByState(a),e;return e={discardedState:a,backState:c,forwardState:b},g.discardedStates[d]=e,!0},g.discardHash=function(a,b,c){var d={discardedHash:a,backState:c,forwardState:b};return g.discardedHashes[a]=d,!0},g.discardedState=function(a){var b=g.getHashByState(a),c;return c=g.discardedStates[b]||!1,c},g.discardedHash=function(a){var b=g.discardedHashes[a]||!1;return b},g.recycleState=function(a){var b=g.getHashByState(a);return g.discardedState(a)&&delete g.discardedStates[b],!0},g.emulated.hashChange&&(g.hashChangeInit=function(){g.checkerFunction=null;var b="",d,e,h,i;return g.isInternetExplorer()?(d="historyjs-iframe",e=c.createElement("iframe"),e.setAttribute("id",d),e.style.display="none",c.body.appendChild(e),e.contentWindow.document.open(),e.contentWindow.document.close(),h="",i=!1,g.checkerFunction=function(){if(i)return!1;i=!0;var c=g.getHash()||"",d=g.unescapeHash(e.contentWindow.document.location.hash)||"";return c!==b?(b=c,d!==c&&(h=d=c,e.contentWindow.document.open(),e.contentWindow.document.close(),e.contentWindow.document.location.hash=g.escapeHash(c)),g.Adapter.trigger(a,"hashchange")):d!==h&&(h=d,g.setHash(d,!1)),i=!1,!0}):g.checkerFunction=function(){var c=g.getHash();return c!==b&&(b=c,g.Adapter.trigger(a,"hashchange")),!0},g.intervalList.push(f(g.checkerFunction,g.options.hashChangeInterval)),!0},g.Adapter.onDomLoad(g.hashChangeInit)),g.emulated.pushState&&(g.onHashChange=function(b){var d=b&&b.newURL||c.location.href,e=g.getHashByUrl(d),f=null,h=null,i=null,j;return g.isLastHash(e)?(g.busy(!1),!1):(g.doubleCheckComplete(),g.saveHash(e),e&&g.isTraditionalAnchor(e)?(g.Adapter.trigger(a,"anchorchange"),g.busy(!1),!1):(f=g.extractState(g.getFullUrl(e||c.location.href,!1),!0),g.isLastSavedState(f)?(g.busy(!1),!1):(h=g.getHashByState(f),j=g.discardedState(f),j?(g.getHashByIndex(-2)===g.getHashByState(j.forwardState)?g.back(!1):g.forward(!1),!1):(g.pushState(f.data,f.title,f.url,!1),!0))))},g.Adapter.bind(a,"hashchange",g.onHashChange),g.pushState=function(b,d,e,f){if(g.getHashByUrl(e))throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(f!==!1&&g.busy())return g.pushQueue({scope:g,callback:g.pushState,args:arguments,queue:f}),!1;g.busy(!0);var h=g.createStateObject(b,d,e),i=g.getHashByState(h),j=g.getState(!1),k=g.getHashByState(j),l=g.getHash();return g.storeState(h),g.expectedStateId=h.id,g.recycleState(h),g.setTitle(h),i===k?(g.busy(!1),!1):i!==l&&i!==g.getShortUrl(c.location.href)?(g.setHash(i,!1),!1):(g.saveState(h),g.Adapter.trigger(a,"statechange"),g.busy(!1),!0)},g.replaceState=function(a,b,c,d){if(g.getHashByUrl(c))throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(d!==!1&&g.busy())return g.pushQueue({scope:g,callback:g.replaceState,args:arguments,queue:d}),!1;g.busy(!0);var e=g.createStateObject(a,b,c),f=g.getState(!1),h=g.getStateByIndex(-2);return g.discardState(f,e,h),g.pushState(e.data,e.title,e.url,!1),!0}),g.emulated.pushState&&g.getHash()&&!g.emulated.hashChange&&g.Adapter.onDomLoad(function(){g.Adapter.trigger(a,"hashchange")})},typeof g.init!="undefined"&&g.init()}(window),function(a,b){"use strict";var c=a.console||b,d=a.document,e=a.navigator,f=a.sessionStorage||!1,g=a.setTimeout,h=a.clearTimeout,i=a.setInterval,j=a.clearInterval,k=a.JSON,l=a.alert,m=a.History=a.History||{},n=a.history;k.stringify=k.stringify||k.encode,k.parse=k.parse||k.decode;if(typeof m.init!="undefined")throw new Error("History.js Core has already been loaded...");m.init=function(){return typeof m.Adapter=="undefined"?!1:(typeof m.initCore!="undefined"&&m.initCore(),typeof m.initHtml4!="undefined"&&m.initHtml4(),!0)},m.initCore=function(){if(typeof m.initCore.initialized!="undefined")return!1;m.initCore.initialized=!0,m.options=m.options||{},m.options.hashChangeInterval=m.options.hashChangeInterval||100,m.options.safariPollInterval=m.options.safariPollInterval||500,m.options.doubleCheckInterval=m.options.doubleCheckInterval||500,m.options.storeInterval=m.options.storeInterval||1e3,m.options.busyDelay=m.options.busyDelay||250,m.options.debug=m.options.debug||!1,m.options.initialTitle=m.options.initialTitle||d.title,m.intervalList=[],m.clearAllIntervals=function(){var a,b=m.intervalList;if(typeof b!="undefined"&&b!==null){for(a=0;a<b.length;a++)j(b[a]);m.intervalList=null}},m.debug=function(){(m.options.debug||!1)&&m.log.apply(m,arguments)},m.log=function(){var a=typeof c!="undefined"&&typeof c.log!="undefined"&&typeof c.log.apply!="undefined",b=d.getElementById("log"),e,f,g,h,i;a?(h=Array.prototype.slice.call(arguments),e=h.shift(),typeof c.debug!="undefined"?c.debug.apply(c,[e,h]):c.log.apply(c,[e,h])):e="\n"+arguments[0]+"\n";for(f=1,g=arguments.length;f<g;++f){i=arguments[f];if(typeof i=="object"&&typeof k!="undefined")try{i=k.stringify(i)}catch(j){}e+="\n"+i+"\n"}return b?(b.value+=e+"\n-----\n",b.scrollTop=b.scrollHeight-b.clientHeight):a||l(e),!0},m.getInternetExplorerMajorVersion=function(){var a=m.getInternetExplorerMajorVersion.cached=typeof m.getInternetExplorerMajorVersion.cached!="undefined"?m.getInternetExplorerMajorVersion.cached:function(){var a=3,b=d.createElement("div"),c=b.getElementsByTagName("i");while((b.innerHTML="<!--[if gt IE "+ ++a+"]><i></i><![endif]-->")&&c[0]);return a>4?a:!1}();return a},m.isInternetExplorer=function(){var a=m.isInternetExplorer.cached=typeof m.isInternetExplorer.cached!="undefined"?m.isInternetExplorer.cached:Boolean(m.getInternetExplorerMajorVersion());return a},m.emulated={pushState:!Boolean(a.history&&a.history.pushState&&a.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(e.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(e.userAgent)),hashChange:Boolean(!("onhashchange"in a||"onhashchange"in d)||m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<8)},m.enabled=!m.emulated.pushState,m.bugs={setHash:Boolean(!m.emulated.pushState&&e.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(e.userAgent)),safariPoll:Boolean(!m.emulated.pushState&&e.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(e.userAgent)),ieDoubleCheck:Boolean(m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<7)},m.isEmptyObject=function(a){for(var b in a)return!1;return!0},m.cloneObject=function(a){var b,c;return a?(b=k.stringify(a),c=k.parse(b)):c={},c},m.getRootUrl=function(){var a=d.location.protocol+"//"+(d.location.hostname||d.location.host);if(d.location.port||!1)a+=":"+d.location.port;return a+="/",a},m.getBaseHref=function(){var a=d.getElementsByTagName("base"),b=null,c="";return a.length===1&&(b=a[0],c=b.href.replace(/[^\/]+$/,"")),c=c.replace(/\/+$/,""),c&&(c+="/"),c},m.getBaseUrl=function(){var a=m.getBaseHref()||m.getBasePageUrl()||m.getRootUrl();return a},m.getPageUrl=function(){var a=m.getState(!1,!1),b=(a||{}).url||d.location.href,c;return c=b.replace(/\/+$/,"").replace(/[^\/]+$/,function(a,b,c){return/\./.test(a)?a:a+"/"}),c},m.getBasePageUrl=function(){var a=d.location.href.replace(/[#\?].*/,"").replace(/[^\/]+$/,function(a,b,c){return/[^\/]$/.test(a)?"":a}).replace(/\/+$/,"")+"/";return a},m.getFullUrl=function(a,b){var c=a,d=a.substring(0,1);return b=typeof b=="undefined"?!0:b,/[a-z]+\:\/\//.test(a)||(d==="/"?c=m.getRootUrl()+a.replace(/^\/+/,""):d==="#"?c=m.getPageUrl().replace(/#.*/,"")+a:d==="?"?c=m.getPageUrl().replace(/[\?#].*/,"")+a:b?c=m.getBaseUrl()+a.replace(/^(\.\/)+/,""):c=m.getBasePageUrl()+a.replace(/^(\.\/)+/,"")),c.replace(/\#$/,"")},m.getShortUrl=function(a){var b=a,c=m.getBaseUrl(),d=m.getRootUrl();return m.emulated.pushState&&(b=b.replace(c,"")),b=b.replace(d,"/"),m.isTraditionalAnchor(b)&&(b="./"+b),b=b.replace(/^(\.\/)+/g,"./").replace(/\#$/,""),b},m.store={},m.idToState=m.idToState||{},m.stateToId=m.stateToId||{},m.urlToId=m.urlToId||{},m.storedStates=m.storedStates||[],m.savedStates=m.savedStates||[],m.normalizeStore=function(){m.store.idToState=m.store.idToState||{},m.store.urlToId=m.store.urlToId||{},m.store.stateToId=m.store.stateToId||{}},m.getState=function(a,b){typeof a=="undefined"&&(a=!0),typeof b=="undefined"&&(b=!0);var c=m.getLastSavedState();return!c&&b&&(c=m.createStateObject()),a&&(c=m.cloneObject(c),c.url=c.cleanUrl||c.url),c},m.getIdByState=function(a){var b=m.extractId(a.url),c;if(!b){c=m.getStateString(a);if(typeof m.stateToId[c]!="undefined")b=m.stateToId[c];else if(typeof m.store.stateToId[c]!="undefined")b=m.store.stateToId[c];else{for(;;){b=(new Date).getTime()+String(Math.random()).replace(/\D/g,"");if(typeof m.idToState[b]=="undefined"&&typeof m.store.idToState[b]=="undefined")break}m.stateToId[c]=b,m.idToState[b]=a}}return b},m.normalizeState=function(a){var b,c;if(!a||typeof a!="object")a={};if(typeof a.normalized!="undefined")return a;if(!a.data||typeof a.data!="object")a.data={};b={},b.normalized=!0,b.title=a.title||"",b.url=m.getFullUrl(m.unescapeString(a.url||d.location.href)),b.hash=m.getShortUrl(b.url),b.data=m.cloneObject(a.data),b.id=m.getIdByState(b),b.cleanUrl=b.url.replace(/\??\&_suid.*/,""),b.url=b.cleanUrl,c=!m.isEmptyObject(b.data);if(b.title||c)b.hash=m.getShortUrl(b.url).replace(/\??\&_suid.*/,""),/\?/.test(b.hash)||(b.hash+="?"),b.hash+="&_suid="+b.id;return b.hashedUrl=m.getFullUrl(b.hash),(m.emulated.pushState||m.bugs.safariPoll)&&m.hasUrlDuplicate(b)&&(b.url=b.hashedUrl),b},m.createStateObject=function(a,b,c){var d={data:a,title:b,url:c};return d=m.normalizeState(d),d},m.getStateById=function(a){a=String(a);var c=m.idToState[a]||m.store.idToState[a]||b;return c},m.getStateString=function(a){var b,c,d;return b=m.normalizeState(a),c={data:b.data,title:a.title,url:a.url},d=k.stringify(c),d},m.getStateId=function(a){var b,c;return b=m.normalizeState(a),c=b.id,c},m.getHashByState=function(a){var b,c;return b=m.normalizeState(a),c=b.hash,c},m.extractId=function(a){var b,c,d;return c=/(.*)\&_suid=([0-9]+)$/.exec(a),d=c?c[1]||a:a,b=c?String(c[2]||""):"",b||!1},m.isTraditionalAnchor=function(a){var b=!/[\/\?\.]/.test(a);return b},m.extractState=function(a,b){var c=null,d,e;return b=b||!1,d=m.extractId(a),d&&(c=m.getStateById(d)),c||(e=m.getFullUrl(a),d=m.getIdByUrl(e)||!1,d&&(c=m.getStateById(d)),!c&&b&&!m.isTraditionalAnchor(a)&&(c=m.createStateObject(null,null,e))),c},m.getIdByUrl=function(a){var c=m.urlToId[a]||m.store.urlToId[a]||b;return c},m.getLastSavedState=function(){return m.savedStates[m.savedStates.length-1]||b},m.getLastStoredState=function(){return m.storedStates[m.storedStates.length-1]||b},m.hasUrlDuplicate=function(a){var b=!1,c;return c=m.extractState(a.url),b=c&&c.id!==a.id,b},m.storeState=function(a){return m.urlToId[a.url]=a.id,m.storedStates.push(m.cloneObject(a)),a},m.isLastSavedState=function(a){var b=!1,c,d,e;return m.savedStates.length&&(c=a.id,d=m.getLastSavedState(),e=d.id,b=c===e),b},m.saveState=function(a){return m.isLastSavedState(a)?!1:(m.savedStates.push(m.cloneObject(a)),!0)},m.getStateByIndex=function(a){var b=null;return typeof a=="undefined"?b=m.savedStates[m.savedStates.length-1]:a<0?b=m.savedStates[m.savedStates.length+a]:b=m.savedStates[a],b},m.getHash=function(){var a=m.unescapeHash(d.location.hash);return a},m.unescapeString=function(b){var c=b,d;for(;;){d=a.unescape(c);if(d===c)break;c=d}return c},m.unescapeHash=function(a){var b=m.normalizeHash(a);return b=m.unescapeString(b),b},m.normalizeHash=function(a){var b=a.replace(/[^#]*#/,"").replace(/#.*/,"");return b},m.setHash=function(a,b){var c,e,f;return b!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.setHash,args:arguments,queue:b}),!1):(c=m.escapeHash(a),m.busy(!0),e=m.extractState(a,!0),e&&!m.emulated.pushState?m.pushState(e.data,e.title,e.url,!1):d.location.hash!==c&&(m.bugs.setHash?(f=m.getPageUrl(),m.pushState(null,null,f+"#"+c,!1)):d.location.hash=c),m)},m.escapeHash=function(b){var c=m.normalizeHash(b);return c=a.escape(c),m.bugs.hashEscape||(c=c.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),c},m.getHashByUrl=function(a){var b=String(a).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return b=m.unescapeHash(b),b},m.setTitle=function(a){var b=a.title,c;b||(c=m.getStateByIndex(0),c&&c.url===a.url&&(b=c.title||m.options.initialTitle));try{d.getElementsByTagName("title")[0].innerHTML=b.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(e){}return d.title=b,m},m.queues=[],m.busy=function(a){typeof a!="undefined"?m.busy.flag=a:typeof m.busy.flag=="undefined"&&(m.busy.flag=!1);if(!m.busy.flag){h(m.busy.timeout);var b=function(){var a,c,d;if(m.busy.flag)return;for(a=m.queues.length-1;a>=0;--a){c=m.queues[a];if(c.length===0)continue;d=c.shift(),m.fireQueueItem(d),m.busy.timeout=g(b,m.options.busyDelay)}};m.busy.timeout=g(b,m.options.busyDelay)}return m.busy.flag},m.busy.flag=!1,m.fireQueueItem=function(a){return a.callback.apply(a.scope||m,a.args||[])},m.pushQueue=function(a){return m.queues[a.queue||0]=m.queues[a.queue||0]||[],m.queues[a.queue||0].push(a),m},m.queue=function(a,b){return typeof a=="function"&&(a={callback:a}),typeof b!="undefined"&&(a.queue=b),m.busy()?m.pushQueue(a):m.fireQueueItem(a),m},m.clearQueue=function(){return m.busy.flag=!1,m.queues=[],m},m.stateChanged=!1,m.doubleChecker=!1,m.doubleCheckComplete=function(){return m.stateChanged=!0,m.doubleCheckClear(),m},m.doubleCheckClear=function(){return m.doubleChecker&&(h(m.doubleChecker),m.doubleChecker=!1),m},m.doubleCheck=function(a){return m.stateChanged=!1,m.doubleCheckClear(),m.bugs.ieDoubleCheck&&(m.doubleChecker=g(function(){return m.doubleCheckClear(),m.stateChanged||a(),!0},m.options.doubleCheckInterval)),m},m.safariStatePoll=function(){var b=m.extractState(d.location.href),c;if(!m.isLastSavedState(b))c=b;else return;return c||(c=m.createStateObject()),m.Adapter.trigger(a,"popstate"),m},m.back=function(a){return a!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.back,args:arguments,queue:a}),!1):(m.busy(!0),m.doubleCheck(function(){m.back(!1)}),n.go(-1),!0)},m.forward=function(a){return a!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.forward,args:arguments,queue:a}),!1):(m.busy(!0),m.doubleCheck(function(){m.forward(!1)}),n.go(1),!0)},m.go=function(a,b){var c;if(a>0)for(c=1;c<=a;++c)m.forward(b);else{if(!(a<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(c=-1;c>=a;--c)m.back(b)}return m};if(m.emulated.pushState){var o=function(){};m.pushState=m.pushState||o,m.replaceState=m.replaceState||o}else m.onPopState=function(b,c){var e=!1,f=!1,g,h;return m.doubleCheckComplete(),g=m.getHash(),g?(h=m.extractState(g||d.location.href,!0),h?m.replaceState(h.data,h.title,h.url,!1):(m.Adapter.trigger(a,"anchorchange"),m.busy(!1)),m.expectedStateId=!1,!1):(e=m.Adapter.extractEventData("state",b,c)||!1,e?f=m.getStateById(e):m.expectedStateId?f=m.getStateById(m.expectedStateId):f=m.extractState(d.location.href),f||(f=m.createStateObject(null,null,d.location.href)),m.expectedStateId=!1,m.isLastSavedState(f)?(m.busy(!1),!1):(m.storeState(f),m.saveState(f),m.setTitle(f),m.Adapter.trigger(a,"statechange"),m.busy(!1),!0))},m.Adapter.bind(a,"popstate",m.onPopState),m.pushState=function(b,c,d,e){if(m.getHashByUrl(d)&&m.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(e!==!1&&m.busy())return m.pushQueue({scope:m,callback:m.pushState,args:arguments,queue:e}),!1;m.busy(!0);var f=m.createStateObject(b,c,d);return m.isLastSavedState(f)?m.busy(!1):(m.storeState(f),m.expectedStateId=f.id,n.pushState(f.id,f.title,f.url),m.Adapter.trigger(a,"popstate")),!0},m.replaceState=function(b,c,d,e){if(m.getHashByUrl(d)&&m.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(e!==!1&&m.busy())return m.pushQueue({scope:m,callback:m.replaceState,args:arguments,queue:e}),!1;m.busy(!0);var f=m.createStateObject(b,c,d);return m.isLastSavedState(f)?m.busy(!1):(m.storeState(f),m.expectedStateId=f.id,n.replaceState(f.id,f.title,f.url),m.Adapter.trigger(a,"popstate")),!0};if(f){try{m.store=k.parse(f.getItem("History.store"))||{}}catch(p){m.store={}}m.normalizeStore()}else m.store={},m.normalizeStore();m.Adapter.bind(a,"beforeunload",m.clearAllIntervals),m.Adapter.bind(a,"unload",m.clearAllIntervals),m.saveState(m.storeState(m.extractState(d.location.href,!0))),f&&(m.onUnload=function(){var a,b;try{a=k.parse(f.getItem("History.store"))||{}}catch(c){a={}}a.idToState=a.idToState||{},a.urlToId=a.urlToId||{},a.stateToId=a.stateToId||{};for(b in m.idToState){if(!m.idToState.hasOwnProperty(b))continue;a.idToState[b]=m.idToState[b]}for(b in m.urlToId){if(!m.urlToId.hasOwnProperty(b))continue;a.urlToId[b]=m.urlToId[b]}for(b in m.stateToId){if(!m.stateToId.hasOwnProperty(b))continue;a.stateToId[b]=m.stateToId[b]}m.store=a,m.normalizeStore(),f.setItem("History.store",k.stringify(a))},m.intervalList.push(i(m.onUnload,m.options.storeInterval)),m.Adapter.bind(a,"beforeunload",m.onUnload),m.Adapter.bind(a,"unload",m.onUnload));if(!m.emulated.pushState){m.bugs.safariPoll&&m.intervalList.push(i(m.safariStatePoll,m.options.safariPollInterval));if(e.vendor==="Apple Computer, Inc."||(e.appCodeName||"")==="Mozilla")m.Adapter.bind(a,"hashchange",function(){m.Adapter.trigger(a,"popstate")}),m.getHash()&&m.Adapter.onDomLoad(function(){m.Adapter.trigger(a,"hashchange")})}},m.init()}(window)
/**
 * Cookie plugin
 *
 * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */

/**
 * Create a cookie with the given name and value and other optional parameters.
 *
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Set the value of a cookie.
 * @example $.cookie('the_cookie', 'the_value', { expires: 7, path: '/', domain: 'jquery.com', secure: true });
 * @desc Create a cookie with all available options.
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Create a session cookie.
 * @example $.cookie('the_cookie', null);
 * @desc Delete a cookie by passing null as value. Keep in mind that you have to use the same path and domain
 *       used when the cookie was set.
 *
 * @param String name The name of the cookie.
 * @param String value The value of the cookie.
 * @param Object options An object literal containing key/value pairs to provide optional cookie attributes.
 * @option Number|Date expires Either an integer specifying the expiration date from now on in days or a Date object.
 *                             If a negative value is specified (e.g. a date in the past), the cookie will be deleted.
 *                             If set to null or omitted, the cookie will be a session cookie and will not be retained
 *                             when the the browser exits.
 * @option String path The value of the path atribute of the cookie (default: path of page that created the cookie).
 * @option String domain The value of the domain attribute of the cookie (default: domain of page that created the cookie).
 * @option Boolean secure If true, the secure attribute of the cookie will be set and the cookie transmission will
 *                        require a secure protocol (like HTTPS).
 * @type undefined
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */

/**
 * Get the value of a cookie with the given name.
 *
 * @example $.cookie('the_cookie');
 * @desc Get the value of a cookie.
 *
 * @param String name The name of the cookie.
 * @return The value of the cookie.
 * @type String
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */
if (window.jQuery)
	(function($) {

		jQuery.cookie = function(name, value, options) {
			if (typeof value != 'undefined') { // name and value given, set cookie
				options = options || {};
				if (value === null) {
					value = '';
					options = $.extend( {}, options); // clone object since it's unexpected behavior if the expired property were changed
					options.expires = -1;
				}
				var expires = '';
				if (options.expires
						&& (typeof options.expires == 'number' || options.expires.toUTCString)) {
					var date;
					if (typeof options.expires == 'number') {
						date = new Date();
						date.setTime(date.getTime()
								+ (options.expires * 24 * 60 * 60 * 1000));
					} else {
						date = options.expires;
					}
					expires = '; expires=' + date.toUTCString(); // use expires attribute, max-age is not supported by IE
				}
				// NOTE Needed to parenthesize options.path and options.domain
				// in the following expressions, otherwise they evaluate to undefined
				// in the packed version for some reason...
				var path = options.path ? '; path=' + (options.path) : '';
				var domain = options.domain ? '; domain=' + (options.domain)
						: '';
				var secure = options.secure ? '; secure' : '';
				document.cookie = [ name, '=', encodeURIComponent(value),
						expires, path, domain, secure ].join('');
			} else { // only name given, get cookie
				var cookieValue = null;
				if (document.cookie && document.cookie != '') {
					var cookies = document.cookie.split(';');
					for ( var i = 0; i < cookies.length; i++) {
						var cookie = jQuery.trim(cookies[i]);
						// Does this cookie string begin with the name we want?
						if (cookie.substring(0, name.length + 1) == (name + '=')) {
							cookieValue = decodeURIComponent(cookie
									.substring(name.length + 1));
							break;
						}
					}
				}
				return cookieValue;
			}
		};

		/*# AVOID COLLISIONS #*/
	})(jQuery);
/*# AVOID COLLISIONS #*/
(function ($) {
	var items = []; //all items that need to be lazy loaded
	var itemsLoaded = []; //items that are already loaded
	var loadStarted = false;
	
	//start load items
	var startLoad = function ()
	{
		loadStarted = true;
		if (self == parent) //not within iframe
		{
			showItemsInView();
			$(window).scroll(showItemsInView);
		}
		else //iframe
		{
			showAllItems();
		}	
	};

	//remove loaded items from queue
	var clearItemQueue = function (itemsLoaded)
	{
		//each splice will short the array, thus we need an offset to correct that
		var offset = 0;
		for (var j in itemsLoaded)
		{
			items.splice(itemsLoaded[j] - offset, 1);
			offset ++;
		}
	};

	//return the status of the item relative to the current view, 1 if on top, 0 if inside, -1 if below
	var itemViewStatus = function (lzItem)
	{
	    var docViewTop = $(window).scrollTop();
	    var docViewBottom = docViewTop + $(window).height();
	    var elemTop = $(lzItem).offset().top;
	    var elemBottom = elemTop + $(lzItem).height();
	    if((elemBottom >= docViewTop  && elemBottom <= docViewBottom) || (elemTop >= docViewTop &&  elemTop <= docViewBottom))
	    	return 0;
	    else if (elemBottom < docViewTop)
	    	return 1;
	    else if (elemTop > docViewBottom)
	    	return -1;
	};
	
	//load items that are in user's view
	var showItemsInView = function ()
	{
    	var docViewTop = $(window).scrollTop();
	    var docViewBottom = docViewTop + $(window).height();
	
		var itemsLoaded = [];
		for (var i in items)
		{
			if (itemViewStatus(items[i].ele) === 0)
			{
				items[i].loadFunc(items[i].ele);
				itemsLoaded.push(i);
			}
		}
		clearItemQueue(itemsLoaded);
	};	
	
	//load all items at once, this is for iframe since there is no better way to get window sroll event
	var showAllItems = function ()
	{
		for (var i in items)
		{
			items[i].loadFunc(items[i].ele);
		}
	};
	
    $.fn.lazyload = function (loadFunc) {
		if (typeof loadFunc !== 'function')
		{
			$.error("jQuery lazyload : missing loading function as parameter");
		}
		var elements = this.toArray();
		for (var i in elements)
		{
			items.push({ele: elements[i], loadFunc : loadFunc});
		}
		if (loadStarted)
		{
			startLoad();
		}
     	return this;
    };
    $(document).ready(function(){startLoad();});
})(jQuery);


/*
 * jQuery postMessage - v0.5 - 9/11/2009
 * http://benalman.com/projects/jquery-postmessage-plugin/
 * 
 * Copyright (c) 2009 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($){var g,d,j=1,a,b=this,f=!1,h="postMessage",e="addEventListener",c,i=b[h]&&!$.browser.opera;$[h]=function(k,l,m){if(!l){return}k=typeof k==="string"?k:$.param(k);m=m||parent;if(i){m[h](k,l.replace(/([^:]+:\/\/[^\/]+).*/,"$1"))}else{if(l){m.location=l.replace(/#.*$/,"")+"#"+(+new Date)+(j++)+"&"+k}}};$.receiveMessage=c=function(l,m,k){if(i){if(l){a&&c();a=function(n){if((typeof m==="string"&&n.origin!==m)||($.isFunction(m)&&m(n.origin)===f)){return f}l(n)}}if(b[e]){b[l?e:"removeEventListener"]("message",a,f)}else{b[l?"attachEvent":"detachEvent"]("onmessage",a)}}else{g&&clearInterval(g);g=null;if(l){k=typeof m==="number"?m:typeof k==="number"?k:100;g=setInterval(function(){var o=document.location.hash,n=/^#?\d+&/;if(o!==d&&n.test(o)){d=o;l({data:o.replace(n,"")})}},k)}}}})(jQuery);
/*!
 * jQuery UI 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c,j){function k(a,b){var d=a.nodeName.toLowerCase();if("area"===d){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&l(a)}return(/input|select|textarea|button|object/.test(d)?!a.disabled:"a"==d?a.href||b:b)&&l(a)}function l(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.16",
keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({propAttr:c.fn.prop||c.fn.attr,_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=
this;setTimeout(function(){c(d).focus();b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,
"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":
"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,m,n){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(m)g-=parseFloat(c.curCSS(f,"border"+this+"Width",true))||0;if(n)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,
outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){return k(a,!isNaN(c.attr(a,"tabindex")))},tabbable:function(a){var b=c.attr(a,
"tabindex"),d=isNaN(b);return(d||b>=0)&&k(a,!d)}});c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&
a.element[0].parentNode)for(var e=0;e<b.length;e++)a.options[b[e][0]]&&b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&
c.ui.isOverAxis(b,e,i)}})}})(jQuery);

/*!
 * jQuery UI Widget 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)try{b(d).triggerHandler("remove")}catch(e){}k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){try{b(this).triggerHandler("remove")}catch(d){}});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=
function(h){return!!b.data(h,a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):
d;if(e&&d.charAt(0)==="_")return h;e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=
b.extend(true,{},this.options,this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+
"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",
c);return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);

/*
 * jQuery UI Position 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(c){c.ui=c.ui||{};var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;c.fn.position=function(b){if(!b||!b.of)return t.apply(this,arguments);b=c.extend({},b);var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;if(d.nodeType===9){h=a.width();k=a.height();j={top:0,left:0}}else if(d.setTimeout){h=a.width();k=a.height();j={top:a.scrollTop(),left:a.scrollLeft()}}else if(d.preventDefault){b.at="left top";h=k=0;j={top:b.of.pageY,
left:b.of.pageX}}else{h=a.outerWidth();k=a.outerHeight();j=a.offset()}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");if(f.length===1)f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];f[0]=n.test(f[0])?f[0]:"center";f[1]=o.test(f[1])?f[1]:"center";b[this]=f});if(g.length===1)g[1]=g[0];e[0]=parseInt(e[0],10)||0;if(e.length===1)e[1]=e[0];e[1]=parseInt(e[1],10)||0;if(b.at[0]==="right")j.left+=h;else if(b.at[0]==="center")j.left+=h/2;if(b.at[1]==="bottom")j.top+=
k;else if(b.at[1]==="center")j.top+=k/2;j.left+=e[0];j.top+=e[1];return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+(parseInt(c.curCSS(this,"marginRight",true))||0),w=m+q+(parseInt(c.curCSS(this,"marginBottom",true))||0),i=c.extend({},j),r;if(b.my[0]==="right")i.left-=l;else if(b.my[0]==="center")i.left-=l/2;if(b.my[1]==="bottom")i.top-=m;else if(b.my[1]==="center")i.top-=
m/2;i.left=Math.round(i.left);i.top=Math.round(i.top);r={left:i.left-p,top:i.top-q};c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at})});c.fn.bgiframe&&f.bgiframe();f.offset(c.extend(i,{using:b.using}))})};c.ui.position={fit:{left:function(b,a){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();b.left=
d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left)},top:function(b,a){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top)}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];b.left+=
a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0}}}};if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position")))b.style.position="relative";var d=c(b),
g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;g={top:a.top-g.top+e,left:a.left-g.left+h};"using"in a?a.using.call(b,g):d.css(g)};c.fn.offset=function(b){var a=this[0];if(!a||!a.ownerDocument)return null;if(b)return this.each(function(){c.offset.setOffset(this,b)});return u.call(this)}}})(jQuery);

/*
 * jQuery UI Autocomplete 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Autocomplete
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.position.js
 */
(function(d){var e=0;d.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:false,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var a=this,b=this.element[0].ownerDocument,g;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(!(a.options.disabled||a.element.propAttr("readOnly"))){g=
false;var f=d.ui.keyCode;switch(c.keyCode){case f.PAGE_UP:a._move("previousPage",c);break;case f.PAGE_DOWN:a._move("nextPage",c);break;case f.UP:a._move("previous",c);c.preventDefault();break;case f.DOWN:a._move("next",c);c.preventDefault();break;case f.ENTER:case f.NUMPAD_ENTER:if(a.menu.active){g=true;c.preventDefault()}case f.TAB:if(!a.menu.active)return;a.menu.select(c);break;case f.ESCAPE:a.element.val(a.term);a.close(c);break;default:clearTimeout(a.searching);a.searching=setTimeout(function(){if(a.term!=
a.element.val()){a.selectedItem=null;a.search(null,c)}},a.options.delay);break}}}).bind("keypress.autocomplete",function(c){if(g){g=false;c.preventDefault()}}).bind("focus.autocomplete",function(){if(!a.options.disabled){a.selectedItem=null;a.previous=a.element.val()}}).bind("blur.autocomplete",function(c){if(!a.options.disabled){clearTimeout(a.searching);a.closing=setTimeout(function(){a.close(c);a._change(c)},150)}});this._initSource();this.response=function(){return a._response.apply(a,arguments)};
this.menu=d("<ul></ul>").addClass("ui-autocomplete").appendTo(d(this.options.appendTo||"body",b)[0]).mousedown(function(c){var f=a.menu.element[0];d(c.target).closest(".ui-menu-item").length||setTimeout(function(){d(document).one("mousedown",function(h){h.target!==a.element[0]&&h.target!==f&&!d.ui.contains(f,h.target)&&a.close()})},1);setTimeout(function(){clearTimeout(a.closing)},13)}).menu({focus:function(c,f){f=f.item.data("item.autocomplete");false!==a._trigger("focus",c,{item:f})&&/^key/.test(c.originalEvent.type)&&
a.element.val(f.value)},selected:function(c,f){var h=f.item.data("item.autocomplete"),i=a.previous;if(a.element[0]!==b.activeElement){a.element.focus();a.previous=i;setTimeout(function(){a.previous=i;a.selectedItem=h},1)}false!==a._trigger("select",c,{item:h})&&a.element.val(h.value);a.term=a.element.val();a.close(c);a.selectedItem=h},blur:function(){a.menu.element.is(":visible")&&a.element.val()!==a.term&&a.element.val(a.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");
d.fn.bgiframe&&this.menu.element.bgiframe()},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");this.menu.element.remove();d.Widget.prototype.destroy.call(this)},_setOption:function(a,b){d.Widget.prototype._setOption.apply(this,arguments);a==="source"&&this._initSource();if(a==="appendTo")this.menu.element.appendTo(d(b||"body",this.element[0].ownerDocument)[0]);a==="disabled"&&
b&&this.xhr&&this.xhr.abort()},_initSource:function(){var a=this,b,g;if(d.isArray(this.options.source)){b=this.options.source;this.source=function(c,f){f(d.ui.autocomplete.filter(b,c.term))}}else if(typeof this.options.source==="string"){g=this.options.source;this.source=function(c,f){a.xhr&&a.xhr.abort();a.xhr=d.ajax({url:g,data:c,dataType:"json",autocompleteRequest:++e,success:function(h){this.autocompleteRequest===e&&f(h)},error:function(){this.autocompleteRequest===e&&f([])}})}}else this.source=
this.options.source},search:function(a,b){a=a!=null?a:this.element.val();this.term=this.element.val();if(a.length<this.options.minLength)return this.close(b);clearTimeout(this.closing);if(this._trigger("search",b)!==false)return this._search(a)},_search:function(a){this.pending++;this.element.addClass("ui-autocomplete-loading");this.source({term:a},this.response)},_response:function(a){if(!this.options.disabled&&a&&a.length){a=this._normalize(a);this._suggest(a);this._trigger("open")}else this.close();
this.pending--;this.pending||this.element.removeClass("ui-autocomplete-loading")},close:function(a){clearTimeout(this.closing);if(this.menu.element.is(":visible")){this.menu.element.hide();this.menu.deactivate();this._trigger("close",a)}},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(a){if(a.length&&a[0].label&&a[0].value)return a;return d.map(a,function(b){if(typeof b==="string")return{label:b,value:b};return d.extend({label:b.label||
b.value,value:b.value||b.label},b)})},_suggest:function(a){var b=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(b,a);this.menu.deactivate();this.menu.refresh();b.show();this._resizeMenu();b.position(d.extend({of:this.element},this.options.position));this.options.autoFocus&&this.menu.next(new d.Event("mouseover"))},

_resizeMenu:

	function(){
			var a=this.menu.element;
			a.outerWidth(Math.max(a.width("").outerWidth(),this.element.outerWidth()))
	},

_renderMenu:function(a,b){var g=this;
d.each(b,function(c,f){g._renderItem(a,f)})},_renderItem:function(a,b){return d("<li></li>").data("item.autocomplete",b).append(d("<a></a>").text(b.label)).appendTo(a)},_move:function(a,b){if(this.menu.element.is(":visible"))if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term);this.menu.deactivate()}else this.menu[a](b);else this.search(null,b)},widget:function(){return this.menu.element}});d.extend(d.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,
"\\$&")},filter:function(a,b){var g=new RegExp(d.ui.autocomplete.escapeRegex(b),"i");return d.grep(a,function(c){return g.test(c.label||c.value||c)})}})})(jQuery);
(function(d){d.widget("ui.menu",{_create:function(){var e=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(a){if(d(a.target).closest(".ui-menu-item a").length){a.preventDefault();e.select(a)}});this.refresh()},refresh:function(){var e=this;this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem").children("a").addClass("ui-corner-all").attr("tabindex",
-1).mouseenter(function(a){e.activate(a,d(this).parent())}).mouseleave(function(){e.deactivate()})},activate:function(e,a){this.deactivate();if(this.hasScroll()){var b=a.offset().top-this.element.offset().top,g=this.element.scrollTop(),c=this.element.height();if(b<0)this.element.scrollTop(g+b);else b>=c&&this.element.scrollTop(g+b-c+a.height())}this.active=a.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",e,{item:a})},deactivate:function(){if(this.active){this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
this._trigger("blur");this.active=null}},next:function(e){this.move("next",".ui-menu-item:first",e)},previous:function(e){this.move("prev",".ui-menu-item:last",e)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(e,a,b){if(this.active){e=this.active[e+"All"](".ui-menu-item").eq(0);e.length?this.activate(b,e):this.activate(b,this.element.children(a))}else this.activate(b,
this.element.children(a))},nextPage:function(e){if(this.hasScroll())if(!this.active||this.last())this.activate(e,this.element.children(".ui-menu-item:first"));else{var a=this.active.offset().top,b=this.element.height(),g=this.element.children(".ui-menu-item").filter(function(){var c=d(this).offset().top-a-b+d(this).height();return c<10&&c>-10});g.length||(g=this.element.children(".ui-menu-item:last"));this.activate(e,g)}else this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||
this.last()?":first":":last"))},previousPage:function(e){if(this.hasScroll())if(!this.active||this.first())this.activate(e,this.element.children(".ui-menu-item:last"));else{var a=this.active.offset().top,b=this.element.height();result=this.element.children(".ui-menu-item").filter(function(){var g=d(this).offset().top-a+b-d(this).height();return g<10&&g>-10});result.length||(result=this.element.children(".ui-menu-item:first"));this.activate(e,result)}else this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||
this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element[d.fn.prop?"prop":"attr"]("scrollHeight")},select:function(e){this._trigger("selected",e,{item:this.active})}})})(jQuery);

/*
 * jQuery.fn.autoResize 1.14
 * --
 * https://github.com/padolsey/jQuery.fn.autoResize
 * --
 * This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */ 

(function($){

	var uid = 'ar' + +new Date,

		defaults = autoResize.defaults = {
			onResize: function(){},
			onBeforeResize: function(){return 123},
			onAfterResize: function(){return 555},
			animate: {
				duration: 200,
				complete: function(){}
			},
			extraSpace: 50,
			minHeight: 'original',
			maxHeight: 500,
			minWidth: 'original',
			maxWidth: 500
		};

	autoResize.cloneCSSProperties = [
		'lineHeight', 'textDecoration', 'letterSpacing',
		'fontSize', 'fontFamily', 'fontStyle', 'fontWeight',
		'textTransform', 'textAlign', 'direction', 'wordSpacing', 'fontSizeAdjust',
		'paddingTop', 'paddingLeft', 'paddingBottom', 'paddingRight', 'width'
	];

	autoResize.cloneCSSValues = {
		position: 'absolute',
		top: -9999,
		left: -9999,
		opacity: 0,
		overflow: 'hidden'
	};

	autoResize.resizableFilterSelector = [
		'textarea:not(textarea.' + uid + ')',
		'input:not(input[type])',
		'input[type=text]',
		'input[type=password]',
		'input[type=email]',
		'input[type=url]'
	].join(',');

	autoResize.AutoResizer = AutoResizer;

	$.fn.autoResize = autoResize;

	function autoResize(config) {
		this.filter(autoResize.resizableFilterSelector).each(function(){
			new AutoResizer( $(this), config );
		});
		return this;
	}

	function AutoResizer(el, config) {

		if (el.data('AutoResizer')) {
			el.data('AutoResizer').destroy();
		}
		
		config = this.config = $.extend(true, {}, autoResize.defaults, config);
		this.el = el;

		this.nodeName = el[0].nodeName.toLowerCase();

		this.originalHeight = el.height();
		this.previousScrollTop = null;

		this.value = el.val();

		if (config.maxWidth === 'original') config.maxWidth = el.width();
		if (config.minWidth === 'original') config.minWidth = el.width();
		if (config.maxHeight === 'original') config.maxHeight = el.height();
		if (config.minHeight === 'original') config.minHeight = el.height();

		if (this.nodeName === 'textarea') {
			el.css({
				resize: 'none',
				overflowY: 'hidden'
			});
		}

		el.data('AutoResizer', this);

		// Make sure onAfterResize is called upon animation completion
		config.animate.complete = (function(f){
			return function() {
				config.onAfterResize.call(el);
				return f.apply(this, arguments);
			};
		}(config.animate.complete));

		this.bind();

	}

	AutoResizer.prototype = {

		bind: function() {

			var check = $.proxy(function(){
				this.check();
				return true;
			}, this);

			this.unbind();

			this.el
				.bind('keyup.autoResize', check)
				//.bind('keydown.autoResize', check)
				.bind('change.autoResize', check)
				.bind('paste.autoResize', function() {
					setTimeout(function() { check(); }, 0);
				});
			
			if (!this.el.is(':hidden')) {
				this.check(null, true);
			}

		},

		unbind: function() {
			this.el.unbind('.autoResize');
		},

		createClone: function() {

			var el = this.el,
				clone = this.nodeName === 'textarea' ? el.clone() : $('<span/>');

			this.clone = clone;

			$.each(autoResize.cloneCSSProperties, function(i, p){
				clone[0].style[p] = el.css(p);
			});

			clone
				.removeAttr('name')
				.removeAttr('id')
				.addClass(uid)
				.attr('tabIndex', -1)
				.css(autoResize.cloneCSSValues);

			if (this.nodeName === 'textarea') {
				clone.height('auto');
			} else {
				clone.width('auto').css({
					whiteSpace: 'nowrap'
				});
			}

		},

		check: function(e, immediate) {

			if (!this.clone) {
		this.createClone();
		this.injectClone();
			}

			var config = this.config,
				clone = this.clone,
				el = this.el,
				value = el.val();

			// Do nothing if value hasn't changed
			if (value === this.prevValue) { return true; }
			this.prevValue = value;

			if (this.nodeName === 'input') {

				clone.text(value);

				// Calculate new width + whether to change
				var cloneWidth = clone.width(),
					newWidth = (cloneWidth + config.extraSpace) >= config.minWidth ?
						cloneWidth + config.extraSpace : config.minWidth,
					currentWidth = el.width();

				newWidth = Math.min(newWidth, config.maxWidth);

				if (
					(newWidth < currentWidth && newWidth >= config.minWidth) ||
					(newWidth >= config.minWidth && newWidth <= config.maxWidth)
				) {

					config.onBeforeResize.call(el);
					config.onResize.call(el);

					el.scrollLeft(0);

					if (config.animate && !immediate) {
						el.stop(1,1).animate({
							width: newWidth
						}, config.animate);
					} else {
						el.width(newWidth);
						config.onAfterResize.call(el);
					}

				}

				return;

			}

			// TEXTAREA
			
			clone.width(el.width()).height(0).val(value).scrollTop(10000);
			
			var scrollTop = clone[0].scrollTop;
				
			// Don't do anything if scrollTop hasen't changed:
			if (this.previousScrollTop === scrollTop) {
				return;
			}

			this.previousScrollTop = scrollTop;
			
			if (scrollTop + config.extraSpace >= config.maxHeight) {
				el.css('overflowY', '');
				scrollTop = config.maxHeight;
				immediate = true;
			} else if (scrollTop <= config.minHeight) {
				scrollTop = config.minHeight;
			} else {
				el.css('overflowY', 'hidden');
				scrollTop += config.extraSpace;
			}

			config.onBeforeResize.call(el);
			config.onResize.call(el);

			// Either animate or directly apply height:
			if (config.animate && !immediate) {
				el.stop(1,1).animate({
					height: scrollTop
				}, config.animate);
			} else {
				el.height(scrollTop);
				config.onAfterResize.call(el);
			}

		},

		destroy: function() {
			this.unbind();
			this.el.removeData('AutoResizer');
			this.clone.remove();
			delete this.el;
			delete this.clone;
		},

		injectClone: function() {
			(
				autoResize.cloneContainer ||
				(autoResize.cloneContainer = $('<arclones/>').appendTo('body'))
			).append(this.clone);
		}

	};
	
})(jQuery);
/*
 * In-Field Label jQuery Plugin
 * http://fuelyourcoding.com/scripts/infield.html
 *
 * Copyright (c) 2009 Doug Neiner
 * Dual licensed under the MIT and GPL licenses.
 * Uses the same license as jQuery, see:
 * http://docs.jquery.com/License
 *
 * Modified by mmucklo
 * 
 * @version 0.1
 */

(function($){
	
    $.InFieldLabels = function(label, field, options){
        // To avoid scope issues, use 'base' instead of 'this'
        // to reference this class from internal events and functions.
        var base = this;
        
        // Access to jQuery and DOM versions of each element
        base.$label = $(label);
        base.label = label;

 		base.$field = $(field);
		base.field = field;
        
		base.$label.data("InFieldLabels", base);
		base.showing = true;
        
        base.init = function(){
			// Merge supplied options with default options
            base.options = $.extend({},$.InFieldLabels.defaultOptions, options);

			// Check if the field is already filled in
			if(base.$field.val() != ""){
				base.$label.hide();
				base.showing = false;
			};
			
			
			// Loop through these qualities and assign
			var qualities = { 'width': 'width', 
							  'padding-left': 'padding-left',
							  'padding-right': 'padding-right',
							  'padding-top': 'padding-top',
							  'padding-bottom': 'padding-bottom',
							  'line-height': 'height', // Make line-height equivalent to the height of the whole input
							  'font-family': 'font-family',
							  'font-size': 'font-size',
							  'font-weight': 'font-weight',
							  'margin-top': 'margin-top',
							  'margin-bottom': 'margin-bottom',
							  'margin-left': 'margin-left',
							  'margin-right': 'margin-right' };
			for (var i in qualities)
			{
				var val = null;
				if (val = base.$field.css(qualities[i]))
				{
					base.$label.css(i, val);
				}
				
				// Adjustments for when element is not yet visible and has no height - try the parent
				if (i == 'height' || i == 'line-height')
				{
					if (val == 0 || val == '0px' || val == '0')
					{
						if (i == 'height' && 
							((val = base.$field.height()) || (val = base.$field.parent().height())))
						{
							base.$label.css(i, val);
						}
						else if (i == 'line-height')
						{
							if (val = base.$field.css('line-height'))
							{
								base.$label.css(i, val);
							}
							else if (val = base.$field.parent().css('line-height'))
							{
								base.$label.css(i, val);
							}
						}
					}
				}
				if (i == 'width')
				{
					base.$label.css('width', '100%');
				}
			}
			
			// Hacking due to ugliness on ie7
			var lineHeight = base.$label.css('line-height');
			var fontSize = base.$label.css('font-size');
			if (lineHeight.match(/px/))
			{
				lineHeight = parseInt(lineHeight.replace(/px/, ''));
				fontSize = parseInt(fontSize.replace(/p[xt]/, ''));
				if (lineHeight < fontSize)
				{
					lineHeight = fontSize + 4;
					base.$label.css('line-height', lineHeight + 'px');
				}			
			}
			
			// Adjust for top border in element
			if (base.$field.css('border-top-width') && base.$field.css('border-top-style') !== 'none')
			{
				var topAdd = base.$field.css('border-top-width').replace(/px/,'');
				var paddingTop = base.$label.css('padding-top').replace(/px/, '');
				if (paddingTop)
					paddingTop = parseInt(paddingTop) + parseInt(topAdd);
				else
					paddingTop = parseInt(topAdd);
					
				base.$label.css('padding-top', paddingTop + 'px');
			}

			// Adjust for left border in element
			if (base.$field.css('border-left-width') && base.$field.css('border-left-style') !== 'none')
			{
				var topAdd = base.$field.css('border-left-width').replace(/px/,'');
				var paddingTop = base.$label.css('padding-left').replace(/px/, '');
				if (paddingTop)
					paddingTop = parseInt(paddingTop) + parseInt(topAdd);
				else
					paddingTop = parseInt(topAdd);
					
				base.$label.css('padding-left', paddingTop + 'px');
			}

			// Adjust line-height on textareas
			var nodeName;
			if (base.$field.get(0).nodeName.toLowerCase() === 'textarea')
			{
				base.$label.css('line-height', (base.$field.css('line-height') || base.$field.parent().css('line-height')));
			}
			
			
			base.$field.focus(function(){
				base.fadeOnFocus();
				base.checkForEmpty();
			}).blur(function(){
				base.checkForEmpty(true);
			}).bind('keydown.infieldlabel',function(e){
				// Use of a namespace (.infieldlabel) allows us to
				// unbind just this method later
				base.hideOnChange(e);
			}).change(function(e){
				base.hideOnChange(e);
			}).bind('onPropertyChange', function(){
				base.checkForEmpty();
			}).bind('change', function(){
				base.checkForEmpty();
			}).bind('touchstart', function(){
				base.fadeOnFocus();
				base.checkForEmpty();
			}).bind('touchend', function(e){
				base.checkForEmpty();
			}).bind('touchcancel', function(e){
				base.checkForEmpty(true);
			}).bind('paste', function() {
				setTimeout(function() {
					base.checkForEmpty();
				}, 0);
			});
        };

		// If the label is currently showing
		// then fade it down to the amount
		// specified in the settings
		base.fadeOnFocus = function(){
			if(base.showing){
				base.setOpacity(base.options.fadeOpacity);
			};
		};
		
		base.setOpacity = function(opacity){
			base.$label.stop().animate({ opacity: opacity }, base.options.fadeDuration);
			base.showing = (opacity > 0.0);
		};
		
		// Checks for empty as a fail safe
		// set blur to true when passing from
		// the blur event
		base.checkForEmpty = function(blur){
			if(base.$field.val() == ""){
				base.prepForShow();
				base.setOpacity( blur ? 1.0 : base.options.fadeOpacity );
			} else {
				base.setOpacity(0.0);
			};
		};
		
		base.prepForShow = function(e){
			if(!base.showing) {
				// Prepare for a animate in...
				base.$label.css({opacity: 0.0}).show();
				
				// Reattach the keydown event
				base.$field.bind('keydown.infieldlabel',function(e){
					base.hideOnChange(e);
				});
			};
		};

		base.hideOnChange = function(e){
			if(
				(e.keyCode == 16) || // Skip Shift
				(e.keyCode == 9) // Skip Tab
			  ) return; 
			
			if(base.showing){
				base.$label.hide();
				base.showing = false;
			};
			
			// Remove keydown event to save on CPU processing
			base.$field.unbind('keydown.infieldlabel');
		};
      
		// Run the initialization method
        base.init();
    };
	
    $.InFieldLabels.defaultOptions = {
        fadeOpacity: 0.5, // Once a field has focus, how transparent should the label be
		fadeDuration: 300 // How long should it take to animate from 1.0 opacity to the fadeOpacity
    };
	

    $.fn.inFieldLabels = function(options){
        return this.each(function(){
			// Find input or textarea based on for= attribute
			// The for attribute on the label must contain the ID
			// of the input or textarea element
			var for_attr = $(this).attr('for');
			if(for_attr )
			{
				// Find the referenced input or textarea element
				var $field = $(
					"input#" + for_attr + "[type='text']," + 
					"input#" + for_attr + "[type='password']," + 
					"textarea#" + for_attr
					);
			}
			else
			{
				var $field = $(options.input);
			}
					
			if(!$field || $field.length == 0) return; // Again, nothing to attach
			
			// Only create object for input[text], input[password], or textarea
            (new $.InFieldLabels(this, $field[0], options));
        });
    };
	
})(jQuery);


/**
 * Use: 
 * $('#test_1').hint();
 */

(function($)
{   
    var OverlayHint = function($element) {
    	
    	var me = this;
    	var $container = $('<div class="ol-hint" />');
    	var $overlayLabel = $('<label />');
    	$overlayLabel.html($element.attr('placeholder'));
    	$element.removeAttr('placeholder');
    	
    	var isOverLayVisible = false;
    	var isOpaque = false;
    	
    	$element.before($container);
    	$element.appendTo($container);
    	$element.before($overlayLabel);
    	
    	jQuery($overlayLabel).inFieldLabels({ input: $element });
    };

    $.fn.hint = function()
    {
	    return this.each(function()
	    {
	        var $this = $(this);
	        var hint = $this.data('hint_overlay');
        	if (!hint)
    		{
        		var hint = new OverlayHint($this);
        		$this.data('hint_overlay', hint);
    		}
	    });
    };
})(jQuery);
/*	
 *	jQuery dotdotdot 1.5.1
 *	
 *	Copyright (c) 2012 Fred Heusschen
 *	www.frebsite.nl
 *
 *	Plugin website:
 *	dotdotdot.frebsite.nl
 *
 *	Dual licensed under the MIT and GPL licenses.
 *	http://en.wikipedia.org/wiki/MIT_License
 *	http://en.wikipedia.org/wiki/GNU_General_Public_License
 */


(function( $ )
{
	if ( $.fn.dotdotdot )
	{
		return;
	}

	$.fn.dotdotdot = function( o )
	{
		if ( this.length == 0 )
		{
			debug( true, 'No element found for "' + this.selector + '".' );
			return this;
		}
		if ( this.length > 1 )
		{
			return this.each(
				function()
				{
					$(this).dotdotdot( o );
				}
			);
		}


		var $dot = this;

		if ( $dot.data( 'dotdotdot' ) )
		{
			$dot.trigger( 'destroy.dot' );
		}

		$dot.bind_events = function()
		{
			$dot.bind(
				'update.dot',
				function( e, c )
				{
					e.preventDefault();
					e.stopPropagation();

					opts.maxHeight = ( typeof opts.height == 'number' ) 
						? opts.height 
						: getTrueInnerHeight( $dot );

					opts.maxHeight += opts.tolerance;

					if ( typeof c != 'undefined' )
					{
						if ( typeof c == 'string' || c instanceof HTMLElement )
						{
					 		c = $('<div />').append( c ).contents();
						}
						if ( c instanceof $ )
						{
							orgContent = c;
						}
					}

					$inr = $dot.wrapInner( '<div class="dotdotdot" />' ).children();
					$inr.empty()
						.append( orgContent.clone( true ) )
						.css({
							'height'	: 'auto',
							'width'		: 'auto',
							'border'	: 'none',
							'padding'	: 0,
							'margin'	: 0
						});

					var after = false,
						trunc = false;

					if ( conf.afterElement )
					{
						after = conf.afterElement.clone( true );
						conf.afterElement.remove();
					}
					if ( test( $inr, opts ) )
					{
						if ( opts.wrap == 'children' )
						{
							trunc = children( $inr, opts, after );
						}
						else
						{
							trunc = ellipsis( $inr, $dot, $inr, opts, after );
						}
					}
					$inr.replaceWith( $inr.contents() );
					$inr = null;
					
					if ( $.isFunction( opts.callback ) )
					{
						opts.callback.call( $dot[ 0 ], trunc, orgContent );
					}

					conf.isTruncated = trunc;
					return trunc;
				}

			).bind(
				'isTruncated.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], conf.isTruncated );
					}
					return conf.isTruncated;
				}

			).bind(
				'originalContent.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], orgContent );
					}
					return orgContent;
				}

			).bind(
				'destroy.dot',
				function( e )
				{
					e.preventDefault();
					e.stopPropagation();

					$dot.unwatch()
						.unbind_events()
						.empty()
						.append( orgContent )
						.data( 'dotdotdot', false );
				}
			);
			return $dot;
		};	//	/bind_events

		$dot.unbind_events = function()
		{
			$dot.unbind('.dot');
			return $dot;
		};	//	/unbind_events

		$dot.watch = function()
		{
			$dot.unwatch();
			if ( opts.watch == 'window' )
			{
				var $window = $(window),
					_wWidth = $window.width(),
					_wHeight = $window.height(); 

				$window.bind(
					'resize.dot' + conf.dotId,
					function()
					{
						if ( _wWidth != $window.width() || _wHeight != $window.height() || !opts.windowResizeFix )
						{
							_wWidth = $window.width();
							_wHeight = $window.height();
	
							if ( watchInt )
							{
								clearInterval( watchInt );
							}
							watchInt = setTimeout(
								function()
								{
									$dot.trigger( 'update.dot' );
								}, 10
							);
						}
					}
				);
			}
			else
			{
				watchOrg = getSizes( $dot );
				watchInt = setInterval(
					function()
					{
						var watchNew = getSizes( $dot );
						if ( watchOrg.width  != watchNew.width ||
							 watchOrg.height != watchNew.height )
						{
							$dot.trigger( 'update.dot' );
							watchOrg = getSizes( $dot );
						}
					}, 100
				);
			}
			return $dot;
		};
		$dot.unwatch = function()
		{
			$(window).unbind( 'resize.dot' + conf.dotId );
			if ( watchInt )
			{
				clearInterval( watchInt );
			}
			return $dot;
		};

		var	orgContent	= $dot.contents(),
			opts 		= $.extend( true, {}, $.fn.dotdotdot.defaults, o ),
			conf		= {},
			watchOrg	= {},
			watchInt	= null,
			$inr		= null;

		conf.afterElement	= getElement( opts.after, $dot );
		conf.isTruncated	= false;
		conf.dotId			= dotId++;


		$dot.data( 'dotdotdot', true )
			.bind_events()
			.trigger( 'update.dot' );

		if ( opts.watch )
		{
			$dot.watch();
		}

		return $dot;
	};


	//	public
	$.fn.dotdotdot.defaults = {
		'ellipsis'	: '... ',
		'wrap'		: 'word',
		'lastCharacter': {
			'remove'		: [ ' ', ',', ';', '.', '!', '?' ],
			'noEllipsis'	: []
		},
		'tolerance'	: 0,
		'callback'	: null,
		'after'		: null,
		'height'	: null,
		'watch'		: false,
		'windowResizeFix': true,
		'debug'		: false
	};
	

	//	private
	var dotId = 1;

	function children( $elem, o, after )
	{
		var $elements 	= $elem.children(),
			isTruncated	= false;

		$elem.empty();

		for ( var a = 0, l = $elements.length; a < l; a++ )
		{
			var $e = $elements.eq( a );
			$elem.append( $e );
			if ( after )
			{
				$elem.append( after );
			}
			if ( test( $elem, o ) )
			{
				$e.remove();
				isTruncated = true;
				break;
			}
			else
			{
				if ( after )
				{
					after.remove();
				}
			}
		}
		return isTruncated;
	}
	function ellipsis( $elem, $d, $i, o, after )
	{
		var $elements 	= $elem.contents(),
			isTruncated	= false;

		$elem.empty();

		var notx = 'table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, select, optgroup, option, textarea, script, style';
		for ( var a = 0, l = $elements.length; a < l; a++ )
		{

			if ( isTruncated )
			{
				break;
			}

			var e	= $elements[ a ],
				$e	= $(e);

			if ( typeof e == 'undefined' )
			{
				continue;
			}

			$elem.append( $e );
			if ( after )
			{
				var func = ( $elem.is( notx ) )
					? 'after'
					: 'append';
				$elem[ func ]( after );
			}
			if ( e.nodeType == 3 )
			{
				if ( test( $i, o ) )
				{
					isTruncated = ellipsisElement( $e, $d, $i, o, after );
				}
			}
			else
			{
				isTruncated = ellipsis( $e, $d, $i, o, after );
			}

			if ( !isTruncated )
			{
				if ( after )
				{
					after.remove();
				}
			}
		}
		return isTruncated;
	}
	function ellipsisElement( $e, $d, $i, o, after )
	{
		var isTruncated	= false,
			e			= $e[ 0 ];

		if ( typeof e == 'undefined' )
		{
			return false;
		}

		var seporator	= ( o.wrap == 'letter' ) ? '' : ' ',
			textArr		= getTextContent( e ).split( seporator ),
			position 	= -1,
			midPos		= -1,
			startPos	= 0,
			endPos		= textArr.length - 1;

		while ( startPos <= endPos )
		{
			var m = Math.floor( ( startPos + endPos ) / 2 );
			if ( m == midPos ) 
			{
				break;
			}
			midPos = m;

			setTextContent( e, textArr.slice( 0, midPos + 1 ).join( seporator ) + o.ellipsis );

			if ( !test( $i, o ) )
			{
				position	= midPos;
				startPos	= midPos; 
			}
			else
			{
				endPos		= midPos;
			}				
		}	
	
		if ( position != -1 )
		{
			var txt = textArr.slice( 0, position + 1 ).join( seporator );
			isTruncated = true;

			while( $.inArray( txt.slice( -1 ), o.lastCharacter.remove ) > -1 )
			{
				txt = txt.slice( 0, -1 );
			}
			if ( $.inArray( txt.slice( -1 ), o.lastCharacter.noEllipsis ) < 0 )
			{
				txt += o.ellipsis;
			}
			setTextContent( e, txt );
		}
		else
		{
			var $w = $e.parent();
			$e.remove();
			$n = $w.contents().eq( -1 );

			isTruncated = ellipsisElement( $n, $d, $i, o, after );
		}

		return isTruncated;
	}
	function test( $i, o )
	{
		return $i.innerHeight() > o.maxHeight;
	}
	function getSizes( $d )
	{
		return {
			'width'	: $d.innerWidth(),
			'height': $d.innerHeight()
		};
	}
	function setTextContent( e, content )
	{
		if ( e.innerText )
		{
			e.innerText = content;
		}
		else if ( e.nodeValue )
		{
			e.nodeValue = content;
		}
		else if (e.textContent)
		{
			e.textContent = content;
		}
	}
	function getTextContent( e )
	{
		if ( e.innerText )
		{
			return e.innerText;
		}
		else if ( e.nodeValue )
		{
			return e.nodeValue;
		}
		else if ( e.textContent )
		{
			return e.textContent;
		}
		else
		{
			return "";
		}
	}
	function getElement( e, $i )
	{
		if ( typeof e == 'undefined' )
		{
			return false;
		}
		if ( !e )
		{
			return false;
		}
		if ( typeof e == 'string' )
		{
			e = $(e, $i);
			return ( e.length )
				? e 
				: false;
		}
		if ( typeof e == 'object' )
		{
			return ( typeof e.jquery == 'undefined' )
				? false
				: e;
		}
		return false;
	}
	function getTrueInnerHeight( $el )
	{
		var h = $el.innerHeight(),
			a = [ 'paddingTop', 'paddingBottom' ];

		for ( z = 0, l = a.length; z < l; z++ ) {
			var m = parseInt( $el.css( a[ z ] ), 10 );
			if ( isNaN( m ) )
			{
				m = 0;
			}
			h -= m;
		}
		return h;
	}
	function debug( d, m )
	{
		if ( !d )
		{
			return false;
		}
		if ( typeof m == 'string' )
		{
			m = 'dotdotdot: ' + m;
		}
		else
		{
			m = [ 'dotdotdot:', m ];
		}

		if ( window.console && window.console.log )
		{
			window.console.log( m );
		}
		return false;
	}
	

	//	override jQuery.html
	var _orgHtml = $.fn.html;
    $.fn.html = function( str ) {
		if ( typeof str != 'undefined' )
		{
			if ( this.data( 'dotdotdot' ) )
			{
				if ( typeof str != 'function' )
				{
					return this.trigger( 'update', [ str ] );
				}
			}
			return _orgHtml.call( this, str );
		}
		return _orgHtml.call( this );
    };


	//	override jQuery.text
	var _orgText = $.fn.text;
    $.fn.text = function( str ) {
		if ( typeof str != 'undefined' )
		{
			if ( this.data( 'dotdotdot' ) )
			{
				var temp = $( '<div />' );
				temp.text( str );
				str = temp.html();
				temp.remove();
				return this.trigger( 'update', [ str ] );
			}
			return _orgText.call( this, str );
		}
        return _orgText.call( this );
    };


})( jQuery );
/* name space for oodle, so that we don't have duplicate odl declarations, and have namespace overwrite each other
 *
 * Example:
 * To create name space odl.post call:
 *
 * odl.namespace('post');
 *
 * After this odl.post is set to {}, then it can used like:
 *
 * odl.post.submit = function(){...}
 *
 * */

if(typeof(odl) == 'undefined')
{
	var odl = {};
}

if(typeof(odl.namespace) != 'undefined')
{
	throw("odl.namespace is defined elsewhere");
};

odl.namespace = function(name)
{
	if(typeof(odl[name]) != 'undefined')
	{
		throw("name space '" + name + "' has been defined elsewhere, please use a different name space");
	}
	else
	{
		odl[name] = {};
	}
};

/* this script collects functions that needs to be run after FB script is loaded */
odl.namespace('fbready');

odl.fbready.queue = [];

odl.fbready.add = function(func)
{
	if (typeof odl.info.fb_init != 'undefined' && odl.info.fb_init)
	{
		func();
	}
	else
	{
		odl.fbready.queue.push(func);
	}
};

/* grab all named ui elements from a DOM within a wrapper*/
odl.namespace('namedUI');
odl.namedUI = function(wrapperSelector, returnJQObjects)
{
	var uiElements = {};
	
	if (typeof returnJQObjects === 'undefined')
	{
		returnJQObjects = true; //by default return jquery objects
	}
	
	jQ(wrapperSelector).find("*").each
	(
		function(index, element)
		{
			var attr = element.getAttribute('name');
			if (attr !== null)
			{
				var element = returnJQObjects ? jQ(element) : element;
				var currentVal = uiElements[attr];
				if (typeof currentVal === 'undefined')
					uiElements[attr] = 	element;
				else if (jQ.isArray(currentVal))
					uiElements[attr].push(element);
				else
					uiElements[attr] = [currentVal, element];
			}
		}
	);	
	return uiElements;
};
odl.namespace('assets');

/***
 * spinner-small: 	circle spinner
 * progress: 		fat long spinner
 * progress-link: 	skinny long spinner
 */
odl.assets.img = {};
odl.assets.img['spinner-small'] = 'http://i.oodleimg.com/a/animate/spinner-small.gif';
odl.assets.img['progress'] = 'http://i.oodleimg.com/a/animate/progress.gif';
odl.assets.img['progress-link'] = 'http://i.oodleimg.com/a/animate/progress-link.gif';

odl.assets.imgElements = {};
odl.assets.preload = function ()
{
	for (var key in odl.assets.img)
	{
		var img = odl.assets.getImage(key);
	}
};

/**
 * @return jQuery object, cached image element, please use clone to use more than one per page
 * @example odl.assets.getImage('progress').clone()
 */
odl.assets.getImage = function (key, isClone)
{
	if (odl.assets.imgElements[key])
	{
		return odl.assets.imgElements[key];
	}
	
	if (odl.assets.img[key])
	{
		odl.assets.imgElements[key] =  jQ('<img/>').attr( {
			src: odl.assets.img[key],
			'class' : 'progress'
		});
		
		return odl.assets.imgElements[key];
	}
	
	// Empty jquery object, so it would not break chaining
	return jQ();
};

fire(function()
	{
		odl.assets.preload();
	}
);

// http://www.thefutureoftheweb.com/blog/adddomloadevent
function addDOMLoadEvent(func) {
	jQ(document).ready(func);
}

function fire(func) {
	addDOMLoadEvent(func);
}

// Globally track mousedown on document
var globalMouseDown = {};
addDOMLoadEvent(function () {
	jQ(document).bind('mousedown', function (evt) { 
		globalMouseDown.x = evt.pageX;
		globalMouseDown.y = evt.pageY;		
	})
})

function indexOf(arr, value)
{
    for(var i=0; i<arr.length; i++){
        if(arr[i] == value)
        {
            return i;
        }
    }
    
    return -1;
}

function safecall(func)
{
	var loopCount = 0;
	var run = function()
	{
		try
		{
			func();
		}
		catch(e)
		{
			if ((e.name == 'ReferenceError' || e.name == 'TypeError') && loopCount ++ < 400)
			{
				setTimeout(run, 200);
			}
		}
	};
	run();
}

// Waits for external javascript to load
//  maximum of 40 seconds
function waitForEXJS(name, func) {
	var loopCount = 0;
	var closure = function () {
		loopCount++;
		if (typeof Oodle != 'undefined' && Oodle &&
		    typeof Oodle.EXJS != 'undefined' &&
		    Oodle.EXJS[name])
		{
			func();
		}
		else
		{
			if (loopCount < 400)
				setTimeout(closure, 100);
		}
	}
	closure();
}

/**
 * Custom function add a version to an exjs url
 */
function addEXJSVersion(src, version)
{
	var urlParts = src.split("?");
	if (urlParts.length > 1)
	{
		src = urlParts[0] + version + '?' + urlParts[1];
	}
	else
	{
		src += version;
	}
	return src;
}

// javascript redirect. This is to prevent duplicate content issues
function rd(components)
{
	window.location.href = components.join('');
}

// Basic common functions involving js constructs and DOM.

function addEvent(elm, evType, fn, useCapture) {
	if (elm.addEventListener) {
		elm.addEventListener(evType, fn, useCapture);
		return true;
	} else if (elm.attachEvent) {
		var r = elm.attachEvent('on' + evType, fn);
		return r;
	} else {
		elm['on' + evType] = fn;
	}
}

function addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

function getElementsByClass(searchClass,node,tag) {
	if (node)
	{
		if (tag)
			return jQ(node).find(tag + '.' + searchClass).get();
		else
			return jQ(node).find('.' + searchClass).get();
	}
	else
	{
		if (tag)
			return jQ(tag + '.' + searchClass).get();
		else
			return jQ('.' + searchClass).get();
	}
}

// http://www.quirksmode.org/dom/getElementsByTagNames.html
function getElementsByTagNames(list,obj) {
	if (!obj)
		var obj = document;
	var tagNames = list.split(',');
	var resultArray = new Array();
	for (var i = 0; i < tagNames.length; i++) {
		var tags = obj.getElementsByTagName(tagNames[i]);
		for (var j = 0; j < tags.length; j++) {
			resultArray.push(tags[j]);
		}
	}
	var testNode = resultArray[0];
	if (!testNode)
		return [];
	if (testNode.sourceIndex) {
		resultArray.sort(function (a,b) {
			return a.sourceIndex - b.sourceIndex;
		});
	} else if (testNode.compareDocumentPosition) {
		resultArray.sort(function (a,b) {
			return 3 - (a.compareDocumentPosition(b) & 6);
		});
	}
	return resultArray;
}

function toggle(obj) {
	var el;
	if (typeof obj == 'string')
		el = document.getElementById(obj);
	else
		el = obj;
	if (!el)
		return;
	if (el.style.display != 'none') {
		el.style.display = 'none';
	} else {
		el.style.display = '';
	}
}

function dualToggle(o1, o2) {
	toggle(o1);
	toggle(o2);
}

function hide(obj) {
	jQ(obj).hide();
}

function show(obj) {
	jQ(obj).show();
}

function insertAfter(parent, node, referenceNode) {
	parent.insertBefore(node, referenceNode.nextSibling);
}

function setStyle(elements, style, value)
{
	var validatedElements = [];
	if (typeof(elements) == "object" && elements.length)
	{
		for(var key in elements)
		{
			if ((typeof(elements[key]) == 'string') && (typeof($(elements[key]) == "object")) && ($(elements[key]) != null))
			{
				validatedElements.push(elements[key]);
			}
		}
	}
	else if (typeof(elements) == 'string' && typeof($(elements) == "object"))
	{
		validatedElements = elements;
	}
	else if (typeof(elements) == "object")
	{
		validatedElements = elements;
	}
	jQ(validatedElements).css(style, value);
}

// Cookies.

function getCookie(name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (indexOf(c, nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	}
	return null;
}

function setCookie( name, value, expires, path, domain, secure ) {
	var today = new Date();
	today.setTime( today.getTime() );
	if ( expires ) {
		expires = expires * 1000 * 60 * 60 * 24;
	}
	var expires_date = new Date( today.getTime() + (expires) );
	document.cookie = name+'='+escape( value ) +
		( ( expires ) ? ';expires='+expires_date.toGMTString() : '' ) + //expires.toGMTString()
		( ( path ) ? ';path=' + path : '' ) +
		( ( domain ) ? ';domain=' + domain : '' ) +
		( ( secure ) ? ';secure' : '' );
}

function deleteCookie( name, path, domain ) {
	if ( getCookie( name ) ) document.cookie = name + '=' +
			( ( path ) ? ';path=' + path : '') +
			( ( domain ) ? ';domain=' + domain : '' ) +
			';expires=Thu, 01-Jan-1970 00:00:01 GMT';
}

function $() {
	var elements = new Array();
	for (var i = 0; i < arguments.length; i++) {
		var element = arguments[i];
		if (typeof element == 'string')
			element = document.getElementById(element);
		if (arguments.length == 1)
			return element;
		elements.push(element);
	}
	return elements;
}

// Advanced common functions involving styling or positioning.

function hasClass(ele, cls) {
	return jQ(ele).hasClass(cls);
}

function addClass(ele, cls) {
	jQ(ele).addClass(cls);
}

function removeClass(ele, cls) {
	jQ(ele).removeClass(cls);
}

function toggleClass(id, srcCls, dstCls) {
	var ele = $(id);
	if (!ele)
		return;
	if (hasClass(ele, srcCls))
		removeClass(ele, srcCls);
	if (!hasClass(ele, dstCls))
		addClass(ele, dstCls);
}

function getElementStyle(elem, IEStyleProp, CSSStyleProp) {
    if (elem.currentStyle) {
        return elem.currentStyle[IEStyleProp];
    } else if (document.defaultView && document.defaultView.getComputedStyle) {
        var compStyle = document.defaultView.getComputedStyle(elem, "");
        return compStyle.getPropertyValue(CSSStyleProp);
    }
    return "";
}

function getScrollXY() {
	var scrOfX = 0, scrOfY = 0;
	if( typeof( window.pageYOffset ) == 'number' ) {
		//Netscape compliant
		scrOfY = window.pageYOffset;
		scrOfX = window.pageXOffset;
	} else if( document.body && ( document.body.scrollLeft || document.body.scrollTop ) ) {
		//DOM compliant
		scrOfY = document.body.scrollTop;
		scrOfX = document.body.scrollLeft;
	} else if( document.documentElement && ( document.documentElement.scrollLeft || document.documentElement.scrollTop ) ) {
		//IE6 standards compliant mode
		scrOfY = document.documentElement.scrollTop;
		scrOfX = document.documentElement.scrollLeft;
	}
	return [ scrOfX, scrOfY ];
}

function getElementHeight(el) {
	return jQ(el).height();
}

function getElementWidth(el) {
	return jQ(el).width();
}

function getElementTop(el) {
	var offset = jQ(el).offset();
	return offset.top;
}

function getElementBottom(el) {
	var offset = jQ(el).offset();
	return(offset.top + jQ(el).height());
}

function getElementPos(el) {
	var offset = jQ(el).offset();
	return [offset.left, offset.top];
}

function getWindowWidth() {
	if (window.innerWidth && window.innerWidth != 0)
		return window.innerWidth;
	if (document.documentElement.clientWidth && document.documentElement.clientWidth != 0)
		return document.documentElement.clientWidth;
	if (document.body.clientWidth && document.body.clientWidth != 0)
		return document.body.clientWidth;
	return 0;
}

function getWindowHeight() {
	if (window.innerHeight && window.innerHeight != 0)
		return window.innerHeight;
	if (document.documentElement.clientHeight && document.documentElement.clientHeight != 0)
		return document.documentElement.clientHeight;
	if (document.body.clientHeight && document.body.clientHeight != 0)
		return document.body.clientHeight;
	return 0;
}

function getElementHeight(target) {
	if (target.clientHeight) return target.clientHeight;
	else if (target.innerHeight) return target.innerHeight;
	else if (target.offsetHeight) return target.offsetHeight;
	else return 0;
}

function getElementWidth(target) {
	if (target.clientWidth) return target.clientWidth;
	else if (target.innerWidth) return target.innerWidth;
	else if (target.offsetWidth) return target.offsetWidth;
	else return 0;
}

function disappear(id) {
	var e = $(id);
	if (e) {
		setTimeout(function() { e.style.opacity = 0.9; }, 100);
		setTimeout(function() { e.style.opacity = 0.8; }, 200);
		setTimeout(function() { e.style.opacity = 0.7; }, 300);
		setTimeout(function() { e.style.opacity = 0.6; }, 400);
		setTimeout(function() { e.style.opacity = 0.5; }, 500);
		setTimeout(function() { e.style.opacity = 0.4; }, 600);
		setTimeout(function() { e.style.opacity = 0.3; }, 700);
		setTimeout(function() { e.style.opacity = 0.2; }, 800);
		setTimeout(function() { e.style.opacity = 0.1; }, 900);
		setTimeout(function() { e.style.opacity = 1.0; e.innerHTML = ''; }, 1000);
	}
}

// http://www.htmlcodetutorial.com/forms/index_famsupp_157.html
function submitenter(myfield,e) {
	var keycode;
	if (window.event)
		keycode = window.event.keyCode;
	else if (e)
		keycode = e.which;
	else
		return true;
	if (keycode == 13) {
		myfield.form.submit();
		return false;
	} else {
		return true;
	}
}

// http://www.phpbuilder.com/board/showthread.php?t=10318476
function urlencode(str) {
	str = escape(str);
	str = str.replace('+', '%2B');
	str = str.replace('%20', '+');
	str = str.replace('*', '%2A');
	str = str.replace('/', '%2F');
	str = str.replace('@', '%40');
	return str;
}

function urldecode(str) {
	str = str.replace('+', ' ');
	str = unescape(str);
	return str;
}

function addHintTextNormal(divID, defaultHintText, currentText)
{
	var ele = $(divID);
	if (ele)
	{
		ele.hintText = defaultHintText;

		if (currentText && currentText != defaultHintText)
		{
			ele.value = currentText;
			removeClass(ele, 'blur');
		}
		else
		{
			ele.value = defaultHintText;
			addClass(ele, 'blur');
		}

		ele.onfocus = function()
		{
			ele = this;
			if (hasClass(ele, 'blur'))
			{
				removeClass(ele, 'blur');
				ele.value = "";
			}
		}

		ele.onblur = function()
		{
			ele = this;
			if (ele.value == '')
			{
				ele.value = ele.hintText;
				addClass(ele, 'blur');
			}
		}
	}
}

function addHintText(divID, defaultHintText, currentText)
{
	var inputBox = jQ('#' + divID);
	var hintText;

	if (inputBox.length >= 1 &&
		inputBox[0].tagName.toLowerCase() == 'textarea')
	{
		addHintTextNormal(divID, defaultHintText, currentText);
		return;
	}

	if ($(divID).hintDiv)
	{
		hintText = $(divID).hintDiv;
	}
	else
	{
		hintText = jQ("<div>");
		$(divID).hintDiv = hintText;
	}

	var fields = ['font-size', 'padding-left', 'padding-right', 'font-family'];
	for (var i = 0; i < fields.length; i++)
	{
		hintText.css(fields[i], inputBox.css(fields[i]));
	}

	var post = inputBox.position();
	hintText.css('left', (post.left + 2) + 'px');
	hintText.css('top', post.top + 'px');

	if (inputBox.length >= 1 &&
		inputBox[0].tagName == 'TEXTAREA')
	{
		hintText.css('padding-top', inputBox.css('padding-top'));
		hintText.css('line-height', inputBox.css('font-size'));
		hintText.css('border', '1px solid transparent');
	}
	else
	{
		hintText.css('line-height', inputBox.outerHeight() + 'px');
	}

	hintText.css('display', 'none');
	hintText.text(defaultHintText).addClass('hint-text').click(
			function()
			{
				inputBox.focus();
			}
	);


	var handleKeyUp = function()
	{
		if (inputBox.val().length > 0)
		{
			hintText.css('display', 'none');
		}
		else
		{
			hintText.css('display', 'block');
		}
	}

	inputBox.before(hintText);
	inputBox.keyup(
			handleKeyUp
	);

	inputBox.blur(
			function()
			{
				hintText.removeClass('blur');
			}
	);

	inputBox.focus(
			function()
			{
				hintText.addClass('blur');
			}
	);

	inputBox.val(currentText).focus();
	handleKeyUp();
}

function ismaxlength(obj){
	var mlength = obj.getAttribute? parseInt(obj.getAttribute("maxlength")) : "";

	if (obj.getAttribute && obj.value.length > mlength)
	{
		obj.value = obj.value.substring(0,mlength);
	}
}

function log(obj)
{
    if ("prod" != 'prod' || odl.info.debug)
	{
		if (typeof(console) == 'object' &&
				(typeof(console.log) == 'function' ||
				 typeof(console.log) == 'object')) // For IE8
	                console.log(obj);
	}
}

// To facilitate FB development
odl.log = log;

/*
CSS Browser Selector v0.4.0 (Nov 02, 2010)
Rafael Lima (http://rafael.adm.br)
http://rafael.adm.br/css_browser_selector
License: http://creativecommons.org/licenses/by/2.5/
Contributors: http://rafael.adm.br/css_browser_selector#contributors
--With Oodle modifications to support Firefox 4, 4.0, 4.2
*/
function css_browser_selector(u){var ua=u.toLowerCase(),is=function(t){return ua.indexOf(t)>-1},g='gecko',w='webkit',s='safari',o='opera',m='mobile',h=document.documentElement,b=[(!(/opera|webtv/i.test(ua))&&/msie\s(\d)/.test(ua))?('ie ie'+RegExp.$1):is('firefox/2')?g+' ff2':is('firefox/3.5')?g+' ff3 ff3_5':is('firefox/3.6')?g+' ff3 ff3_6':is('firefox/4.0')?g+' ff4 ff4_0':is('firefox/4.2')?g+' ff4 ff4_2':is('firefox/4')?g+' ff4':is('firefox/3')?g+' ff3':is('gecko/')?g:is('opera')?o+(/version\/(\d+)/.test(ua)?' '+o+RegExp.$1:(/opera(\s|\/)(\d+)/.test(ua)?' '+o+RegExp.$2:'')):is('konqueror')?'konqueror':is('blackberry')?m+' blackberry':is('android')?m+' android':is('chrome')?w+' chrome':is('iron')?w+' iron':is('applewebkit/')?w+' '+s+(/version\/(\d+)/.test(ua)?' '+s+RegExp.$1:''):is('mozilla/')?g:'',is('j2me')?m+' j2me':is('iphone')?m+' iphone':is('ipod')?m+' ipod':is('ipad')?m+' ipad':is('mac')?'mac':is('darwin')?'mac':is('webtv')?'webtv':is('win')?'win'+(is('windows nt 6.0')?' vista':''):is('freebsd')?'freebsd':(is('x11')||is('linux'))?'linux':'','js']; c = b.join(' '); h.className += ' '+c; return c;}; css_browser_selector(navigator.userAgent);

function validEmailRegex(email) {
	var elem = "[^\\(\\)\\<\\>\\@\\,\\;\\:\\\"\\[\\]\\s\\%\\!]";
	var regex1 = new RegExp("^"+elem+"+(\\."+elem+"+)*\\@([\\w\\-]+\\.)+[a-z]{2,}", "i");
	var regex2 = new RegExp("^[\\.\\/\\|]"); // don't allow certain characters to start the address
	var regex3 = new RegExp("\\.\\."); // don't allow the sequence '..', see bug 18749

	return regex1.test(email) &&
		!regex2.test(email) &&
		!regex3.test(email);
};

function autoTab(context, targetDiv, len)
{
	var targetEle = $(targetDiv);
	if (!len)
	{
		len = context.getAttribute('maxlength');
	}

	if (targetEle && context.value.length >= len)
	{
		targetEle.focus();
	}
}

//Returns a z-index at least [step] units above the previous maximum z-index on the page, guaranteeing a document element can land on top (and have its own z-index "space")
function getTopZIndex()
{
	var step = 1;
	var maxZIndex = step;
	jQ('div, iframe').each(function () {
		var currentZIndex = parseInt(jQ(this).css('z-index'));
		if (currentZIndex >= (maxZIndex - step))
		{
			if (currentZIndex >= 2147483647) // This is maxint so if you increment this, it will fail with unpredictable results (possibly go negative)
				maxZIndex = currentZIndex;
			else
				maxZIndex = currentZIndex + step;
		}
	});
	return maxZIndex;
}

function namespace(name, payload)
{
	// define scope
	var scopes = name.split('.');
	var root = window;
	for (var i = 0; i < scopes.length; i++)
		root = root[scopes[i]] = root[scopes[i]] || {};

	if (payload) {
		// fill with payload
		if (typeof payload == 'function')
			payload = new payload

		for (var i in payload) {
			root[i] = payload[i];
		}
	}
}


if (typeof(odl) == 'undefined' || !odl)
	odl = {};
odl.facebook = false;

if (typeof Oodle == "undefined" || !Oodle) {
	var Oodle = {};
}
if (typeof Oodle.EXJS == "undefined" || !Oodle.EXJS) {
	Oodle.EXJS = {};
}
namespace("Oodle");

// Size an image to either width or height, keeping aspect ratio consistent
// @param imgid can be either a string (id of html element) or a html DOM element
function sizeIMG(imgid,imgwidth,imgheight,slideDown, adjustLeftMargin, adjustTopMargin, hiddenElementID)
{
	var el = typeof imgid == "string" ? document.getElementById(imgid) : imgid;
	
	var width = el.width;
	var height = el.height;

	/* ie6 bug hack
		ie6 was reporting the width and height of the image as 0,
		however if you create a new Image object, it seems to overcome that
	 */
	if ((!width || !height))
	{
		ie6Image = new Image();
		ie6Image.src = el.src;
		width = ie6Image.width;
		height = ie6Image.height;
	}

	var adjustedHeight = imgheight;
	var adjustedWidth = imgwidth;
        if(width>=height)
	{
		adjustedHeight = (height * imgwidth) / width;
		el.width=imgwidth;
	}
        else if(height>=width)
	{
		adjustedWidth = (width * imgheight) / height;
		el.height=imgheight;
	}

	if (adjustLeftMargin)
	{
		if (adjustedWidth < imgwidth)
		{
			var difference = imgwidth - adjustedWidth;
			var adjustment = Math.floor(difference/2);
			if (adjustment > 0)
			{
				el.style.marginLeft = adjustment + 'px';
			}
		}
	}

	if (adjustTopMargin)
	{
		if (adjustedHeight < imgheight)
		{
			var difference = imgheight - adjustedHeight;
			var adjustment = Math.floor(difference/2);
			if (adjustment > 0)
			{
				el.style.marginTop = adjustment + 'px';
			}
		}
	}

	var hiddenElement = el;

	if (hiddenElementID)
	{
		hiddenElement = $(hiddenElementID);
	}

	if (hiddenElement.style.display == 'none')
	{
		if (slideDown)
			jQ(hiddenElement).slideDown();
		else
			jQ(hiddenElement).fadeIn();
	}
}

//some how jquery does not have ancestorOf function, check if a is ancestor of b
function isAncestorOffspring(a, b)
{
	while ((b = b.parentNode))
	{
		if (a === b)
		{
			return true;
		}
	}
	return false;
}

/**
 * Warn IE6 users
 */
var displayIE6Msg = function ()
{
	var msgbox = new odl.msgbox({ width: 450, url: '/message/ie6warning?ajax=1', close_x: false, cancel: true, cancel_text: 'Close', skin: 'ie6-warning'});
}
fire(function () { 	if (jQ(document.documentElement).hasClass('ie6'))
	{
		displayIE6Msg();
	}
});

/* 
 * globol object to handle z-index
 * 
 * basically everytime a new layer is asking for a z-index, it gets current z-index + 1, so it is shown always on top
 * 
 */

odl.namespace('zindex');

/*
 * set to a high number to make sure popup will be on layers whose index is not set using odl.zindex
 * many partner header.css contains z-index 700100, but on facebook, default popup has z-index = 101
 * we don't want anything show above the default popup box
*/

odl.zindex.getHighest = function()
{
	if (!odl.zindex.val)
	{
		odl.zindex.val = 11;
		if (odl.info)
			odl.zindex.val = odl.info.is_facebook ? 11 : 800000; 
	}
	if (odl.zindex.val < 2147483647)
		return ++ odl.zindex.val;
	else
		return odl.zindex.val; // NOTE: should an Exception be thrown here instead?
};



/* 
 * a simple class to make a dropdown menu that opens on click
 * clickEleSelector : jqery selector of the item, click it opens the menu
 * menuSelector : jquery selector of the dropdown menu
 * callback : call back function when menu is collapsed or expanded, 
 * there are 4 actions that are passed as the first parameter to callback function: 'pre-open', 'pre-close', 'post-open', 'post-close'
*/

odl.namespace('dropdownMenu');

odl.dropdownMenu = function(clickEleSelector, menuSelector, callback, animation)
{
	this.clickEle = jQ(clickEleSelector);
	this.menu = jQ(menuSelector);
	if (typeof callback === 'undefined' || !callback)
	{
		callback = function(){};
	}
	this.callback = callback;
	this.animation = animation;
	
	this.isOpen = false;
	var self = this;
	
	this._animate = function(animation, callback)
	{
		
		if (animation == 'fade')
		{
			self.menu.fadeToggle(250, function() { callback(self); });
		}
		else if (animation == 'slide')
		{
			self.menu.slideToggle(250, function() { callback(self); });
		}
		else
		{
			self.menu.toggle(250, function() { callback(self); });
		}
	};
	
	/* toggle menu when click */
	self.clickEle.click
	(
		function(e)
		{
			if (self.isOpen)
			{
				self.close(e);
			}
			else
			{
				self.open(e);
			}
		}
	);
	
	jQ('body').click
	(
		function(e)
		{
			if (self.isOpen && 
				!isAncestorOffspring(self.clickEle[0], e.target) && self.clickEle[0] !== e.target &&
				!isAncestorOffspring(self.menu[0], e.target) && self.menu[0] !== e.target
				)
			{
				self.close(e);
			}
		}
	);
};

//open menu
odl.dropdownMenu.prototype.open = function(e)
{
	this.isOpen = true;
	this.callback('pre-open', e, this);
	this.menu.css({'z-index': odl.zindex.getHighest(), 'position' : 'absolute'});
	this._animate(this.animation, function(that) { that.callback('post-open-animate', e, that); });
	this.callback('post-open', e, this);	
};

//close opened menu
odl.dropdownMenu.prototype.close = function(e)
{
	this.isOpen = false;
	this.callback('pre-close', e, this);
	this.menu.css({'z-index': 'auto', 'position' : 'absolute'});
	this._animate(this.animation, function(that) { that.callback('post-close-animate', e, that); });
	this.callback('post-close', e, this);	
};



function XMLHttpRequestObject(beforeCallback,
                              afterCallback,
                              parseCallback,
                              url,
                              postContent,
                              username,
                              password)
{
	this.beforeCallback = beforeCallback;
	this.afterCallback = afterCallback;
	this.parseCallback = parseCallback;
	this.wait = false;
	this.requestObj = null;
	this.username = username || "";
	this.password = password || "";
	
	try
	{
		this.requestObj = new ActiveXObject("Msxml2.XMLHTTP");
	}
	catch (e)
	{
		try
		{
			this.requestObj = new ActiveXObject("Microsoft.XMLHTTP");
		}
		catch (ee)
		{
			this.requestObj = null;
		}
	}
	
	if (!this.requestObj && typeof(XMLHttpRequest) != "undefined")
	{
		this.requestObj = new XMLHttpRequest();
	}
	
	if (url)
	{
		this.send(url, postContent);
	}
}

XMLHttpRequestObject.prototype.send = function(url, postContent, forceReset)
{
	if (this.wait && !forceReset)
	{
		return false;
	}
	
	this.wait = true;
	
	if (this.beforeCallback)
	{
		this.beforeCallback();
	}
	
	try
	{
		this.requestObj.open(postContent ? 'POST' : 'GET', url, true, this.username, this.password);
		
		/**
		 * What is happening here?
		 */
		
		var object = this;
		
 		this.requestObj.onreadystatechange = function() {
			return object.handleResponse.apply(object);
		};
		
		if (postContent)
		{
			this.requestObj.setRequestHeader("Content-type",
			                                 "application/x-www-form-urlencoded");
			this.requestObj.setRequestHeader("Content-length",
			                                 postContent.length);
			this.requestObj.setRequestHeader("Connection", "close");
		}
		
		this.requestObj.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		
		this.requestObj.send(postContent);
	}
	catch (e)
	{
		return false;
	}
	
	return true;
};

XMLHttpRequestObject.prototype.handleResponse = function()
{
	if (this.requestObj.readyState == 4)
	{
		this.wait = false;
		
		if (this.afterCallback)
		{
			this.afterCallback(this.requestObj);
		}
		
		if (this.requestObj.status != 200)
		{
			return;
		}
		
		if (this.parseCallback)
		{
		 	var xmlDoc = this.requestObj.responseXML;
		 	var textDoc = this.requestObj.responseText;
		    
      		try
      		{
      			if(xmlDoc && typeof(xmlDoc) != "undefined") 
		 		{
        			this.parseCallback(xmlDoc, textDoc);
      			}
      			else
      			{
      				this.parseCallback(null, textDoc);
      			}
      		}
      		catch (e)
			{
				//for FF, some third part js (My Space) block us from sharing the same responseXML with permission denied.
				//So we create DOM from reponseText instead.
				if (window.DOMParser) 
		 		{
          			var oParser = new DOMParser();
          			xmlDoc = oParser.parseFromString(textDoc, "text/xml");
          		}
          		this.parseCallback(xmlDoc, textDoc);
			}
			
		}
	}
};

var JSON;if(!JSON){JSON={}}(function(){function f(n){return n<10?"0"+n:n}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf()}}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+string+'"'}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value==="object"&&typeof value.toJSON==="function"){value=value.toJSON(key)}if(typeof rep==="function"){value=rep.call(holder,key,value)}switch(typeof value){case"string":return quote(value);case"number":return isFinite(value)?String(value):"null";case"boolean":case"null":return String(value);case"object":if(!value){return"null"}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==="[object Array]"){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||"null"}v=partial.length===0?"[]":gap?"[\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";gap=mind;return v}if(rep&&typeof rep==="object"){length=rep.length;for(i=0;i<length;i+=1){if(typeof rep[i]==="string"){k=rep[i];v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v)}}}}else{for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v)}}}}v=partial.length===0?"{}":gap?"{\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=mind;return v}}if(typeof JSON.stringify!=="function"){JSON.stringify=function(value,replacer,space){var i;gap="";indent="";if(typeof space==="number"){for(i=0;i<space;i+=1){indent+=" "}}else{if(typeof space==="string"){indent=space}}rep=replacer;if(replacer&&typeof replacer!=="function"&&(typeof replacer!=="object"||typeof replacer.length!=="number")){throw new Error("JSON.stringify")}return str("",{"":value})}}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&&typeof value==="object"){for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v}else{delete value[k]}}}}return reviver.call(holder,key,value)}text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")}}}());
function ping(url)
{
	var xmlHttp = new XMLHttpRequestObject(null, null, null, url);
}

function cmshop(url, params)
{
	ping(url + '?' + params);
}

function cmview(id, abbrev, categoryId, region, vertical, category, distributor)
{
	var element = document.getElementById(id);
	if (element && hasClass(element, "normal-listing") && self.cmCreateProductviewTag) {
		var cmd = 'cmCreateProductviewTag(\'' + id + '\', \'' + abbrev + '\', \'' + categoryId + '\', \'' + region + '-_-' + vertical + '-_-' + category + '-_-' + distributor + '\')';
		setTimeout(cmd, 0);
	}
}


/**
 * LazyLoad makes it easy and painless to lazily load one or more external
 * JavaScript or CSS files on demand either during or after the rendering of
 * a web page.
 *
 * Supported browsers include Firefox 2, Firefox 3, IE 6 through 8, Safari 3 and
 * 4 (including iPhone), Chrome, and Opera 9 and 10. Other browsers may or may
 * not work and are not officially supported.
 *
 * Visit http://github.com/rgrove/lazyload/ or
 * http://wonko.com/post/lazyload-200-released for more info.
 *
 * Copyright (c) 2009 Ryan Grove <ryan@wonko.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of this project nor the names of its contributors may be
 *     used to endorse or promote products derived from this software without
 *     specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @module lazyload
 * @version 2.0.0
 */

/**
 * @class LazyLoad
 * @static
 */
LazyLoad = function () {

  // -- Private Variables ------------------------------------------------------

  // Shorthand reference to the browser's document object.
  var d = document,

  // Reference to the <head> element.
  head,

  // Requests currently in progress, if any.
  pending = {},

  // Queued requests.
  queue = {css: [], js: []},

  // User agent information.
  ua;

  // -- Private Methods --------------------------------------------------------

  /**
   * Creates and returns an HTML element with the specified name and attributes.
   *
   * @method createNode
   * @param {String} name element name
   * @param {Object} attrs name/value mapping of element attributes
   * @return {HTMLElement}
   * @private
   */
  function createNode(name, attrs) {
    var node = d.createElement(name), attr;

    for (attr in attrs) {
      if (attrs.hasOwnProperty(attr)) {
        node.setAttribute(attr, attrs[attr]);
      }
    }

    return node;
  }

  /**
   * Called when the current pending resource of the specified type has finished
   * loading. Executes the associated callback (if any) and loads the next
   * resource in the queue.
   *
   * @method finish
   * @param {String} type resource type ('css' or 'js')
   * @private
   */
  function finish(type) {
    var p = pending[type];

    if (!p) { return; }

    var callback = p.callback,
        urls     = p.urls;

    urls.shift();

    // If this is the last of the pending URLs, execute the callback and
    // start the next request in the queue (if any).
    if (!urls.length) {
      if (callback) {
        callback.call(p.scope || window, p.obj);
      }

      pending[type] = null;

      if (queue[type].length) {
        load(type);
      }
    }
  }

  /**
   * Populates the <code>ua</code> variable with useragent information. Uses a
   * paraphrased version of the YUI useragent detection code.
   *
   * @method getUserAgent
   * @private
   */
  function getUserAgent() {
    // No need to run again if ua is already populated.
    if (ua) { return; }

    var nua = navigator.userAgent,
        pF  = parseFloat,
        m;

    ua = {
      gecko : 0,
      ie    : 0,
      opera : 0,
      webkit: 0
    };

    m = nua.match(/AppleWebKit\/(\S*)/);

    if (m && m[1]) {
      ua.webkit = pF(m[1]);
    } else {
      m = nua.match(/MSIE\s([^;]*)/);

      if (m && m[1]) {
        ua.ie = pF(m[1]);
      } else if ((/Gecko\/(\S*)/).test(nua)) {
        ua.gecko = 1;

        m = nua.match(/rv:([^\s\)]*)/);

        if (m && m[1]) {
          ua.gecko = pF(m[1]);
        }
      } else if (m = nua.match(/Opera\/(\S*)/)) {
        ua.opera = pF(m[1]);
      }
    }
  }

  /**
   * Loads the specified resources, or the next resource of the specified type
   * in the queue if no resources are specified. If a resource of the specified
   * type is already being loaded, the new request will be queued until the
   * first request has been finished.
   *
   * When an array of resource URLs is specified, those URLs will be loaded in
   * parallel if it is possible to do so while preserving execution order. All
   * browsers support parallel loading of CSS, but only Firefox and Opera
   * support parallel loading of scripts. In browsers other than Firefox and
   * Opera, scripts will be queued and loaded one at a time to ensure correct
   * execution order.
   *
   * @method load
   * @param {String} type resource type ('css' or 'js')
   * @param {String|Array} urls (optional) URL or array of URLs to load
   * @param {Function} callback (optional) callback function to execute when the
   *   resource is loaded
   * @param {Object} obj (optional) object to pass to the callback function
   * @param {Object} scope (optional) if provided, the callback function will be
   *   executed in this object's scope
   * @private
   */
  function load(type, urls, callback, obj, scope) {
    var i, len, node, p, url;

    // Determine browser type and version.
    getUserAgent();

    if (urls) {
      // Cast urls to an Array.
      urls = urls.constructor === Array ? urls : [urls];

      // Create a request object for each URL. If multiple URLs are specified,
      // the callback will only be executed after all URLs have been loaded.
      //
      // Sadly, Firefox and Opera are the only browsers capable of loading
      // scripts in parallel while preserving execution order. In all other
      // browsers, scripts must be loaded sequentially.
      //
      // All browsers respect CSS specificity based on the order of the link
      // elements in the DOM, regardless of the order in which the stylesheets
      // are actually downloaded.
      if (type === 'css' || ua.gecko || ua.opera) {
        queue[type].push({
          urls    : [].concat(urls), // concat ensures copy by value
          callback: callback,
          obj     : obj,
          scope   : scope
        });
      } else {
        for (i = 0, len = urls.length; i < len; ++i) {
          queue[type].push({
            urls    : [urls[i]],
            callback: i === len - 1 ? callback : null, // callback is only added to the last URL
            obj     : obj,
            scope   : scope
          });
        }
      }
    }

    // If a previous load request of this type is currently in progress, we'll
    // wait our turn. Otherwise, grab the next item in the queue.
    if (pending[type] || !(p = pending[type] = queue[type].shift())) {
      return;
    }

    head = head || d.getElementsByTagName('head')[0];
    urls = p.urls;

    for (i = 0, len = urls.length; i < len; ++i) {
      url = urls[i];

      if (type === 'css') {
        node = createNode('link', {
          href : url,
          rel  : 'stylesheet',
          type : 'text/css'
        });
      } else {
        node = createNode('script', {src: url});
      }

      if (ua.ie) {
        node.onreadystatechange = function () {
          var readyState = this.readyState;

          if (readyState === 'loaded' || readyState === 'complete') {
            this.onreadystatechange = null;
            finish(type);
          }
        };
      } else if (type === 'css' && (ua.gecko || ua.webkit)) {
        // Gecko and WebKit don't support the onload event on link nodes, so we
        // just have to finish after a brief delay and hope for the best.
        setTimeout(function () { finish(type); }, 50 * len);
      } else {
        node.onload = node.onerror = function () { finish(type); };
      }

      head.appendChild(node);
    }
  }

  return {

    /**
     * Requests the specified CSS URL or URLs and executes the specified
     * callback (if any) when they have finished loading. If an array of URLs is
     * specified, the stylesheets will be loaded in parallel and the callback
     * will be executed after all stylesheets have finished loading.
     *
     * Currently, Firefox and WebKit don't provide any way to determine when a
     * stylesheet has finished loading. In those browsers, the callback will be
     * executed after a brief delay. For information on a manual technique you
     * can use to detect when CSS has actually finished loading in Firefox and
     * WebKit, see http://wonko.com/post/how-to-prevent-yui-get-race-conditions
     * (which applies to LazyLoad as well, despite being originally written in
     * in reference to the YUI Get utility).
     *
     * @method css
     * @param {String|Array} urls CSS URL or array of CSS URLs to load
     * @param {Function} callback (optional) callback function to execute when
     *   the specified stylesheets are loaded
     * @param {Object} obj (optional) object to pass to the callback function
     * @param {Object} scope (optional) if provided, the callback function will
     *   be executed in this object's scope
     * @static
     */
    css: function (urls, callback, obj, scope) {
      load('css', urls, callback, obj, scope);
    },

    /**
     * Requests the specified JavaScript URL or URLs and executes the specified
     * callback (if any) when they have finished loading. If an array of URLs is
     * specified and the browser supports it, the scripts will be loaded in
     * parallel and the callback will be executed after all scripts have
     * finished loading.
     *
     * Currently, only Firefox and Opera support parallel loading of scripts
     * while preserving execution order. In browsers other than Firefox and
     * Opera, scripts will be queued and loaded one at a time to ensure correct
     * execution order.
     *
     * @method js
     * @param {String|Array} urls JS URL or array of JS URLs to load
     * @param {Function} callback (optional) callback function to execute when
     *   the specified scripts are loaded
     * @param {Object} obj (optional) object to pass to the callback function
     * @param {Object} scope (optional) if provided, the callback function will
     *   be executed in this object's scope
     * @static
     */
    js: function (urls, callback, obj, scope) {
      load('js', urls, callback, obj, scope);
    }

  };
}();


function OodleTooltipTarget(div, content, additionalTrigger, tooltipOffset, timeout, positioning, ignoreMouseOver, closeOnClick)
{
	if (!OodleTooltipTarget.eventAdded)
	{
		// add static event handler for mousemove
		addEvent(document, "mousemove", OodleTooltipTarget.move, true);
		addEvent(document, "click", OodleTooltipTarget.move, true);
		OodleTooltipTarget.eventAdded = true;
	}

	var target = this;
	target.m_tooltip = new OodleTooltip({ "left":0, "top":0 }, content, div);
	target.m_targetDiv = div;

	this._div = div;
	this._positioning = (typeof(positioning) != 'undefined' ? positioning : true);
	this.closeOnClick = closeOnClick;

	if (!ignoreMouseOver)
	{
		div.onmouseover = function(evt)
		{
			var e = evt ? evt : window.event;
			target.showTooltip(e);
		};
	}
	else
	{
		div.onclick = function(evt)
		{
			var e = evt ? evt : window.event;
			target.showTooltip(e);
		};
	}

	if (additionalTrigger)
	{
		additionalTrigger.onclick = function(evt)
			{
				target.showTooltip();
			}
	}

	if (!tooltipOffset)
	{
		// these should never be positive
		tooltipOffset = { 'left' : -50, 'top' : -10 };
	}

	this._tooltipOffset = tooltipOffset;

	this._timeout = timeout || 500;

}

OodleTooltipTarget.prototype.showTooltip = function(evt)
{
	var target = this;
	if (!this.m_tooltip)
	{
		return;
	}

	OodleTooltipTarget.move(evt);
	if (OodleTooltipTarget.curTarget)
	{
		return;
	}

	var pos = getElementPos(this._div);
	var sizey = getElementHeight(this._div);
	var sizex = getElementWidth(this._div);
	var scroll = getScrollXY();
	var windowWidth = getWindowWidth();
	var windowHeight = getWindowHeight();
	var viewPortY = pos[1] - scroll[1];
	var viewPortX = pos[0] - scroll[0];

	var newPos = [];
	if (viewPortY > windowHeight*5/9 && this._positioning)
	{
		newPos["bottom"] = getElementHeight(document.body) - pos[1] + this._tooltipOffset.top;
	}
	else
	{
		newPos["top"] = pos[1] + sizey + this._tooltipOffset.top;
	}

	if (viewPortX > windowWidth*5/9 && this._positioning)
	{
		newPos["right"] = getElementWidth(document.body) - (pos[0] + sizex - this._tooltipOffset.left);
	}
	else
	{
		newPos["left"] = Math.max(1, pos[0] + this._tooltipOffset.left);
	}

	this.m_tooltip.setPos(newPos);
	this.tid = setTimeout(function() { target._showTooltip(); }, this._timeout);


	OodleTooltipTarget.curTarget = this;
};

OodleTooltipTarget.prototype._showTooltip = function()
{
	this.m_tooltip.show(this._timeout > 1);
};

OodleTooltipTarget.prototype.hideTooltip = function()
{
	OodleTooltipTarget.curTarget = null;
	this.m_tooltip.hide();
};

OodleTooltipTarget.prototype.toggle = function(e)
{
	if (!this.m_pos)
	{
		this.showTooltip();
	}
	this.m_tooltip.toggle();
}

OodleTooltipTarget.move = function(e)
{

	if (!OodleTooltipTarget.curTarget)
		return;

	if (!e)
		return;

	var target = OodleTooltipTarget.curTarget;

	if (e.type == 'mousemove')
	{
		if (target.closeOnClick)
			return;
	}

	var pos = getElementPos(target.m_targetDiv);
	var sizey = getElementHeight(target.m_targetDiv);
	var sizex = getElementWidth(target.m_targetDiv);
	var scroll = getScrollXY();

	var x = e.clientX + scroll[0];
	var y = e.clientY + scroll[1];

	if (!(x < (pos[0] + sizex + 10) && x >= pos[0]) ||
	    !(y < (pos[1] + sizey + 10) && y >= pos[1]))
	{
		var pos = getElementPos(target.m_tooltip._container);
		var sizey = getElementHeight(target.m_tooltip._container);
		var sizex = getElementWidth(target.m_tooltip._container);

		if (!(x < (pos[0] + sizex) && x >= pos[0]) ||
		    !(y < (pos[1] + sizey) && y >= pos[1]))
		{
			OodleTooltipTarget.curTarget = null;
			clearTimeout(target.tid);
			target.hideTooltip();
		}
	}
};

function OodleTooltip(pos, content, div)
{
	this._container = this.create(null, content);
	this._container.className = "tooltip";
	this._shim = this.createShim();

	this._wrapper = document.createElement("div");
	this._wrapper.style.position = "absolute";

	this._wrapper.appendChild(this._shim);
	this._wrapper.appendChild(this._container);
	this.hide();

	document.body.appendChild(this._wrapper);
}

OodleTooltip.prototype.create = function(pos, content)
{
	this.m_pos = pos;

	var tooltip = document.createElement("div");
	tooltip.style.left = "0px";
	tooltip.style.top = "0px";
	tooltip.style.position = "relative";
	tooltip.style.zIndex = odl.zindex.getHighest();
	if (typeof content == 'string')
	{
		tooltip.innerHTML = content;
	}
	else
	{
		tooltip.appendChild(content);
	}

	return tooltip;
};

OodleTooltip.prototype.createShim = function()
{
	var shim;

	if (window.location.protocol == 'https:')
	{
		shim = document.createElement("iframe");
		shim.src = 'javascript:false';
	}
	else
	{
		shim = document.createElement("iframe");
	}

	shim.frameBorder = "0";
	shim.scrolling = "no";
	shim.style.border = "0px";
	shim.style.position = "absolute";
	shim.style.overflow = "hidden";
	shim.style.left = 0;
	shim.style.top = 0;

	return shim;
}

OodleTooltip.prototype.setPos = function(pos)
{
	this.m_pos = pos;
};

OodleTooltip.prototype.toggle = function()
{
	if (this._isShown == true)
	{
		this.hide();
	}
	else
	{
		this.show();
	}
}

OodleTooltip.prototype.show = function(animate)
{
	if (this._isShown == true)
	{
		return;
	}

	var tooltip = this._wrapper;
	var shim = this._shim;

	tooltip.style.left = "";
	tooltip.style.top = "";
	tooltip.style.right = "";
	tooltip.style.bottom = "";

	if (this.m_pos['left'])
	{
		tooltip.style.left = this.m_pos['left'] + "px";
	}
	if (this.m_pos['top'])
	{
		tooltip.style.top = this.m_pos['top'] + "px";
	}
	if (this.m_pos['right'])
	{
		tooltip.style.right = this.m_pos['right'] + "px";
	}
	if (this.m_pos['bottom'])
	{
		tooltip.style.bottom = this.m_pos['bottom'] + "px";
	}

	tooltip.style.opacity = 0;
	tooltip.style.filter = "alpha(opacity=0)";
	tooltip.style.zIndex = odl.zindex.getHighest();
	tooltip.style.display = "block";

	var width = getElementWidth(tooltip);
	var height = getElementHeight(tooltip);
	shim.style.width = width + "px";
	shim.style.height = height + "px";

	if (animate)
	{
		setTimeout(function() { tooltip.style.opacity = 0.1; }, 50);
		setTimeout(function() { tooltip.style.opacity = 0.2; }, 100);
		setTimeout(function() { tooltip.style.opacity = 0.3; tooltip.style.filter = "alpha(opacity=25)";}, 150);
		setTimeout(function() { tooltip.style.opacity = 0.4; }, 200);
		setTimeout(function() { tooltip.style.opacity = 0.5; tooltip.style.filter = "alpha(opacity=50)";}, 250);
		setTimeout(function() { tooltip.style.opacity = 0.6; }, 300);
		setTimeout(function() { tooltip.style.opacity = 0.7; }, 350);
		setTimeout(function() { tooltip.style.opacity = 0.8; tooltip.style.filter = "alpha(opacity=75)";}, 400);
		setTimeout(function() { tooltip.style.opacity = 0.9; }, 450);
		setTimeout(function() { tooltip.style.opacity = 1.0; tooltip.style.filter = "alpha(opacity=100)";}, 500);
	}
	else
	{
		tooltip.style.opacity = 1;
		tooltip.style.filter = "alpha(opacity=100)";
	}

	this._isShown = true;
};

OodleTooltip.prototype.hide = function()
{
	this._wrapper.style.display = "none";
	this._isShown = false;
};

// requires common.js

function remove_text(element, compare, className)
{
	if (jQ(element).val() == compare || jQ(element).hasClass(className))
	{
		jQ(element).val('');
		jQ(element).removeClass(className);
	}
}

function manual_maxlength(formElement) 
{
	var maxLength = formElement.getAttribute ? parseInt(formElement.getAttribute("maxlength")) : "";
	if (formElement.getAttribute && formElement.value.length > maxLength) 
	{
		formElement.value = formElement.value.substring(0, maxLength);
	}
	return formElement.value.length;
}

function replace_text(element, replacement, className)
{
	if (jQ(element).val() == "" ||
	    jQ(element).val() == replacement)
	{
		jQ(element).val(replacement);
		jQ(element).addClass(className);
	}
}

/* hightlight search glass icon when input has values */
function hight_light_search(element, blurClass)
{
	//find all text input child elements
	var isFieldActive = false;
	jQ(element).parent().children('input[type|="text"]').each
	(
		function()
		{
			if(!jQ(this).hasClass(blurClass))
			{
				isFieldActive = true;
			}
		}	
	);
	
	if(isFieldActive)
	{
		jQ(element).siblings('input[type|="submit"]').removeClass('inactive-search');
	}
}

/* hightlight search glass icon when input has values */
function grey_out_search(element, blurClass)
{
	//find all text input child elements
	var isFieldActive = false;
	jQ(element).parent().children('input[type|="text"]').each
	(
		function()
		{
			if(!jQ(this).hasClass(blurClass))
			{
				isFieldActive = true;
			}
		}	
	);
	
	if(!isFieldActive)
	{
		jQ(element).siblings('input[type|="submit"]').addClass('inactive-search');
	}
}


function toggle_open(elem, img, txt, formElement)
{
	if (elem && elem.style.display == 'none')
	{
		elem.style.display = '';

		if (formElement)
		{
			formElement.value = "1";
		}
	} 
	else if (elem) 
	{
		elem.style.display = 'none';

		if (formElement)
		{
			formElement.value = "0";
		}
	}

	if (img && img.src == 'http://i.oodleimg.com/a/triangle_side.gif')
	{
		img.src = 'http://i.oodleimg.com/a/triangle_down.gif';
		txt.innerHTML = '&nbsp;Hide Options';
	}
	else if (img)
	{
		img.src = 'http://i.oodleimg.com/a/triangle_side.gif';
		txt.innerHTML = '&nbsp;More Options';
	}
	else if (!img && elem && elem.style.display == '')
	{
		txt.innerHTML = ' <code>-</code> Hide Options';
	} 
	else if (!img && elem)
	{
		txt.innerHTML = ' <code>+</code> More Options';
	}
}



odl.namespace("category_select");

odl.category_select =
{
	initMore:function()
	{
		var context = $('header_more_cata_link');
		var config = {
			visible: false,
			context: [context, "tl", "bl", ["beforeShow", "windowResize", "textResize"]],
			iframe: true}

		var menu = $('header_more_categories');
		if (!odl.category_select.moreOverlay)
		{
			odl.category_select.menu = new OodleTooltipTarget(context, menu, null, { 'left' : 0, 'top' : 0 }, 1, false, true, true);
		}
		menu.style.display = 'block';
	},

	toggleMore:function(context)
	{
		if (odl.category_select.menu)
		{
			odl.category_select.menu.toggle();
		}

		return false;
	},

	initLocation:function()
	{
		var callback = function () {
			var context = $('home-where');
			var config = {
				visible: false,
				context: [context, "tl", "bl", ["beforeShow", "windowResize", "textResize"]],
				iframe: true}
	
			odl.category_select.LocationMsg = new YAHOO.widget.Overlay($("location_msg"), config);
	
			var element = document.getElementById('hiddenmodals');
			//odl.category_select.LocationMsg.render(document.body);
			odl.category_select.LocationMsg.render(element);
		};
		odl.legacy_yui2.load(callback);	
	},

	categorySearch:function(context, pageType)
	{
		if (pageType == 5)
		{
			var what = $('vertical_search-q-element');
			if (what != null && what.value != undefined )
			{
				var url = '';
				if (context.href.indexOf('?') >= 0)
				{
					url += '&';
				}
				else
				{
					url += '?';
				}
				
				url += 'q=' + what.value + '&inbs=1';
				context.href = context.href + url;
			}
		}
		
		return true;
	},

	validateLocation:function(defaultMsg)
	{
		var wherebox = $('home-where');
		var msgLbl = $('location_msg_text');
		wherebox.focus();

		$('search-radius').value = $('radius_select').value;
		if (wherebox.value == ''
			|| wherebox.value == defaultMsg)
		{
			odl.category_select.LocationMsg.align();
			odl.category_select.LocationMsg.show();
			msgLbl.innerHTML = 'Location is required. Please enter ' + defaultMsg + '.';
			return false;
		}

		var successCallback = function (data, status, xhr) {
				if (data == 'fail')
				{

					odl.category_select.LocationMsg.align();
					odl.category_select.LocationMsg.show();
					msgLbl.innerHTML = 'Invalid location, please try another.';
				}
				else
				{
					document.search_form.submit();
				}
		};
		
		var failureCallback = function () {
			msgLbl.innerHTML = '<span class="error">Server Error. Please try again later</span>';
		};

		var sUrl = '/ajax/location/?loc=' + wherebox.value;
		var transaction = jQ.ajax({type: 'GET', url: sUrl, dataType: 'text', error: failureCallback, success: successCallback});

		return false;
	},

	closeLocationMsg:function()
	{
		odl.category_select.LocationMsg.hide();
	},

	initRadius:function()
	{
		var callback = function () {
			var context = $('radius_info');
			var menu = $('radius_menu');
	
			var config = {
				visible: false,
				context: [context, "tl", "bl", ["beforeShow", "windowResize", "textResize"]],
				iframe: true}
	
			odl.category_select.radiusToolTip =
				new YAHOO.widget.Overlay(menu, config);
	
			var element = document.getElementById('hiddenmodals');
			//odl.category_select.radiusToolTip.render(document.body);
			odl.category_select.radiusToolTip.render(element);
	
			YAHOO.widget.Overlay.windowResizeEvent.fire = function() {
				odl.category_select.radiusToolTip.align();
				odl.category_select.LocationMsg.align();
			}
		};
		odl.legacy_yui2.load(callback);
	},

	radiusDrop:function(context) {
		if (odl.category_select.radiusToolTip.cfg.getProperty("visible"))
		{
			odl.category_select.radiusToolTip.hide();
		}
		else {
			odl.category_select.radiusToolTip.align();
			odl.category_select.radiusToolTip.show();
		}
	},

	changeRadius:function(changeValue) {
		var radiusSelect = $("radius_select");
		var textEle = $('radius_num');

		if (changeValue)
		{
			$('search-radius').value = $('radius_select').value;

			if (radiusSelect.value == 0)
			{
				textEle.innerHTML = 'Searching this exact location';
			}
			else if (radiusSelect.value == 'country')
			{
				textEle.innerHTML = 'Searching the entire country';
			}
			else {
				var index = radiusSelect.selectedIndex;
				textEle.innerHTML = 'Searching within ' + radiusSelect[index].text;
			}
		}

		odl.category_select.radiusToolTip.hide();
	},

	showOptions:function(e, obj)
	{
		var headerSelectedID = obj.id + '-selected';
		var headerSelectedElement =  document.getElementById(headerSelectedID);
		if (headerSelectedElement)
		{
			addClass(headerSelectedElement, "active-dropdown");
			odl.category_select.menu.showTooltip(e);
			OodleTooltipTarget.curTarget = null;
		}
	},

	hideOptions:function(e, obj)
	{
		var headerSelectedID = obj.id + '-selected';
		var headerSelectedElement =  document.getElementById(headerSelectedID);
		if (headerSelectedElement)
		{
			removeClass(headerSelectedElement, "active-dropdown");
			odl.category_select.menu.hideTooltip(e);
			OodleTooltipTarget.curTarget = null;
		}
	},

	/* Adjust the width of the text box based on available space */
	autoWidth:function(config, isHide)
	{
		var containerElement = document.getElementById(config.id + '-container');
		var containerWidth = 400;

		if (containerElement)
		{
			containerWidth = getElementWidth(containerElement);
			containerElement.style.width = containerWidth + "px";
		}

		var linkElement = document.getElementById(config.id + '-link');
		var linkWidth = 0;

		if (linkElement)
		{
			linkWidth = getElementWidth(linkElement);
		}

		var textWidth = containerWidth - linkWidth - 5;
		var textElement = document.getElementById(config.id + '-text');
		if (textElement)
		{
			textElement.style.width = textWidth + 'px';
		}
	},

	autoFocusEventAttach:function(config)
	{
		var textElementID = config.id + '-text';

		if (!$(textElementID).focused)
			replace_text($(textElementID), 'Search Classifieds...', 'blur');

		jQ('#' + textElementID).bind('focus',
			function() {
				remove_text($(textElementID), 'Search Classifieds...', 'blur');
			});

		jQ('#' + textElementID).bind(
			"blur",
			function(e, obj) {
				replace_text($(textElementID), 'Search Classifieds...', 'blur');
			});
	},

	init:function(o, config)
	{
		var divID = config.id + '-selected';

		odl.category_select.autoWidth(config);
		odl.category_select.autoFocusEventAttach(config);

		var element = document.getElementById(divID);

		target = $('header-link');
		menu = $('header-options');
		if (target && menu)
		{
			odl.category_select.menu = new OodleTooltipTarget(target, menu, null, { 'left' : 0, 'top' : 0 }, 1, false, true);
		}

		if (element)
		{
			jQ(document.body).bind("click",
				function(e) {
					if (odl.category_select.menu.m_tooltip._isShown &&
					    (e.target || e.srcElement) != element)
					{
						odl.category_select.hideOptions(e, config);
					}
				});

			jQ(element).bind("click",
				function(e) {
					if (!odl.category_select.menu.m_tooltip._isShown)
					{
						odl.category_select.showOptions(e, config);
					}
					else
					{
						odl.category_select.hideOptions(e, config);
					}
				});

			var handleSelect = function(e, id)
			{
				element.innerHTML = 'in ' + config.categories[id] + ' <small>\u25BC</small>';
				var hiddenElement = document.getElementById(config.id + '-hidden');

				if (hiddenElement)
				{
					// change the category
					hiddenElement.value = id;
				}
				odl.category_select.autoWidth(config);
			}

			for (var option in config.categories)
			{
				jQ('#' + config.id + '-' + option).bind('click', (function (o) { return function (e) { handleSelect(e, o); } })(option));
			}
		}
	}
}


odl.namespace('form');

odl.form = {
	toggleErrorsForExtension : function(Args, extension, formData, key, errorClass) 
	{
		if (key == 'recaptcha_response_field' && extension == 'element')
		{
			var eleID = key;
		}
		else
		{
			var eleID = Args.form_id + '-' + key + '-'
					+ extension;
		}

		var element = $(eleID);
		if (element && !formData.hideErrors) {
			if (formData.error[key])
			{
				jQ(element).addClass(errorClass);
			}
			else
			{
				jQ(element).removeClass(errorClass);
			}
		}
	},

	handleSuccess : function(o) {
		var Args = o.argument;
		var element;
		var successful = true;
		var formData = null;
		try {
			var jsonText = o.responseText;
			if (jsonText.indexOf('b64') == 0) {
				jsonText = jQ.base64Decode(jsonText.substring(3));
			}

			formData = jQ.parseJSON(jsonText);
		} catch (e) {
			successful = false;

			// Unable to parse data
			formData = {
				error : {
					'*' : 'Unable to parse results: ' + jsonText
				}
			};
		}
		if (!formData || !successful)
		{
			// Unable to parse data
			var formData = {
				error : {
					'*' : 'Unable to parse results: ' + jsonText
				}
			};

			odl.form.hideProgress(Args.button_ele, Args.progress_ele);
			odl.form.showElements(Args.form_id);
			if (Args.failure)
			{
				Args.failure(formData);
			}
			return;
		}
		odl.form.handleSuccessJSON(formData, Args);
	},
	
	handleSuccessJSON : function (formData, Args)
	{
		if (!Args.form_id)
		{
			// odl.log(Args);
		}

		if (formData.updated_html)
		{

			var container = $(Args.form_id + '-container');
			if (container)
			{
				jQ(container).html(formData.updated_html);
			}
		}

		var errorsStr = '';

		var errorClass = 'error';

		if (formData.init)
		{
			eval(formData.init);
		}

		// Reset form fields
		if (formData.reset)
		{
			for (var key in formData.reset)
			{
				if ($(key))
				{
					$(key).value = formData.reset[key];
				}
			}
		}

		var errorsShown = false;
		for ( var key in formData.error) {
			errorsShown = true;
			var errorID = Args.form_id + '-' + key
					+ '-error';
			var elementIDParent = null;
			
			if (key == '*')
			{
				errorID = odl.form.setupRCErrorElement(Args.form_id, formData.error[key]);
			}
			else if (key == 'recaptcha_response_field')
			{
				Recaptcha.reload();
			}

			element = $(errorID);
			if (element && formData.error[key])
			{
				if (!formData.hideErrors)
				{
					if (Args.error_styling)
					{
						Args.error_styling(element, formData.error[key]);
					}
					else
					{
						jQ(element).html(formData.error[key]);
						jQ(element).css('display', 'block');
					}
				}
				errorsStr += '<li>' + formData.error[key] + '</li>';
			}
			else if (element)
			{
				jQ(element).css('display', 'none');
				jQ(element).html('');
				if (elementIDParent)
				{
					element = $(errorIDParent);
					if (element)
					{
						// jQ(element).slideUp();
						jQ(element).css('display', 'none');
					}
				}
			}

			odl.form.toggleErrorsForExtension(Args, 'element',
					formData, key, errorClass);

			if (errorClass != 'error') // Preserve backwards compatibility with
										// forms like Report
			{
				odl.form.toggleErrorsForExtension(
						Args, 'label', formData, key, errorClass);
			}
		}

		odl.form.restoreBlur(Args.form_id);

		// Keep form buttons hidden if set, but enable the form,
		// Otherwise the elements will show up disabled if the user hits back
		// at least on Firefox 3.07 for linux - probably other versions of
		// Firefox
		// as well

		if (!formData.keep_buttons_hidden)
		{
			odl.form.hideProgress(Args.button_ele, Args.progress_ele);
		}

		if (Args.button_ele)
			odl.form.showElements(Args.form_id);

		if (errorsShown)
		{
			if (Args.custom_error)
			{
				Args.custom_error(formData);
			}
			else
			{
				Args.custom_success(formData);
			}
		}
		else
		{
			Args.custom_success(formData);
		}
	},

	// Sets up the "Rounded Corner" error element
	setupRCErrorElement : function (formID, errorStr)
	{
		errorIDParent = 'rc-' + formID + '-errors';
		element = $(errorIDParent);
		if (element && errorStr)
		{
			// jQ(element).slideDown();
			jQ(element).css('display', 'block');
		}

		var errorID = formID + '-errors';
		return errorID;
	},

	handleFailure : function(o) {
		var Args = o.argument;
		if (Args && Args.button_ele)
		{
			odl.form.hideProgress(Args.button_ele, Args.progress_ele);
			odl.form.showElements(Args.form_id);
		}
		// Failure handler
		var errorStr = "Please try again (a communications error occurred).";
		var errorDisplayed = false;

		var formID = (Args && Args.form_id ? Args.form_id : null);
		odl.form.displayError(errorStr, formID, Args.error_styling);
		if (Args.failure)
		{
			Args.failure();
		}
	}
};

odl.form.displayError = function(errorStr, formID, error_styling) {
	var errorDisplayed = false;
	if (formID)
	{
		var errorID = odl.form.setupRCErrorElement(formID, errorStr);
		var element = $(errorID);
		if (element)
		{
			if (error_styling)
			{
				error_styling(element, errorStr);
			}
			else
			{
				jQ(element).html(errorStr);
				jQ(element).css('display', 'block');
			}
			errorDisplayed = true;
		}
		var errorsStr = '<li>' + errorStr + '</li>';
	}

	if (!errorDisplayed)
	{
		// Engineer Mistake
		var dialog = new odl.msgbox({header: 'Error', close_x: true, ok: true, content: errorStr});
	}
};

odl.form.hideElements = function(formID)
{
	var elements = '#' + formID + ' input,';
	elements += '#' + formID + ' textarea,';
	elements += '#' + formID + ' file,';
	elements += '#' + formID + ' select,';
	elements += '#' + formID + ' radio';

	jQ(elements).each( function (idx, ele)
	{
		stack = jQ(ele).data('enableStack');
		if (!stack)
			stack = [];
		if (jQ(ele).attr('disabled'))
		{
			stack.push(false);
		}
		else
		{
			stack.push(true);
			jQ(ele).attr('disabled', 'disabled');
		}
		jQ(ele).data('enableStack', stack);
	});
};

odl.form.showElements = function (formID)
{
	var elements = '#' + formID + ' input,';
	elements += '#' + formID + ' file,';
	elements += '#' + formID + ' select,';
	elements += '#' + formID + ' textarea,';
	elements += '#' + formID + ' radio';

	jQ(elements).each( function (idx, ele)
	{
		stack = jQ(ele).data('enableStack');
		if (stack)
		{
			var enable = stack.pop();
			if (enable)
			{
				jQ(ele).attr('disabled', false);
			}
			jQ(ele).data('enableStack', stack);
		}
	});
};

odl.form.hideErrors = function(formID)
{
	var errorClassA = formID + '-err'; // Div / Span error class
	var errorClassB = 'error'; // input error class
	if ($(formID))
	{
		var divs = $(formID).getElementsByTagName('div');
		var spans = $(formID).getElementsByTagName('span');
		var inputs = $(formID).getElementsByTagName('input');
		var textareas = $(formID).getElementsByTagName('textarea');
		var selects = $(formID).getElementsByTagName('select');
		var buttons = $(formID).getElementsByTagName('button');
		var labels = $(formID).getElementsByTagName('label');
		var fieldsets = $(formID).getElementsByTagName('fieldset');

		var loopElements = [inputs, textareas, selects, buttons, labels, fieldsets];
		var loopLen = loopElements.length;
		for (var i = 0 ; i < loopLen ; i++)
		{
			var elements = loopElements[i];
			var eLen = elements.length;
			for (var j = 0 ; j < eLen; j++)
			{
				jQ(elements[j]).removeClass(errorClassB); // Removes input
															// error class
			}
		}

		loopElements  = [divs, spans];
		loopLen = loopElements.length;
		for (var i = 0 ; i < loopLen; i++)
		{
			var elements = loopElements[i];
			var eLen = elements.length;
			for (var j = 0 ; j < eLen; j++)
			{
				if (jQ(elements[j]).hasClass(errorClassA))
					jQ(elements[j]).css('display', 'none');
			}
		}
	}

	var errorID = 'rc-' + formID + '-errors';
	var element = $(errorID);
	if (element)
	{
		jQ(element).css('display', 'none');
	}

	var errorID = formID + '-errors';
	var element = $(errorID);
	if (element)
	{
		jQ(element).css('display', 'none');
	}
};

	/** called by odl.post.js */
odl.form.resetFields = function(formID)
{
	if ($(formID))
	{
		odl.form.hideErrors(formID);
		var inputs = $(formID).getElementsByTagName('input');
		for (var i = 0 ; i < inputs.length ; i++)
		{
			if (inputs[i].type != 'hidden')
			{
				jQ(inputs[i]).val('');
			}
		}
	}
};

odl.form.hideProgress = function(container)
{
	if (!container)
		return null;
	
	if (!(container instanceof(jQuery)))
	{
		container = jQ(container);
	}

	var progress = jQ(container).data('progress-element');
	if (progress)
	{
		progress.remove();
		jQ(container).data('progress-element', null);
	}
	
	jQ(container).data('toggle_elements').toggle(true);
};

odl.form.showProgress = function(container, options)
{
	if (!container) {
		return null;
	}
	
	var settings = {
			render_inside: false
		};
	
	if (options)
	{
		jQ.extend(settings, options);
	}
	
	if (!(container instanceof(jQuery)))
	{
		container = jQ(container);
	}
	
	var imgEle = odl.assets.getImage('progress').clone();
	if (settings.mini)
	{
		imgEle = odl.assets.getImage('progress-link').clone();
	}
	else
	{
		if (container.attr('tagName') == 'A' && 
			container.children().length == 0)
		{
			imgEle = odl.assets.getImage('progress-link').clone();
		}
	}
	
	var imgID = 'progress';
	if (container.attr('id'))
	{
		imgID = imgID + '-' + container.attr('id');
	}
	else
	{
		// Search for an element with an ID
		var parent = container.parent();
		while (parent.length > 0)
		{
			if (parent.attr('id'))
			{
				imgID = imgID + '-' + jQ(parent).attr('id');
				break;
			}
			parent = parent.parent();
		}
	}
	jQ('#' + imgID).remove(); // in case it is already appended to the element.
	
	// Save the state of diplay, it could be inline, block, etc.
	container.data('display', container.css('display'));
	container.data('progress-element', imgEle);
	
	if (settings.render_inside)
	{
		jQ(container).data('toggle_elements', container.children());
		container.append(imgEle);
	}
	else
	{
		log(container);
		jQ(container).data('toggle_elements', container);
		container.after(imgEle);
	}

	jQ(container).data('toggle_elements').toggle(false);
	imgEle.attr('id', imgID);
	
	//@todo: Need to preserve container height
	if (options && options.callback)
	{
		options.callback(imgEle);
	}
	
	return imgEle;
};

odl.form.replaceBlur = function(formID)
{
	if (!odl.form.blurHash)
	{
		odl.form.blurHash = {};
	}
	var elements = '#' + formID + ' input.blur,';
	elements += '#' + formID + ' textarea.blur';

	jQ(elements).each(
		function (intIndex)
		{
			var id = formID + intIndex;
			odl.form.blurHash[id] = jQ(this).val();
			jQ(this).val('');
		}
	);
};

odl.form.restoreBlur = function(formID)
{
	var elements = '#' + formID + ' input.blur,';
	elements += '#' + formID + ' textarea.blur';

	jQ(elements).each(
		function (intIndex)
		{
			var id = formID + intIndex;
			jQ(this).val(odl.form.blurHash[id]);
		}
	);
};

odl.form.normalizeParams = function(formIDOrParams, sUrl, callback, buttonEle, data, failureCallback, timeout) 
{
	// Looking at defaults should be enough to understand the suppored options
	var defaults = { 
		// Define variables/settings
		form_id: formIDOrParams,
		url: sUrl,
		button_ele: buttonEle,
		data: data || {},
		timeout: timeout || 40000,
		ajax_upload: false,	
		dataType: 'text',						// Always text
		type: 'POST',							// Always post
		
		// Define functions
		custom_success: 	callback || function() {},				// call back after ajax is done
		custom_failure: 	failureCallback	|| function() {}		// call on failure
	};
	
	var params = {};
	jQ.extend(params, defaults);
	if (typeof(formIDOrParams) == 'object')
	{
		if (formIDOrParams.success)
		{
			formIDOrParams.custom_success = formIDOrParams.success;
		}
		
		if (formIDOrParams.failure)
		{
			formIDOrParams.custom_failure = formIDOrParams.success;
		}
		
		jQ.extend(params, formIDOrParams);
	};
	
	var formObject = jQ('form#' + params.form_id);

	if (formObject.length == 0)
	{
		// No form error msg box
		var msgbox = new odl.msgbox({header: 'Error', close_x: true, ok: true});
		msgbox.showErrorMsg('sformid');
		return null;
	}
	else if (!params.url)
	{
		// No url define error box
		var msgbox = new odl.msgbox({header: 'Error', close_x: true, ok: true});
		msgbox.showErrorMsg('please define url');
		return null;
	}
	else
	{
		params.jQForm = formObject;			// Lets keep a copy to reference
		params.dataType = 'text';			// Must always be text to work
		params.type = 'post';				// Must always be post
		
		// Lets define wrapper function
		params.success = function(data, status, xhr) { 
			odl.form.handleSuccess({ responseText: data, argument: params}); 
		};
		
		params.error = function(xhr, status, err) {
			odl.form.handleFailure({ argument: params}); 
		};
		
		// Append additional data
		var serializedData = formObject.serializeArray();
		for (var key in params.data)
		{
			serializedData.push({name: key, value : params.data[key]});
		}
		
		params.data = jQ.param(serializedData);		// decodeURIComponent(params.data);
	}
	
	return params;
};

odl.form.start = function(params)
{
	if (params && typeof(params) == 'object')
	{
		odl.form.replaceBlur(params.form_id);		// Remove blur
		odl.form.hideErrors(params.form_id);		// Hide errors

		if (params.ajax_upload)
		{
			params.data = params.extraData;		// ajaxForm takes {key: value, ...}
			params.jQForm.ajaxSubmit(params);
			params.button_ele = null;			// disable spinner
		}
		else
		{
			if (params.button_ele) 
			{
				odl.form.hideElements(params.form_id);					// disable elements
				imgEle = odl.form.showProgress(params.button_ele);		// Show busy spinner
				params.progress_ele = imgEle;
			}
			
			jQ.ajax(params);
		}
	}
	return false;
};

odl.form.startRequest = function(formIDOrParams, sUrl, callback, buttonEle, data, failureCallback, timeout) 
{
	var params = odl.form.normalizeParams(formIDOrParams, sUrl, callback, buttonEle, data, failureCallback, timeout);
	return odl.form.start(params);
};

odl.form.startUploadRequest = function(formIDOrParams, sUrl, callback, buttonEle, data, failureCallback, timeout) 
{
	var params = odl.form.normalizeParams(formIDOrParams, sUrl, callback, buttonEle, data, failureCallback, timeout);
	if (!data)
	{
		data = {};
	}
	data.ajax = 1;
	params.extraData = data;
	params.ajax_upload = 1;
	
	return odl.form.start(params);
};

/** does not depend on startRequest, and startUploadRequest */
odl.form.select = function(formName, selectEle, event)
{
	if (selectEle.currIndex && selectEle.currIndex == selectEle.selectedIndex)
	{
		return false;
	}
	selectEle = jQ(selectEle);

	var selectContainer = '#' + formName + '-' + selectEle.attr('name') + '-ac';
	var urlID = formName + '-ajax-select-prefix-element';
	var urlPrefix = 'form/' + formName + '/select/';
	if (jQ('#' + urlID))
	{
		var selectVal =  jQ('#' + urlID).val();
		if(selectVal)
		{
			urlPrefix = selectVal;
		}
	}

	var url = odl.info.base_path + urlPrefix + selectEle.attr('name');
	var datastr = '';
	jQ('#' + formName + ' select').each(
			function(element)
			{
				datastr += '&' + jQ(this).attr('name') +'='+ jQ(this).val();
			}
	);
	
	jQ(selectContainer)
		.css('display', 'block')
		.html(odl.assets.getImage('spinner-small').clone());
	
	jQ.ajax({
	   type: "POST",
	   url: url,
	   data: datastr,
	   timeout: 40000,
	   dataType: 'json',
	   success: function(o){
			if (o.html)
			{
				jQ(selectContainer).html("<div>" + o.html + "</div>");
			}
			else
			{
			   jQ(selectContainer).html('').slideUp();
			}
		}
	});
};

/**
 * Assumes the form follows form controller convention.
 * 	formId: 		the id of the form
 * 	controller: 	controller to handle the form action
 * 	buttonElement: 	container of button element to replace with progress bar
 */
odl.form.submit = function(formId, url, buttonelement)
{
	var options = {
		'form_id' : formId,
		'url': url,
		'button_ele': buttonelement
	};
	
	odl.form.startRequest(options);
	return false;
};

odl.form.upload = function(options)
{
	this.options = options;
	that = this;
	
	var settings = {
		url: options.url,
		type :'POST',
		success: function(jsonText)
		{
			var o = {};
			if (jsonText.indexOf('b64') == 0) 
			{
				jsonText = jQ.base64Decode(jsonText.substring(3));
			}
			
			o = jQ.parseJSON(jsonText);
			that.options.success(o);
		},
		error : function(o)
		{
			log(o);
		}
	};

	jQ('#' + options.form_id)
		.ajaxSubmit(settings);
};

/*!
 * jQuery Form Plugin
 * version: 2.94 (13-DEC-2011)
 * @requires jQuery v1.3.2 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Dual licensed under the MIT and GPL licenses:
 *	http://www.opensource.org/licenses/mit-license.php
 *	http://www.gnu.org/licenses/gpl.html
 */
;(function($) {

/*
	Usage Note:
	-----------
	Do not use both ajaxSubmit and ajaxForm on the same form.  These
	functions are intended to be exclusive.  Use ajaxSubmit if you want
	to bind your own submit handler to the form.  For example,

	$(document).ready(function() {
		$('#myForm').bind('submit', function(e) {
			e.preventDefault(); // <-- important
			$(this).ajaxSubmit({
				target: '#output'
			});
		});
	});

	Use ajaxForm when you want the plugin to manage all the event binding
	for you.  For example,

	$(document).ready(function() {
		$('#myForm').ajaxForm({
			target: '#output'
		});
	});

	When using ajaxForm, the ajaxSubmit function will be invoked for you
	at the appropriate time.
*/

/**
 * ajaxSubmit() provides a mechanism for immediately submitting
 * an HTML form using AJAX.
 */
$.fn.ajaxSubmit = function(options) {
	// fast fail if nothing selected (http://dev.jquery.com/ticket/2752)
	if (!this.length) {
		log('ajaxSubmit: skipping submit process - no element selected');
		return this;
	}
	
	var method, action, url, $form = this;

	if (typeof options == 'function') {
		options = { success: options };
	}

	method = this.attr('method');
	action = this.attr('action');
	url = (typeof action === 'string') ? $.trim(action) : '';
	url = url || window.location.href || '';
	if (url) {
		// clean url (don't include hash vaue)
		url = (url.match(/^([^#]+)/)||[])[1];
	}

	options = $.extend(true, {
		url:  url,
		success: $.ajaxSettings.success,
		type: method || 'GET',
		iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'
	}, options);

	// hook for manipulating the form data before it is extracted;
	// convenient for use with rich editors like tinyMCE or FCKEditor
	var veto = {};
	this.trigger('form-pre-serialize', [this, options, veto]);
	if (veto.veto) {
		log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
		return this;
	}

	// provide opportunity to alter form data before it is serialized
	if (options.beforeSerialize && options.beforeSerialize(this, options) === false) {
		log('ajaxSubmit: submit aborted via beforeSerialize callback');
		return this;
	}

	var traditional = options.traditional;
	if ( traditional === undefined ) {
		traditional = $.ajaxSettings.traditional;
	}
	
	var qx,n,v,a = this.formToArray(options.semantic);
	if (options.data) {
		options.extraData = options.data;
		qx = $.param(options.data, traditional);
	}

	// give pre-submit callback an opportunity to abort the submit
	if (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {
		log('ajaxSubmit: submit aborted via beforeSubmit callback');
		return this;
	}

	// fire vetoable 'validate' event
	this.trigger('form-submit-validate', [a, this, options, veto]);
	if (veto.veto) {
		log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
		return this;
	}

	var q = $.param(a, traditional);
	if (qx) {
		q = ( q ? (q + '&' + qx) : qx );
	}	
	if (options.type.toUpperCase() == 'GET') {
		options.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;
		options.data = null;  // data is null for 'get'
	}
	else {
		options.data = q; // data is the query string for 'post'
	}

	var callbacks = [];
	if (options.resetForm) {
		callbacks.push(function() { $form.resetForm(); });
	}
	if (options.clearForm) {
		callbacks.push(function() { $form.clearForm(options.includeHidden); });
	}

	// perform a load on the target only if dataType is not provided
	if (!options.dataType && options.target) {
		var oldSuccess = options.success || function(){};
		callbacks.push(function(data) {
			var fn = options.replaceTarget ? 'replaceWith' : 'html';
			$(options.target)[fn](data).each(oldSuccess, arguments);
		});
	}
	else if (options.success) {
		callbacks.push(options.success);
	}

	options.success = function(data, status, xhr) { // jQuery 1.4+ passes xhr as 3rd arg
		var context = options.context || options;	// jQuery 1.4+ supports scope context 
		for (var i=0, max=callbacks.length; i < max; i++) {
			callbacks[i].apply(context, [data, status, xhr || $form, $form]);
		}
	};

	// are there files to upload?
	var fileInputs = $('input:file:enabled[value]', this); // [value] (issue #113)
	var hasFileInputs = fileInputs.length > 0;
	var mp = 'multipart/form-data';
	var multipart = ($form.attr('enctype') == mp || $form.attr('encoding') == mp);

	var fileAPI = !!(hasFileInputs && fileInputs.get(0).files && window.FormData);
	log("fileAPI :" + fileAPI);
	var shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;

	// options.iframe allows user to force iframe mode
	// 06-NOV-09: now defaulting to iframe mode if file input is detected
	if (options.iframe !== false && (options.iframe || shouldUseFrame)) {
		// hack to fix Safari hang (thanks to Tim Molendijk for this)
		// see:  http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d
		if (options.closeKeepAlive) {
			$.get(options.closeKeepAlive, function() {
				fileUploadIframe(a);
			});
		}
  		else {
			fileUploadIframe(a);
  		}
	}
	else if ((hasFileInputs || multipart) && fileAPI) {
		options.progress = options.progress || $.noop;
		fileUploadXhr(a);
	}
	else {
		$.ajax(options);
	}

	 // fire 'notify' event
	 this.trigger('form-submit-notify', [this, options]);
	 return this;

	 // XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)
	function fileUploadXhr(a) {
		var formdata = new FormData();

		for (var i=0; i < a.length; i++) {
			if (a[i].type == 'file')
				continue;
			formdata.append(a[i].name, a[i].value);
		}

		$form.find('input:file:enabled').each(function(){
			var name = $(this).attr('name'), files = this.files;
			if (name) {
				for (var i=0; i < files.length; i++)
					formdata.append(name, files[i]);
			}
		});

		if (options.extraData) {
			for (var k in options.extraData)
				formdata.append(k, options.extraData[k])
		}

		options.data = null;

		var s = $.extend(true, {}, $.ajaxSettings, options, {
			contentType: false,
			processData: false,
			cache: false,
			type: 'POST'
		});

      s.context = s.context || s;

      s.data = null;
      var beforeSend = s.beforeSend;
      s.beforeSend = function(xhr, o) {
          o.data = formdata;
          if(xhr.upload) { // unfortunately, jQuery doesn't expose this prop (http://bugs.jquery.com/ticket/10190)
              xhr.upload.onprogress = function(event) {
                  o.progress(event.position, event.total);
              };
          }
          if(beforeSend)
              beforeSend.call(o, xhr, options);
      };
      $.ajax(s);
   }

	// private function for handling file uploads (hat tip to YAHOO!)
	function fileUploadIframe(a) {
		var form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;
		var useProp = !!$.fn.prop;

		if (a) {
			if ( useProp ) {
				// ensure that every serialized input is still enabled
				for (i=0; i < a.length; i++) {
					el = $(form[a[i].name]);
					el.prop('disabled', false);
				}
			} else {
				for (i=0; i < a.length; i++) {
					el = $(form[a[i].name]);
					el.removeAttr('disabled');
				}
			};
		}

		if ($(':input[name=submit],:input[id=submit]', form).length) {
			// if there is an input with a name or id of 'submit' then we won't be
			// able to invoke the submit fn on the form (at least not x-browser)
			alert('Error: Form elements must not have name or id of "submit".');
			return;
		}
		
		s = $.extend(true, {}, $.ajaxSettings, options);
		s.context = s.context || s;
		id = 'jqFormIO' + (new Date().getTime());
		if (s.iframeTarget) {
			$io = $(s.iframeTarget);
			n = $io.attr('name');
			if (n == null)
			 	$io.attr('name', id);
			else
				id = n;
		}
		else {
			$io = $('<iframe name="' + id + '" src="'+ s.iframeSrc +'" />');
			$io.css({ position: 'absolute', top: '-1000px', left: '-1000px' });
		}
		io = $io[0];


		xhr = { // mock object
			aborted: 0,
			responseText: null,
			responseXML: null,
			status: 0,
			statusText: 'n/a',
			getAllResponseHeaders: function() {},
			getResponseHeader: function() {},
			setRequestHeader: function() {},
			abort: function(status) {
				var e = (status === 'timeout' ? 'timeout' : 'aborted');
				log('aborting upload... ' + e);
				this.aborted = 1;
				$io.attr('src', s.iframeSrc); // abort op in progress
				xhr.error = e;
				s.error && s.error.call(s.context, xhr, e, status);
				g && $.event.trigger("ajaxError", [xhr, s, e]);
				s.complete && s.complete.call(s.context, xhr, e);
			}
		};

		g = s.global;
		// trigger ajax global events so that activity/block indicators work like normal
		if (g && ! $.active++) {
			$.event.trigger("ajaxStart");
		}
		if (g) {
			$.event.trigger("ajaxSend", [xhr, s]);
		}

		if (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {
			if (s.global) {
				$.active--;
			}
			return;
		}
		if (xhr.aborted) {
			return;
		}

		// add submitting element to data if we know it
		sub = form.clk;
		if (sub) {
			n = sub.name;
			if (n && !sub.disabled) {
				s.extraData = s.extraData || {};
				s.extraData[n] = sub.value;
				if (sub.type == "image") {
					s.extraData[n+'.x'] = form.clk_x;
					s.extraData[n+'.y'] = form.clk_y;
				}
			}
		}
		
		var CLIENT_TIMEOUT_ABORT = 1;
		var SERVER_ABORT = 2;

		function getDoc(frame) {
			var doc = frame.contentWindow ? frame.contentWindow.document : frame.contentDocument ? frame.contentDocument : frame.document;
			return doc;
		}
		
		// Rails CSRF hack (thanks to Yvan Barthelemy)
		var csrf_token = $('meta[name=csrf-token]').attr('content');
		var csrf_param = $('meta[name=csrf-param]').attr('content');
		if (csrf_param && csrf_token) {
			s.extraData = s.extraData || {};
			s.extraData[csrf_param] = csrf_token;
		}

		// take a breath so that pending repaints get some cpu time before the upload starts
		function doSubmit() {
			// make sure form attrs are set
			var t = $form.attr('target'), a = $form.attr('action');

			// update form attrs in IE friendly way
			form.setAttribute('target',id);
			if (!method) {
				form.setAttribute('method', 'POST');
			}
			if (a != s.url) {
				form.setAttribute('action', s.url);
			}

			// ie borks in some cases when setting encoding
			if (! s.skipEncodingOverride && (!method || /post/i.test(method))) {
				$form.attr({
					encoding: 'multipart/form-data',
					enctype:  'multipart/form-data'
				});
			}

			// support timout
			if (s.timeout) {
				timeoutHandle = setTimeout(function() { timedOut = true; cb(CLIENT_TIMEOUT_ABORT); }, s.timeout);
			}
			
			// look for server aborts
			function checkState() {
				try {
					var state = getDoc(io).readyState;
					log('state = ' + state);
					if (state.toLowerCase() == 'uninitialized')
						setTimeout(checkState,50);
				}
				catch(e) {
					log('Server abort: ' , e, ' (', e.name, ')');
					cb(SERVER_ABORT);
					timeoutHandle && clearTimeout(timeoutHandle);
					timeoutHandle = undefined;
				}
			}

			// add "extra" data to form if provided in options
			var extraInputs = [];
			try {
				if (s.extraData) {
					for (var n in s.extraData) {
						extraInputs.push(
							$('<input type="hidden" name="'+n+'">').attr('value',s.extraData[n])
								.appendTo(form)[0]);
					}
				}

				if (!s.iframeTarget) {
					// add iframe to doc and submit the form
					$io.appendTo('body');
					io.attachEvent ? io.attachEvent('onload', cb) : io.addEventListener('load', cb, false);
				}
				setTimeout(checkState,15);
				form.submit();
			}
			finally {
				// reset attrs and remove "extra" input elements
				form.setAttribute('action',a);
				if(t) {
					form.setAttribute('target', t);
				} else {
					$form.removeAttr('target');
				}
				$(extraInputs).remove();
			}
		}

		if (s.forceSync) {
			doSubmit();
		}
		else {
			setTimeout(doSubmit, 10); // this lets dom updates render
		}

		var data, doc, domCheckCount = 50, callbackProcessed;

		function cb(e) {
			if (xhr.aborted || callbackProcessed) {
				return;
			}
			try {
				doc = getDoc(io);
			}
			catch(ex) {
				log('cannot access response document: ', ex);
				e = SERVER_ABORT;
			}
			if (e === CLIENT_TIMEOUT_ABORT && xhr) {
				xhr.abort('timeout');
				return;
			}
			else if (e == SERVER_ABORT && xhr) {
				xhr.abort('server abort');
				return;
			}

			if (!doc || doc.location.href == s.iframeSrc) {
				// response not received yet
				if (!timedOut)
					return;
			}
			io.detachEvent ? io.detachEvent('onload', cb) : io.removeEventListener('load', cb, false);

			var status = 'success', errMsg;
			try {
				if (timedOut) {
					throw 'timeout';
				}

				var isXml = s.dataType == 'xml' || doc.XMLDocument || $.isXMLDoc(doc);
				log('isXml='+isXml);
				if (!isXml && window.opera && (doc.body == null || doc.body.innerHTML == '')) {
					if (--domCheckCount) {
						// in some browsers (Opera) the iframe DOM is not always traversable when
						// the onload callback fires, so we loop a bit to accommodate
						log('requeing onLoad callback, DOM not available');
						setTimeout(cb, 250);
						return;
					}
					// let this fall through because server response could be an empty document
					//log('Could not access iframe DOM after mutiple tries.');
					//throw 'DOMException: not available';
				}

				//log('response detected');
				var docRoot = doc.body ? doc.body : doc.documentElement;
				xhr.responseText = docRoot ? docRoot.innerHTML : null;
				xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;
				if (isXml)
					s.dataType = 'xml';
				xhr.getResponseHeader = function(header){
					var headers = {'content-type': s.dataType};
					return headers[header];
				};
				// support for XHR 'status' & 'statusText' emulation :
				if (docRoot) {
					xhr.status = Number( docRoot.getAttribute('status') ) || xhr.status;
					xhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;
				}

				var dt = (s.dataType || '').toLowerCase();
				var scr = /(json|script|text)/.test(dt);
				if (scr || s.textarea) {
					// see if user embedded response in textarea
					var ta = doc.getElementsByTagName('textarea')[0];
					if (ta) {
						xhr.responseText = ta.value;
						// support for XHR 'status' & 'statusText' emulation :
						xhr.status = Number( ta.getAttribute('status') ) || xhr.status;
						xhr.statusText = ta.getAttribute('statusText') || xhr.statusText;
					}
					else if (scr) {
						// account for browsers injecting pre around json response
						var pre = doc.getElementsByTagName('pre')[0];
						var b = doc.getElementsByTagName('body')[0];
						if (pre) {
							xhr.responseText = pre.textContent ? pre.textContent : pre.innerText;
						}
						else if (b) {
							xhr.responseText = b.textContent ? b.textContent : b.innerText;
						}
					}
				}
				else if (dt == 'xml' && !xhr.responseXML && xhr.responseText != null) {
					xhr.responseXML = toXml(xhr.responseText);
				}

				try {
					data = httpData(xhr, dt, s);
				}
				catch (e) {
					status = 'parsererror';
					xhr.error = errMsg = (e || status);
				}
			}
			catch (e) {
				log('error caught: ',e);
				status = 'error';
				xhr.error = errMsg = (e || status);
			}

			if (xhr.aborted) {
				log('upload aborted');
				status = null;
			}

			if (xhr.status) { // we've set xhr.status
				status = (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) ? 'success' : 'error';
			}

			// ordering of these callbacks/triggers is odd, but that's how $.ajax does it
			if (status === 'success') {
				s.success && s.success.call(s.context, data, 'success', xhr);
				g && $.event.trigger("ajaxSuccess", [xhr, s]);
			}
			else if (status) {
				if (errMsg == undefined)
					errMsg = xhr.statusText;
				s.error && s.error.call(s.context, xhr, status, errMsg);
				g && $.event.trigger("ajaxError", [xhr, s, errMsg]);
			}

			g && $.event.trigger("ajaxComplete", [xhr, s]);

			if (g && ! --$.active) {
				$.event.trigger("ajaxStop");
			}

			s.complete && s.complete.call(s.context, xhr, status);

			callbackProcessed = true;
			if (s.timeout)
				clearTimeout(timeoutHandle);

			// clean up
			setTimeout(function() {
				if (!s.iframeTarget)
					$io.remove();
				xhr.responseXML = null;
			}, 100);
		}

		var toXml = $.parseXML || function(s, doc) { // use parseXML if available (jQuery 1.5+)
			if (window.ActiveXObject) {
				doc = new ActiveXObject('Microsoft.XMLDOM');
				doc.async = 'false';
				doc.loadXML(s);
			}
			else {
				doc = (new DOMParser()).parseFromString(s, 'text/xml');
			}
			return (doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror') ? doc : null;
		};
		var parseJSON = $.parseJSON || function(s) {
			return window['eval']('(' + s + ')');
		};

		var httpData = function( xhr, type, s ) { // mostly lifted from jq1.4.4

			var ct = xhr.getResponseHeader('content-type') || '',
				xml = type === 'xml' || !type && ct.indexOf('xml') >= 0,
				data = xml ? xhr.responseXML : xhr.responseText;

			if (xml && data.documentElement.nodeName === 'parsererror') {
				$.error && $.error('parsererror');
			}
			if (s && s.dataFilter) {
				data = s.dataFilter(data, type);
			}
			if (typeof data === 'string') {
				if (type === 'json' || !type && ct.indexOf('json') >= 0) {
					data = parseJSON(data);
				} else if (type === "script" || !type && ct.indexOf("javascript") >= 0) {
					$.globalEval(data);
				}
			}
			return data;
		};
	}
};

/**
 * ajaxForm() provides a mechanism for fully automating form submission.
 *
 * The advantages of using this method instead of ajaxSubmit() are:
 *
 * 1: This method will include coordinates for <input type="image" /> elements (if the element
 *	is used to submit the form).
 * 2. This method will include the submit element's name/value data (for the element that was
 *	used to submit the form).
 * 3. This method binds the submit() method to the form for you.
 *
 * The options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely
 * passes the options argument along after properly binding events for submit elements and
 * the form itself.
 */
$.fn.ajaxForm = function(options) {
	// in jQuery 1.3+ we can fix mistakes with the ready state
	if (this.length === 0) {
		var o = { s: this.selector, c: this.context };
		if (!$.isReady && o.s) {
			log('DOM not ready, queuing ajaxForm');
			$(function() {
				$(o.s,o.c).ajaxForm(options);
			});
			return this;
		}
		// is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()
		log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
		return this;
	}

	return this.ajaxFormUnbind().bind('submit.form-plugin', function(e) {
		if (!e.isDefaultPrevented()) { // if event has been canceled, don't proceed
			e.preventDefault();
			$(this).ajaxSubmit(options);
		}
	}).bind('click.form-plugin', function(e) {
		var target = e.target;
		var $el = $(target);
		if (!($el.is(":submit,input:image"))) {
			// is this a child element of the submit el?  (ex: a span within a button)
			var t = $el.closest(':submit');
			if (t.length == 0) {
				return;
			}
			target = t[0];
		}
		var form = this;
		form.clk = target;
		if (target.type == 'image') {
			if (e.offsetX != undefined) {
				form.clk_x = e.offsetX;
				form.clk_y = e.offsetY;
			} else if (typeof $.fn.offset == 'function') { // try to use dimensions plugin
				var offset = $el.offset();
				form.clk_x = e.pageX - offset.left;
				form.clk_y = e.pageY - offset.top;
			} else {
				form.clk_x = e.pageX - target.offsetLeft;
				form.clk_y = e.pageY - target.offsetTop;
			}
		}
		// clear form vars
		setTimeout(function() { form.clk = form.clk_x = form.clk_y = null; }, 100);
	});
};

// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm
$.fn.ajaxFormUnbind = function() {
	return this.unbind('submit.form-plugin click.form-plugin');
};

/**
 * formToArray() gathers form element data into an array of objects that can
 * be passed to any of the following ajax functions: $.get, $.post, or load.
 * Each object in the array has both a 'name' and 'value' property.  An example of
 * an array for a simple login form might be:
 *
 * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
 *
 * It is this array that is passed to pre-submit callback functions provided to the
 * ajaxSubmit() and ajaxForm() methods.
 */
$.fn.formToArray = function(semantic) {
	var a = [];
	if (this.length === 0) {
		return a;
	}

	var form = this[0];
	var els = semantic ? form.getElementsByTagName('*') : form.elements;
	if (!els) {
		return a;
	}

	var i,j,n,v,el,max,jmax;
	for(i=0, max=els.length; i < max; i++) {
		el = els[i];
		n = el.name;
		if (!n) {
			continue;
		}

		if (semantic && form.clk && el.type == "image") {
			// handle image inputs on the fly when semantic == true
			if(!el.disabled && form.clk == el) {
				a.push({name: n, value: $(el).val(), type: el.type });
				a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
			}
			continue;
		}

		v = $.fieldValue(el, true);
		if (v && v.constructor == Array) {
			for(j=0, jmax=v.length; j < jmax; j++) {
				a.push({name: n, value: v[j]});
			}
		}
		else if (v !== null && typeof v != 'undefined') {
			a.push({name: n, value: v, type: el.type});
		}
	}

	if (!semantic && form.clk) {
		// input type=='image' are not found in elements array! handle it here
		var $input = $(form.clk), input = $input[0];
		n = input.name;
		if (n && !input.disabled && input.type == 'image') {
			a.push({name: n, value: $input.val()});
			a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
		}
	}
	return a;
};

/**
 * Serializes form data into a 'submittable' string. This method will return a string
 * in the format: name1=value1&amp;name2=value2
 */
$.fn.formSerialize = function(semantic) {
	//hand off to jQuery.param for proper encoding
	return $.param(this.formToArray(semantic));
};

/**
 * Serializes all field elements in the jQuery object into a query string.
 * This method will return a string in the format: name1=value1&amp;name2=value2
 */
$.fn.fieldSerialize = function(successful) {
	var a = [];
	this.each(function() {
		var n = this.name;
		if (!n) {
			return;
		}
		var v = $.fieldValue(this, successful);
		if (v && v.constructor == Array) {
			for (var i=0,max=v.length; i < max; i++) {
				a.push({name: n, value: v[i]});
			}
		}
		else if (v !== null && typeof v != 'undefined') {
			a.push({name: this.name, value: v});
		}
	});
	//hand off to jQuery.param for proper encoding
	return $.param(a);
};

/**
 * Returns the value(s) of the element in the matched set.  For example, consider the following form:
 *
 *  <form><fieldset>
 *	  <input name="A" type="text" />
 *	  <input name="A" type="text" />
 *	  <input name="B" type="checkbox" value="B1" />
 *	  <input name="B" type="checkbox" value="B2"/>
 *	  <input name="C" type="radio" value="C1" />
 *	  <input name="C" type="radio" value="C2" />
 *  </fieldset></form>
 *
 *  var v = $(':text').fieldValue();
 *  // if no values are entered into the text inputs
 *  v == ['','']
 *  // if values entered into the text inputs are 'foo' and 'bar'
 *  v == ['foo','bar']
 *
 *  var v = $(':checkbox').fieldValue();
 *  // if neither checkbox is checked
 *  v === undefined
 *  // if both checkboxes are checked
 *  v == ['B1', 'B2']
 *
 *  var v = $(':radio').fieldValue();
 *  // if neither radio is checked
 *  v === undefined
 *  // if first radio is checked
 *  v == ['C1']
 *
 * The successful argument controls whether or not the field element must be 'successful'
 * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).
 * The default value of the successful argument is true.  If this value is false the value(s)
 * for each element is returned.
 *
 * Note: This method *always* returns an array.  If no valid value can be determined the
 *	array will be empty, otherwise it will contain one or more values.
 */
$.fn.fieldValue = function(successful) {
	for (var val=[], i=0, max=this.length; i < max; i++) {
		var el = this[i];
		var v = $.fieldValue(el, successful);
		if (v === null || typeof v == 'undefined' || (v.constructor == Array && !v.length)) {
			continue;
		}
		v.constructor == Array ? $.merge(val, v) : val.push(v);
	}
	return val;
};

/**
 * Returns the value of the field element.
 */
$.fieldValue = function(el, successful) {
	var n = el.name, t = el.type, tag = el.tagName.toLowerCase();
	if (successful === undefined) {
		successful = true;
	}

	if (successful && (!n || el.disabled || t == 'reset' || t == 'button' ||
		(t == 'checkbox' || t == 'radio') && !el.checked ||
		(t == 'submit' || t == 'image') && el.form && el.form.clk != el ||
		tag == 'select' && el.selectedIndex == -1)) {
			return null;
	}

	if (tag == 'select') {
		var index = el.selectedIndex;
		if (index < 0) {
			return null;
		}
		var a = [], ops = el.options;
		var one = (t == 'select-one');
		var max = (one ? index+1 : ops.length);
		for(var i=(one ? index : 0); i < max; i++) {
			var op = ops[i];
			if (op.selected) {
				var v = op.value;
				if (!v) { // extra pain for IE...
					v = (op.attributes && op.attributes['value'] && !(op.attributes['value'].specified)) ? op.text : op.value;
				}
				if (one) {
					return v;
				}
				a.push(v);
			}
		}
		return a;
	}
	return $(el).val();
};

/**
 * Clears the form data.  Takes the following actions on the form's input fields:
 *  - input text fields will have their 'value' property set to the empty string
 *  - select elements will have their 'selectedIndex' property set to -1
 *  - checkbox and radio inputs will have their 'checked' property set to false
 *  - inputs of type submit, button, reset, and hidden will *not* be effected
 *  - button elements will *not* be effected
 */
$.fn.clearForm = function(includeHidden) {
	return this.each(function() {
		$('input,select,textarea', this).clearFields(includeHidden);
	});
};

/**
 * Clears the selected form elements.
 */
$.fn.clearFields = $.fn.clearInputs = function(includeHidden) {
	var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list
	return this.each(function() {
		var t = this.type, tag = this.tagName.toLowerCase();
		if (re.test(t) || tag == 'textarea' || (includeHidden && /hidden/.test(t)) ) {
			this.value = '';
		}
		else if (t == 'checkbox' || t == 'radio') {
			this.checked = false;
		}
		else if (tag == 'select') {
			this.selectedIndex = -1;
		}
	});
};

/**
 * Resets the form data.  Causes all form elements to be reset to their original value.
 */
$.fn.resetForm = function() {
	return this.each(function() {
		// guard against an input with the name of 'reset'
		// note that IE reports the reset function as an 'object'
		if (typeof this.reset == 'function' || (typeof this.reset == 'object' && !this.reset.nodeType)) {
			this.reset();
		}
	});
};

/**
 * Enables or disables any matching elements.
 */
$.fn.enable = function(b) {
	if (b === undefined) {
		b = true;
	}
	return this.each(function() {
		this.disabled = !b;
	});
};

/**
 * Checks/unchecks any matching checkboxes or radio buttons and
 * selects/deselects and matching option elements.
 */
$.fn.selected = function(select) {
	if (select === undefined) {
		select = true;
	}
	return this.each(function() {
		var t = this.type;
		if (t == 'checkbox' || t == 'radio') {
			this.checked = select;
		}
		else if (this.tagName.toLowerCase() == 'option') {
			var $sel = $(this).parent('select');
			if (select && $sel[0] && $sel[0].type == 'select-one') {
				// deselect all other options
				$sel.find('option').selected(false);
			}
			this.selected = select;
		}
	});
};

// expose debug var
$.fn.ajaxSubmit.debug = false;

// helper fn for console logging
function log() {
	if (!$.fn.ajaxSubmit.debug) 
		return;
	var msg = '[jquery.form] ' + Array.prototype.join.call(arguments,'');
	if (window.console && window.console.log) {
		window.console.log(msg);
	}
	else if (window.opera && window.opera.postError) {
		window.opera.postError(msg);
	}
};

})(jQuery);
function autocomplete(id, countryId, options)
{
	var countryCode = jQ('#' + countryId).val()  || null;
	if (!countryCode && options && options['countryCode'])
	{
		countryCode = options['countryCode'];
	}

	var url = "/ajax/autocomplete/?format=json&type=verbose&country=" + escape(countryCode);
	if (!options)
		options = {};
		
	// Default options
	options['source'] = url;
	options['open'] = function () {
		jQ('ul.ui-autocomplete').css('z-index', odl.zindex.getHighest());
	};
	
	jQ('#' + id).autocomplete(options);
}
odl.namespace('location');


odl.location.supported_countries = 
	["AUS","CAN","GBR","IND","IRL","NZL","TUR","USA"];


odl.location.show = function(options)
{
	var msgboxParam = {allow_recenter: false, skin: 'oodle-lightbox change-loc', width: 371};
	if (odl.radius && odl.radius.current_radius != -1)
	{
		if (options['r'] != odl.radius.current_radius)
		{
			options['r'] = odl.radius.current_radius;
		}
	}
	if (options.pin)
	{
		var pin = jQ('#univ-change-loc .change-loc-pin');
		if (pin.length > 0)
		{
			var offset = pin.offset();
			offset.left -= 8;
			offset.top -= 15;
			msgboxParam.offset = offset;
			msgboxParam.allow_move = false;
		}
	}
	
	options.query = jQ('#search-what').val();
	Oodle.Wizard.Show('message', 'location', options, null, null, null, msgboxParam);
};

odl.location.executeVerticalSearch = function(locString)
{
	var location = jQ('#location_pop_up').val();
	var radius = jQ('#radius_pop_up').val();
	var country = jQ('#country_pop_up').val();

	jQ('#vertical_search-location-element').val(location);
	jQ('#vertical_search-g-element').val(locString);
	jQ('#vertical_search-r-element').val(radius);
	jQ('#vertical_search-country-element').val(country);
	jQ('#location_2_text').text(locString);

	jQ('#vertical_search').submit();
};

odl.location.init = function(defaultText, currentText, isFullySupported)
{
	addHintText('location_pop_up', defaultText, currentText);
	odl.location.toggleLocationInput(isFullySupported);
	jQ('#location_pop_up').focus();
	odl.location.changeHeadingText(defaultText);
};

odl.location.toggleLocationInput = function(isFullySupported)
{
	if (isFullySupported)
	{
		jQ('#location-location-row, #location-r-row').toggle(true);
	}
	else
	{
		jQ('#location-location-row, #location-r-row').toggle(false);
	}
};

odl.location.CountryChange = function(locId, radiusId, countryId)
{
	var countryCode = jQ('#' + countryId).val();
	odl.location.hideNeighborhood();
	if (indexOf(odl.location.supported_countries, countryCode) < 0)
	{
		odl.location.toggleLocationInput(false);
		jQ("#location-save_location-row").toggle(false);
		jQ("#form_save_location").attr("checked", false);
		odl.location.changeHeadingText();
		jQ("#" + locId).val("");
		return false;
	}
	else
	{
		jQ("#location-save_location-row").toggle(true);
		odl.location.toggleLocationInput(true);
	}

	var url = '/message/location/radius_values/?country_code=' + countryCode;
	var callback = function (data)
	{
		odl.location.toggleLocationInput(data.radius_values);

		var html = '';
		if(radiusId)
		{
			for (var radius in data.radius_values)
			{
				html += '<option value="' + radius + '">' + data.radius_values[radius] + '</option>';
			}
			jQ('#' + radiusId).html(html).val(data.default_radius);
		}

		odl.location.changeHeadingText(data.headingText);
		odl.location.setupLocationTxt(locId, countryId);
		addHintText(locId, data.hintText, '');
	};
	
	// We don't have a lot of supported countries, lets not do ajax call on
	// every country change

	jQ.ajax
	({
		type: "GET",
		url: url,
		dataType: 'json',
		success: callback
	});
};

odl.location.setupLocationTxt = function(locId, countryId, extraOptions)
{
	var options = {};
	options['select'] = function(event, data){
		odl.location.showNeighborhood(data.item.value, countryId);
	};
	jQ("#" + locId).keydown(function(event){
		if (event.keyCode == 13)
		{
			return false;
		}
		else if( event.keyCode == 9)
		{
			jQ('#lightbox-nbrhood_chzn .chzn-drop .chzn-search input[type="text"]').focus();
			return false;
		}
		else
		{
			odl.location.hideNeighborhood();
		}
	});

	jQ("#" + locId).keyup(function(event){
		var txtVal = jQ(event.target).val();
		if (txtVal == "")
		{
			odl.location.hideNeighborhood();
		}
		if (txtVal.length > 4 && !isNaN(txtVal))
		{
			odl.location.showNeighborhood(txtVal, countryId);
		}
		if (event.keyCode == 13)
		{
			odl.location.showNeighborhood(txtVal, countryId);
		}
	});
	jQ.extend(options, extraOptions);
	autocomplete(locId, countryId, options);
};

//nice slide out effect
odl.location.hideNeighborhood = function(){
	var $root = jQ("#location-neighborhood-row");
	$root.find("select").empty();
	$root.slideUp('fast');
};

odl.location.chosen = function(element_id){
	var $element = jQ("#" + element_id);
	var selectedAttr = "";
	if (!$element.prop("selectedIndex"))
	{
		selectedAttr = "selected=\"selected\"";
	}
	if ($element.find("option").first().val())
	{
		var html = $element.html();
		html = "<option value=''"  + selectedAttr + "></option>" + html;
		$element.empty();
		$element.html(html);
	}
	$element.chosen({allow_single_deselect: true});
};

odl.location.showNeighborhood = function(location_str, countryId){
	var root = jQ("#location-neighborhood-row");
	var country_code = jQ("#" + countryId).val();
	var neighborhoods = null;

	var renderSelect = function(data){
		if (data && data.neighborhoods && data.neighborhoods.length)
		{
			root.find("#lightbox-nbrhood").empty();
			jQ("#location_pop_up").autocomplete("close");

			var defaultTxt = root.find("#location-neighborhood-label").text();
			defaultTxt = defaultTxt.charAt(0).toUpperCase() + defaultTxt.slice(1);
			var items = [];
			items.push('<option value=""></option>');
			jQ.each(data.neighborhoods, function(key, item) {
					var item_val = item.value;
					var selected = "";
					items.push('<option value="' + item.id + '"' + selected + '>' + item_val + '</option>');
			});
			root.find("#lightbox-nbrhood").html(items.join('')).attr("data-placeholder", defaultTxt).trigger("liszt:updated");
			root.slideDown("fast");
		}
	};

	if (odl._cache_nbrhood && odl._cache_nbrhood[location_str])
	{
		var data = odl._cache_nbrhood[location_str];
		renderSelect(data);
	}
	else
	{
		if ( location_str != '' && (country_code == 'USA' || country_code == 'CAN'))
		{
			var url = "/post2/getNeighborhoods?format=autocomplete&location=" + escape(location_str) + "&country=" + country_code;
			jQ.getJSON(url, function(data){ renderSelect(data);});
		}
	}

};

odl.location.changeHeadingText = function(text) {
	var headingText = 'Find listings near you.';
	if (text)
		headingText += ' Enter ' + text + '.';
	
	jQ('#location-title-title').text(headingText)
	
};

// call back function for location box on 
odl.location.fbTabLocHandler = function(data)
{
	var updateElement = function(form, elementID)
	{
		var element = form.find('#' + elementID);
		if (element.get(0))
		{
			element.val(data[elementID]);
		}
		else
		{
			var hiddenInput = jQ('<input/>',{type:'hidden',id:elementID,value:data[elementID], name: elementID});
			hiddenInput.appendTo(form);
		}
	};
	
	var loc = data['location'];
	if ( loc.length > 17)
	{
		loc = loc.substr(0,14) + '...';
	}
	
	var locText = loc + " <span class='small'>" ;
	if (data.fullySupported)
	{
		locText +=	 " +" + data['radius'];
		if (data['radius'] != 'country')
		{
			locText += ' ' + data["radius_units"];
		}
	}
	locText += " (<span class='change'>change</span>)</span>";
	
	jQ('#social-box-location').html(locText);
	
	var form = jQ('#navigator-form');
	updateElement(form, 'country');
	updateElement(form, 'location');
	updateElement(form, 'radius');
	
	if (!data.fullySupported)
	{
		jQ('#radius').remove();
	}
	jQ("#navigator-form #submit-button").click();

	
};

odl.location.fbtabInit = function()
{
	var form = jQ('#navigator-form');
	var addElement = function(form, elementID, newValue)
	{
		var hiddenInput = jQ('<input/>',{type:'hidden',id:elementID,value:newValue,name: elementID});
		hiddenInput.appendTo(form);
	};
	
	var location = odl.info.location;
	addElement(form, 'country', location.country);
	addElement(form, 'location', location.loc);
	addElement(form, 'radius', location.radius);
};

jQ(document).ready
(
	function()
	{
		jQ('#univ-change-loc .location-prompt').click (function(e) { e.stopPropagation(); });
		
		jQ('#univ-change-loc .location-prompt .close').click (function(e) {
			e.stopPropagation();
			jQ('.location-prompt').remove();
		});
	}
);




Oodle.Search = {}

Oodle.Search.getModel = function(makeEle, modelId)
{
	var modelId = '#tuples-model--ul';
	var make = jQ('#' + makeEle.id).val();

	jQ('#tuples-model--selected').text('All');
	jQ('#tuples-model--hidden').val('all');
	if (make == 'all')
	{
		// Clear Model
		jQ(modelId).html('');
	}
	else
	{
		var url = '/tuple/find_models/' + make;
		var callback = function (data)
		{
			var html = '';
			for (make in data.models)
			{
				html += '<option value="' + make + '">' + data.models[make] + '</option>';
			}

			jQ(modelId).html(html).val('all');
		};

		// Load models via ajax
		jQ.ajax({type: 'POST', url: url, success: callback, dataType: 'json'});
	}
}

Oodle.Search.init = function()
{
	// Bind location auto complete
	autocomplete('vertical_search-location-element', 'vertical_search-country-element');
}

Oodle.Search.HideSEOModule = function()
{
	jQ('#seo-content-serp').slideUp('slow');
};

fire(Oodle.Search.init);

odl.namespace('circle');

odl.circle.postMap = {
	'sale' : {'type' : 'none', 'category' : 'sale'},
	'wanted' : {'type' : 'wanted', 'category' : 'sale'},
	'free' : {'type' : 'free', 'category' : 'sale'},
	'message' : {'type' : 'none', 'category' : 'community'}
};

odl.circle.permRequestSentence = 'In order to join Marketplace or a circle you must connect with Facebook and permit the Marketplace application to "Send me email" and "Post to my Wall"';

odl.circle.init = function()
{
	jQ('#circle-circle_id-element').val(odl.circle.circleID);
	odl.hint.setup('circle');
};

odl.circle.handlePost = function()
{
	if (odl.info.fb_logged_in && odl.info.logged_in)
	{
		odl.circle.handleAuthedPost();
	}
	else
	{
		odl.auth2.login({
			login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
			start_viral_loop : false,
			event_params : {
				event_name : 'PostLogin',
				event_page : 'post'
			},
			success: function()
			{
				odl.circle.handleAuthedPost();
			},
			failure: function(o) {
				odl.circle.displayError('Warning', odl.circle.permRequestSentence);
			}
		});
	}
};

odl.circle.authedPage = function(page)
{
	odl.auth2.login({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'CircleLogin',
			event_page : 'circle'
		},
		success: function()
		{
			window.location.href=page;
		},
		failure: function(o) {
			odl.circle.displayError('Warning', odl.circle.permRequestSentence);
		}
	});
};

odl.circle.handleAuthedPost = function()
{
	jQ.ajax({
		url: '/circle-action/joinable/',
		dataType: 'json',
		data: {circle_id: odl.circle.circleID},
		success: function(o)
		{
			if (o.status == 'is_member')
			{
				odl.post2.showPostLightbox();
			}
			else if (o.status == 'membership_pending' || o.status == 'login_required')
			{
				new odl.msgbox({
					header: o.header,
					content: o.content,
					cancel: false
				});
			}
			else
			{
				var msgboxParams = {
					header: o.header,
					content: o.content,
					close_x: true,
					buttons: [{
						text: 'Join',
						skin: 'light',
						click: function() {
							joinToPostMsgBox.close();
							odl.circle.join(odl.circle.circleID);
						}
					}]
				};

				if (o.status == 'join-and-post')
				{
					msgboxParams.buttons = [{
						text: 'Continue',
						skin: 'light',
						click: function() {
							joinToPostMsgBox.close();
							odl.circle.join(odl.circle.circleID, {
									callback: odl.post2.showPostLightbox
							});
						}
					}];
				}

				var joinToPostMsgBox = new odl.msgbox(msgboxParams);
			}

		},
		failure: function(o)
		{
			new odl.msgbox({
				header: 'Unexpected Error',
				content: 'Unable to post listing due to unexpected error. Please try again later',
				error_code: 5998,
				cancel: false
			});
		}
	});
};

/*
 * create a pup window that contains the create new circle (or invite) form, or other popups
 */
odl.circle.popup = function(options, fromExternal)
{
	var header = '';
	var url = '';
	var skin = '';
	var target = '';

	if (typeof(options) == 'string')
	{
		var o = [];
		o['popup'] = options;
		options = o;
	}

	if (options.popup == 'create')
	{
		odl.circle.trackNamed(odl.circle.getReportingParams( {
			'event_type' : 'create',
			'status' : 'start'
		}));
		header = 'Create a Circle';
		url = odl.info.base_path + 'circle-action/show_form?form=create';
		skin = 'circle-create';
	}
	else
	{
		if (options.target)
		{
			if (options.target != 'mp' && options.target != 'fc' && isNaN(options.target))
			{
				return;	//invalid data. do nothing
			}
		}
		else if (options.popup == 'join' || options.popup == 'invite' || options.popup == 'greeting')
		{
			options.target = odl.circle.circleID ? odl.circle.circleID : 'mp';
		}
		else if (!odl.circle.circleID)
		{
			alert('Unknown circle!');
			return;
		}

		odl.circle.trackNamed(odl.circle.getReportingParams( {
			'event_type' : options.popup,
			'circle_id' : odl.circle.circleID,
			'target' : options.target,
			'from_external' : fromExternal,
			'status' : 'start'
		}));

		options['circle_id'] = odl.circle.circleID;
		if (options.popup == 'join')
		{
			if (!fromExternal || odl.info.logged_in && odl.info.fb_logged_in && odl.info.fb_full_permission)
			{
				odl.circle.join(options.target);
			}
			else
			{
				odl.circle.safeFbConnect({
					popup: 'join',
					target: options.target,
					inviter_id: odl.circle.inviterID
				});
			}

			return;
		}
		else if (options.popup == 'firsttimejoin')
		{
			new odl.msgbox({
				header: 'Join this circle',
				close_x: true,
				content: 'You are not a member of this circle, continue to join this circle.',
				buttons: [{
					text: 'Join',
					skin: 'dark',
					click: function() {
						odl.circle.join(odl.circle.circleID);
					}
				}]
			});
		}
		else if (options.popup == 'invite')
		{
			odl.invite.inviteTo(options.target);
		}
		else if (options.popup == 'post')
		{
			odl.circle.handlePost();
		}
		else if (options.popup == 'wannajoin')
		{
			new odl.msgbox({
				header: 'Join this circle',
				close_x: true,
				content: 'You have a few friends in the circle, continue to invite more friends.',
				buttons: [{
					text: 'Join',
					skin: 'light',
					click: function() {
						odl.circle.join(odl.circle.circleID);
					}
				}]
			});
		}
		else if (options.popup == 'leave' || options.popup == 'unsub')
		{
			odl.circle.leave(odl.circle.circleID, odl.circle.circleName, options);
		}
		else if (options.popup == 'apply4admin')
		{
			odl.circle.showAdminRecruit(odl.circle.circleID);
		}
		else if (options.popup == 'switch2digest')
		{
			odl.circle.switchToDigest(odl.circle.circleID, odl.circle.circleName, options);
		}
		else if (options.popup == 'greeting')
		{
			var params = {
				circle_id: odl.circle.circleID,
				target: options.target
			};

			odl.circle.fb_connect_popup = new odl.msgbox(
				{
					url: odl.info.base_path + 'invite_connect/greeting',
					data: params,
					id: "invite-connections-panel",
					singleton: true,
					ok: function ()
						{
							odl.circle.fb_connect_popup.close();
							odl.circle.popup({popup: 'invite', target: options.target});
						},
					ok_text: 'Select Friends',
					cancel: false,
					close_x: true
				}
			);
		}
		else
		{
			//alert('Action is not supported!');
		}
	}

	if (url)
	{
		odl.circle.openPopup({
			header: header,
			close_x: true,
			hide_footer: true,
			url: url,
			callback: odl.circle.init,
			skin: 'circle-msgbox ' + skin
		});

	}
};

odl.circle.create = function()
{
	odl.auth2.login({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'CircleLogin',
			event_page : 'circle_create'
		},
		success: function()
		{
			odl.circle.submit('create');
		},
		failure: function(o) {
			odl.circle.displayError('Warning', odl.circle.permRequestSentence);
		}
	});
};

odl.circle.invite = function()
{
	odl.auth2.login({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'CircleLogin',
			event_page : 'circle_invite'
		},
		success: function()
		{
			odl.circle.submit('invite', true);
		},
		failure: function(o) {
			odl.circle.trackNamed(odl.circle.getReportingParams( {
				'event_type' : 'facebook',
				'status' : 'no_auth'
			}));
			odl.circle.displayError('Warning', odl.circle.permRequestSentence);
		}
	});
};

odl.circle.post = function(type)
{
	if (!odl.circle.circleID)
	{
		alert('Invalid Circle!');
		return;
	}
	
	odl.post2.showPostLightbox();
};

odl.circle.shareInvite = function(result)
{
	if (!result.invited)
		return;

	var refresh = function()
	{
		odl.circle.trackNamed(odl.circle.getReportingParams( {
			'event_type' : 'shareInvite',
			'status' : 'success'
		}));
		location.reload();
	}

	var settings = {
			type: 'POST',
			url : odl.info.base_path + 'circle-action/share_invite',
			dataType: 'json',
			data: {circle_id: result.id, circle_name: result.name, invited: result.invited},
			success: refresh
	};

	jQ.ajax(settings);
};

odl.circle.inviteFbFriends = function(result)
{
	var circle_id = result.id;
	if (!circle_id)
	{
		alert('Invalid Circle ID');
		return;
	}

	odl.circle.trackNamed(odl.circle.getReportingParams( {
		'event_type' : 'inviteFB',
		'status' : 'start'
	}));

	var circle_name = result.name;
	var circle_title = result.title;
	var circle_home = odl.info.base_path + 'circle/' + circle_name;

	if (result['non-circle-friends'].length < 1)
	{
		if (result.newCircle)
		{
			window.location = circle_home;
		}
		else
		{
			odl.circle.shareInvite(result);
		}
		return;
	}

	FB.ui (
		{
			method: 'apprequests',
			display: 'iframe',
			filters : [{name:'Friends not in the circle', user_ids:result['non-circle-friends']}],
			message: 'Come join the "' + circle_title + '" Circle. A Circle is a place where neighbors, friends, co-workers, or hobbyists can give away or sell stuff to each other, share job postings, or trade gear.',
			data: {req_type: 'invite', req_context: 'circle', href: circle_home},
			title: 'Invite friends to your circle'
		},
		function (response)
		{
			if (response && response.request_ids)
			{
				var settings = {
						type: 'POST',
						url : odl.info.base_path + 'circle-action/process_fb_request',
						dataType: 'json',
						data: {circle_id: circle_id, circle_title: circle_title, request_ids: response.request_ids},
						success: function(o)
						{
							odl.circle.trackNamed(odl.circle.getReportingParams( {
								'event_type' : 'inviteFB',
								'status' : 'success'
							}));
							if (result.newCircle)
							{
								window.location = circle_home;
							}
							else
							{
								result.invited += o.invited;
								odl.circle.shareInvite(result);
							}
						}
				};

				jQ.ajax(settings);
			}
			else
			{
				odl.circle.trackNamed(odl.circle.getReportingParams( {
					'event_type' : 'inviteFB',
					'status' : 'skip'
				}));
				if (result.newCircle)
				{
					window.location = circle_home;
				}
				else
				{
					odl.circle.shareInvite(result);
				}
			}
		}
	);
};

//keep track of created circles so that the same circle is not submitted multiple times
odl.circle.createdCircles = {};

odl.circle.submit = function(action, unlimited)
{
	var btnEle = 'circle-' + action + '-element';
	var circleTitle = jQ('#circle-title-element').val();
	action += (jQ('#circle-direct-add-element').attr('checked')) ? '-directadd' : '';
	var callback = function (o)
	{
		if (o.status == 'ok')
		{
			var status = (jQ('#circle-skip_step-element').val() == 'one') ? 'skip' : 'success';
			odl.circle.trackNamed(odl.circle.getReportingParams( {
				'event_type' : action,
				'status' : status
			}));
			odl.circle.createdCircles[circleTitle] = 1;
			odl.circle.popupWin.close();
			odl.circle.popupWin = null;
			odl.circle.inviteFbFriends(o.result);
		}
		else
		{
			odl.circle.trackNamed(odl.circle.getReportingParams( {
				'event_type' : action,
				'status' : 'failed'
			}));
			alert('There is error in performing the action. Please try again.');
		}
	};

	var failureCallback = function (o)
	{
		odl.circle.trackNamed(odl.circle.getReportingParams( {
			'event_type' : action,
			'status' : 'failed'
		}));
		alert('Failed to perform the action. Please try again.');
	};

	if(unlimited || !odl.circle.createdCircles[circleTitle])
	{
		odl.form.startRequest({	form_id: 'circle',
			url: jQ('#circle').attr('action'),
			success: callback,
			error: callback,
			failure: failureCallback,
			button_ele: $(btnEle)
		});
	}
};

odl.circle.defaultReportingParams =
{
	event_name: 'circle'
};

/**
 * Combines params passed in with the default params
 */
odl.circle.getReportingParams = function(params)
{
	odl.circle.defaultReportingParams.partner = odl.info.partner_tag;
	odl.circle.defaultReportingParams.masquerade = odl.info.partner_masquerade;

	var ret = {};
	for (var i in odl.circle.defaultReportingParams)
	{
		ret[i] = odl.circle.defaultReportingParams[i];
	}

	if (params && typeof(params) === 'object')
	{
		for(var i in params)
		{
			ret[i] = params[i];
		}
	}
	return(ret);
};

odl.circle.join = function(target, options, data)
{
	if (!target)
	{
		target = odl.circle.circleID ? odl.circle.circleID : 'mp';	//join current circle or Marketplace
	}

	if (!data)
	{
		data = {};
	}

	var evt_n = 'circle_join';
	if (options && options.event_name)
		evt_n = options.event_name;

	data['target'] = target;
	if (odl.circle.viralCode)
	{
		data['viralCode'] = odl.circle.viralCode;
	}
	if (odl.circle.inviterID)
	{
		data['inviter_id'] = odl.circle.inviterID;
	}

	var cb = function()
	{
		odl.circle.openPopup({
			type: 'POST',
			url : odl.info.base_path + 'circle-action/show-join-loading',
			dataType: 'json',
			data: data,
			ok: false,
			cancel: false,
			hide_footer: true
		});

		jQ.ajax({
			type: 'POST',
			url : odl.info.base_path + 'circle-action/join',
			dataType: 'json',
			data: data,
			success: function(r) { odl.circle.joinCallback(r, target, options); }
		});
	};

	var fail_cb = function(o) { odl.circle.displayError('Warning', odl.circle.permRequestSentence); };
	if (options && options.fail_cb)
		fail_cb = options.fail_cb;

	odl.auth2.login({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'CircleLogin',
			event_page : evt_n
		},
		success: cb,
		failure: fail_cb
	});
};

odl.circle.joinCallback = function(result, target, options)
{
	if (result.status == 'approved' || result.status == 'is_member')
	{
		if (options && options.callback)
		{
			options.callback(result);
			odl.circle.popupWin.close();
		}
		else
		{
			odl.auth2.refresh
			({
				callback: function() {
					var reload_href = result.redir ? result.redir : window.location.href.split('?', 1)[0];
					if (odl.info.is_facebook)
					{
						top.location.href = reload_href;
					}
					else
					{
						window.location.href = reload_href;
					}
				}
			});
		}
	}
	else if (result.status == 'qa')
	{
		odl.circle.openPopup({
			header: result.title,
			content: result.content,
			ok_text: 'Submit',
			ok: function() { odl.circle.joinQASubmit(options); },
			cancel: true
		});
	}
	else if (result.status == 'pending')
	{
		var popupParams = {
			header: result.title,
			content: result.content
		};

		if (options && (typeof options.callback == 'function'))
		{
			var fn = function () { odl.circle.popupWin.close(); options.callback(result); };
			popupParams.close_x = fn;
			popupParams.ok = fn;
		}

		odl.circle.openPopup(popupParams);
	}
	else
	{
		odl.circle.displayError(result.errorTitle, result.errorMsg);
	}
};

odl.circle.joinQASubmit = function(options)
{
	var params = {};
	jQ.map(jQ('form#join-qa').serializeArray(), function(n, i){
		params[n['name']] = n['value'];
	});

	odl.circle.join(params['circleID'], options, params);
};

odl.circle.openPopup = function(customParams)
{
	var params = {
		modal: true,
		overlay: true,
		close_x: true,
		ok: true,
		cancel: false
	};

	if (customParams)
	{
		for (var i in customParams)
			params[i] = customParams[i];
	}

	if (odl.circle.popupWin)
	{
		odl.circle.popupWin.close();
		odl.circle.popupWin = null;
	}

	odl.circle.popupWin = new odl.msgbox(params);
};

odl.circle.displayError = function(title, errorMsg)
{
	odl.circle.openPopup();

	if (errorMsg)
	{
		if (!title)
			title = 'Oops!';

		odl.circle.popupWin.setHeader(title);
		odl.circle.popupWin.setContent(errorMsg);
	}
	else
	{
		odl.circle.popupWin.showErrorMsg();
	}

};

odl.circle.trackNamed = function(obj) {
	jQ.ajax( {
		'url' : odl.info.base_path + 'event/track-named/?'
				+ jQ.param(obj)
	});
};

/* update circle email subscription  for a user */
odl.circle.updateSubscription = function(circleID, userID, selectInput)
{
	var selectInput = jQ(selectInput);
	var form = selectInput.parents('form').first();
	var statusMessageBox = form.find('.status-message-box');
	var loadingImageUrl = odl.assets.img['spinner-small'];
	selectInput.after('<img src="' + loadingImageUrl + '"/>');
	var subscriptions = {};
	subscriptions['user_id'] = userID;

	//get the value of each check box
	var val = jQ(selectInput).val();
	subscriptions[circleID] = {};
	subscriptions[circleID]['individual_emails'] = (val == 'alert' || val == 'digest_alert') ? 'Y' : 'N';		
	subscriptions[circleID]['digest_flg'] = (val == 'digest' || val == 'digest_alert') ? 'Y' : 'N';
	//update subscription

	var responseHandler = function(success)
	{
		var statusText = success ? 'Your circle email subscriptions have been saved' : 'Error: fail to save your your circle email subscriptions';
		selectInput.siblings('img').remove();
		statusMessageBox.text(statusText);
		statusMessageBox.css({display: 'block'});		
	};
	
	var settings = {
			type: 'POST',
			url : odl.info.base_path + 'circle-action/update-email-subscription',
			dataType: 'json',
			async: false,
			data: subscriptions,
			success : function(result)
			{
				responseHandler(result['status'] == 'ok');
			},
			error: function()
			{
				responseHandler(false);
			}
	};

	jQ.ajax(settings);
};

/* show more circles on homepage when user click 'more' */
odl.circle.homeShowMore = function()
{
	jQ('#home-circle .less').css('display', 'block');
	jQ('#home-circle .more').css('display', 'none');
};

/* show only top 3 circles on homepage when user click 'less' */
odl.circle.homeShowLess = function()
{
	jQ('#home-circle .less').css('display', 'none');
	jQ('#home-circle .more').css('display', 'block');
};

/* show more circles on homepage when user click 'more' */
odl.circle.sellerShowMore = function(section)
{
	sectionLabel = section ? '-' + section : '';
	jQ('#seller-circle .less' + sectionLabel).css('display', 'block');
	jQ('#seller-circle .more' + sectionLabel).css('display', 'none');
};

/* show only top 3 circles on homepage when user click 'less' */
odl.circle.sellerShowLess = function(section)
{
	sectionLabel = section ? '-' + section : '';
	jQ('#seller-circle .less' + sectionLabel).css('display', 'none');
	jQ('#seller-circle .more' + sectionLabel).css('display', 'block');
};

/**
 * @param listing_id The listingID
 * @param type Either 'comment' or 'lead'
 * @param msgboxAnchor Should be an element where the msgbox should show up around (approx. location for it to show up).
 * @param successCbk  function accepting a "data" object, called when "success"
 *                    (i.e. listing is in no circles, user is already a member of circle, user joins circle)
 * @param failureCbk  function accepting a "data" object, called when "failure"
 *                    (i.e. current user cannot join any circle that the listing is posted in
 *                       or user can join at least one circle, but chooses not to by X'ing the lightbox
 *                       or user not logged in / not fb connected)
 */
odl.circle.verifyMembership = function(listingID, type, msgboxAnchor, successCbk, failureCbk)
{
	// Check for FB.Login, perhaps auth here... (so cookies are set)...
	var msgboxCallback = function (data)
	{
		if (data.result == 'not-signed-in' || data.result == 'not-fb-connected')
		{
			if (failureCbk)
				failureCbk(data);
		}
		else if (data.result == 'no-circles'         //listing is not associated with any circles OR
		      || data.result == 'circle-membership') //user is a member of at least one circle associated with listing
		{
			msgbox.close();

			if (successCbk)
				successCbk(data);
		}
		else if (data.result == 'un-joinable')
		{
			msgbox.setCallbacks({close: function()
				{
					if (failureCbk)
					{
						failureCbk(data);
					}
				}
			}, true);

			var closeHandler = function() { msgbox.close(); };

			msgbox.adjustButtons({buttons: [{text: 'Close', skin: 'dark', click: closeHandler}]});
		}
		else if (data.result == 'joinable')
		{
			msgbox.setCallbacks({close: function()
				{
					if (failureCbk)
						failureCbk(data);
				}
			}, true);

			var joinHandler = function()
			{
				odl.circle.joinCircleForm(function() {
					//clear the close callback set above before closing lightbox
					msgbox.setCallbacks({close: function() {}}, true);
					msgbox.close();
					if (successCbk)
						successCbk(data);
				});
			};

			msgbox.adjustButtons({buttons: [{text: 'Join', skin: 'dark left', click: joinHandler}]});
		}
	};

	var params = {
		listing_id: listingID,
		type: type,
		bounce_url: window.location.href
	};

	var url = odl.info.base_path + 'circle-action/verify-circle-membership/';
	var msgbox = new odl.msgbox({
		anchor_y: msgboxAnchor,
		url: url,
		data: params,
		width: 400,
		close_x: true,
		modal: true,
		callbacks: { load_onsuccess: msgboxCallback }
	});
};

odl.circle.joinCircleForm = function(successCbk) {
	odl.form.startRequest({
		form_id: 'join-circle-lb-form',
		url: odl.info.base_path + 'circle-action/join-multi/',
		success: function(response) {
			if (response.status == 'success') //at least one circle successfully joined
			{
				if (successCbk)
					successCbk();
				else
					window.location.reload(); //refresh page
			}
			else if (response.status == 'none-joined') //no circle successfully joined
				alert('No circles joined successfully');
			else //assume response.status == 'none-selected'
				alert('No circles selected');
		}
	});
	return false;
};
/*
odl.circle.loginToDoAction = function(successCbk, type, listingID, anchorEle) {
	var queryCallback = function(data) {
		if (data.result)
		{
			if (data.result == 'no-circles' || data.result == 'circle-membership' || data.result == 'joinable')
				successCbk();
			else //un-joinable
				odl.circle.verifyMembership (listingID, type, anchorEle, function() { }, function() { });
		}
	};

	var queryMembership = function() {
		jQ.post(odl.info.base_path + 'circle-action/verify-circle-membership/',
				{listing_id: listingID, type: type, bounce_url: window.location.href },
				queryCallback, 'json');
	};

	odl.auth2.login({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'CircleLogin',
			event_page : 'circle'
		},
		success: queryMembership,
		failure: function(o) { } //do nothing
	});
};

odl.circle.loginToRespond = function(anchorEle, listingID, ajaxUrl) {
	var successCbk = function() {
		odl.leadgen.popup(ajaxUrl, anchorEle);
	};

	odl.circle.loginToDoAction(successCbk, 'lead', listingID, anchorEle);
};

*/

odl.circle.switchToDigest = function(circleID, circleName, options)
{
	var ok_text;
	var cancel_text;
	var header;

	if (!options)
	{
		options = {'circle_id': circleID};
	}

	var	contents = '<div id="switch-digest">';
	ok_text = 'Yes';
	cancel_text = 'No';
	header = 'Switch to Smart Digest for ' + circleName + ' circle';
	contents += '<p id="switch-digest-content">Are you sure you want to switch to Smart Digest for <strong>' + circleName + '</strong>?</p>';
	contents += '</div>';

	var okCallback = function()
	{
		odl.auth2.login({
			login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
			start_viral_loop : false,
			event_params : {
				event_name : 'CircleLogin',
				event_page : 'circle'
			},
			success: function()
			{
				var settings = {
					type : 'POST',
					url : odl.info.base_path + 'circle-action/switch-to-digest',
					dataType : 'json',
					success: function(result)
					{
						if (result['status'] != 'ok')
						{
							odl.circle.switchDigestPopupWin.setContent('An error occured while switching to Smart Digest for this circle');
						}
						else
						{
							odl.circle.switchDigestPopupWin.close();
						}
					},
					data: options
				};

				jQ.ajax(settings);
			},
			failure: function(o) {
				odl.circle.displayError('Warning', odl.circle.permRequestSentence);
			}
		});

	};

	odl.circle.switchDigestPopupWin = new odl.msgbox({
		header: header,
		content: contents,
		close_x: true,
		cancel: true,
		ok: okCallback,
		ok_text: ok_text,
		cancel_text: cancel_text,
		hide_footer: false
	});
};

odl.circle.leave = function(circleID, circleName, options)
{
	var ok_text;
	var cancel_text;
	var header;

	if (!options)
	{
		options = {'circle_id': circleID};
	}

	var	contents = '<div id="leaving-circle">';
	if (options.popup == 'unsub')
	{
		ok_text = 'Yes';
		cancel_text = 'No';
		header = 'Stop receiving email from ' + circleName + ' circle';
		contents += '<p id="leaving-content">Are you sure you no longer want to receive email from <strong>'+ circleName + '</strong> circle </p>';
	}
	else
	{
		ok_text = 'Leave';
		options.popup = 'leave';
		cancel_text = 'Cancel';
		header = 'Leave ' + circleName + ' circle';
		contents += '<p id="leaving-content">Are you sure you want to leave the <strong>'+ circleName + '</strong> circle? </p>';
	}
	contents += '</div>';

	var okCallback = function () {
		FB.login
		(
			function(response)
			{
				odl.fb.cookie(response);
				if (response.authResponse)
				{
					options.fb_user_id = response.authResponse.userID;
					odl.circle.leaveCircle(options);
				}
			}
		);
	};

	var cancelCallback = function () {
		odl.circle.leave.popupWin.close();
		if ((options.popup == 'leave' || options.popup == 'unsub') && options.token && options.from_email)
		{
			delete options.popup;
			odl.circle.initFromExternal(options);
		}
	};

	if (odl.welcome.popupWin)
		odl.welcome.popupWin.close();
	odl.circle.leave.popupWin = new odl.msgbox({
		header: header,
		content: contents,
		close_x: cancelCallback,
		cancel: cancelCallback,
		ok: okCallback,
		ok_text: ok_text,
		cancel_text: cancel_text,
		hide_footer: false
	});
};

odl.circle.leaveCircleAction = function(o) {

	jQ('#circle-leave').css('display', 'none');
	jQ('#leave-circle-message').css('display', 'none');
	window.location.href = window.location.href.split('?', 1)[0];
	odl.circle.leave.popupWin.close();

};

odl.circle.leaveCircle = function(options) {
	var settings = {
		type : 'POST',
		url : odl.info.base_path + 'circle-action/leave',
		dataType : 'json',
		success: function(result)
		{

			if (result['status'] == 'ok')
			{
				odl.circle.leaveCircleAction();
			}
			else
			{
				odl.circle.leave.popupWin.setContent('There is an error occurred when you try to leave the circle');
			}
		},
		data: options
	};

	jQ.ajax(settings);
};

/* load logo image when user create a circle*/
odl.circle.loadLogo = function(ele, userID)
{
	var form = jQ(ele).parents('form')[0];
	//set name of file input, since it is used as the key to store the image file in imgstore
	jQ('#circle-networks-element').attr('name', jQ('#circle-temp-image-element').val());
	//display loading image
	jQ('#circle-logo-row').addClass('busy');
	var options =
	{
		type :'POST',
		url : odl.info.base_path + 'post2/uploadPhoto/',
		key: "logo",
		timeout: 30000,
		data :jQ(form).serialize(),
		success : function(o)
		{
			log(o);
			var returnVal = jQ.parseJSON(o);
			var background = 'url("' + returnVal["image_url"] + '&uid=' + returnVal["uid"] + '") no-repeat';
			jQ('#circle-image-key-element').val(returnVal.key);
			jQ('#circle-circle-networks-element-row').css({'background': background});
		}
	};

	jQ(form).ajaxSubmit(options);
};

odl.circle.initFromExternal = function(options)
{
	// if user not coming from email, just do popup
	if (options.popup == 'leave' || !options.from_email)
	{
        if (options.popup)
        {
        	if (options.inviter_id)
        		odl.circle.inviterID = options.inviter_id;
        	odl.circle.popup(options, true);
        	return;
        }
    }

	// otherwise, we want to show the popup window to request that user fb connect
	odl.circle.safeFbConnect(options);
};

odl.circle.safeFbConnect = function(options)
{
	var params = {
		target: options.target,
		inviter_id: odl.circle.inviterID
	};
	if (options.from_email)
		params['from_email'] = options.from_email;
	if (options.token)
		params['token'] = options.token;

	odl.circle.fb_connect_popup = new odl.msgbox(
		{
			url: odl.info.base_path + 'invite_connect/show',
			data: params,
			id: "invite-connections-panel",
			width: "auto",
			singleton: true,
			ok: false,
			cancel: false,
			close_x: true,
			hide_footer: true
		}
	);
};

odl.circle.closeFbConnectPopup = function(popup)
{
	odl.circle.fb_connect_popup.close();
	if (popup)
	{
		odl.circle.popup(popup);
	}
};

odl.circle.initFromExternalConnect = function(target, from_email, token, popup)
{
	// do fb connect flow
	var doFbConnect = function() {
		odl.auth2.login({
			login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
			start_viral_loop : false,
			event_params : {
				event_name : 'CircleLogin',
				event_page : 'circle'
			},
			success: function()
			{
				// if fb connected and coming from email, do 'email connect' flow to see if the email address user is coming from matches the fb one
				if (from_email)
				{
					var params = {
						type: 'POST',
						url : odl.info.base_path + 'circle-action/check_email',
						dataType: 'json',
						data: {from_email: from_email},
						success: function(o)
						{
							odl.circle.fb_connect_popup.close();

							if (o.connect)
							{
								odl.circle.fb_connect_popup = new odl.msgbox({
									header: 'Confirm Email',
									content: 'Is "' + from_email + '" your email address?',
									ok_text: 'Yes',
									cancel_text: 'No',
									cancel: true,
									ok: function() {
										odl.circle.fb_connect_popup.showProgress();
										jQ.ajax({
											type: 'POST',
											url: odl.info.base_path + 'circle-action/email_connect',
											dataType: 'json',
											data: {from_email: from_email, target: target, token: token, viralCode: odl.circle.viralCode},
											success: function(r) {

												if (r && r.status != 'error')
												{
													var redir = window.location.href.split('?', 1)[0];
													if (popup)
													{
														redir += '?a=' + encodeURIComponent(popup);
													}

													window.location.href = redir;
												}
												else
												{
													odl.circle.fb_connect_popup.showErrorMsg();
													if (popup)
													{
														odl.circle.fb_connect_popup.adjustButtons({ok: function()
																	{ odl.circle.fb_connect_popup.close(); odl.circle.popup(popup); }
														});
													}
												}
											}
										});

									}
								});
							}
							else // logged in / connected, now reload page so it gets out of 'coming from email' context
							{
								var redir = window.location.href.split('?', 1)[0];
								if (popup)
								{
									redir += '?a=' + encodeURIComponent(popup);
								}

								window.location.href = redir;
							}
						}
					};

					jQ.ajax(params);
				}
				else
				{
					odl.circle.closeFbConnectPopup(popup);
				}


			},
			failure: function(o) {
				// do nothing
			}
		});
	};

	// coming from email and email is different than the current logged in user's
	if (from_email)
	{
		FB.getLoginStatus(function(response) {
			if (response.authResponse)
			{
				FB.logout(
					function(response)
					{
						doFbConnect();
					}
				);
			}
			else
			{
				doFbConnect();
			}
		});
	}
	else
	{
		doFbConnect();
	}
};

/* when privacy type privacy_cd is changed */
odl.circle.changeType = function(element)
{
	var hints =
	{
		'O' : 'Anyone can see postings and join.',
		'S' : 'Anyone can see postings, friends of members can join, and others must be approved',
		'V' : 'Only members can see postings, and membership requests must be approved'
	};
	jQ('#circle-type-hint-label').html(hints[jQ(element).val()]);
};

//show admin recruit popup
odl.circle.showAdminRecruit = function(circleID)
{
	var msgbox;
	var adminRecruitForm;

	/* after form is loaded from ajax, it is initialized to be an ezform */
	var setForm = function()
	{
		adminRecruitForm = new odl.ezform('#circle-admin-recruit-form');
		adminRecruitForm.callback = function(response)
		{
			if (response.errorMsg)
			{
				jQ('#circle-admin-recruit-form .error-field').first().text(response.errorMsg);
			}
			else
			{
				msgbox.close();
			}
		};
	};

	/* submit form */
	var submitFeedback = function()
	{
		adminRecruitForm.ajaxSubmit();
		jQ('#admin-recruit-box').hide();
	};
	
	msgboxParams = {
		width: 540,
		close_x: true,
		overlay: true,
		buttons: [{text: 'Submit', click:submitFeedback}],
		callbacks: { load_onsuccess:setForm }
	};
	
	jQ.ajax({
		url: '/circle-action/show-admin-recruit-form',
		dataType: 'json',
		data: {circleID: circleID},
		success: function(o)
		{
			if (o.error == 'not_member')
			{
				msgbox = new odl.msgbox({
					header: o.header,
					content: o.content,
					cancel: false,
					close_x: true,
					ok_text: 'Join',
					ok: function() {
						odl.circle.join(
								odl.circle.circleID, 
								{ 
									fail_cb: function() { msgbox.close(); odl.circle.displayError('Membership required', 'You need to join the circle before requesting to be an administrator.'); },
									callback: function() { 
										msgbox.close(); 
										msgbox = new odl.msgbox(jQ.extend(msgboxParams, {url: '/circle-action/show-admin-recruit-form?circleID=' + circleID}));
									} 
								}
						);
					}
				});
			}
			else
			{
				msgbox = new odl.msgbox(jQ.extend(msgboxParams, o));
				setForm();
			}

		}
	});
};

odl.circle.pageframe =
{
	sessID : null,
	join : function()
	{
		odl.circle.join(null, { callback: function() {
			window.location.href = window.location.href.split('?', 1)[0] + '?osid=' + encodeURIComponent(odl.circle.pageframe.sessID);
		} });
	}

};

odl.circle.showDisconnectSyndicatedGroups = function (circleID)
{
	odl.circle.showSyndicatedPopup = new odl.msgbox(
		{
			url: odl.info.base_path + 'circle-action/show-syndicated-popup/',
			data: {circle_id: circleID},
			ok: false,
			cancel: true,
			cancel_text: 'Close',
			close_x: true
		}
	);
};

odl.circle.disconnectSyndicatedGroup = function (circleID, circleName, integratedGroupName)
{
	var okCallback = function()
	{
		var ajaxParams = {
			type : 'POST',
			url : odl.info.base_path + 'circle-action/disconnect-syndicated-group',
			dataType : 'json',
			success: function(result)
			{
				odl.circle.disconnectSyndicatedPopup.close();
				if (result['status'] == 'ok')
				{
					odl.circle.disconnectSyndicatedPopup.close();
					odl.circle.showSyndicatedPopup.close();
					var integrationEl = jQ('#circle-'+circleID+'-row .circle-integrations');
					if (integrationEl)
					{
						if (result['integrationsLeft'])
						{
							integrationEl.find('a').html(result['integrationsLeft']);
						}
						else
						{
							integrationEl.html('None');
						}
					}
				}
				else
				{
					new odl.msgbox({
						header: 'Unable to disconnect syndicated group',
						content: 'An error occ trying to disconnect the syndicated group',
						cancel: false
					});
				}
			},
			data: {circle_id: circleID, integrated_group_name: integratedGroupName}
		};

		jQ.ajax(ajaxParams);
	};


	odl.circle.disconnectSyndicatedPopup = new odl.msgbox({
		header: 'Disconnect ' + jQ('<div/>').text(integratedGroupName).html(),
		content: 'Are you sure you want to block new listings from <strong>' + jQ('<div/>').text(integratedGroupName).html() + '</strong> from appearing in <strong>' + jQ('<div/>').text(circleName).html() + '</strong>?',
		close_x: true,
		cancel: true,
		ok: okCallback,
		ok_text: 'Disconnect',
		cancel_text: 'Cancel',
		hide_footer: false
	});
};

odl.circle.sortUpdate = function(obj)
{
	odl.circle.showUpdateListings();
	url = jQ(obj).val();
	var urlparts = {};
	var parts = url.split("?");
	if (parts[1])
	{
		var vars = parts[1].split("&");
		for (var i=0;i<vars.length;i++)
		{
			var pair = vars[i].split("=");
			urlparts[pair[0]] = pair[1];
		}
		var radius = jQ('#radius').val();
		var country = jQ('#country').val();
		var location = jQ('#location').val();
		if (radius)
			urlparts['radius'] = radius;
		if (location)
			urlparts['location'] = location;
		if (country)
			urlparts['country'] = country;
		urlparts['sortupd'] = 1;
		var variables = Array();
		for(var value in urlparts)
		{
		    variables.push(value + "=" + urlparts[value]);
		}
		url = '?' + variables.join('&');
	}
	window.location = url;
};

odl.circle.showUpdateListings = function () {
	jQ("#listings").addClass('loading');
};

odl.circle.refreshCircles = function () {
	var params = {
			type: 'POST',
			url : odl.info.base_path + 'circle-action/refresh-circles',
			dataType: 'json',
			data: {},
			success: function(r) {
				var redir = window.location.href.split('?', 1)[0];
				window.location.href = redir;
			}
	};

	var refreshEl = jQ("#refresh-circles");
	if (refreshEl)
	{
		refreshEl.addClass('refreshing');
		refreshEl.html('Refreshing ...');
	}

	jQ.ajax({
		type: 'GET',
		url: odl.info.base_path + 'circle-action/syncing_connections_msgbox',
		dataType: 'json',
		success: function(r) {
			if (r.title && r.content)
			{
				odl.circle.syncingConnectionsMsgBox = new odl.msgbox({
					header: r.title,
					content: r.content,
					ok: false,
					cancel: false
				});
			}
		}
	});

	jQ.ajax(params);
};

odl.circle.joinInfoPopup = function(options)
{
	var defaultOptions = {
		'header' : "Please update your Facebook profile",
		'content' : "Please update your Facebook profile then go to http://facebook.oodle.com/account/circles and click refresh"
	};

	options = options || defaultOptions;

	var msgboxParams = {
		header: options.header,
		content: options.content,
		close_x: true,
		width: "550px",
		buttons: [{
			text: 'Close',
			skin: 'light',
			click: function() {
				joinInfoMsgBox.close();
			}
		}]
	};
	var joinInfoMsgBox = new odl.msgbox(msgboxParams);
};

odl.circle.initGrouplyIframeMessenging = function()
{
	var iframe = jQ('iframe#gsso');
	if (iframe.length) {
		var grouply_url = iframe.attr('src').replace(/([^:]+:\/\/[^\/]+).*/, '$1').toLowerCase();
		jQuery.receiveMessage(function(e) {
	  	  	var a = JSON.parse(e.data);
	  	  	if (typeof a.destUrl != 'undefined') {
	  	  		iframe.attr("src", a.destUrl);
	  			odl.circle.initGrouplyIframeMessenging();
	  	  	} else if (typeof a.grouply_sso_post_init != 'undefined') {
	  	  		jQ('div#gssoform').css({'display': 'none'});
	  	  	} else if (typeof a.grouply_sso_post_height != 'undefined') {
	  	  		jQ('iframe#gsso').css({'height': a.grouply_sso_post_height});
	  	  	}
	  	  }, grouply_url);
	}
};


/* circle dropdown menus */
jQ(document).ready
(
	function()
	{
		new odl.dropdownMenu('#circle-alerts', '#circle-pending-alert-menu');
		new odl.dropdownMenu('#select-circle', '#circles-dropdown-menu');
		new odl.dropdownMenu('#admin-tool-icon', '#admin-dropdown-menu');
		odl.circle.initGrouplyIframeMessenging();
	}
);


if (typeof(odl) == 'undefined')
	odl = {};

odl.hint = {};

// Setup all the elements contained in container 'containerID'
odl.hint.setup = function (containerID)
{
	// Get the form / container element
	var container = document.getElementById(containerID);
	if (!container)
		return;

	// Get the inputs on the form
	var inputs = container.getElementsByTagName('input');

	// Get the text areas on the form
	var textareas = container.getElementsByTagName('textarea');

	// setup inputs
	var len = inputs.length;
	for (var i = 0 ; i < len; i++)
	{
		if (!inputs[i].attributes.getNamedItem('readonly'))
			odl.hint.toggleHint(inputs[i], true);
	}

	// setup textareas
	len = textareas.length;
	if (textareas)
	for (var i = 0 ; i < len; i++)
	{
		if (!textareas[i].attributes.getNamedItem('readonly'))
			odl.hint.toggleHint(textareas[i], true);
	}
}


odl.hint.getElement = function (e)
{
	// determine if it's an event, a FBJS event or just an element
	if (e.currentTarget)
	{
		return(e.currentTarget);
	}
	else if (e.target) // May be needed for FBJS
	{
		return(target);
	}

	return(e);
}

// Called for setup, and when the input is blured
odl.hint.toggleHint = function (e, setup)
{
	var element = odl.hint.getElement(e);
	if (!element)
	{
		if (!odl.facebook)
			log('error toggleHint - element not found');
		return;
	}

	var elementType = jQ(element).attr('type');

	// Skip hidden, button elements, checkboxes, and radios
	if (elementType == 'hidden' || elementType == 'button' || elementType == 'checkbox' || elementType == 'radio')
		return;

	// Skip display="none" elements
	if (jQ(element).css('display') == 'none')
		return;

	var parent = jQ(element).parent().get(0);

	var labels = [];
	if (parent)
		labels = parent.getElementsByTagName('label');
	var labelsLen = labels.length;
	if (setup)
	{
		// Catch copy and paste
		jQ(element).bind('paste', odl.hint.toggleHint);
		jQ(element).bind('input', odl.hint.toggleHint);
		
		// Main catches: blur - focus, change, keydown, etc.
		jQ(element).blur(odl.hint.toggleHint);
		jQ(element).focus(odl.hint.toggleHint);
		jQ(element).click(odl.hint.toggleHint);
		jQ(element).change(odl.hint.toggleHint);
		jQ(element).keydown(odl.hint.toggleHint);
		jQ(element).keyup(odl.hint.toggleHint);
	}
	
	// Loop through the labels found
	for (var i = 0 ; i < labelsLen ; i++)
	{
		// Setup a closure that can take 'label[i]' in order to preserve the current label in the loop
		var updateLabel = function (label)
		{
			var x = function () { // setup an inner closure that can be used with setTimeout
				if (jQ(label).data('lock'))
				{
					setTimeout(x, 10);
				}
				else
				{
					// set a lock so that we don't collide with another animation
					jQ(label).data('lock', true);

					// Label the element whether focused or not
					if (e.type == 'focus')
						jQ(label).data('focus', true);
					else if (e.type == 'blur' || setup)
						jQ(label).data('focus', false);

					// Get the current value
					var curValue = jQ(element).val();
					var linkedButtonID =jQ(element).data('linkedbutton');
					// No text, no focus - make it dark
					if ((!curValue || curValue.length == 0) && !jQ(label).data('focus'))
					{
						if (linkedButtonID)
							odl.hint.toggleButton(linkedButtonID, false);
						if (jQ(label).hasClass('hint'))
						{
							// determine current state
							if (jQ(labels[i]).css('display') == 'none')
							{
								jQ(label).css({'opacity': 0}).stop().animate({opacity: 1}, {duration: 'fast', complete: function () { if (label.style.removeAttribute) { label.style.removeAttribute('filter'); } jQ(label).data('lock', false); } }).show();
							}
							else if (jQ(label).hasClass('focus')) 
							{
								jQ(label).css({'opacity': 0.3}).stop().animate({opacity: 1}, {duration: 'fast', complete: function () { jQ(label).removeClass('focus'); if (label.style.removeAttribute) { label.style.removeAttribute('filter'); } jQ(label).data('lock', false);}});
							}
							else
							{
								jQ(label).css({'opacity': 1, 'display': 'block'});					
								// IE hack to restore cleartype
								if (label.style.removeAttribute)
									label.style.removeAttribute('filter');

								// Always remove the lock
								jQ(label).data('lock', false);
							}
						}
					}
					else if ((!curValue || curValue.length == 0)) // no text, but focus, make it light
					{
						if (linkedButtonID)
							odl.hint.toggleButton(linkedButtonID, false);
						for (var i = 0 ; i < labelsLen ; i++)
						{
							if (jQ(label).hasClass('hint'))
							{
								if (jQ(label).css('display') == 'none') // No display, fade in from nothing
								{
									jQ(label).css({'opacity': 0}).stop().animate({opacity: '0.3'}, {duration: 'fast', complete: function () { if (!jQ(label).hasClass('focus')) { jQ(label).addClass('focus'); } jQ(label).data('lock', false);  } }).show();	
								}
								else if (!jQ(label).hasClass('focus')) // No focus class, but displayed, should be black, fade out
								{
									jQ(label).css({'opacity': 1}).stop().animate({opacity: '0.3'}, {duration: 'fast', complete: function () { if (!jQ(label).hasClass('focus')) { jQ(label).addClass('focus'); } jQ(label).data('lock', false); } });
								}
								else // Default case, may actually be a no-op at ceratin points
								{
									jQ(label).css({'opacity': 0.3, 'display': 'block'});					
									// Always remove the lock
									jQ(label).data('lock', false);
								}
							}
						}
					}
					else // Text, always hide hint text
					{
						if (linkedButtonID)
							odl.hint.toggleButton(linkedButtonID, true);
						if (jQ(label).hasClass('hint'))
						{
							jQ(label).css('display', 'none');
						}
						// Always remove the lock
						jQ(label).data('lock', false);
					}
				}
			}
			return x;
		}(labels[i]); // (almost a curry) - make a new closure with labels[i] as the parameter
		updateLabel(); // Call the closure we just made
	}
}

//turn on/off a button
odl.hint.toggleButton = function (buttonID, turnOn)
{
	var button = jQ('#' + buttonID);
	if (!button)
	{
		log('error toggleButton - button not found');
		return;
	}
	
	if (turnOn)
	{
		button.removeClass('pc-cancel disabled').addClass('pc-main');	//light up the button
	}
	else
	{
		button.removeClass('pc-main').addClass('pc-cancel disabled');	//grey out the button
	}
}

//link a button to an input field so that odl.hint.toggleHint can change the button when the input field is changed
odl.hint.linkButton = function (inputID, buttonID, action)
{
	// Get the input and button element
	var input = $(inputID);
	var button = $(buttonID);
	if (!(input && button))
	{
		log('error linkButton - element not found');
		return;
	}
	
	//disable click action first
	button.onclick = null;
    jQ(button).unbind('click');
    
    //hijack the click action
    jQ(button).click(function()
	{
    	if (jQ(button).hasClass('disabled'))
    		return false;
		return action();
	});
    
	//store button info in the input element
	jQ(input).data('linkedbutton', buttonID);
}


odl.namespace('utilities');

/**
 * @robert truncates an element into one line (e.g. odl.hint labels, detail page SEO h1, etc)
 * 
 * Please pass in the params:
 * 
 * REQUIRED
 * @param ele            a html or jQ element
 * 
 * OPTIONAL
 * @param truncateText   the truncated text is replaced with this (can be html)
 *        (default: ...)
 * @param wantedLines    will not truncate if text is <= wantedLines
 *        (default: 1)
 * @param heightEle      the element to check wantedLines on
 *        (default: ele)
 * @param lineHeight     a forced line height
 *        (default: heightEle's line height)
 */
odl.utilities.truncate = function(params)
{
	var ele = jQ(params.ele);
	if (ele.length == 0)
	{
		return;
	}
	var truncateText = params.truncateText ? params.truncateText : "&hellip;";
	var numLines = params.wantedLines ? params.wantedLines : 1;
	var heightEle = params.heightEle && jQ(params.heightEle).length ? jQ(params.heightEle) : ele;
	var lineHeight = params.lineHeight ? params.lineHeight : odl.utilities.getLineHeight(heightEle);
	
	var tooTall = numLines * lineHeight;
	
	if (heightEle.height() > tooTall)
	{
		var str = ele.html();
		var left = 0;
		var right = str.length;
		var mid;
		
		while(left <= right)
		{
			mid = ((left + right) / 2) | 0; //cast to int
			
			ele.html(str.substring(0, mid) + truncateText);
			
			if (heightEle.height() > tooTall)
				right = mid - 1;
			else
				left = mid + 1;
		}

		//fixes an occasional off-by-one issue where the element is one char too long and causes
		//the element to be 2 lines which is the problem we're trying to avoid in the first place
		ele.html(str.substring(0, Math.min(left, right, mid)) + truncateText);
	}
};

/**
 * jQ.css('line-height') is problematic
 * e.g. on IE 7 and 8 with line-height as a non-whole-number multiplier -- line-height: 2.5 will be returned as 2px
 * so we will calculate line height our own way
 * 
 * @param   ele   a html or jQ element
 * @return  int   the line height in pixels
 */
odl.utilities.getLineHeight = function(ele) {
	var ele = jQ(ele);
	
	//cache some values so we can reset them later
	var text = ele.html();
	var dp = ele.css('display');
	
	//calculate line height
	ele.html('&nbsp;');
	ele.css('zoom', '1'); //trick IE7, 8 to give hasLayout
	ele.css('display', 'block');
	var lineHeight = ele.height();
	
	//reset
	ele.css('display', dp);
	ele.css('zoom', 0);
	ele.html(text);
	
	return lineHeight;	
};

/**
 * toggles all checkboxes given a selector and whether to check or uncheck
 * 
 * @param	selector	string	selector expression to match search against, for example '.mycheckboxes'
 * @param	checked		int		1 to check all boxes, 0 to uncheck
 */
odl.utilities.toggleAllCheckboxes = function(selector, check)
{
	jQ(document.body).find('input[type=checkbox]'+selector).attr('checked', check);
};


odl.utilities.dotdotdot = function(params)
{
	var ele = jQ(params.ele);
	ele.dotdotdot({
		ellipsis : '... ',
		height : null
	});
};


/*!
 * jQuery UI Mouse 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(b){var d=false;b(document).mouseup(function(){d=false});b.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(c){return a._mouseDown(c)}).bind("click."+this.widgetName,function(c){if(true===b.data(c.target,a.widgetName+".preventClickEvent")){b.removeData(c.target,a.widgetName+".preventClickEvent");c.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+
this.widgetName)},_mouseDown:function(a){if(!d){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var c=this,f=a.which==1,g=typeof this.options.cancel=="string"&&a.target.nodeName?b(a.target).closest(this.options.cancel).length:false;if(!f||g||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){c.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=
this._mouseStart(a)!==false;if(!this._mouseStarted){a.preventDefault();return true}}true===b.data(a.target,this.widgetName+".preventClickEvent")&&b.removeData(a.target,this.widgetName+".preventClickEvent");this._mouseMoveDelegate=function(e){return c._mouseMove(e)};this._mouseUpDelegate=function(e){return c._mouseUp(e)};b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return d=true}},_mouseMove:function(a){if(b.browser.msie&&
!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=
false;a.target==this._mouseDownEvent.target&&b.data(a.target,this.widgetName+".preventClickEvent",true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);

/*
 * jQuery UI Draggable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper==
"original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;if(b.iframeFix)d(b.iframeFix===true?"iframe":b.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")});return true},_mouseStart:function(a){var b=this.options;
this.helper=this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});
this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);d.ui.ddmanager&&d.ui.ddmanager.dragStart(this,a);return true},
_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=
false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if((!this.element[0]||!this.element[0].parentNode)&&this.options.helper=="original")return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&this.options.revert.call(this.element,b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,
10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},_mouseUp:function(a){this.options.iframeFix===true&&d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});d.ui.ddmanager&&d.ui.ddmanager.dragStop(this,a);return d.ui.mouse.prototype._mouseUp.call(this,a)},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||
!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone().removeAttr("id"):this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&
a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=
this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),
10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),
10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[a.containment=="document"?0:d(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,a.containment=="document"?0:d(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,
(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){a=d(a.containment);var b=a[0];if(b){a.offset();var c=d(b).css("overflow")!=
"hidden";this.containment=[(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0),(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0),(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),
10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom];this.relative_container=a}}else if(a.containment.constructor==Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+
this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&
!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,h=a.pageY;if(this.originalPosition){var g;if(this.containment){if(this.relative_container){g=this.relative_container.offset();g=[this.containment[0]+g.left,this.containment[1]+g.top,this.containment[2]+g.left,this.containment[3]+g.top]}else g=this.containment;if(a.pageX-this.offset.click.left<g[0])e=g[0]+this.offset.click.left;
if(a.pageY-this.offset.click.top<g[1])h=g[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>g[2])e=g[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>g[3])h=g[3]+this.offset.click.top}if(b.grid){h=b.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/b.grid[1])*b.grid[1]:this.originalPageY;h=g?!(h-this.offset.click.top<g[1]||h-this.offset.click.top>g[3])?h:!(h-this.offset.click.top<g[1])?h-b.grid[1]:h+b.grid[1]:h;e=b.grid[0]?this.originalPageX+Math.round((e-this.originalPageX)/
b.grid[0])*b.grid[0]:this.originalPageX;e=g?!(e-this.offset.click.left<g[0]||e-this.offset.click.left>g[2])?e:!(e-this.offset.click.left<g[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<
526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,
c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.16"});d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var h=d.data(this,"sortable");if(h&&!h.options.disabled){c.sortables.push({instance:h,shouldRevert:h.options.revert});
h.refreshPositions();h._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=
false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",true);
this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;
c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&
this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=
a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!=
"x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<
c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-
c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable","snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,
width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,h=b.offset.left,g=h+c.helperProportions.width,n=b.offset.top,o=n+c.helperProportions.height,i=c.snapElements.length-1;i>=0;i--){var j=c.snapElements[i].left,l=j+c.snapElements[i].width,k=c.snapElements[i].top,m=k+c.snapElements[i].height;if(j-e<h&&h<l+e&&k-e<n&&n<m+e||j-e<h&&h<l+e&&k-e<o&&o<m+e||j-e<g&&g<l+e&&k-e<n&&n<m+e||j-e<g&&g<l+e&&k-e<o&&
o<m+e){if(f.snapMode!="inner"){var p=Math.abs(k-o)<=e,q=Math.abs(m-n)<=e,r=Math.abs(j-g)<=e,s=Math.abs(l-h)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l}).left-c.margins.left}var t=
p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(k-n)<=e;q=Math.abs(m-o)<=e;r=Math.abs(j-h)<=e;s=Math.abs(l-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m-c.helperProportions.height,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[i].snapping&&
(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=p||q||r||s||t}else{c.snapElements[i].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),
10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);

/*
 * jQuery UI Sortable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Sortables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.sortable",d.ui.mouse,{widgetEventPrefix:"sort",options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1E3},_create:function(){var a=this.options;this.containerCache={};this.element.addClass("ui-sortable");
this.refresh();this.floating=this.items.length?a.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):false;this.offset=this.element.offset();this._mouseInit()},destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");this._mouseDestroy();for(var a=this.items.length-1;a>=0;a--)this.items[a].item.removeData("sortable-item");return this},_setOption:function(a,b){if(a===
"disabled"){this.options[a]=b;this.widget()[b?"addClass":"removeClass"]("ui-sortable-disabled")}else d.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(a,b){if(this.reverting)return false;if(this.options.disabled||this.options.type=="static")return false;this._refreshItems(a);var c=null,e=this;d(a.target).parents().each(function(){if(d.data(this,"sortable-item")==e){c=d(this);return false}});if(d.data(a.target,"sortable-item")==e)c=d(a.target);if(!c)return false;if(this.options.handle&&
!b){var f=false;d(this.options.handle,c).find("*").andSelf().each(function(){if(this==a.target)f=true});if(!f)return false}this.currentItem=c;this._removeCurrentsFromItems();return true},_mouseStart:function(a,b,c){b=this.options;var e=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(a);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,
left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};
this.helper[0]!=this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();if(b.cursor){if(d("body").css("cursor"))this._storedCursor=d("body").css("cursor");d("body").css("cursor",b.cursor)}if(b.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",b.opacity)}if(b.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",b.zIndex)}if(this.scrollParent[0]!=
document&&this.scrollParent[0].tagName!="HTML")this.overflowOffset=this.scrollParent.offset();this._trigger("start",a,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!c)for(c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("activate",a,e._uiHash(this));if(d.ui.ddmanager)d.ui.ddmanager.current=this;d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(a);
return true},_mouseDrag:function(a){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!this.lastPositionAbs)this.lastPositionAbs=this.positionAbs;if(this.options.scroll){var b=this.options,c=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if(this.overflowOffset.top+this.scrollParent[0].offsetHeight-a.pageY<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop+b.scrollSpeed;else if(a.pageY-this.overflowOffset.top<
b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop-b.scrollSpeed;if(this.overflowOffset.left+this.scrollParent[0].offsetWidth-a.pageX<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft+b.scrollSpeed;else if(a.pageX-this.overflowOffset.left<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft-b.scrollSpeed}else{if(a.pageY-d(document).scrollTop()<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()-
b.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()+b.scrollSpeed);if(a.pageX-d(document).scrollLeft()<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()-b.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()+b.scrollSpeed)}c!==false&&d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,
a)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;b>=0;b--){c=this.items[b];var e=c.item[0],f=this._intersectsWithPointer(c);if(f)if(e!=this.currentItem[0]&&this.placeholder[f==1?"next":"prev"]()[0]!=e&&!d.ui.contains(this.placeholder[0],e)&&(this.options.type=="semi-dynamic"?!d.ui.contains(this.element[0],
e):true)){this.direction=f==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(c))this._rearrange(a,c);else break;this._trigger("change",a,this._uiHash());break}}this._contactContainers(a);d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);this._trigger("sort",a,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(a,b){if(a){d.ui.ddmanager&&!this.options.dropBehaviour&&d.ui.ddmanager.drop(this,a);if(this.options.revert){var c=this;b=c.placeholder.offset();
c.reverting=true;d(this.helper).animate({left:b.left-this.offset.parent.left-c.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:b.top-this.offset.parent.top-c.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){c._clear(a)})}else this._clear(a,b);return false}},cancel:function(){var a=this;if(this.dragging){this._mouseUp({target:null});this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):
this.currentItem.show();for(var b=this.containers.length-1;b>=0;b--){this.containers[b]._trigger("deactivate",null,a._uiHash(this));if(this.containers[b].containerCache.over){this.containers[b]._trigger("out",null,a._uiHash(this));this.containers[b].containerCache.over=0}}}if(this.placeholder){this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove();d.extend(this,{helper:null,
dragging:false,reverting:false,_noFinalSort:null});this.domPosition.prev?d(this.domPosition.prev).after(this.currentItem):d(this.domPosition.parent).prepend(this.currentItem)}return this},serialize:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};d(b).each(function(){var e=(d(a.item||this).attr(a.attribute||"id")||"").match(a.expression||/(.+)[-=_](.+)/);if(e)c.push((a.key||e[1]+"[]")+"="+(a.key&&a.expression?e[1]:e[2]))});!c.length&&a.key&&c.push(a.key+"=");return c.join("&")},
toArray:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};b.each(function(){c.push(d(a.item||this).attr(a.attribute||"id")||"")});return c},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,e=this.positionAbs.top,f=e+this.helperProportions.height,g=a.left,h=g+a.width,i=a.top,k=i+a.height,j=this.offset.click.top,l=this.offset.click.left;j=e+j>i&&e+j<k&&b+l>g&&b+l<h;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||
this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?j:g<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<h&&i<e+this.helperProportions.height/2&&f-this.helperProportions.height/2<k},_intersectsWithPointer:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left,a.width);b=b&&a;a=this._getDragVerticalDirection();
var c=this._getDragHorizontalDirection();if(!b)return false;return this.floating?c&&c=="right"||a=="down"?2:1:a&&(a=="down"?2:1)},_intersectsWithSides:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top+a.height/2,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left+a.width/2,a.width);var c=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?e=="right"&&a||e=="left"&&!a:c&&(c=="down"&&b||c=="up"&&!b)},
_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(a){var b=[],c=[],e=this._connectWith();
if(e&&a)for(a=e.length-1;a>=0;a--)for(var f=d(e[a]),g=f.length-1;g>=0;g--){var h=d.data(f[g],"sortable");if(h&&h!=this&&!h.options.disabled)c.push([d.isFunction(h.options.items)?h.options.items.call(h.element):d(h.options.items,h.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),h])}c.push([d.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):d(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
this]);for(a=c.length-1;a>=0;a--)c[a][0].each(function(){b.push(this)});return d(b)},_removeCurrentsFromItems:function(){for(var a=this.currentItem.find(":data(sortable-item)"),b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(a){this.items=[];this.containers=[this];var b=this.items,c=[[d.isFunction(this.options.items)?this.options.items.call(this.element[0],a,{item:this.currentItem}):d(this.options.items,this.element),
this]],e=this._connectWith();if(e)for(var f=e.length-1;f>=0;f--)for(var g=d(e[f]),h=g.length-1;h>=0;h--){var i=d.data(g[h],"sortable");if(i&&i!=this&&!i.options.disabled){c.push([d.isFunction(i.options.items)?i.options.items.call(i.element[0],a,{item:this.currentItem}):d(i.options.items,i.element),i]);this.containers.push(i)}}for(f=c.length-1;f>=0;f--){a=c[f][1];e=c[f][0];h=0;for(g=e.length;h<g;h++){i=d(e[h]);i.data("sortable-item",a);b.push({item:i,instance:a,width:0,height:0,left:0,top:0})}}},refreshPositions:function(a){if(this.offsetParent&&
this.helper)this.offset.parent=this._getParentOffset();for(var b=this.items.length-1;b>=0;b--){var c=this.items[b];if(!(c.instance!=this.currentContainer&&this.currentContainer&&c.item[0]!=this.currentItem[0])){var e=this.options.toleranceElement?d(this.options.toleranceElement,c.item):c.item;if(!a){c.width=e.outerWidth();c.height=e.outerHeight()}e=e.offset();c.left=e.left;c.top=e.top}}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=
this.containers.length-1;b>=0;b--){e=this.containers[b].element.offset();this.containers[b].containerCache.left=e.left;this.containers[b].containerCache.top=e.top;this.containers[b].containerCache.width=this.containers[b].element.outerWidth();this.containers[b].containerCache.height=this.containers[b].element.outerHeight()}return this},_createPlaceholder:function(a){var b=a||this,c=b.options;if(!c.placeholder||c.placeholder.constructor==String){var e=c.placeholder;c.placeholder={element:function(){var f=
d(document.createElement(b.currentItem[0].nodeName)).addClass(e||b.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];if(!e)f.style.visibility="hidden";return f},update:function(f,g){if(!(e&&!c.forcePlaceholderSize)){g.height()||g.height(b.currentItem.innerHeight()-parseInt(b.currentItem.css("paddingTop")||0,10)-parseInt(b.currentItem.css("paddingBottom")||0,10));g.width()||g.width(b.currentItem.innerWidth()-parseInt(b.currentItem.css("paddingLeft")||0,10)-parseInt(b.currentItem.css("paddingRight")||
0,10))}}}}b.placeholder=d(c.placeholder.element.call(b.element,b.currentItem));b.currentItem.after(b.placeholder);c.placeholder.update(b,b.placeholder)},_contactContainers:function(a){for(var b=null,c=null,e=this.containers.length-1;e>=0;e--)if(!d.ui.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(!(b&&d.ui.contains(this.containers[e].element[0],b.element[0]))){b=this.containers[e];c=e}}else if(this.containers[e].containerCache.over){this.containers[e]._trigger("out",
a,this._uiHash(this));this.containers[e].containerCache.over=0}if(b)if(this.containers.length===1){this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}else if(this.currentContainer!=this.containers[c]){b=1E4;e=null;for(var f=this.positionAbs[this.containers[c].floating?"left":"top"],g=this.items.length-1;g>=0;g--)if(d.ui.contains(this.containers[c].element[0],this.items[g].item[0])){var h=this.items[g][this.containers[c].floating?"left":"top"];if(Math.abs(h-
f)<b){b=Math.abs(h-f);e=this.items[g]}}if(e||this.options.dropOnEmpty){this.currentContainer=this.containers[c];e?this._rearrange(a,e,null,true):this._rearrange(a,null,this.containers[c].element,true);this._trigger("change",a,this._uiHash());this.containers[c]._trigger("change",a,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}}},_createHelper:function(a){var b=
this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a,this.currentItem])):b.helper=="clone"?this.currentItem.clone():this.currentItem;a.parents("body").length||d(b.appendTo!="parent"?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(a[0]);if(a[0]==this.currentItem[0])this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")};if(a[0].style.width==
""||b.forceHelperSize)a.width(this.currentItem.width());if(a[0].style.height==""||b.forceHelperSize)a.height(this.currentItem.height());return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=
this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a=
{top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),
10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,d(a.containment=="document"?
document:window).width()-this.helperProportions.width-this.margins.left,(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)){var b=d(a.containment)[0];a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),
10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(a,b){if(!b)b=
this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&
this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0]))this.offset.relative=this._getRelativeOffset();
var f=a.pageX,g=a.pageY;if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])f=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])f=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-
this.originalPageY)/b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;f=this.originalPageX+Math.round((f-this.originalPageX)/b.grid[0])*b.grid[0];f=this.containment?!(f-this.offset.click.left<this.containment[0]||f-this.offset.click.left>this.containment[2])?f:!(f-this.offset.click.left<this.containment[0])?f-b.grid[0]:f+b.grid[0]:f}}return{top:g-
this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())}},_rearrange:function(a,b,c,e){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],
this.direction=="down"?b.item[0]:b.item[0].nextSibling);this.counter=this.counter?++this.counter:1;var f=this,g=this.counter;window.setTimeout(function(){g==f.counter&&f.refreshPositions(!e)},0)},_clear:function(a,b){this.reverting=false;var c=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var e in this._storedCSS)if(this._storedCSS[e]=="auto"||this._storedCSS[e]=="static")this._storedCSS[e]=
"";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!b&&c.push(function(f){this._trigger("receive",f,this._uiHash(this.fromOutside))});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!b)c.push(function(f){this._trigger("update",f,this._uiHash())});if(!d.ui.contains(this.element[0],this.currentItem[0])){b||c.push(function(f){this._trigger("remove",
f,this._uiHash())});for(e=this.containers.length-1;e>=0;e--)if(d.ui.contains(this.containers[e].element[0],this.currentItem[0])&&!b){c.push(function(f){return function(g){f._trigger("receive",g,this._uiHash(this))}}.call(this,this.containers[e]));c.push(function(f){return function(g){f._trigger("update",g,this._uiHash(this))}}.call(this,this.containers[e]))}}for(e=this.containers.length-1;e>=0;e--){b||c.push(function(f){return function(g){f._trigger("deactivate",g,this._uiHash(this))}}.call(this,
this.containers[e]));if(this.containers[e].containerCache.over){c.push(function(f){return function(g){f._trigger("out",g,this._uiHash(this))}}.call(this,this.containers[e]));this.containers[e].containerCache.over=0}}this._storedCursor&&d("body").css("cursor",this._storedCursor);this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",
a,this._uiHash());for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}return false}b||this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.helper[0]!=this.currentItem[0]&&this.helper.remove();this.helper=null;if(!b){for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){d.Widget.prototype._trigger.apply(this,arguments)===false&&this.cancel()},
_uiHash:function(a){var b=a||this;return{helper:b.helper,placeholder:b.placeholder||d([]),position:b.position,originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:a?a.element:null}}});d.extend(d.ui.sortable,{version:"1.8.16"})})(jQuery);

// Chosen, a Select Box Enhancer for jQuery and Protoype
// by Patrick Filler for Harvest, http://getharvest.com
// 
// Version 0.9.7
// Full source at https://github.com/harvesthq/chosen
// Copyright (c) 2011 Harvest http://getharvest.com

// MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md
// This file is generated by `cake build`, do not edit it by hand.
((function(){var a;a=function(){function a(){this.options_index=0,this.parsed=[]}return a.prototype.add_node=function(a){return a.nodeName==="OPTGROUP"?this.add_group(a):this.add_option(a)},a.prototype.add_group=function(a){var b,c,d,e,f,g;b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:a.label,children:0,disabled:a.disabled}),f=a.childNodes,g=[];for(d=0,e=f.length;d<e;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},a.prototype.add_option=function(a,b,c){if(a.nodeName==="OPTION")return a.text!==""?(b!=null&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1},a}(),a.select_to_array=function(b){var c,d,e,f,g;d=new a,g=b.childNodes;for(e=0,f=g.length;e<f;e++)c=g[e],d.add_node(c);return d.parsed},this.SelectParser=a})).call(this),function(){var a,b;b=this,a=function(){function a(a,b){this.form_field=a,this.options=b!=null?b:{},this.set_default_values(),this.is_multiple=this.form_field.multiple,this.default_text_default=this.is_multiple?"Select Some Options":"Select an Option",this.setup(),this.set_up_html(),this.register_observers(),this.finish_setup()}return a.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.result_single_selected=null,this.allow_single_deselect=this.options.allow_single_deselect!=null&&this.form_field.options[0]!=null&&this.form_field.options[0].text===""?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.choices=0,this.results_none_found=this.options.no_results_text||"No results match"},a.prototype.mouse_enter=function(){return this.mouse_on_container=!0},a.prototype.mouse_leave=function(){return this.mouse_on_container=!1},a.prototype.input_focus=function(a){var b=this;if(!this.active_field)return setTimeout(function(){return b.container_mousedown()},50)},a.prototype.input_blur=function(a){var b=this;if(!this.mouse_on_container)return this.active_field=!1,setTimeout(function(){return b.blur_test()},100)},a.prototype.result_add_option=function(a){var b,c;return a.disabled?"":(a.dom_id=this.container_id+"_o_"+a.array_index,b=a.selected&&this.is_multiple?[]:["active-result"],a.selected&&b.push("result-selected"),a.group_array_index!=null&&b.push("group-option"),a.classes!==""&&b.push(a.classes),c=a.style.cssText!==""?' style="'+a.style+'"':"",'<li id="'+a.dom_id+'" class="'+b.join(" ")+'"'+c+">"+a.html+"</li>")},a.prototype.results_update_field=function(){return this.result_clear_highlight(),this.result_single_selected=null,this.results_build()},a.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},a.prototype.results_search=function(a){return this.results_showing?this.winnow_results():this.results_show()},a.prototype.keyup_checker=function(a){var b,c;b=(c=a.which)!=null?c:a.keyCode,this.search_field_scale();switch(b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:a.preventDefault();if(this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},a.prototype.generate_field_id=function(){var a;return a=this.generate_random_id(),this.form_field.id=a,a},a.prototype.generate_random_char=function(){var a,b,c;return a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZ",c=Math.floor(Math.random()*a.length),b=a.substring(c,c+1)},a}(),b.AbstractChosen=a}.call(this),function(){var a,b,c,d,e=Object.prototype.hasOwnProperty,f=function(a,b){function d(){this.constructor=a}for(var c in b)e.call(b,c)&&(a[c]=b[c]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};d=this,a=jQuery,a.fn.extend({chosen:function(c){return!a.browser.msie||a.browser.version!=="6.0"&&a.browser.version!=="7.0"?a(this).each(function(d){if(!a(this).hasClass("chzn-done"))return new b(this,c)}):this}}),b=function(b){function e(){e.__super__.constructor.apply(this,arguments)}return f(e,b),e.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.is_rtl=this.form_field_jq.hasClass("chzn-rtl")},e.prototype.finish_setup=function(){return this.form_field_jq.addClass("chzn-done")},e.prototype.set_up_html=function(){var b,d,e,f;return this.container_id=this.form_field.id.length?this.form_field.id.replace(/(:|\.)/g,"_"):this.generate_field_id(),this.container_id+="_chzn",this.f_width=this.form_field_jq.outerWidth(),this.default_text=this.form_field_jq.data("placeholder")?this.form_field_jq.data("placeholder"):this.default_text_default,b=a("<div />",{id:this.container_id,"class":"chzn-container"+(this.is_rtl?" chzn-rtl":""),style:"width: "+this.f_width+"px;"}),this.is_multiple?b.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop" style="left:-9000px;"><ul class="chzn-results"></ul></div>'):b.html('<a href="javascript:void(0)" class="chzn-single"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chzn-drop" style="left:-9000px;"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>'),this.form_field_jq.hide().after(b),this.container=a("#"+this.container_id),this.container.addClass("chzn-container-"+(this.is_multiple?"multi":"single")),this.dropdown=this.container.find("div.chzn-drop").first(),d=this.container.height(),e=this.f_width-c(this.dropdown),this.dropdown.css({width:e+"px",top:d+"px"}),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chzn-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chzn-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chzn-search").first(),this.selected_item=this.container.find(".chzn-single").first(),f=e-c(this.search_container)-c(this.search_field),this.search_field.css({width:f+"px"})),this.results_build(),this.set_tab_index(),this.form_field_jq.trigger("liszt:ready",{chosen:this})},e.prototype.register_observers=function(){var a=this;return this.container.mousedown(function(b){return a.container_mousedown(b)}),this.container.mouseup(function(b){return a.container_mouseup(b)}),this.container.mouseenter(function(b){return a.mouse_enter(b)}),this.container.mouseleave(function(b){return a.mouse_leave(b)}),this.search_results.mouseup(function(b){return a.search_results_mouseup(b)}),this.search_results.mouseover(function(b){return a.search_results_mouseover(b)}),this.search_results.mouseout(function(b){return a.search_results_mouseout(b)}),this.form_field_jq.bind("liszt:updated",function(b){return a.results_update_field(b)}),this.search_field.blur(function(b){return a.input_blur(b)}),this.search_field.keyup(function(b){return a.keyup_checker(b)}),this.search_field.keydown(function(b){return a.keydown_checker(b)}),this.is_multiple?(this.search_choices.click(function(b){return a.choices_click(b)}),this.search_field.focus(function(b){return a.input_focus(b)})):this.container.click(function(a){return a.preventDefault()})},e.prototype.search_field_disabled=function(){this.is_disabled=this.form_field_jq[0].disabled;if(this.is_disabled)return this.container.addClass("chzn-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus",this.activate_action),this.close_field();this.container.removeClass("chzn-disabled"),this.search_field[0].disabled=!1;if(!this.is_multiple)return this.selected_item.bind("focus",this.activate_action)},e.prototype.container_mousedown=function(b){var c;if(!this.is_disabled)return c=b!=null?a(b.target).hasClass("search-choice-close"):!1,b&&b.type==="mousedown"&&b.stopPropagation(),!this.pending_destroy_click&&!c?(this.active_field?!this.is_multiple&&b&&(a(b.target)[0]===this.selected_item[0]||a(b.target).parents("a.chzn-single").length)&&(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(document).click(this.click_test_action),this.results_show()),this.activate_field()):this.pending_destroy_click=!1},e.prototype.container_mouseup=function(a){if(a.target.nodeName==="ABBR")return this.results_reset(a)},e.prototype.blur_test=function(a){if(!this.active_field&&this.container.hasClass("chzn-container-active"))return this.close_field()},e.prototype.close_field=function(){return a(document).unbind("click",this.click_test_action),this.is_multiple||(this.selected_item.attr("tabindex",this.search_field.attr("tabindex")),this.search_field.attr("tabindex",-1)),this.active_field=!1,this.results_hide(),this.container.removeClass("chzn-container-active"),this.winnow_results_clear(),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},e.prototype.activate_field=function(){return!this.is_multiple&&!this.active_field&&(this.search_field.attr("tabindex",this.selected_item.attr("tabindex")),this.selected_item.attr("tabindex",-1)),this.container.addClass("chzn-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},e.prototype.test_active_click=function(b){return a(b.target).parents("#"+this.container_id).length?this.active_field=!0:this.close_field()},e.prototype.results_build=function(){var a,b,c,e,f;this.parsing=!0,this.results_data=d.SelectParser.select_to_array(this.form_field),this.is_multiple&&this.choices>0?(this.search_choices.find("li.search-choice").remove(),this.choices=0):this.is_multiple||(this.selected_item.find("span").text(this.default_text),this.form_field.options.length<=this.disable_search_threshold?this.container.addClass("chzn-container-single-nosearch"):this.container.removeClass("chzn-container-single-nosearch")),a="",f=this.results_data;for(c=0,e=f.length;c<e;c++)b=f[c],b.group?a+=this.result_add_group(b):b.empty||(a+=this.result_add_option(b),b.selected&&this.is_multiple?this.choice_build(b):b.selected&&!this.is_multiple&&(this.selected_item.find("span").text(b.text),this.allow_single_deselect&&this.single_deselect_control_build()));return this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.search_results.html(a),this.parsing=!1},e.prototype.result_add_group=function(b){return b.disabled?"":(b.dom_id=this.container_id+"_g_"+b.array_index,'<li id="'+b.dom_id+'" class="group-result">'+a("<div />").text(b.label).html()+"</li>")},e.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight();if(b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(c<f)return this.search_results.scrollTop(c)}},e.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},e.prototype.results_show=function(){var a;return this.is_multiple||(this.selected_item.addClass("chzn-single-with-drop"),this.result_single_selected&&this.result_do_highlight(this.result_single_selected)),a=this.is_multiple?this.container.height():this.container.height()-1,this.dropdown.css({top:a+"px",left:0}),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results()},e.prototype.results_hide=function(){return this.is_multiple||this.selected_item.removeClass("chzn-single-with-drop"),this.result_clear_highlight(),this.dropdown.css({left:"-9000px"}),this.results_showing=!1},e.prototype.set_tab_index=function(a){var b;if(this.form_field_jq.attr("tabindex"))return b=this.form_field_jq.attr("tabindex"),this.form_field_jq.attr("tabindex",-1),this.is_multiple?this.search_field.attr("tabindex",b):(this.selected_item.attr("tabindex",b),this.search_field.attr("tabindex",-1))},e.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},e.prototype.search_results_mouseup=function(b){var c;c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first();if(c.length)return this.result_highlight=c,this.result_select(b)},e.prototype.search_results_mouseover=function(b){var c;c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first();if(c)return this.result_do_highlight(c)},e.prototype.search_results_mouseout=function(b){if(a(b.target).hasClass("active-result"))return this.result_clear_highlight()},e.prototype.choices_click=function(b){b.preventDefault();if(this.active_field&&!a(b.target).hasClass("search-choice")&&!this.results_showing)return this.results_show()},e.prototype.choice_build=function(b){var c,d,e=this;return c=this.container_id+"_c_"+b.array_index,this.choices+=1,this.search_container.before('<li class="search-choice" id="'+c+'"><span>'+b.html+'</span><a href="javascript:void(0)" class="search-choice-close" rel="'+b.array_index+'"></a></li>'),d=a("#"+c).find("a").first(),d.click(function(a){return e.choice_destroy_link_click(a)})},e.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),this.is_disabled?b.stopPropagation:(this.pending_destroy_click=!0,this.choice_destroy(a(b.target)))},e.prototype.choice_destroy=function(a){return this.choices-=1,this.show_search_field_default(),this.is_multiple&&this.choices>0&&this.search_field.val().length<1&&this.results_hide(),this.result_deselect(a.attr("rel")),a.parents("li").first().remove()},e.prototype.results_reset=function(b){this.form_field.options[0].selected=!0,this.selected_item.find("span").text(this.default_text),this.show_search_field_default(),a(b.target).remove(),this.form_field_jq.trigger("change");if(this.active_field)return this.results_hide()},e.prototype.result_select=function(a){var b,c,d,e;if(this.result_highlight)return b=this.result_highlight,c=b.attr("id"),this.result_clear_highlight(),this.is_multiple?this.result_deactivate(b):(this.search_results.find(".result-selected").removeClass("result-selected"),this.result_single_selected=b),b.addClass("result-selected"),e=c.substr(c.lastIndexOf("_")+1),d=this.results_data[e],d.selected=!0,this.form_field.options[d.options_index].selected=!0,this.is_multiple?this.choice_build(d):(this.selected_item.find("span").first().text(d.text),this.allow_single_deselect&&this.single_deselect_control_build()),(!a.metaKey||!this.is_multiple)&&this.results_hide(),this.search_field.val(""),this.form_field_jq.trigger("change"),this.search_field_scale()},e.prototype.result_activate=function(a){return a.addClass("active-result")},e.prototype.result_deactivate=function(a){return a.removeClass("active-result")},e.prototype.result_deselect=function(b){var c,d;return d=this.results_data[b],d.selected=!1,this.form_field.options[d.options_index].selected=!1,c=a("#"+this.container_id+"_o_"+b),c.removeClass("result-selected").addClass("active-result").show(),this.result_clear_highlight(),this.winnow_results(),this.form_field_jq.trigger("change"),this.search_field_scale()},e.prototype.single_deselect_control_build=function(){if(this.allow_single_deselect&&this.selected_item.find("abbr").length<1)return this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>')},e.prototype.winnow_results=function(){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;this.no_results_clear(),i=0,j=this.search_field.val()===this.default_text?"":a("<div/>").text(a.trim(this.search_field.val())).html(),f=new RegExp("^"+j.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),m=new RegExp(j.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),r=this.results_data;for(n=0,p=r.length;n<p;n++){c=r[n];if(!c.disabled&&!c.empty)if(c.group)a("#"+c.dom_id).css("display","none");else if(!this.is_multiple||!c.selected){b=!1,h=c.dom_id,g=a("#"+h);if(f.test(c.html))b=!0,i+=1;else if(c.html.indexOf(" ")>=0||c.html.indexOf("[")===0){e=c.html.replace(/\[|\]/g,"").split(" ");if(e.length)for(o=0,q=e.length;o<q;o++)d=e[o],f.test(d)&&(b=!0,i+=1)}b?(j.length?(k=c.html.search(m),l=c.html.substr(0,k+j.length)+"</em>"+c.html.substr(k+j.length),l=l.substr(0,k)+"<em>"+l.substr(k)):l=c.html,g.html(l),this.result_activate(g),c.group_array_index!=null&&a("#"+this.results_data[c.group_array_index].dom_id).css("display","list-item")):(this.result_highlight&&h===this.result_highlight.attr("id")&&this.result_clear_highlight(),this.result_deactivate(g))}}return i<1&&j.length?this.no_results(j):this.winnow_results_set_highlight()},e.prototype.winnow_results_clear=function(){var b,c,d,e,f;this.search_field.val(""),c=this.search_results.find("li"),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],b=a(b),b.hasClass("group-result")?f.push(b.css("display","auto")):!this.is_multiple||!b.hasClass("result-selected")?f.push(this.result_activate(b)):f.push(void 0);return f},e.prototype.winnow_results_set_highlight=function(){var a,b;if(!this.result_highlight){b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first();if(a!=null)return this.result_do_highlight(a)}},e.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),c.find("span").first().html(b),this.search_results.append(c)},e.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},e.prototype.keydown_arrow=function(){var b,c;this.result_highlight?this.results_showing&&(c=this.result_highlight.nextAll("li.active-result").first(),c&&this.result_do_highlight(c)):(b=this.search_results.find("li.active-result").first(),b&&this.result_do_highlight(a(b)));if(!this.results_showing)return this.results_show()},e.prototype.keyup_arrow=function(){var a;if(!this.results_showing&&!this.is_multiple)return this.results_show();if(this.result_highlight)return a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices>0&&this.results_hide(),this.result_clear_highlight())},e.prototype.keydown_backstroke=function(){return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(this.pending_backstroke=this.search_container.siblings("li.search-choice").last(),this.pending_backstroke.addClass("search-choice-focus"))},e.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},e.prototype.keydown_checker=function(a){var b,c;b=(c=a.which)!=null?c:a.keyCode,this.search_field_scale(),b!==8&&this.pending_backstroke&&this.clear_backstroke();switch(b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:this.keydown_arrow()}},e.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"];for(i=0,j=g.length;i<j;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return c=a("<div />",{style:f}),c.text(this.search_field.val()),a("body").append(c),h=c.width()+25,c.remove(),h>this.f_width-10&&(h=this.f_width-10),this.search_field.css({width:h+"px"}),b=this.container.height(),this.dropdown.css({top:b+"px"})}},e.prototype.generate_random_id=function(){var b;b="sel"+this.generate_random_char()+this.generate_random_char()+this.generate_random_char();while(a("#"+b).length>0)b+=this.generate_random_char();return b},e}(AbstractChosen),c=function(a){var b;return b=a.outerWidth()-a.width()},d.get_side_border_padding=c}.call(this)

odl.namespace('location2');

odl.location2 = function (parent, arg_options ) {
	var self = this;
	var root = '';
	var options = {
		'countryChangeEvent' : 'countryChanged.post',
		'toggle': '',
		'appendTo' : null
	};

	jQ.extend(options, arg_options);
	self.toggle = function(isVisible)
	{
		var $locationPanel = root.find(" .location-panel");
		isVisible = isVisible !== undefined ? isVisible : !$locationPanel.is(':visible');

		if (isVisible)
		{
			$locationPanel.slideDown('fast');
			root.find('.location-bar .ar').removeClass('down').addClass('up');
		}
		else
		{
			if (root.find('.bad').length > 0) //if there are any errors on the form - don't close it
				return;
			$locationPanel.slideUp('fast');
			root.find('.location-bar .ar').removeClass('up').addClass('down');
		}
	}

	self.countryChange = function()
	{
		self.resetNeighborhoods();
		self.resetLocationText();
		self.setupLocationText();
		self.setLocationCity("");
		jQ(self.elements.countrySelect).trigger(options.countryChangeEvent);
		root.find(".neighborhoodError").hide();

		var $rightDiv = root.find(".loc-rightdiv");
		if (!self.isFullySupported())
		{
			$rightDiv.hide();
		}
		else
		{
			$rightDiv.show();
		}
	};

	self.isFullySupported = function(){
		if (self.data.hint)
		{
			if (jQ(self.elements.countrySelect).val() in self.data.hint)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
	};

	self.countrySetup = function()
	{
		if (self.isFullySupported())
		{
			self.setupLocationText();
		}
		else
		{
			self.unsupportedCountry();
		}
	};

	self.unsupportedCountry = function()
	{
		self.setLocationCity(jQ(self.elements.location).val());
		root.find(".loc-locationblock").css("display", "none");
	};

	self.resetLocationText = function()
	{
		root.find(".loc-suggest-container").empty().append("<div class=\"loc-suggest\"></div>");
		jQ(self.elements.location).val("");
		self.setCityText("");
		jQ(self.elements.location).autocomplete("destroy");
		jQ(self.elements.location).siblings('label').html(self.data.hint[jQ(self.elements.countrySelect).val()]);
		jQ(self.elements.location).change();
	};

	self.setCityText = function(cityText)
	{
		root.find(".city-label").text(cityText);
	};

	self.setupLocationText = function()
	{
		if (self.isFullySupported())
		{
			root.find(".loc-locationblock").css("display", "block");
			jQ(self.elements.location).keyup(function(event){
				self.resetNeighborhoods();
				var txtBox = jQ(event.currentTarget);
				var txtVal = txtBox.val();
				root.find(".neighborhoodError").html("Select a city first").hide();
				if (txtVal && txtVal.length > 4 && !isNaN(txtVal))
				{
					self.setupNeighbhorhoods(txtVal);
				}
				else if (event.keyCode == 13 || event.keyCode == 9)
				{
					self.setupNeighbhorhoods(txtVal);
					root.find(".neighborhoodError").html("No " + self.neighborhoodLabel + "s available for this city").hide();
				}
				else
				{
					self.setCityText("");
					self.setLocationCity("");
				}
			});

			jQ(self.elements.location).blur(function(event){
				self.setCityText(jQ(event.target).val());
			});

			var autoCompleteoptions = {};
			var countryCode = jQ(self.elements.countrySelect).val();
			var url = "/ajax/autocomplete/?format=json&type=verbose&country=" + countryCode;
			if (options.appendTo)
			{
				autoCompleteoptions['appendTo'] = jQ(options.appendTo);
			}
			else
			{
				autoCompleteoptions['appendTo'] = '.loc_widget';
			}
			autoCompleteoptions['source'] = url;
			autoCompleteoptions['select'] = function(event, data)
			{
				var location_str = data.item.value;
				self.setLocationCity(data.item.id);
				self.setupNeighbhorhoods(location_str);
				self.setCityText(location_str);
				//can be used to restore location from neighborhood.
				self.data.selectedCityCode = data.item.id;
				jQ(self.elements.location).focus();
				root.find(".neighborhoodError").hide();
				root.find(".neighborhoodError").html("No " + self.neighborhoodLabel + "s available for this city").hide();
			};
			autoCompleteoptions['open'] = function()
			{
				jQ('ul.ui-autocomplete').css('z-index', odl.zindex.getHighest());
			};

			jQ(self.elements.location).autocomplete(autoCompleteoptions);
			root.find(".neighborhoodError").html("Select a city first");
		}
		else
		{
			self.unsupportedCountry();
			self.setCityText(jQ(self.elements.countrySelect).find("option[value='" + jQ(self.elements.countrySelect).val() + "']").text());
		}
	};

	self.setLocationCity = function(cityCode){
		jQ(self.elements.location_city).val(cityCode);
	};

	self.resetNeighborhoods = function(){
		var $rightDiv = root.find(".loc-rightdiv");
		self.setNeighborhoodText("");
		$rightDiv.find(".neighborhood-suggest-container").empty();
		jQ('<select/>', {'html': ""}).appendTo($rightDiv.find('.neighborhood-suggest-container')).attr("data-placeholder", "Choose " + self.neighborhoodLabel);
		$rightDiv.find(".neighborhood-suggest-container select").chosen({allow_single_deselect: true}).attr('disabled', true).trigger("liszt:updated");
		$rightDiv.find(".neighborhood-suggest-container a.chzn-single").click(function(event){ $rightDiv.find(".neighborhoodError").show();});
	};

	self.setupNeighbhorhoods = function(location_str, selected_neighborhood)
	{
		var location_text = location_str || self.elements.location.val();
		var country_code = self.elements.countrySelect.val();

		if (!odl._cache_nbrhood)
			odl._cache_nbrhood = {};

		if (odl._cache_nbrhood[location_str] === undefined)
		{
			if ( location_text != '' && (country_code == 'USA' || country_code == 'CAN'))
			{
				odl._cache_nbrhood[location_str] = "lock";
				var url = "/post2/getNeighborhoods?format=autocomplete&location=" + escape(location_text) + "&country=" + country_code;
				jQ.getJSON(url, function(data){ odl._cache_nbrhood[location_str] = data; self.showNeighborhoods(data, selected_neighborhood); });
			}
		}
		else if (odl._cache_nbrhood[location_str] && odl._cache_nbrhood[location_str] == "lock")
		{
			var checkAgain = function(){
				if (odl._cache_nbrhood[location_str] && odl._cache_nbrhood[location_str] == "lock")
				{
					setTimeout(checkAgain, 300);
				}
				else
				{
					self.showNeighborhoods(odl._cache_nbrhood[location_str], selected_neighborhood);
				}
			};
			checkAgain();
		}
		else //we found a lock. keep waiting and checking.
		{
			self.showNeighborhoods(odl._cache_nbrhood[location_str], selected_neighborhood)
		}
	};

	self.showNeighborhoods = function(data, selected_neighborhood)
	{
		if (data && data.neighborhoods && data.neighborhoods.length)
		{
			self.resetNeighborhoods();
			var $rightDiv = root.find(".loc-rightdiv");
			$rightDiv.show();
			var cityText = self.elements.location.val();
			if (!isNaN(cityText))
			{
				self.setCityText(cityText);
			}

			if (root.find(".city-label").text() == "")
			{
				var cityStr = data.city.name;
				cityStr = cityStr && data.city.state ? cityStr + ", " + data.city.state : cityStr;
				self.setCityText( cityStr );
			}

			jQ(self.elements.location).autocomplete("close");
			$rightDiv.find(".neighborhood-suggestions").show();
			var items = [];
			items.push('<option value=""></option>');
			jQ.each(data.neighborhoods, function(key, item) {
					var item_val = item.value;
					var selected = "";
					if (item_val == selected_neighborhood)
					{
						selected = " selected = \"selected\" ";
						self.setNeighborhoodText(item_val);
					}
					items.push('<option value="' + item.id + '"' + selected + '>' + item_val + '</option>');
				});
			$rightDiv.find(".neighborhood-suggest-container").empty();
			var select = jQ('<select/>', {'html': items.join('')}).appendTo($rightDiv.find(' .neighborhood-suggest-container')).attr("data-placeholder", "Choose " + self.neighborhoodLabel);
			jQ(select).change(function(event){
				optionSelected = jQ(event.target).find("option:selected");
				if (!optionSelected.val())
				{
					self.setNeighborhoodText("");
					self.setLocationCity(self.data.selectedCityCode);
				}
				else
				{
					self.setNeighborhoodText(jQ(optionSelected).text());
					self.setLocationCity(jQ(optionSelected).val());
				}
			});

			$rightDiv.find(".neighborhood-suggest-container select").chosen({allow_single_deselect: true});
		}
	}

	self.setNeighborhoodText = function(text)
	{
		if (text && root.find(".city-label").text())
			text = text + ", ";
			root.find(".neighborhood-label").text(text);
	};

	self.prefillNeighborhoods = function()
	{
		if (self.data.neighborhoods)
		{
			self.resetNeighborhoods();
			self.showNeighborhoods(self.data.neighborhoods, self.data.selected_neighborhood);
		}
	}

	self.readStateInfo = function()
	{
		self.data = jQ.parseJSON(root.find("input.loc-payload").val()) || {};
		if (! self.data.hint)
		{
			log("Location Init error: Couldn't find the payload element");
		}
		self.neighborhoodLabel = root.find(".loc-rightdiv .neighborhood-suggestions span.pltext").text();
	};

	self.useContextLocation = function(){
		//this should be populated for a listing.
		var locTxt = jQ(self.elements.location).val();
		if (locTxt == "" && odl && odl.info && odl.info.location)
		{
			var location = {};
			jQ.extend(location, odl.info.location);

			var locationTxt = location.text;
			var neighborhood = locationTxt.match(/\(.*\)/g) || "";
			if (neighborhood)
			{
				neighborhood = neighborhood[0];
				neighborhood = neighborhood.substring(1, neighborhood.length - 1 );
				location.selected_neighborhood = neighborhood;
			}
			var cityName = locationTxt.replace(/\s\(.*\)/g, "");
			location.text = cityName;
			self.initFromJSON(location);
		}
	};

	self.toJSON = function()
	{
		var data ={ 'country' : jQ(self.elements.countrySelect).val(),
			'text': jQ(self.elements.location).val(),
			'city_code' : jQ(self.elements.location_city).val()
		};

		var neighborhood_txt = root.find(".city-label").text();
		if (neighborhood_txt)
		{
			data['neighborhoods'] = self.data.neighborhoods;
			data['selected_neighborhood'] = neighborhood_txt;
		}
		return data;
	};

	self.initFromJSON = function(location)
	{
		if (!location)
			return;

		jQ(self.elements.countrySelect).val(location.country);
		var locCityCode = location.city_code || "";
		self.setLocationCity(locCityCode);
		self.data.selectedCityCode = locCityCode;
		if (location.text)
		{
			jQ(self.elements.location).val(location.text);
			self.setCityText(location.text);
			if (location.selected_neighborhood && location.neighborhoods)
			{
				self.showNeighborhoods({'city': "", 'neighborhoods': location.neighborhoods}, location.selected_neighborhood);
			}
			else
			{
				root.bind("init.location", function(event, data){
					self.setupNeighbhorhoods(location.text, location.selected_neighborhood);
				});
			}
		}
	};

	// should allow the suggest options to be styled.
	self.addAutoSuggestDiv = function(){
		if (!jQ('.loc_widget').get(0))
		{
			var containerDiv = jQ('<div/>', {'class' : 'loc_widget'}).appendTo('body');
		}
	};

	self.init = function(parent)
	{
		self.parent = parent;
		root = jQ(self.parent).find(" .location-widget");
		self.addAutoSuggestDiv();
		var elements = {};
		elements.countrySelect = root.find('.loc-countryselect');
		elements.location = root.find('.loc-location');
		elements.neighborhoods = root.find('.loc-neighborhood');
		elements.location_city = root.find(".loc-location_city");
		self.elements = elements;

		self.readStateInfo();
		root.find(".location-bar").click(function(event) {
			self.toggle();
		});

		jQ(elements.countrySelect).bind('change', function(event){self.countryChange();});
		jQ(elements.location).bind('focus', function(event){jQ(event.target).select();});
		jQ(elements.location).bind("keydown", function(e){if(e.keyCode == 13) {return false;}});


		if (options.location)
		{
			self.initFromJSON(options.location);
		}
		else if (self.data && self.data.neighborhoods)
		{
			self.prefillNeighborhoods();
		}
		else
		{
			self.useContextLocation();
		}
		self.countrySetup();
		self.setupLocationText();
	};

	self.init(parent);
};
(function($) {
	var methods = {};
	
	methods.refreshCircles = function()
	{
		//only refresh if previously there is no circle, so that we do not overwrite user select after fb connect
		if ($(this).find('.target-select.circle-select').length == 0)
		{
			$(this).find('.target-select.circle-select').remove();
			$(this).find('#fb-connect-circle').toggle(false);
			$(this).postTarget();
			odl.shadowFormElement.add($(this), '.shadow-element input');
		}
	};
	
	methods.init = function(options) {
    	return this.each( function() {
    		var $this = $(this);

			// render circle stuff
			var prototypeEl = $this.find('.target-circles-prototype');
			if (prototypeEl.length)
			{
				var prototype = prototypeEl.attr('data-prototype');
				var shareWithContainer = $this.find('.share-with');
				if (odl.info.post_circles) {
	    			for (circleId in odl.info.post_circles)
					{
						var circleElHtml = prototype.replace(/\$\$label\$\$/g, $('<div/>').text(odl.info.post_circles[circleId]).html()).replace(/\$\$name\$\$/g, circleId);
	    				$(circleElHtml).appendTo(shareWithContainer);
					}
	     		}
			}
    	});
	};

    $.fn.postTarget = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on jquery.postTarget.js');
            }
        }
    };
})(jQuery);

(function($) {
	var postAttribute = function(options) {
		var postAttb = this;
		this.options = options;
		this.container = options.container;
		
		this.arrow = this.container.find('.ar');
		this.header = this.container.find('.hdr');
		this.body = this.container.find('.body');
		this.body.slideUp();
		
		var toggleCollapse = function() {
			if (postAttb.header.is(':visible')) {
				postAttb.unCollapse();
			}
			else {
				postAttb.collapse();
			}
		};
		
		// Bind refresh to on change
		this.arrow
			.bind('click', {postAttb: this}, toggleCollapse);
		this.header
			.bind('click', {postAttb: this}, toggleCollapse)
		this.body.find('input, select')
			.bind('change', {postAttb: this}, this.refresh);
		this.body.find('input:radio')
			.bind('change', {postAttb: this}, this.refresh);
		this.body.find('input:radio')
			.bind('checkchange', {postAttb: this}, this.refresh);
		//when error happens open attribute section
		
		this.container.bind('validate_error', function(){
			// Toggle header
			if (postAttb.header.is(':visible')) {
				postAttb.body.slideDown();
				postAttb.header.slideUp(function() {
					refreshArrow(postAttb);
				});
			}
		});
		
		this.toggle(false);
	};
	
	postAttribute.prototype.getHeader = function(maxItems) {
		maxItems = maxItems || 3;
		var labels = [];
		var valueLabels = [];
		var attbElements = this.body.find('label:visible');
		
		attbElements.each(function(index, value) {
			var $this = $(this);
			var label = $this.text().replace(':', '').toLowerCase();
			var value = $this
				.parent()
				.find('input:text, select')
				.val();
			// Need to do special work for radio box
			
			if ($this.siblings('input:radio').length > 0) {
				return;
			}
			
			var checkedRadioElements = $this.parent().find('input:radio:checked');
			if (checkedRadioElements.length > 0) {
				value = checkedRadioElements.val();
			}
			
			var valueLabel = null;
			
			if (value && value != -1) {
				valueLabel = $this.text().replace(':', '');
				valueLabel += ': ' + value;
			}
			
			if ((index -1) == maxItems) {
				label += '...';
			}

			if (label && labels.length <= maxItems) {
				labels.push(label);
			}
			
			if (valueLabel && valueLabels.length <= maxItems) {
				valueLabels.push(valueLabel);
			}
		});
		
		if (valueLabels.length > 0) {
			return valueLabels.join(', ');
		}
		
		if (labels.length > 0)
		{
			var text = 'Add ' + labels.join(', ') + ' (optional)';
			return text;
		}
		
		return null;
	};
	
	var refreshArrow = function(postAttb) {
		if (postAttb.header.is(':visible'))
			postAttb.arrow.removeClass('up').addClass('down');
		else
			postAttb.arrow.removeClass('down').addClass('up');
	};
	
	postAttribute.prototype.refresh = function(event) {
		var postAttb = this;
		if (event && event.data && event.data.postAttb) {
			postAttb = event.data.postAttb;
		}
		
		postAttb.container.show();
		postAttb.body.show();
		
		var shortHeader = postAttb.getHeader(3);
		if (shortHeader)
		{
			// Refresh the text in header based on what is visible
			postAttb.header
				.find('.attr-title')
				.text(shortHeader)
				.attr('title', postAttb.getHeader(20));
			
			postAttb.toggle(true);
			postAttb.unCollapse();
		}
		else
		{
			postAttb.toggle(false);
		}
	};
	
	postAttribute.prototype.collapse = function() {
		var postAttb = this;
		postAttb.body.slideUp(function () {		// Close Body
			postAttb.header.toggle(true);
			postAttb.header.slideDown(function() {
				refreshArrow(postAttb);
			});
		});
	}
	
	postAttribute.prototype.unCollapse = function() {
		var postAttb = this;
		postAttb.body.slideDown(function() { $(this).show(); });				// Open body
		postAttb.header.slideUp(function() {
			refreshArrow(postAttb);
		});
	}
	
	// toggle - toggles the display of the attribute widget
	postAttribute.prototype.toggle = function(event) {
		var postAttb = this;
		var toggleState = null;
		if (typeof event === 'boolean') {
			toggleState = event;
		}
		else if (event && event.data && event.data.postAttb) {
			postAttb = event.data.postAttb;
		}
		
		if (toggleState) {
			postAttb.container.show();
		}
		else {
			postAttb.container.hide();
		}
	};
	
	postAttribute.prototype.setCategoryId = function(rootCategoryId, categoryId, priceContainer) {
		// container will be our specific attributes container for this rootCategory
		var container = this.container.find('#attributes-' + rootCategoryId);
		this.container.find('label, input, select, textarea').attr('disabled', true).addClass('disabled');

		// Need the following two pieces of information to match accordingly
		var countryCode = this.container.parent().find('.loc-countryselect').val();
		var partnerCode = odl.info.partner_group || odl.info.partner_tag;

		var defaultDefaultCategoryId = 'default-default-' + categoryId; // default-default-123
		var countryCodeCategoryId = countryCode + '-' + categoryId;
		var defaultCountryCodeCategoryId = 'default-' + countryCodeCategoryId; // default-GBR-123
		var defaultCountryCode = 'default-' + countryCode;

		var partnerCodeCountryCode = partnerCode + '-' + countryCode; // facebook-GBR  		
		var partnerCodeCountryCodeCategoryId = partnerCodeCountryCode + '-' + categoryId; // facebook-GBR-123
		var partnerCodeDefaultCategoryId = partnerCode + '-default-' + categoryId; // facebook-default-123

		// Helper function to see if the contents of a data field matches a set of criteria
		var checkMatch = function (data) {
			var match = false;
			$(data.split(' ')).each(function () {
				if (this == defaultDefaultCategoryId || // default-default-123
					this == defaultCountryCodeCategoryId || // default-GBR-123
					this == defaultCountryCode || // default-GBR
					this == partnerCodeDefaultCategoryId || // facebook-default-123
					this == partnerCodeCountryCodeCategoryId || // facebook-GBR-123
					this == partnerCodeCountryCode) // facebook-GBR
				{	
					match = true;
				}
			});
			return match;
		}

		var data = null;
		// Enable specific elements that are within the current rootCategory
		container.find('label, div.radio-wrap, :text, select').each(function () {
			var touched = false;
			var wrapper = $(this).parents('.clearfix').first();
			
			// First process add categories (these are overrides that are 'added' on certain conditions)
			if (data = $(this).attr('data-add-categories'))
			{
				var match = checkMatch(data);
				touched = true;
				if (!match)
				{
					wrapper.hide();
					if ($(this).is('div'))
					{
						$(this).find('input').attr('disabled', true).addClass('disabled');
					}
					$(this).attr('disabled', true).addClass('disabled');
				}
				else
				{
					wrapper.show();
					if ($(this).is('div'))
					{
						$(this).find('input').removeAttr('disabled').removeClass('disabled');
					}
					$(this).removeAttr('disabled').removeClass('disabled');
				}				
			}
			
			// Now process removal of attributes
			if (data = $(this).attr('data-remove-categories'))
			{
				var match = checkMatch(data);
				if (match)
				{
					touched = true;
					wrapper.hide();
					if ($(this).is('div'))
					{
						$(this).find('input').attr('disabled', true).addClass('disabled');
					}
					$(this).attr('disabled', true).addClass('disabled');
				}
			}
			
			// If attribute was neither added nor removed, then we enable it by default
			if (!touched)
			{
				wrapper.show();
				if ($(this).is('div'))
				{
					$(this).find('input').removeAttr('disabled').removeClass('disabled');
				}
				$(this).removeAttr('disabled').removeClass('disabled');
			}						
		});


		// Price, OBO, Free - special logic

		// This should represent the final result of what to show/hide
		var show = { price: false,
					 obo: false,
					 free: false };

		// Determine whether to show price, obo, or anything else		
		container.find(':hidden').each(function () {
			for(attr in show)
			{
				var regex = new RegExp(attr);
				if (regex.test($(this).attr('name')))
				{
					var addData = null;
					if (addData = $(this).attr('data-add-categories'))
					{
						if (checkMatch(addData))
						{
							show[attr] = true;
						}
					}
					if (data=$(this).attr('data-remove-categories'))
					{
						if (checkMatch(data))
						{
							show[attr] = false;
						}
						else if (!addData)
						{
								show[attr]= true;
						}
					}
					else
					{
						show[attr] = true;
					}
					$(this).attr('disabled', true);
				}
			}
		});

		// Adjust the price container according to the status of the data structure
		if (!show.price)
		{
			// Disable all price fields
			priceContainer.hide().addClass('disabled');
			priceContainer.find('input').attr('disabled', true);
		}
		else
		{
			// Enable all price fields that are disabled
			if (priceContainer.hasClass('disabled'))
			{
				priceContainer.removeClass('disabled');
				priceContainer.show().find('input').removeAttr('disabled');
			}
				
			// Show obo?
			var $obo = priceContainer.find('#listingForm_obo');
			if (!show.obo)
			{
				$obo.attr('disabled', true)
				$obo.parent().hide();
			}
			else
			{
				$obo.removeAttr('disabled')
				$obo.parent().show();
			}

			// Show free?
			var $free = priceContainer.find('#listingForm_isFree');
			if (!show.free)
			{
				if ($free.is(':checked'))
				{
					$free.removeAttr('checked').trigger('change');
				}
				$free.attr('disabled', true).parent().hide();
			}
			else
			{
				$free.removeAttr('disabled');
				$free.parent().show();
			}
		}
	};
	
	var methods = {};

	methods.init = function(options) {
    	return this.each( function() {
    		var $this = $(this);
    		var postAttb = $this.data('post_attb');
    		if (!postAttb)
			{
	    		postAttb = new postAttribute({container: $this});
	    		$this.data('post_attb', postAttb);
			}
    	});
	};
	
	methods.postAttb = function() {
		var retVal = null;
    	this.each( function() {
    		var $this = $(this);
    		var postAttb = $this.data('post_attb');
    		if (!postAttb)
			{
	    		postAttb = new postAttribute({container: $this});
	    		$this.data('post_attb', postAttb);
			}
    		
    		retVal = postAttb;
    		
    	});
    	
    	return retVal;
	}

    $.fn.postAttb = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on jquery.postTarget.js');
            }
        }
    };
})(jQuery);

(function($) {
	var methods = {};
    methods.init = function(options) 
    {
    	return this.each(function() {
    		var $this = $(this);
    		
    		var onLogin = function() {
    			var loginMode = odl.info.is_facebook ? 'facebook-direct' : 'facebook-and-oodle';
    			if (!odl.info.fbjs_enabled) {
    				loginMode = 'oodle';
    			}
    			
    			odl.auth2.login
    			({
    				login_mode : loginMode,		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
    				start_viral_loop : false,
    				event_params : {
    					event_name : 'PolaroidLogin',
    					event_page : 'polaroid'
    				},
    				success : function() {}
    			});
    		};
    		
			var dimension = odl.info.logged_in ? 50 : 37;
			$(this).find('img')
				.attr({
					src: odl.info.user_img,
					width: dimension,
					height: dimension
				});
			
			$(this).find('.login')
				.toggle(!odl.info.logged_in)
				.find('a')
					.click(onLogin)
					.text(odl.info.is_facebook ? 'Connect' : 'Login');
			
			if (odl.info.logged_in) {
				$this.find('.profile-polaroid-pic').removeClass('anon');
			}
			else {
				$this.find('.profile-polaroid-pic').addClass('anon');
			}
    	});
    }

    $.fn.profilePolaroid = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on odl.nf_composer.js');
            }
        }
    };
    
    // Spy on Auth change event... and besure to refresh certin classes
	var onAuthChange = function() {
		$('.profile-polaroid').profilePolaroid();
	}
	
	$(document).bind('odl.refresh', onAuthChange);
})(jQuery);

/**
 * makes element a sortable drag/drop gallery
 * 
 * options:
 * 		id						- id to assign to gallery. defaults to sg-gallery-<uid>
 * 		scrollStep				- number of steps to scroll
 * 		scrollInterval			- interval of scrolling
 * 		update					- callback function upon sorting update.   function(event, ui) { .... }
 */
(function($) {
	var jQ = $;
	var defaultOptions = { scrollStep: 2, scrollInterval: 1/90 };
	var methods = {};
	var sgalleryID = 0;
	
	var _addGalleryLeftScroll = function(sortableGallery)
	{
		var el = $('<span id="'+sortableGallery.attr('id')+'-left" class="sg-scroll-l"><div></div></span>');
		$(el).hover(function()
					{
						sortableGallery.sortableGallery('scrollLeft'); 
					}, 
					function() { 
						sortableGallery.sortableGallery('stopScroll'); 
					})
			.click(function()
					{ 
						sortableGallery.sortableGallery('scrollOneItemLeft'); 
					});
					
		sortableGallery.prepend(el);
	};
	
	var _addGalleryRightScroll = function(sortableGallery)
	{
		var el = $('<span id="'+sortableGallery.attr('id')+'-right" class="sg-scroll-r"><div></div></span>');
		$(el).hover(function()
					{ 
						sortableGallery.sortableGallery('scrollRight'); 
					}, 
					function() 
					{ 
						sortableGallery.sortableGallery('stopScroll'); 
					})
			.click(function()
					{ 
						sortableGallery.sortableGallery('scrollOneItemRight'); 
					});
					
		sortableGallery.append(el);
	};
	
	var _checkGalleryScroll = function(sortableGallery)
	{
		var offset = parseInt(sortableGallery.data('gallery').css('left'));
		if (!offset)
		{
			jQ('#'+sortableGallery.attr('id')+'-left').addClass('disabled');
		}
		else
		{
			jQ('#'+sortableGallery.attr('id')+'-left').removeClass('disabled');
		}
		
		// can scroll right?
		var maxRightScrollOffset = _getMaxRightScrollOffset(sortableGallery);
		
		if (maxRightScrollOffset <= Math.abs(offset))
		{
			jQ('#'+sortableGallery.attr('id')+'-right').addClass('disabled');
		}
		else
		{
			jQ('#'+sortableGallery.attr('id')+'-right').removeClass('disabled');
		}		
	};
	
	var _getMaxRightScrollOffset = function(sortableGallery)
	{
		var galleryEls = sortableGallery.sortableGallery('getItems');
		if (!galleryEls.length) return 0;
		
		var galleryWidth = sortableGallery.data('gallery').parent().width();
		var totalGalleryItemsWidth = 0;
		galleryEls.each(function() {
			totalGalleryItemsWidth += $(this).outerWidth(true);
		});
		
		return (totalGalleryItemsWidth - galleryWidth);
	};
	
	var _getElementsInView = function(sortableGallery)
	{
		var galleryEls = sortableGallery.sortableGallery('getItems');
		if (!galleryEls.length) return null;
		var sgOffset = sortableGallery.data('gallery').parent().offset();
		var sgLeft = sgOffset.left;
		var sgRight = sgLeft + sortableGallery.data('gallery').parent().width();
		return galleryEls.filter(function(index)
		{
			return ((jQ(this).offset().left < sgRight) && ((jQ(this).offset().left + jQ(this).width()) > sgLeft));
		});
	};
	
	var _onScroll = function(sortableGallery)
	{
		if (typeof(sortableGallery.data('gallery-opts').onScroll) == 'function')
		{
			(sortableGallery.data('gallery-opts').onScroll)();
		}
	}
	
	methods.init = function(options)
	{
		var o = $.extend({}, defaultOptions);
		var $this = $(this);
		$.extend(o, options);
		o.id = (o.id ? o.id : 'sgallery-' + ++sgalleryID);
		
		if (!$this.attr('id'))
		{
			$this.attr('id', 'sg-container-' + sgalleryID)
		}
		
		var galleryOuter = $('<div class="sg-gallery-o"></div>');
		// hack: add dummy item with float:left when creating gallery otherwise sortable will treat each element as if it wasn't flating
		var gallery = $('<ul id="' + o.id + '" class="sg-gallery"><li style="float:left;"></li></ul>');
		galleryOuter.append(gallery);
		$this.data('gallery', gallery);
		$this.append(galleryOuter);
		$this.data('gallery-opts', o);

		var sortableOptions = {
			revert: true,
			start: function(event, ui)
			{
				$this.data('gallery-opts', $.extend($this.data('gallery-opts'), { draggedEl: ui.helper }));
				if (typeof(options.start) == 'function')
				{
					options.start();
				}
			},
			stop: function(event, ui)
			{
				$this.data('gallery-opts', $.extend($this.data('gallery-opts'), { draggedEl: null }));
			}
		};
		
		$this.data('gallery').sortable($.extend(sortableOptions, options));
		$this.data('gallery').children().remove();
		_addGalleryLeftScroll($this);
		_addGalleryRightScroll($this);
	};
	
	methods.stopScroll = function()
	{
		var $this = $(this);
		if ($this.data('gallery-opts').scrolling)
		{
			clearTimeout($this.data('gallery-opts').scrolling);
			$this.data('gallery-opts', $.extend($this.data('gallery-opts'), { scrolling: null }));
		}
	};
	
	methods.scrollOneItemLeft = function()
	{
		var $this = $(this);
		var data = $this.data('gallery-opts');
		var oldOffset = parseInt($this.data('gallery').css('left'));
		var elementsInView = _getElementsInView($this);
		var firstItemInView = elementsInView.first();
		var firstItemInGallery = $this.sortableGallery('getItems').first();
		var newOffset;
		if (!firstItemInGallery.length) // no gallery items
		{
			return;
		} 
		else if (!firstItemInView.length)
		{
			$this.sortableGallery('scrollOneItemRight');
			return;
		}
		else
		{
			newOffset = Math.min(firstItemInGallery.offset().left - firstItemInView.prev().offset().left, 0);
		}
		
		if (oldOffset == newOffset)
		{
			_checkGalleryScroll($this);
			return;
		}
		
		$this.data('gallery').css('left', newOffset);
		
		$this.data('gallery').sortable('refresh');
		_checkGalleryScroll($this);
		_onScroll($this);
	};
	
	methods.scrollOneItemRight = function()
	{
		var $this = $(this);
		var data = $this.data('gallery-opts');
		var oldOffset = parseInt($this.data('gallery').css('left'));
		var elementsInView = _getElementsInView($this);
		var lastElementInView = elementsInView.last();
		
		var maxRight = _getMaxRightScrollOffset($this);
		if (maxRight <= 0)
		{
			$this.data('gallery').css('left', 0);
			_checkGalleryScroll($this);
			_onScroll($this);
			return;
		}
		
		var newOffset;
		if (!lastElementInView.length || !lastElementInView.next().length)
		{
			newOffset = -maxRight;
		}
		else
		{
			newOffset = Math.max(oldOffset - ((elementsInView.last().next().offset().left + elementsInView.last().next().outerWidth()) - ($this.data('gallery').parent().offset().left + $this.data('gallery').parent().width())), -maxRight);
		}
		
		if (oldOffset == newOffset)
		{
			_checkGalleryScroll($this);
			return;
		}
		
		$this.data('gallery').css('left', newOffset);
		
		$this.data('gallery').sortable('refresh');
		_checkGalleryScroll($this);
		_onScroll($this);
	};
	
	methods.scrollLeft = function(force)
	{
		var $this = $(this);
		var data = $this.data('gallery-opts');
		
		if (!force && data.clickToScroll && !data.draggedEl)
		{
			return;
		}
		
		var oldOffset = parseInt($this.data('gallery').css('left'));
		var newOffset = Math.min(oldOffset + data.scrollStep, 0);
		if (oldOffset == newOffset)
		{
			_checkGalleryScroll($this);
			if (data.scrolling) 
			{
				clearTimeout(data.scrolling);
			}

			_onScroll($this);
			return;
		}
		
		$this.data('gallery').css('left', newOffset);
		
		var scrolledPixels = Math.abs(oldOffset - newOffset);
		if (data.draggedEl)
		{
			data.draggedEl.css('left', parseInt(data.draggedEl.css('left')) - scrolledPixels);
		}
		
		$this.data('gallery').sortable('refresh');
		
		_checkGalleryScroll($this);
		
		data.scrolling = setTimeout(function() { $this.sortableGallery('scrollLeft', force); }, data.scrollInterval);
		$this.data('gallery-opts', data);
	};
	
	methods.scrollRight = function(force)
	{
		var $this = $(this);
		var data = $this.data('gallery-opts');
		
		if (!force && data.clickToScroll && !data.draggedEl)
		{
			return;
		}
		
		var galleryEls = $this.sortableGallery('getItems');
		
		if (!galleryEls.length) return;
		
		var maxRight = _getMaxRightScrollOffset($this);
		if (maxRight <= 0)
		{
			if (data.scrolling)
			{
				clearTimeout(data.scrolling);
			}
			$this.data('gallery').css('left', 0);
			_checkGalleryScroll($this);
			_onScroll($this);
			return;
		}
		
		var oldOffset = parseInt($this.data('gallery').css('left'));
		var newOffset = Math.max(oldOffset - data.scrollStep, -maxRight);
		if (oldOffset == newOffset)
		{
			if (data.scrolling) 
			{
				clearTimeout(data.scrolling);
			}
			
			_checkGalleryScroll($this);
			return;
		}
		
		$this.data('gallery').css('left', newOffset);
		
		var scrolledPixels = Math.abs(oldOffset - newOffset);
		if (data.draggedEl)
		{
			data.draggedEl.css('left', parseInt(data.draggedEl.css('left')) + scrolledPixels);
		}
		
		$this.data('gallery').sortable('refresh');
		_checkGalleryScroll($this);
		
		data.scrolling = setTimeout(function() { $this.sortableGallery('scrollRight', force); }, data.scrollInterval);
		$this.data('gallery-opts', data);
	};
	
	
	methods.getItems = function(includeHelper)
	{
		if (!includeHelper)
		{
			return $(this).data('gallery').children().not('.ui-sortable-helper');
		}
		
		return $(this).data('gallery').children();
	};
	
	methods.addItem = function(key, item, noScroll)
	{
		$(this).data('gallery').append($('<li id="'+key+'"></li>').append(item));
		$(this).data('gallery').sortable('refresh');
		$('#'+key).hover(function(){ $(this).addClass('selected'); }, function(){ $(this).removeClass('selected'); });
		if (!noScroll)
		{
			$(this).sortableGallery('scrollRight', true);
		}
		
		_checkGalleryScroll($(this));
	};
	
	methods.replaceItem = function(replaceElID, replaceWithKey, replaceWithItem, noScroll)
	{
		jQ('#'+replaceElID).replaceWith($('<li id="'+replaceWithKey+'"></li>').append(replaceWithItem));
		$('#'+replaceWithKey).hover(function(){ $(this).addClass('selected'); }, function(){ $(this).removeClass('selected'); });
		if (!noScroll)
		{
			$(this).sortableGallery('scrollRight');
		}
		
		_checkGalleryScroll($(this));
	};
	
	methods.deleteItem = function(id, cb)
	{
		var me = $(this);
		var deleteFn = function() { 
			$(this).remove(); 
			me.data('gallery').sortable('refresh');
			if (_getMaxRightScrollOffset(me) <= Math.abs(parseInt(me.data('gallery').css('left'))))
			{
				me.sortableGallery('scrollRight', true);
			}
			
			if (typeof(cb) == 'function') cb();
		};
		
		$(this).data('gallery').children('#'+id).fadeOut('fast', deleteFn);
		
	};
	
	methods.getItemKeys = function()
	{
		return $(this).data('gallery').sortable('toArray');
	};
	
	$.fn.sortableGallery = function(method)
	{
		if (methods[method])
		{
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		}
		else if (typeof method === 'object' || !method)
		{
			return methods.init.apply(this, arguments);
		}
		else
		{
			$.error('Method ' + method + ' does not exist');
		}
	};
})(jQuery);
odl.namespace('post2');

(function($) {
	// This is composer level spy
	var onTextFocus = function(event) {
		var container = $(this).parents('#composer-fields');
		var text = container.find('input:text[name=title]');
		var button = container.find('.composer-input #submit-orange-button');
		var composer = container.find('.composer');

		var action = button.val().toLowerCase();
		var composerActionContainer = container.find('#container_' + action);
		if (composerActionContainer.css('display') == 'none')
		{
			container.children().toggle(false);
			window.onbeforeunload = null;
			if (action != 'search') {
				var spinnerImg;
				var callback = function () {
					composerActionContainer.fadeIn();
					composer.css({
						'margin-right': '12px'
					});
	
					container.find('#listingForm_title').focus();
					if (!jQ(composerActionContainer).hasClass("comp_open"))
					{
						container.find('#listingForm_title').val('');
					}
	
					jQ(composerActionContainer).addClass("comp_open")
						.find(".location-widget")
						.trigger("init.location");
	
					odl.spam.addTM(odl.info.tmsid);
					container.find('#listingForm_tmsid').val(odl.info.tmsid);
				};

				if (!odl.fb.initCalled)
				{
					odl.fbready.add(callback);
					spinnerImg = document.createElement('img');
					$(spinnerImg).addClass('spinner');
					$(spinnerImg).bind('load', function () { odl.fb.init(); });
					jQ('#composer-fields').append(spinnerImg);
					$(spinnerImg).attr('src','http://i.oodleimg.com/a/animate/spinner-small-e2e9f1.gif');
				}
				else
				{
					callback();
				}
			}
			else {
				composerActionContainer.toggle(true);
			}
		}
	};

	post = function(options) {
		var $this = options.postContainer;
		var index = options.ad_type + '_html';
		if (options.form) {
			$form = $(options.form);
		}

		var $form = $form || $(odl.post.info[index]);
		
		$this.toggle(options.toggle ? true : false).append($form);

		var listingId = $this.find('#listingForm_listingId').val();
		var onCategoryChange = function (event, categoryId, ancestors) {
			var rootCategoryId = ancestors[0];
			$this.find('.attributes').toggle(false);
			$this.find('#attributes-' + rootCategoryId).show();

			// For edit, lock category
			if (listingId) {
				var categoryObject = $this.find('#listingForm_categoryId')
					.pCategory('cat');
				categoryObject.lockRootCategory();
			}

			// Lets remove the errors on change
			$this.find('#listingForm_categoryId')
				.parent()
				.removeClass('bad')
				.find('.error')
				.remove();

			// Handle dog posting - on facebook
			if (!listingId) {
				var dogCategoryId = 361;
				var isShowDogPostWarning = (categoryId == dogCategoryId) ||
					$.inArray(dogCategoryId, ancestors) > 0;

				$this.find('.dog-category-warning').toggle(isShowDogPostWarning);
			}
			else {
				$this.find('.dog-category-warning').toggle(false);
			}

			var postAttb = $this.find('.post_attributes').postAttb('postAttb');
			postAttb.setCategoryId(rootCategoryId, categoryId, $this.find('.price'));
			postAttb.refresh();

			$this.find('.post-form').change();
		};

		var onCountryChange = function() {
			var countryCode = $(this).val();
			$.ajax({
				url: '/post/category/' + countryCode,
				dataType: 'json',
				success: function(result) {
					var selectedCategory = $this.find('#listingForm_categoryId')
					.pCategory('value');

					$this.find('#listingForm_categoryId')
						.pCategory('destroy')
						.pCategory({
							categories: result
						})
						.bind('category_change', onCategoryChange)
						.pCategory('value', selectedCategory);
				}
			});
			// Load the proper currency symbol
			$this.find('.price-fields label[for=listingForm_price]').load('/post/c_symb/' + countryCode);
		};

		var onPostSubmit = function() {
			// Lets makes sure there are no errors...
			//	We can call individual widgets and see if there are any errors

			// Lets make sure user is logged in

			// Lets trigger post
			var $timelineCheckbox = $this.find('#listingForm_postTarget_facebook');

			var mustFacebookConnect = odl.info.is_facebook ||
										(odl.info.fbjs_enabled &&
												(odl.info.partner_group == 'oodle' ||
												odl.info.partner_group == 'military' ||
												$timelineCheckbox.is(':checked')));
			
			var loginMode = 'facebook-and-oodle';
			if (mustFacebookConnect) {
				loginMode = 'facebook-direct';
			}
			else if (!odl.info.fbjs_enabled) {
				loginMode = 'oodle';
			}

			if (!listingId && odl.info.fbjs_enabled) {
				var dogCategoryId = 361;
				var categoryId = $this.find('#listingForm_categoryId').val();
				var isShowDogPostWarning = (categoryId == dogCategoryId);

				if (isShowDogPostWarning) {
					loginMode = 'facebook-direct';
				}
			}

			odl.auth2.login({
				post: true,
				event_params: {
					event_name: 'PostLogin',
					event_page : 'post'
				},
				login_mode: loginMode,
				start_viral_loop : false,
				location: locationObject.toJSON(),
				success: function() {
					$this.find('.post-form').ajaxForm('submit');
				},
				failure: function() {
					if (mustFacebookConnect)
					{
						//alert('you must facebook connect to post');
					}
					else {
						//alert('you must login/register to post');
					}
				}
			});

			return false;
		};

		//since this is also called when form is init, it should handle both
		//logged in and not logged in cases
		var onAuthChange = function() {
			var oldOnBeforeUnload = window.onbeforeunload;
			window.onbeforeunload = oldOnBeforeUnload;

			var marketplaceCheckbox = $this.find('#listingForm_postTarget_marketplace');
			var fbTimelineCheckbox = $this.find('#listingForm_postTarget_facebook');
			if (odl.info.fb_logged_in)
			{
				if (fbTimelineCheckbox.attr('disabled'))
				{
					fbTimelineCheckbox.removeAttr('disabled')
						.attr('checked', 'checked')
						.trigger('change');
				}
			}
			else
			{
				fbTimelineCheckbox.removeAttr('checked')
					.trigger('change')
					.attr('disabled', 'disabled');
			}

			$this.find('.fbc').toggle(odl.info.fb_logged_in);
			$this.find('.fbd').toggle(!odl.info.fb_logged_in);
		};

		var onMarketplaceSelectChange = function () {
			$this.find('.post-rest > p').hide();

			if (!odl.info.logged_in && !odl.info.fb_logged_in)
			{
				$this.find('.fb-connect-prompt').show();
			}
			else
			{
				if ($this.find('.marketplace-select input').is(':checked'))
					$this.find('.post-rest .all-mp').show();
				else
					$this.find('.post-rest .no-mp').show();
			}
		}

		// Setting value will cause onCategoryChange to execute
		$this.find('#listingForm_categoryId')
			.pCategory({
				categories: odl.post.info.categories
			})
			.bind('category_change', onCategoryChange)
			.pCategory('value', $this.find('#listingForm_categoryId').val());

		$this.find('.dog-category-warning').toggle(false);
		$this.find('.loc-countryselect').bind('change', onCountryChange);

		$this.postMediaGallery();
		$this.postTarget();

		if (odl.info.fbjs_enabled) {
			// Toggle connect promo based on conditions
			$this.find('.post-rest').toggle(true);
		}
		else {
			$this.find('.post-rest').toggle(false);
		}

		$this.find('.marketplace-select input[type="checkbox"]').bind('change', onMarketplaceSelectChange);

		//do this before onAuthChange
		odl.shadowFormElement.add($this, '.shadow-element input');

		// Lets listen to login events... (we may have to toggle some warning box)
		$(document).bind('odl.refresh', onAuthChange);
		onAuthChange();		// Trigger function call
		onMarketplaceSelectChange();

		//adjust the fields in the price div
		var $freeRadio = $this.find('#listingForm_isFree');
		var $priceFields = $this.find('.price-fields');
		var $priceTxtField = $priceFields.find('input').first();

		$freeRadio.bind('change', function() {
			if ($freeRadio.is(':checked'))
			{
				$priceTxtField.attr('disabled', 'disabled');
				$priceFields.find('.check-box-2').addClass('disabled');

				$priceTxtField.data('odl-cached-value', $priceTxtField.val()).val('');
			}
			else {
				$priceTxtField.attr('disabled', false);
				$priceFields.find('.check-box-2').removeClass('disabled');
				$priceTxtField.val($priceTxtField.data('odl-cached-value')).change();
			}
		});


		$this.find(".post-form").submit(onPostSubmit);
		$this.find('.ftr input:submit').click(onPostSubmit);

		var locationObject = new odl.location2($this);
		var imageUrl = odl.assets.img['progress'];
		var progressImg = $('<img/>').attr('src', imageUrl);
		// Ajax post
		$this.find('.post-form').ajaxForm({
			timeout: 90000,
			custom_success: function(returnedData) {
				// remove post lightbox if it is shown
				// Remove all fields and start up another instance
				$this.trigger('post_success', returnedData);
				$this.find('.post-form').trigger('sessionEnd');
			},
			custom_error: function(errorList, returnedJson) {
				for (var index in errorList) {
					var error = errorList[index];
					if (error && index == 'listingForm_locationForm_location') {
						locationObject.toggle(true);
					}
				}
				
				if (returnedJson.login_error) {
					// Simple login error... lets show login light box
					odl.info.logged_in = false;
					odl.info.fb_logged_in = false;
					onPostSubmit();
				}
				else {
					$this.trigger('post_error');
				}
			},
			custom_failure: function() {
				new odl.msgbox({
					header: 'Unexpected Error',
					content: 'Unable to post listing due to unexpected error. Please try again later',
					error_code: 5998,
					cancel: false
				});
			}
		}).bind('sessionStart', function() {
			$this.find('.ftr')
				.toggle(false)
				.after(progressImg);

			progressImg.css({'display': 'block', 'margin': '0 0 0 auto'})
				.toggle(true);

	    	var composerDiv = $this.parents('.composer');
	    	var overlay = $this.data('overlay');
	    	if (!overlay)
			{
		    	overlay = new Oodle.gui.ext.Overlay(window.document, odl.zindex.getHighest());
		    	$this.data('overlay', overlay);
			}
	    	overlay.show();
		}).bind('sessionEnd', function() {
			progressImg.toggle(false);
			$this.find('.ftr').toggle(true);

	    	var overlay = $this.data('overlay');
	    	if (overlay) {
	    		overlay.hide();
	    	}
		});

		$this.find('.post_attributes').postAttb();

		var LINE_HEIGHT = 13;
		var MAX_LINES = (options.ad_type == 'ask' ? 4 : 20);

		var description = $this.find('.speech-bubble-main textarea');
		if (!description.data('odl-lock'))
		{
			description.data('odl-lock', true);
			description.autoResize({
				extraSpace: 22,
				maxHeight: LINE_HEIGHT * MAX_LINES
			});

			//auto collapse description field when it loses focus
			var COLLAPSE_HEIGHT = 50;
			var mouseDownFlag = false;
			description.blur( function(){
				var height = description.height();
				if (height > COLLAPSE_HEIGHT)
				{
					var collapseLoopCount = 0;
					var collapseFunc = function () {
						if (!mouseDownFlag)
						{
							description.animate(
								{'height': COLLAPSE_HEIGHT}, {complete: function() { description.scrollTop(0); }}
							);
		
							description.focus(function(){
								var currentHeight = description.height();
								if (currentHeight < height)
								{
									description.animate({'height': height});
									height = currentHeight;
								}
							});
						}
						else if (collapseLoopCount < 20) // If someone hasn't released their mouse in 2 seconds, forget it
						{
							collapseLoopCount++;
							setTimeout(collapseFunc, 100);
						}
						else
						{
							// reset mouseDownFlag
							mouseDownFlag = false;
						}
					};
					setTimeout(collapseFunc, 100);
				}
			});
			
			$this.find('input,button').bind('mousedown.post', function () {
				mouseDownFlag = true;
			});
			$this.find('input,button').bind('mouseup.post', function () {
				mouseDownFlag = false;
			});
			$this.find('input,button').bind('click.post', function () {
				mouseDownFlag = false;
			});
		}

		$this.find('.post-form').change(function(){
			if (jQ(this).filter(':visible').length) // only setup onbeforeunload if form is visible
			{
				odl.post2.setupOnBeforeUnload();
			}
		});

		$this.find('input,textarea').each(
			function() {
				jQ(this).bind('keyup', function()
				{
					odl.post2.setupOnBeforeUnload();
				});
			});


		$this.find('input:text, textarea').each(function() {
					jQ(this).hint({label: 1});
				});

		//init fb timeline checkbox depending user fb log status
		if (!odl.info.fb_logged_in)
		{
			$this.find('#listingForm_postTarget_facebook').removeAttr('checked', 'checked')
				.attr('disabled', 'disabled')
				.trigger('change');
		}
	};

	var methods = {};
	methods.init = function(options) {
		var container = $(this).parents('#composer-fields');
		var button = container.find('.composer-input #submit-orange-button');
		var composer = container.find('.composer');

		if (!$(this).data('pPostInit'))
		{
			// We will only have one composer, so this should be fine
			var text = container.find('input:text[name=title]');
			$(text).unbind('focus.post').bind('focus.post', onTextFocus);
			$(this).data('pPostInit', true);
		}

		return this.each(function() {
			options.postContainer = $(this);
			var postObj = new post(options);
		});
	};

	$.fn.pPost = function(method) {
		// Method calling logic
		if (methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		}
		else {
			if (typeof method === 'object' || !method) {
				return methods.init.apply(this, arguments);
			}
			else {
				$.error('Method ' + method + ' does not exist on jQuery.ajaxForm');
			}
		}
	};
})(jQuery);

odl.post2.shown = true;

odl.post2.setupOnBeforeUnload = function()
{
	window.onbeforeunload = function()
	{
		return "You haven't finished your post yet. Do you want to leave without finishing?";
	}
};

odl.post2.init = function() {
	jQ('#nf_composer #container_ask')
		.pPost({ad_type: 'ask'})
		.bind('post_success', function(e, returnedData) {
			// need to destroy post, and go back to collapsed state
			if (returnedData.limit) {
				// User hit the limit, show max listing lb.
				var endEvent = function() {
					odl.post2.afterPost($this, returnedData.listing_id);
				};

				Oodle.Wizard.Show('message', 'max-listings', {'__listing_id' : returnedData.listing_id }, null, null, endEvent);
			}
			else {
				odl.post2.afterPost($this, returnedData.listing_id);
			}

			$this = jQ(this);
			$this.children().remove();
			$this.pPost({ad_type: 'ask'});

			// Refresh composer
			$this.removeClass('comp_open');
			jQ('#nf_composer')
				.nfComposer('toggleType', 'Ask')
				.find('#container_search').toggle(true);
			odl.post2.trackSubmitStatus('PostComposer', 'Ask', 'success');
			odl.post2.trackEvent('PostComposer', 'AskComplete'); //track links within the after ask light box
		})
		.bind('post_error', function(){
			odl.post2.trackSubmitStatus('PostComposer', 'Ask', 'error');
		});
	odl.post2.trackEvent('PostComposer', 'Ask'); //track events within the ask container

	jQ('#nf_composer #container_post')
		.pPost({ad_type: 'post'})
		.bind('post_success', function(e, returnedData) {
			if (returnedData.limit) {
				// User hit the limit, show max listing lb.
				var endEvent = function() {
					odl.post2.afterPost($this, returnedData.listing_id);
				};

				Oodle.Wizard.Show('message', 'max-listings', {'__listing_id' : returnedData.listing_id }, null, null, endEvent);
			}
			else {
				odl.post2.afterPost($this, returnedData.listing_id);
			}

			$this = jQ(this);
			$this.children().remove();
			$this.pPost({ad_type: 'post'});

			// Refresh composer
			$this.removeClass('comp_open');
			jQ('#nf_composer')
				.nfComposer('toggleType', 'Post')
				.find('#container_search').toggle(true);

			odl.post2.trackSubmitStatus('PostComposer', 'Post', 'success',
					{listing_id: returnedData.listing_id, category: returnedData.category, ad_type: returnedData.ad_type});
		})
		.bind('post_error', function(){
			odl.post2.trackSubmitStatus('PostComposer', 'Post', 'error');
		});
	odl.post2.trackEvent('PostComposer', 'Post'); //track event within the post container
};

odl.post2.postLB = {
	_msgbox : null,

	_defaultParams : {
		hide_header: false,
		header: "Post a Listing",
		hide_footer: true,
		width: 538,
		allow_move: false,
		allow_recenter: false,
		modal: true,
		skin: 'o-post-lightbox',
		callbacks: { close: function() { odl.post2.postLB._msgbox = null; window.onbeforeunload = null; } }
	},

	getDefaultParams : function()
	{
		var params = jQ.extend({}, odl.post2.postLB._defaultParams);
		var anchor = jQ('#nf_composer');
		if (anchor.length)
		{
			params.offset = jQ(anchor).offset();
		}
		else if (jQ('#listing-admin-panel').length)
		{
			params.offset = {top:jQ('#listing-admin-panel').offset().top};
			params.anchor_x = jQ('body');
		}
		else if (jQ('#main-column').length)
		{
			params.offset = {top:jQ('#main-column').offset().top};
			params.anchor_x = jQ('body');
		}
		else
		{
			params.anchor_x = jQ('body');
			params.offset = {top: 150};
		}

		return params;
	},

	open : function(params)
	{
		odl.post2.postLB.close();

		odl.post2.postLB._msgbox = new odl.msgbox(params);

		if (jQ('#composer_lightbox .close_x'))
		{
			jQ('#composer_lightbox .close_x').click(odl.post2.postLB.close);
		}
	},

	close : function(callback)
	{
		if (odl.post2.postLB._msgbox)
		{
			odl.post2.postLB._msgbox.close(callback);
		}
	}

};


odl.post2.showPostLightbox = function(params)
{
	if (!odl.fb.initCalled)
	{
		odl.post2.postLB.open({
			loading: true
		});
		odl.fbready.add(
			function () {
				odl.post2.showPostLightbox(params);
			}
		);
		odl.fb.init();
		return;
	}
	
	if (!params)
	{
		params = {};
	}
	if (!params.ad_type) params.ad_type = 'post';

	var postLBParams = odl.post2.postLB.getDefaultParams(params);

	if (jQ(document.documentElement).hasClass('iphone') || jQ(document.documentElement).hasClass('ipad'))
	{
		setTimeout(function() {
			window.location = "itms://itunes.apple.com/us/app/marketplace-for-oodle-facebook/id380393542?mt=8";
		}, 25);
		window.location = "oodlemarketplace://";
		return;
	}
	
	jQ.ajax({
		url: '/post/lightbox',
		method: 'GET',
		success: function(resp)
		{
			postLBParams.content = resp;
			odl.post2.postLB.open(postLBParams);
			var $post_nf_composer = jQ("#post_nf_composer");
			var refresh = function()
			{
				var selectedOption = $post_nf_composer.find('.composer-options .selected').text().toLowerCase();
				if (selectedOption == "ask")
				{
					$post_nf_composer.find("#container_ask").toggle(true).find(".location-widget").trigger("init.location");
					$post_nf_composer.find("#container_post").toggle(false);
				}
				else if(selectedOption == "post")
				{
					$post_nf_composer.find("#container_ask").toggle(false);
					$post_nf_composer.find("#container_post").toggle(true).find(".location-widget").trigger("init.location");
				}
			};

			// close the light box
			var onAskSuccess = function(e, returnedData)
			{
				if (returnedData.limit) {
					// User hit the limit, show max listing lb.
					var endEvent = function() {
						odl.post2.afterPost($this, returnedData.listing_id);
					};

					Oodle.Wizard.Show('message', 'max-listings', {'__listing_id' : returnedData.listing_id }, null, null, endEvent);
				}
				else {
					odl.post2.afterPost($this, returnedData.listing_id);
				}

				odl.post2.postLB.close();
				odl.post2.trackSubmitStatus('PostLightBox', 'Ask', 'Success'); //trigger/track post success
				odl.post2.trackEvent('PostLightBox', 'AskComplete'); //track link clicks in after post lightbox
			};

			var onAskError = function(e, returnedData)
			{
				odl.post2.trackSubmitStatus('PostLightBox', 'Ask', 'error');
			};

			var onPostSuccess = function(e, returnedData)
			{
				if (returnedData.limit) {
					// User hit the limit, show max listing lb.
					var endEvent = function() {
						odl.post2.afterPost($this, returnedData.listing_id);
					};

					Oodle.Wizard.Show('message', 'max-listings', {'__listing_id' : returnedData.listing_id }, null, null, endEvent);
				}
				else {
					odl.post2.afterPost($this, returnedData.listing_id);
				}

				odl.post2.postLB.close();
				odl.post2.trackSubmitStatus('PostLightBox', 'Post', 'success',
						{listing_id: returnedData.listing_id, category: returnedData.category, ad_type: returnedData.ad_type}); //trigger/track post success
				odl.post2.trackEvent('PostLightBox', 'PostComplete'); //track link clicks in after post lightbox
			};

			var onPostError = function(e, returnedData)
			{
				odl.post2.trackSubmitStatus('PostLightBox', 'Post', 'error');
			};

			$post_nf_composer.nfComposer();
			$post_nf_composer.find("#container_ask")
				.pPost({ad_type: 'ask'})
				.bind('post_success', onAskSuccess)
				.bind('post_error', onAskError);
			odl.post2.trackEvent('PostLightBox', 'Ask');

			$post_nf_composer.find("#container_post")
				.pPost({ad_type: 'post'})
				.bind('post_success', onPostSuccess)
				.bind('post_error', onPostError);
			odl.post2.trackEvent('PostLightBox', 'Post');

			$post_nf_composer
				.find('span.ask, span.post')
				.click(refresh)
				.removeClass('selected');

			$post_nf_composer.find('span.'+params.ad_type).addClass('selected');

			$post_nf_composer
				.nfComposer('toggleType', params.ad_type);

			$post_nf_composer.find('#listingForm_tmsid').val(odl.info.tmsid);

			refresh();

			if (params.title)
			{
				jQ('#post_nf_composer #container_'+params.ad_type+' #listingForm_title')
					.val(params.title).focus().trigger('focusin');
			}

			jQ('html,body')
				.animate({scrollTop: Math.max(jQ('#composer_lightbox').offset().top - 50, 0)}, 'fast');
		}
	});

	odl.spam.addTM(odl.info.tmsid);
};

odl.post2.editListing = function(listingID, skipLoading)
{
	if (!odl.fb.initCalled)
	{
		odl.post2.postLB.open({
			loading: true
		});
		odl.fbready.add(
			function () {
				odl.post2.editListings(listingID, true);
			}
		);
		odl.fb.init();
		return;
	}	
	else if (!skipLoading) // might have already opened the loading box above
	{
		odl.post2.postLB.open({
			loading: true
		});
	}

	jQ.ajax({
		type: 'GET',
		url: '/post2/'+listingID+'/',
		dataType: 'json',
		success: function(o)
		{
			var params = odl.post2.postLB.getDefaultParams();
			params.hide_header = false;
			params.header = 'Edit Listing';
			params.close_x = odl.post2.postLB.close;

			if (o.error)
			{
				params.content = o.error;

				odl.post2.postLB.open(params);
				window.onbeforeunload=false;
				return;
			}
			params.content = o.composerHtml;
			odl.post2.postLB.open(params);
			var onSuccess = function(event, returnedData) {
				// User hit the limit, show max listing lb.
				var endEvent = function() {
					var closeCallback = function () {
						window.onbeforeunload = null;
						if (jQ("ol.feed-items").length)
						{
							odl.post2.featuredListingTemplate(returnedData.listing_id);
	
							if (odl.info.isFacebook && self != top)
							{
								FB.Canvas.scrollTo(0,0);
							}
							else
							{
								jQ('body').scrollTop(0);
							}
						}
						else if (returnedData.url)
						{
							window.location.href = returnedData.url;
						}
						else
						{
							window.location.reload();
						}
					};
					odl.post2.postLB.close(closeCallback);
				};

				if (returnedData.limit) {
					Oodle.Wizard.Show('message', 'max-listings', {'__listing_id' : returnedData.listing_id }, null, null, endEvent);
				}
				else
				{
					endEvent();
				}
			};

			jQ('#container_edit')
				.pPost({form: o.formHtml, toggle: true})
				.bind('post_success', onSuccess);


			jQ('#composer_lightbox .composer').animate({'margin-left': 62}, 'fast', function() {
				jQ('#composer_lightbox #composer-input-wrapper').addClass('triangle-border left');
			});

			if (o.media && o.media.length)
			{
				jQ.each(o.media,
					function(i, el)
					{
						var imgUrl = '';
						var imgKey = '';
						var noCaption = true; // no captions for now
						if (el.type == 'image')
						{
							el.image_url = el.url;
						}
						else if (el.type == 'video')
						{
							el.image_url = el.thumb_url;
							el.key = el.url;
							noCaption = true;
						}
						jQ('#container_edit').postMediaGallery('add', el, noCaption, true);
					}
				);

				jQ('#container_edit').postMediaGallery('refresh');
			}

			jQ('html,body').animate({scrollTop: Math.max(jQ('#composer_lightbox').offset().top - 50, 0)}, 'fast');

			jQ('#container_edit input[type=submit]').val('Save');
		}
	});
};

//when user click 'connect with facebook'
odl.post2.fbconnect = function()
{
	odl.auth2.login
	({
		login_mode : 'facebook-direct',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
		start_viral_loop : false,
		event_params : {
			event_name : 'PostLogin',
			event_page : 'post'
		},
		success : function() {}
	});
};

odl.post2.featuredListingTemplate = function(listingID)
{
	var options = {
			url: '/post/first-listing/' + listingID,
			dataType: 'json',
			success: function(response) {
				var $div = jQ(response.html);
				$div.find('.footer').remove();
				jQ("#the-feed :first").removeClass("featured");
				var orderedList = jQ("<ol class='feed-items'></ol>");
				var divArray = $div.toArray();
				orderedList.append(divArray.shift()); // first element returned is html(<li>), subsequent ones are scripts
				jQ("#the-feed").prepend(orderedList);
				orderedList.append(divArray); // insert scripts
				jQ(jQ("ol.feed-items:first")[0]).wrap("<div class='featured' />")
			}
	};
	jQ.ajax(options);

	if (typeof history.pushState !== 'undefined')
	{
		var stateObj = {listing: listingID};
		history.pushState(stateObj, "featured_listing", "?f="+listingID);
	}

};

//pop up a where to go message box after post
odl.post2.afterPost = function(container, listingID)
{
	window.onbeforeunload = null;
	if (jQ('#newsfeed-nav').length > 0)
	{
		odl.post2.featuredListingTemplate(listingID);
	}
	else
	{
		var msgbox;
		var callback = function()
		{
			jQ('.after-post-box .top-close, .after-post-box .bottom-close').click
			(
				function(){msgbox.close();}
			);
			if (container.attr('id') == 'container_ask')
			{
				if (container.parents('#nf_composer').length > 0)
				{
					odl.post2.trackEvent('PostComposer', 'AskComplete'); //track links within the after post light box
				}
				else if (container.parents('#post_nf_composer').length > 0)
				{
					odl.post2.trackEvent('PostLightBox', 'AskComplete'); //track links within the after post light box
	
				}
			}
			else if (container.attr('id') == 'container_post')
			{
				if (container.parents('#nf_composer').length > 0)
				{
					odl.post2.trackEvent('PostComposer', 'PostComplete'); //track links within the after post light box
				}
				else if (container.parents('#post_nf_composer').length > 0)
				{
					odl.post2.trackEvent('PostLightBox', 'PostComplete'); //track links within the after post light box
				}
			}
		};
	
		var params =
		{
			url: '/post/after/?listing_id=' + listingID,
			width: 312,
			overlay: true,
			hide_header: true,
			hide_footer: true,
			change_msgbox_skin: 'after-post-box',
			callback : callback
		};
		msgbox = new odl.msgbox(params);
	}
};

/*
 * event tracking
 * @eventName : 'PostComposer', or 'PostLightBox'
 * @eventType : 'click', etc
 */
odl.post2.trackEvent = function(eventName, eventType)
{
	//eventname, eventType to wrapper map
	var wrapperMap =
	{
		'PostComposer' :
		{
			'Post' : '#nf_composer',
			'Ask' : '#nf_composer',
			'PostComplete' : '#after-post-box',
			'AskComplete' : '#after-post-box'
		},
		'PostLightBox' :
		{
			'Post' : '#post_nf_composer',
			'Ask' : '#post_nf_composer',
			'PostComplete' : '#after-post-box',
			'AskComplete' : '#after-post-box'
		}
	};

	var wrapperId = wrapperMap[eventName][eventType];

	//map of eventType to related events, count is used to track golbal
	var eventsMap =
	{
		'Post' :
		[
			{selector : '.composer-options .post', triggeredBy : 'click', status : 'click'},
			{selector : '#container_post #listingForm_title', triggeredBy : 'focus', status : 'start', trackOnce: true}
		],
		'Ask' :
		[
			{selector : '.composer-options .ask', triggeredBy : 'click', status : 'click'},
			{selector : '#container_ask #listingForm_title', triggeredBy : 'change', status: 'start', trackOnce: true}
		],
		'PostComplete' : //after post light box
		[
			{selector : '#go-home', triggeredBy : 'click', status : 'homepage'},
			{selector : '#go-profile', triggeredBy : 'click', status : 'profile'},
			{selector : '#go-listing', triggeredBy : 'click', status : 'listing'}
		],
		'AskComplete' : //after post light box
		[
			{selector : '#go-home', triggeredBy : 'click', status : 'homepage'},
			{selector : '#go-profile', triggeredBy : 'click', status : 'profile'},
			{selector : '#go-listing', triggeredBy : 'click', status : 'listing'}
		]
	};

	//events for specific elements
	var event;
	for (var i in eventsMap[eventType])
	{
		event = eventsMap[eventType][i];
		jQ(wrapperId + ' ' + event.selector).bind
		(
			event.triggeredBy,
			(function(){
				var params =
				{
					'event_name' : eventName,
					'event_type' : eventType,
					'status' : event.status,
					'partner' : odl.info.partner_tag,
					'masquerade' :odl.info.partner_masquerade,
					'oodle_id' : odl.info.user_id
				};
				var trackOnce = event.trackOnce;
				var trackCounter  = 0;
				return function(e)
				{
					//will not be fired by browser
					if (!trackOnce || (trackOnce && trackCounter == 0))
					{
						//if the target is a link, then should stop default, otherwise the ajax call
						var isTargetLink = typeof jQ(e.currentTarget).attr('href') === 'string';
						if (isTargetLink)
						{
							e.preventDefault();
						}
						if (isTargetLink)
						{
							jQ.ajax({
								'url' : odl.info.base_path + 'event/track-named/?' + jQ.param(params),
								'success' : function(){top.location.href = jQ(e.currentTarget).attr('href');}
							});
						}
						else
						{
							jQ.ajax({'url' : odl.info.base_path + 'event/track-named/?' + jQ.param(params)});
						}
					}
					trackCounter ++;
				};
			})()
		);
	}
};

//form submit status is tracked separately, since tracking logic is different
odl.post2.trackSubmitStatus = function(eventName, eventType, status, options)
{
	var params =
	{
		'event_name' : eventName,
		'event_type' : eventType,
		'status' : status,
		'partner' : odl.info.partner_tag,
		'masquerade' :odl.info.partner_masquerade,
		'oodle_id' : odl.info.user_id
	};
	jQ.extend(params, options);
	jQ.ajax({'url' : odl.info.base_path + 'event/track-named/?' + jQ.param(params)});
};

odl.namespace('post');

(function($) {
	var methods = {};
	var _ctr = 0;

	var addPlaceholder = function(postContainer, id)
	{
		postContainer.find('.post-media-gallery').sortableGallery(
			'addItem',
			id,
			'<div class="placeholder" /><span class="remove-img" onclick="jQ(this).closest(\'#' + postContainer.attr('id') + '\').postMediaGallery(\'remove\', \''+id+'\')"></span>'
		);
		var data = postContainer.data('postMediaGallery');
		data.totalMedia++;
		postContainer.data('postMediaGallery', data);
		postContainer.postMediaGallery('refresh');
	};
	
	var refreshPrimaryImageCallout = function(postContainer)
	{
		var data = postContainer.data('postMediaGallery');
		
		if (!data.totalMedia) return;
		
		postContainer.find('.post-media-gallery .sg-gallery li div.primary-callout').remove();
		jQ(postContainer.find('.post-media-gallery').sortableGallery('getItems', true)).each(function()
		{
			if ($(this).hasClass('ui-sortable-helper'))
			{
				return true;
			}
			else if ($(this).hasClass('ui-sortable-placeholder'))
			{
				itemEl = postContainer.find('.ui-sortable-helper');
			}
			else
			{
				itemEl = $(this);
			}
			
			var imageKeyEl = itemEl.find('input.key.post-media-type-image');
			if (imageKeyEl && imageKeyEl.length)
			{
				itemEl.append(
					'<div class="primary-callout">Primary Image</div>'
				);
				return false;
			}
		});
	};
	
	var getNextId = function()
	{
		return 'pmg_id_' + (++_ctr); 
	};
	
	var _getItemIDFromKey = function(key)
	{
		return key.replace(/[^A-Za-z0-9-_]/g, '_');
	};
	
	var maxMediaError = function(maxMedia)
	{
		new odl.msgbox({
			content: 'Sorry, you can only add a maximum of ' + maxMedia + ' photos or videos to your listing.',
			hide_header: true
		});
	};
	
    methods.init = function(options) {
    	
    	return this.each( function() {
    		var me = $(this);
    		if (!me.find('.post-media-gallery').length)
    		{
    			return;
    		}
    		
	    	me.find('.post-media-gallery').sortableGallery({ update: 
				function() { me.postMediaGallery('refresh'); },
				axis: 'x',
				clickToScroll: true,
				sort: function() { refreshPrimaryImageCallout(me); },
				onScroll: function() { me.postMediaGallery('refresh'); }
			});
			
			// add existing items
			var existingMedia = me.find('.post-media-gallery').children('existing-post-media-item');
			existingMedia.each(function()
			{
				var item = {};
				item['image_url'] = $(this).find('input.imageUrl').val();
				item['caption'] = $(this).find('input.caption').val();
				item['url'] = $(this).find('input.url').val();
				item['type'] = $(this).find('input.type').val();
				
				item['key'] = item['url'];
				
				me.sortableGallery('add', item, true, true);
				$(this).remove();
			});
			
			me.data('postMediaGallery', {
				totalMedia : 0,
				maxMedia : 9,
				uploadsInProgress : 0
			});	
			
			me.find(".image-upload-form").appendTo(me.find(".image-uploader-container"));
			
			me.find(".video-upload-form").appendTo(me.find(".video-uploader-container"));
			me.find('.video-uploader-container .add-media-link').bind('click', function() { me.find('.video-uploader-container').addClass('show-add'); me.find('.add-video-input').focus().change(); });
			me.find('.video-uploader-container .video-add-submit').bind('click', function() { me.postMediaGallery('addVideo'); });
			me.find('.add-video-input').keypress(function(event) { if ( event.which == 13 ) {
				me.postMediaGallery('addVideo');
				return false;
			 } });
			 
			me.find('.image-uploader-container input').unbind().change(
				function() { me.postMediaGallery('handleImageUpload'); }
			);
			
			me.data('postMediaGalleryImgUploadInput', jQ(me.find('.image-uploader-container input.file').clone(true)));
			
			me.postMediaGallery('refresh');
			
			me.find('.add-video-input').hint({label: 1});
		});
		
    };
    
    methods.destroy = function()
    {
    	var me = $(this);
    	me.find('.post-media-gallery').children().remove();
    	me.find('.post-media-gallery').sortableGallery({ update: 
			function() { me.postMediaGallery('refresh'); }
		});
		me.postMediaGallery('refresh');
    };
    
    methods.refresh = function()
    {
    	refreshPrimaryImageCallout($(this));
    	return this.each(function() {
    		var me = $(this);
    		var data = me.data('postMediaGallery');
    		data.totalMedia = me.find('.post-media-gallery').sortableGallery('getItems').length;
			if (!data.totalMedia)
			{
				me.find('.image-upload').removeClass('gallery-open').addClass('gallery-closed');
			}
			else
			{
				me.find('.image-upload').addClass('gallery-open').removeClass('gallery-closed');
			}
			
			var postMediaGallery = me.find('.post-media-gallery');
			var scrollDisabled = me.find('.sg-scroll-l.disabled').length && me.find('.sg-scroll-r.disabled').length;
			if (scrollDisabled && postMediaGallery.hasClass('scrollable'))
			{
				// @todo hide scrollbars
				postMediaGallery.removeClass('scrollable');
				me.find('.post-media-gallery .sg-gallery-o').width(postMediaGallery.width()); // fix display bug where 100% width doesn't auto adjust to the available parent width
			}
			else if (!postMediaGallery.hasClass('scrollable') && data.totalMedia && !scrollDisabled)
			{
				// @todo show scrollbars
				postMediaGallery.addClass('scrollable');
				me.find('.post-media-gallery .sg-gallery-o').width(postMediaGallery.width()); // fix display bug where 100% width doesn't auto adjust to the available parent width
			}
			
			me.data('postMediaGallery', data);
    	});
    };
    
    methods.remove = function(id)
    {
    	return this.each(function() {
    		var me = $(this);
    		me.find('.post-media-gallery').sortableGallery('deleteItem', id, function() { me.postMediaGallery('refresh'); });
    	});
    };
    
    methods.add = function(item, noCaption, noScroll, replaceElID) {
		var itemID = _getItemIDFromKey(item['key']);
		
		return this.each(function() {
			var me = $(this);
			if (me.find('#' + itemID).length)
			{
				if (replaceElID)
				{
					me.postMediaGallery('remove', replaceElID);
				}
				
				return;
			}
			
			if (replaceElID && !me.find('#'+replaceElID).length)
			{
				me.postMediaGallery('remove', replaceElID);
				return;
			}
			
			var data = me.data('postMediaGallery');
			var itemStr = '<input type="hidden" name="listingForm[media]['+itemID+'][url]" value="' + item.key + '" class="key post-media-type-' + item.type + '" /><img src="'+item.image_url+'" title="'+(item.url || item.caption)+'" /><span class="remove-img" onclick="jQ(this).closest(\'#'+me.attr('id')+'\').postMediaGallery(\'remove\', \''+itemID+'\')"></span>';
		
			itemStr += '<input type="'+(noCaption ? 'hidden' : 'text')+'" name="listingForm[media]['+itemID+'][caption]" value="'+item.caption+'" />';
			
			if (item.type == 'video')
			{
				itemStr += '<div class="video-overlay"></div>';
			}
			
			if (replaceElID)
			{
				noScroll = true;
				me.find('.post-media-gallery').sortableGallery(
					'replaceItem',
					replaceElID,
					itemID,
					itemStr,
					noScroll
				);
			}
			else
			{
				me.find('.post-media-gallery').sortableGallery(
					'addItem',
					itemID,
					itemStr,
					noScroll
				);
			}
			
			data.totalMedia++;
			me.data('postMediaGallery', data);
		});
	
	};
	
	methods.isUploadInProgress = function()
	{
		var me = $(this);
		var data = me.data('postMediaGallery');
		return data.uploadsInProgress > 0;
	};
	
	// Adds a video to the gallery. Video url is taken from video-upload-form and passed in to /post/video to retrieve video details, and then added to gallery
	methods.addVideo = function()
	{
		var me = $(this);
		var data = me.data('postMediaGallery');
		var videoUrl = me.find('.add-video-input').val();
		var itemID = _getItemIDFromKey(videoUrl);
		
		if (me.find('#'+itemID).length) { return; } // video exists
		
		var tempID = 'temp_video_loading_'+getNextId();
		var options = {
			type :'POST',
			url :odl.info.base_path + 'post2/getVideo/',
			timeout: 300000,		// 5 minutes
			data : me.find('.video-upload-form').serialize(),
			dataType: 'json',
			success : function(o) {
				data.uploadsInProgress--;
				me.data('postMediaGallery', data);
				if (o.video) {
					o.video.image_url = o.video.thumb_url;
					o.video.key = o.video.url;
					o.video.type = 'video';
					me.postMediaGallery('add', o.video, true, false, tempID);
					jQ('.video-upload-form input').focus().attr('value', '').change();
				}
				else if (o.error) {
					me.postMediaGallery('remove', tempID);
					alert(o.error);
				}
	
				me.postMediaGallery('refresh');
			},
			error : function(e) {
				data.uploadsInProgress--;
				me.data('postMediaGallery', data);
				me.postMediaGallery('remove', tempID);
				alert('An error occurred. Please try again using a valid video url.');
			}
		};
		
		if (data.totalMedia < data.maxMedia)
		{
			addPlaceholder(me, tempID);
			data.uploadsInProgress++;
			me.data('postMediaGallery', data);
			jQ.ajax(options);
		}
		else
			maxMediaError(data.maxMedia);
		
		me.find('.video-uploader-container').addClass('show-add');
	};

	// handles uploading of an image right after an image is selected from the file browser
	methods.handleImageUpload = function()
	{	
		var me = $(this);
		var data = me.data('postMediaGallery');
		var tempID = 'temp_image_loading'+getNextId();
		// don't wait for image to finish upload before chnaging the file input name value
		var imageUploadForm = me.find('.image-upload-form');
		imageUploadForm.find('.file').attr('name', 'temp_image_' + getNextId());
		var options = {
			type :'POST',
			url :odl.info.base_path + 'post2/uploadPhoto/',
			timeout: 300000,		// 5 minutes
			data :imageUploadForm.serialize(),
			dataType: 'json',
			success : function(o) {
				data.uploadsInProgress--;
				me.data('postMediaGallery', data);
				if (o.status == 'ready') {
					o.type = 'image';
					if (o.image_url) {
						me.postMediaGallery('add', o, true, null, tempID);
					} else if (o.error) {
						alert(o.error);
					}
				}
				else if (o.error) {
					me.postMediaGallery('remove', tempID);
					alert(o.error);
				}
	
				me.postMediaGallery('refresh');
				me.find('.image-upload-form .file').replaceWith(jQ(me.data('postMediaGalleryImgUploadInput').clone(true)));
				
			},
			error : function(e) {
				data.uploadsInProgress--;
				me.data('postMediaGallery', data);
				me.postMediaGallery('remove', tempID);
				alert('An error occurred. Please select an image of lower size.');
				me.find('.image-upload-form .file').replaceWith(jQ(me.data('postMediaGalleryImgUploadInput').clone(true)));
			}
		};
	
		if (data.totalMedia < data.maxMedia)
		{
			addPlaceholder(me, tempID);
			data.uploadsInProgress++;
			me.data('postMediaGallery', data);
			imageUploadForm.ajaxSubmit(options);
		}
		else
			maxMediaError(data.maxMedia);
		
		/*imageUploadForm.find('.file').replaceWith(imageUploadForm.find('.file').clone());
		imageUploadForm.find('.file').unbind().change(
			function() { me.postMediaGallery('handleImageUpload'); }
		);*/
	};

    $.fn.postMediaGallery = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on odl.post.media');
            }
        }
    };
})(jQuery);

odl.namespace('nf_composer');

(function($) {
	var nfComposerHint = {
		'Ask' : "Ask your friends and neighbors...",
		'Search' : "Search the Marketplace...",
		'Post' : "Post a listing..."
	};
	
	var getHint = function(hint) {
		if (hint == 'Search') {
			if (odl.info.circleId) {
				return 'Search...';
			}
			else if (odl.info.nf_tuple == 'social_circle_friends') {
				return 'Search within Friends';
			}
			else if (odl.info.nf_tuple == 'social_circle_fof') {
				return 'Search within Friends of Friends';
			}
			else if (odl.info.page && odl.info.page.sub_domain_category_name) {
				return 'Search within ' + odl.info.page.sub_domain_category_name;
			}
		}
		
		return nfComposerHint[hint];
	};
	
	var getSearchParams = function() {
		var locationInfo = odl.info.location;
		var searchValues = {
			'reset': 0,
			'inbs': false
		};
		
		searchValues.g = 
			locationInfo.city_code ||
			locationInfo.loc ||
			locationInfo.country ||
			'';
		
		searchValues.r = locationInfo.radius ||
			'';
		
		searchValues.c = odl.info.page.category || '';
		searchValues.sc = odl.info.page.sub_domain_category || '';
	
		return searchValues;
	};
	
	var methods = {};
    methods.init = function(options) 
    {
		var submitLock = false;
		var text = $(this).find('input:text[name=title]');
		text.hint();
		
		var button = $(this).find('.composer-input #submit-orange-button');
		var profile = $(this).find('#profile-polaroid-wrapper');
		var composerWrapper = $(this).find('#composer-input-wrapper');
		
		var composer = $(this).find('.composer');
		var nf_composer = $(this);
	
		var refresh = function(event) {
			text.attr('placeholder', '');
			
			$('.profile-polaroid').profilePolaroid();

			if (this.tagName) {
				nf_composer.find('.composer-options .link').removeClass('selected');
				$(this).addClass('selected');
			}
			
			var selectedOption = nf_composer.find('.composer-options .selected').text();
			
			if (button)
			{
				button.val(selectedOption);
			}
			
			var placeHolder = getHint(selectedOption) || '';
			text.siblings('label').html(placeHolder);
			
			if (button)
			{
				button.text(selectedOption);
			}

			//HACK - since we are switching to an unopened adtype - bring back the SEARCH BAR
			nf_composer.find('#composer-fields').children().toggle(false);
			nf_composer.find("#container_search").toggle(true);

			var composerFormHint = nf_composer.find('#composer-form .ol-hint');	

			if (selectedOption == 'Search')
			{
				window.onbeforeunload = null;
				var searchQuery = text.data('search-query');
				text.val(searchQuery).focus();
				
				composer.animate({'margin-left': 0});
				profile.animate({width: 0}, 'fast', function() { composerWrapper.removeClass('speech-bubble'); });

				/*tracking codes*/
				if (event)
				{
					odl.event.trackNamed({'event_name' : 'composer', 'event_type' : 'search', 'status' : 'click'});
				}

				/* add in the circle dropdown if needed */
				if (odl.info.circleId) 
				{
					var circleDropdown = $('#composer-form #composer-dropdown');
					if (circleDropdown.length == 0)
					{
						/* Everything in the following block creates the circle dropdown */
						var defaultText = 'All Marketplace';
						var circleSearch = $('<div id="composer-dropdown"><span class="arrow"></span></div>');
						var hiddenCircleElem = $('<input type="hidden" name="circle_id" id="nf_composer_circle_id" />');
						hiddenCircleElem.val(odl.info.circleId);
						var composerForm = nf_composer.find('#composer-form');
						hiddenCircleElem.appendTo(composerForm);
						var allMarketplace = $('<li>' + defaultText + '</li>');
						var circleItem = $('<li>' + odl.info.circle.title + '</li>');
						var circleSearchList = $('<ul></ul>');
						allMarketplace.click(function() {
										hiddenCircleElem.val('');
										selectedCircle.html(defaultText);
										circleSearchList.hide();
									}
						);
						
						circleItem.click(function() {
										hiddenCircleElem.val(odl.info.circleId);
										selectedCircle.html(odl.info.circle.title);
										circleSearchList.hide();
									}
						);
						
						var selectedCircle = $('<div id="selected-circle"></div>');
						selectedCircle.html(odl.info.circle.title);

						var toggleCircleSearch = function() {
										circleSearchList.toggle();
									};

						circleSearchList.click(toggleCircleSearch);
						circleSearch.click(toggleCircleSearch);
						circleItem.appendTo(circleSearchList);
						allMarketplace.appendTo(circleSearchList);
						selectedCircle.appendTo(circleSearch);
						circleSearchList.appendTo(circleSearch);
						circleSearch.appendTo(composerFormHint);
					}
					else
					{
						circleDropdown.appendTo(composerFormHint);
					}
				}
			}
			else {
				text.data('search-query', text.val());
				text.val('');
				if ($("#container_" + selectedOption.toLowerCase()).hasClass("comp_open"))
				{
					text.focus();
				}
				else
				{
					text.blur();
				}
				var circleDropdown = $('#composer-form #composer-dropdown');
				circleDropdown.detach();
				if (!parseInt(profile.css('width')))
				{
					profile.animate({
						width: 64
					});
				}

				composer.animate({'margin-left': 62}, 'fast', function() { composerWrapper.addClass('speech-bubble'); });
				
				if (event)
				{
					if(selectedOption == 'Ask')
					{
						odl.event.trackNamed({'event_name' : 'composer', 'event_type' : 'ask', 'status' : 'click'});
					}
					else if(selectedOption == 'Post')
					{
						odl.event.trackNamed({'event_name' : 'composer', 'event_type' : 'post', 'status' : 'click'});
					}					
				}
			}
			
		};
			
		nf_composer.find('.search, .ask, .post').click(refresh);
			
		var searchValues = getSearchParams();
			
		var onSubmit = function() {
			if (submitLock)
			{
				return;
			}
			
			submitLock = true;
			var val;
			if (button)
			{
				val = button.val();
			}
			else
			{
				val = nf_composer.find('.composer-options .selected').text();
			}
			
			if (val == 'Search') {
				searchValues = getSearchParams();
				odl.event.trackNamed({'event_name' : 'composer', 'event_type' : 'search', 'status' : 'button'});
				searchValues.q = text.val();
				var circleID = nf_composer.find('#composer-form #nf_composer_circle_id').val();
				searchValues.tuples = new Array();
				
				if (circleID)
				{
					searchValues.tuples.push('circle_id_' + circleID); 
				}
				var url = '/browse_redir/?' + $.param(searchValues);
				window.location.href = url;
			}
			else
			{
				text.focus();
			}

			submitLock = false;
			return false;
		};
			
		if (odl.info.search_query) {
			text.data('search-query', odl.info.search_query);
		}
		
		// Lets add hooks
		nf_composer.submit(onSubmit);
		button.click(onSubmit);
		text.hint({label: 1});
		refresh();
	};
	
	methods.toggleType = function(ad_type)
    {
		return this.each(function() {
	    	var text = $(this).find('input:text[name=title]');
			var button = $(this).find('.composer-input #submit-orange-button');
		    button.val(ad_type);
		    
		    text.toggle(true);
		    if (button.val() == 'Search') {
		    	text.focus().trigger('focusin');
		    }
	    });
    };

    $.fn.nfComposer = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on odl.nf_composer.js');
            }
        }
    };
})(jQuery);

(function($) {
    
    /****************** Helper functions ********************/
    
    /**
     * @params $container jQuery object of possible container (div, span, etc)
     * @params errors array of error for the container
     */
   var renderError = function(params) {
        var $container = params.container;
        var errors = params.errors;
        var errorElement = $container.find('> .error');
        
        if (errorElement.length == 0) {
            errorElement = $('<div class="error" />');
            $container.append(errorElement);
        }

        if (errors != null) {
            $container.addClass(AjaxForm.options.class_bad).removeClass(AjaxForm.options.class_good);
            errorElement.css('display', 'block').html(errors.join('<br/>'));
        }
        else {
            $container.addClass(AjaxForm.options.class_good).removeClass(AjaxForm.options.class_bad);
            errorElement.css('display', 'none').html('');
        }
    };
    
    var onSessionStart = function() {
        this.$form.find('input:text, input:password, textarea').hint('removeHint');
    };
    
    var onSessionEnd = function() {
        this.$form.find('input:text, input:password, textarea').hint('showHint');
    };

    /**
     * Serialize form data + any custom data
     * 
     * @param data
     * @returns
     */
    var serialize = function(form, data) {
        try
        {
            var serializedData = form.serializeArray();
        }
        catch (e)
        {
            // TODO: handle exception
            log(e);
        }
        
        for ( var key in data) {
            value = $.toJSON(data[key]);
            serializedData.push({
                name : key,
                value : value
            });
        }

        return $.param(serializedData, false);
    };

    /****************** Class starts here functions ********************/
    
    /**
     * @param $form jQuery Form element
     * @options options {} - see AjaxForm.options and jQuery.ajax for supported options
     */
    var AjaxForm = function($form, options) {
        this.$form = $form;
        var ajaxForm = this;
        
        if (!options) {
            options = {};
        }

        // Guess which buttons we should disable when submit is triggered
        if (!options.buttons) {
            options.buttons = $form.find(':button, :submit');
        }

        // Try to guess url to submit to
        if (!options.url) {
            options.url = $form.attr('action');
            
            if (! options.url) {
                options.url = window.location.href;
            }
        }

        // Hi-jack form Submit
        $form.bind('submit', function(event) {
            // Prevents quick double submit
            setTimeout(function() {
                ajaxForm.submit()
            }, 100);

            return false;
        });

        this.options = $.extend({}, AjaxForm.options, options);
    };
    
    AjaxForm.options = {
		msg_error: 'Your request cannot be processed at this time. The server is busy, please try again later.',
        disable_session_lock : false, // Allow only one submit at a time

        class_bad : 'bad',
        class_good : 'good',
        url : null,
        data : {},                  // Additional data to upload
        timeout : 30000,            // 10 seconds time out
        ajax_upload : false,        // enable file upload?
        dataType : 'text',          // Always text
        type : 'POST',              // Always post
        buttons : [],               // Array of clickable jquery elements in the form

        // Define functions
        error_renderer: renderError,      // format error 
        busy_start: null,
        busy_stop: null,
        pre_validate: null,             // Call before ajax submit
        
        onSessionStart: onSessionStart,
        onSessionEnd :  onSessionEnd
    };

    /**
     * See jQuery.ajax.success(data, textStatus, jqXHR)
     */
    AjaxForm.prototype.success = function(data, status, xhr) {
        if ($.isArray(data) || $.isPlainObject(data))
        {
            var returnedJson = data;
        }
        else 
        {
            var returnedJson = $.parseJSON(data);
        }
        var errorList = returnedJson.error;

        var isErrorFree = true;
        for ( var index in errorList) {
            var errors = errorList[index];
            var container = null;
            
            try {
                container = this.$form.find('#' + index + '-container');
                if (container.length == 0) {
                    container = this.$form.find('#' + index).parent();
                }
                
                if (errors && errors.length > 0) {
                    isErrorFree = false;
                }
            } 
            catch (ex) {}
            
            container = (!container) ? this.$form : container;
            
            var params = {
                    container: container,
                    errors: errors,
                    default_renderer: renderError,
                    index: index
            };
            
            this.options.error_renderer.apply(this, [params]);
        }
        
        // Only call custom sucess function if it free form error
        if (this.options.custom_success && isErrorFree) {
            this.options.custom_success(returnedJson);
        }
        else if (!isErrorFree && this.options.custom_error)
        {
            this.options.custom_error(errorList, returnedJson);
        }

        // Window redirect, we should keep buttons disabled
        if (returnedJson.href) {
            window.location.href = returnedJson.href;
            var event = {success: true, keep_busy_on_success: true};
        }
        else {
            var event = {success: true};       // Enable user to submit again
        }
        
        this.endSession.apply(this, [event]);
    };

    /**
     * See jQuery.ajax.error(data, textStatus, jqXHR)
     */
    AjaxForm.prototype.error = function(jqXHR, textStatus, errorThrown) {
        if (this.options.custom_failure) {
        	log(this.options.custom_failure);
            this.options.custom_failure(jqXHR, textStatus, errorThrown);
        }
        else {
            alert(this.options.msg_error);
        }

        this.endSession.apply(this, [{success: false}]);
    };

    /**
     * Takes standard jQuery.ajax() options. Does the following:
     * 
     * 1. Submit using jQuery for jQuery Form Upload
     * 2. On success, trigger this.success() function
     * 3. On timeout, trigger this.error() function
     * 
     * @param options {} additional this.options override
     */
    AjaxForm.prototype.submit = function(options) {
        if (this.sessionTimeoutHandle) {      // do nothing - prevents double submit
            return;
        }

        if (options) {
            options = $.extend({}, this, this.options, options);
        }
        else {
            options = $.extend({}, this, this.options);
        }

        data = {};      // settings for $.ajax()
        options.dataType = 'text';                  // Lets submit text, jquery silently sollow parse error
        options.type = 'POST';                      // Post is best
        options.success = this.success;     // Can't let user override this function
        options.error = this.error;         // Can't let user override this function
        options.context = this;
        var errors = null;

        this.startSession.apply(this, [{ajax_options: options}]); // Start up a session
        if (options.pre_validate && $.isFunction(options.pre_validate)) {
            errors = options.pre_validate.apply(this, [options]);
        }
        
        options.data = serialize(this.$form, data);      // Re-init data

        if ($.isPlainObject(errors) || $.isArray(errors))
        {
            this.success.apply(this, [errors]);
        }
        else {
            // If we have ajaxSubmit library installed
            if ($.fn.ajaxSubmit && options.ajax_upload) {
                this.$form.ajaxSubmit(options);
            }
            else {
                $.ajax(options);
            }
        }
        
        return false;
    };
    
    /**
     * Handles start of session
     * 
     * 1. set timeout timmer to end session if ajax call takes longer than expected
     * 2. diable input buttons so that user can not submit another
     * 3. todo: show progress bar
     * 4. Set input fields to readonly
     */
    AjaxForm.prototype.startSession = function(event) {
        var me = this;
        if (!this.options.disable_session_lock) {
            // Let session time out after specified timeout
            this.sessionTimeoutHandle = setTimeout(function() {
                me.endSession.apply(me, [{success: false}]);
            }, this.options.timeout);
        }

        // Reset all errors
        this.$form.find('.error').html('').css('display', 'none');

        // Let delegate session Start
        this.options.onSessionStart.apply(this, [event]);
        this.$form.trigger('sessionStart',  [this]);
    };

    /**
     * Handles start of session
     * 
     * 1. kill timeout timmer
     * 2. undo all the disable/readonly by startSession()
     * 
     * @params keepSessionAlive sometime, it's useful to keep buttons and fields disabled, like
     *  setting window.location.href (It takes a while to load next page, and we want user to see
     *  progress bar)
     */
    AjaxForm.prototype.endSession = function(event) {
        // Request finished before our session end
        if (this.sessionTimeoutHandle) {
            clearTimeout(this.sessionTimeoutHandle);
        }

        this.options.onSessionEnd.apply(this, [event]);
        this.$form.trigger('sessionEnd', [this]);

        this.sessionTimeoutHandle = null;
    };
    
    /****************** jQuery Plugin starts here functions ******************/
    var methods = {};

    /**
     * jQuery wrapper
     * 
     * @param options
     * @returns
     */
    methods.init = function(options) {
        return this.each(function() {
            $this = $(this);

            // If the element is not form element, continue on
            if (this.tagName != 'FORM') {
                return;
            }

            var ajaxForm = $this.data('ajaxform');
            if (ajaxForm) {
                return; // Already initailized
            }
            
            ajaxForm  = new AjaxForm($this, options);
            $this.data('ajaxform', ajaxForm);
        });
    };
    
    methods.submit = function(options) {
        return this.each(function() { 
            $this = $(this);
            
            // If the element is not form element, continue on
            if (this.tagName != 'FORM') {
                return;
            }

            var ajaxForm = $this.data('ajaxform');
            if (!ajaxForm) {
                ajaxForm  = new AjaxForm($this, options);
                $this.data('ajaxform', ajaxForm);
            }
            
            ajaxForm.submit(options);
        });
    };

    $.fn.ajaxForm = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on jQuery.ajaxForm');
            }
        }
    };
    
    // Allow override of default options
    $.ajaxForm = function(options) {
        AjaxForm.options = $.extend(AjaxForm.options, options);
        return AjaxForm;
    };
})(jQuery);

(function($) {
	this.settings = {
		error_div_css: {
			width: '75px',
			height: '75px',
			position: 'absolute',
			display: 'block',
			right: 0,
			bottom: 0,
			'background-color': '#bcd5e6',
			'text-align': 'center'
		},
		error_position: {
			my: "left top",
			at: "right top",
			offset: "20 0",
			using: null,
			collision: "none none"
		}
	};
	
	var AjaxForm = {};
	
	var popupErrorRenderer = function(params) {
		var $container = params.container;
        var $isPost = false;

        //make container expand if it is collapsed
        $container.trigger('validate_error');
        
        if ($container.context != null && $container.context.attributes['action'] != null)
        {
        	var action = $container.context.attributes['action'];
        	if (action.nodeValue != undefined && action.nodeValue.indexOf('post') > 0)
        	{
        		$isPost = true;
        	}
        }
        var errors = params.errors;
        var errorElement = $container.find('> .error');
        
        if (errorElement.length == 0) {
            errorElement = $('<div class="error" />');
            $container.append(errorElement);
        }

        if (errors != null) {
            $container.addClass(AjaxForm.options.class_bad).removeClass(AjaxForm.options.class_good);
            
            errorElement.css('display', 'block').html(errors.join('<br/>'));
            var $parent = errorElement.parent();
            var adjustCss = (!$parent.hasClass('no-adjustments') && !$parent.parent().hasClass('no-adjustments'));
            if ( $isPost == true )
            {
            	//$label = $container.find('label');
            	//log($container.parent());
            	errorElement.parent().find('.error-tail').remove();
	            errorElement.wrap('<div class="error-tail"></div>');
	            var tailWidth = errorElement.width();
	            var parentPos = $container.parent().offset();
	            var parentLeft = parentPos.left ;
	            var errorLeft = parentLeft - tailWidth;
	            if ( $.browser.msie )
	            { 	errorLeft -= 30; }
	            else {
	            	errorLeft -= 20;
	            }
	            // Custom Oodle Post Hack
	            if (adjustCss)
	            {
	            	errorElement.parent().offset({ left: errorLeft });
	            }
	            //debugger;
	            if ( $.browser.msie && $.browser.version < 8 && jQ('#serp-navigators') != null) {
	            	jQ('#serp-navigators').addClass('zIndexAdd');
	            }
            }
            
            if (adjustCss)
            {
	            $container.find('.error-tail').css({'zIndex': odl.zindex.getHighest()});
	            $container.css({
	            	'position': 'relative'
	            });
            }
            
        }
        else {
            $container.addClass(AjaxForm.options.class_good).removeClass(AjaxForm.options.class_bad);
            errorElement.css('display', 'none').html('');
        }
    };
	
    var onSessionStart = function() {
    	// Remove all Errors.
    	var badClass = '.' + this.options.class_bad;
    	this.$form.find(badClass + ' .error').remove();
    	this.$form.find(badClass).removeClass(this.options.class_bad);
    };
    
    var onSessionEnd = function() {
    }
    
	if ($.ajaxForm)
	{
		AjaxForm = $.ajaxForm({
			error_renderer: popupErrorRenderer,
	        onSessionStart: onSessionStart,
	        onSessionEnd :  onSessionEnd
		});
	}
})(jQuery);

odl.namespace('auth2');

/**
 * Options for odl.auth2.login
 * 
 */
odl.auth2.options = {
	login_mode : 'facebook-and-oodle',		// [facebook-direct, facebook, oodle, facebook-and-oodle, facebook-or-oodle]
	start_viral_loop : true,
	post : false,
	force : false,			// force to login even when odl.info.logged_in is true cause it might be wrong (logged out from other window)
	bounceURL : '',
	refresh_favorites: true,
	event_params : {
		event_name : 'Login',
		event_page : 'register',
		event_type : 'login'
	},
	success : function() {
//		alert('login success');
		log('login success');
	},
	failure : function() {
//		alert('login fail');
		log('login fail');
	}
};

odl.auth2.init = function() {
	odl.auth2.msgBox = [];
	odl.auth2.loginForm = 'authLoginForm';
	odl.auth2.passresetForm = 'authPassResetForm';
	odl.auth2.newaccountForm = 'authNewAccountForm';
	odl.auth2.viralForm = 'authViralForm';

	// Setup events
	odl.auth2.event = new odl.event.framework();
	odl.auth2.event.addDefaultParams(odl.auth2.options.event_params);
};

/**
 * Care about both logged into facebook and oodle
 */
odl.auth2.login = function(options) {
	jQ.extend(odl.auth2.options, options);
	odl.auth2.event.addDefaultParams(odl.auth2.options.event_params);

	odl.auth2.closeMsgBox();

	if (odl.auth2.options.login_mode == 'facebook-direct') {
		odl.auth2.loginFacebook();
		return;
	}
	
	if (odl.auth2.options.login_mode == 'facebook' || odl.auth2.options.login_mode == 'facebook-or-oodle') {
		if (odl.info.fb_logged_in) {
			odl.auth2.loginFacebook();
			return;
		}
	} else if (odl.info.logged_in) {
		if (odl.auth2.options.force) {
			odl.auth2.handleAuthSuccess();
		}
		else {
			odl.auth2.event.track({
				event_type : 'oodle',
				status : 'existing'
			});
			odl.auth2.handleLoggedin();
		}
		return;
	}
	
	var width = 520;
	if (odl.auth2.options.login_mode == 'facebook')
	{
		width = 350;
	}
	else if (odl.auth2.options.login_mode == 'oodle')
	{
		width = 337;
	}
	
	var formID = odl.auth2.loginForm;
	var url = '/auth2/login/' + formID + '/' + odl.auth2.options.login_mode + '/' + odl.auth2.options.event_params.event_name;
	if (odl.auth2.options.bounceURL)
		url += '?b=' + odl.auth2.options.bounceURL;
	odl.auth2.msgBox[formID] = new odl.msgbox(
		{
			id: "login-lightbox",
			header : 'Login to Oodle Marketplace',
			url : url,
			cross_domain : true,
			dataType : 'html',
			close_x : function() {
				odl.auth2.closeLoginMsgBox();
				odl.auth2.options.failure();
			},
			width : width,
			hide_footer : true
		});
};

odl.auth2.loginFacebook =  function(bounceURL) {
	
	if (bounceURL)
		odl.auth2.options.bounceURL = bounceURL;
		 
	odl.auth2.closeMsgBox();

	odl.fbready.add(function() {
		
		odl.auth2.event.track({
			event_type : 'facebook',
			status : 'start'
		});

		FB.login(function(response) {
			odl.fb.cookie(response);
			
			if (response.authResponse) {
				if (odl.info.logged_in && odl.info.fb_logged_in) {
					odl.auth2.event.track({
						event_type : 'facebook',
						status : 'existing'
					});
					odl.auth2.handleAuthSuccess();
				} else {
					odl.info.fb_logged_in = true;
					odl.auth2.fbProfileUpgrade();
				}
			} 
			else {
				odl.auth2.event.track({
					event_type : 'facebook',
					status : 'no_auth'
				});
				odl.auth2.options.failure();
			}
		}, {
			scope : (odl.auth2.options.post == true ? 'email,publish_actions,publish_stream' : 'email,publish_actions')
		});

	});

};

odl.auth2.resetPassword = function() {
	var formID = odl.auth2.passresetForm;
	odl.auth2.closeMsgBox();
	odl.auth2.msgBox[formID] = new odl.msgbox(
		{
			id: 'resetPassword-lightbox',
			header : 'Forgot Password',
			hide_footer : true,
			close_x : true,
			url : '/auth2/passreset/' + formID + '/' + odl.auth2.options.event_params.event_name,
			dataType : 'html',
			width : 312,
			callbacks : {
				load_onsuccess : function() {
					var em = jQ('#authLoginForm_email').val();
					if (em)
						jQ('#authPassResetForm_email').val(em);
				}
			}
		});
};

odl.auth2.createAccount = function(email, locked) {
	var formID = odl.auth2.newaccountForm;
	odl.auth2.closeMsgBox();
	odl.auth2.msgBox[formID] = new odl.msgbox(
		{
			id: 'createAccount-lightbox',
			header : 'Join Oodle Marketplace',
			hide_footer : true,
			url : '/auth2/newaccount/' + formID + '/' + odl.auth2.options.event_params.event_name + '?b=' + odl.auth2.options.bounceURL,
			dataType : 'html',
			width : 345,
			close_x : true,
			callbacks : {
				load_onsuccess : function() {
					new odl.location2('#authNewAccountForm', {location: odl.auth2.options.location, appendTo: "#createAccount-lightbox"});
					jQ('#createAccount-lightbox').find('input:text, textarea').each(function() {
						jQ(this).hint({label: 1});
					});
					var email_field = jQ('#authNewAccountForm_email');
					if (email) {
						email_field.val(email);
						if (locked) email_field.prop("readonly", true);
					} else {
						var em = jQ('#authLoginForm_email').val();
						if (em)
							email_field.val(em);
					}
				}
			}
		});
};

odl.auth2.startViral = function() {
	var formID = odl.auth2.viralForm;
	odl.auth2.closeMsgBox();
	odl.auth2.msgBox[formID] = new odl.msgbox(
		{
			id : 'welcome-lightbox',
			hide_header : true,
			hide_footer : true,
			url : '/auth2/viral/' + formID + '/' + odl.auth2.options.event_params.event_name,
			dataType : 'html',
			width : 470
		});
};

odl.auth2.showPostComposer = function(formName) {
	var title = jQ('input#' + formName + '_ask').val();
	odl.auth2.closeMsgBox();	//close any login box before showing post composer
	odl.post2.showPostLightbox({ad_type : 'ask', 'title' : title});
};

odl.auth2.closeMsgBox = function(formID) {
	if (formID == null) {
		for (var key in odl.auth2.msgBox) {
			if (odl.auth2.msgBox[key]) {
				odl.auth2.msgBox[key].close();
				odl.auth2.msgBox[key] = null;
			}
		}
	} else if (odl.auth2.msgBox[formID]) {
		odl.auth2.msgBox[formID].close();
		odl.auth2.msgBox[formID] = null;
	}
};

odl.auth2.closeLoginMsgBox = function(formID) {
	odl.auth2.closeMsgBox(odl.auth2.loginForm);
};

odl.auth2.closePassresetMsgBox = function(formID) {
	odl.auth2.closeMsgBox(odl.auth2.passresetForm);
};

odl.auth2.closeNewaccountMsgBox = function(formID) {
	odl.auth2.closeMsgBox(odl.auth2.newaccountForm);
};

odl.auth2.closeViralMsgBox = function(formID) {
	odl.auth2.closeMsgBox(odl.auth2.viralForm);
};

odl.auth2.redirect = function(url) {
	if (odl.info && odl.info.is_facebook)
		top.location.href = url;
	else
		window.location.href = url;
};

odl.auth2.handleLoggedin = function(is_new_account) {
	odl.auth2.closeMsgBox();
	odl.auth2.options.success();
	if (is_new_account && odl.auth2.options.start_viral_loop) {
		odl.auth2.startViral();
	} else if (odl.auth2.options.bounceURL) {
		odl.auth2.redirect(odl.auth2.options.bounceURL);
	}
};

odl.auth2.handleAuthSuccess = function(o, is_new_account) {
	odl.auth2.refresh({
		callback : function() {
			if (!odl.info.logged_in) {
				odl.auth2.login();
				return;
			}
			odl.auth2.event.track({
				status : 'success'
			});
			if (o && o.bounce)
				odl.auth2.options.bounceURL = o.bounce;
			odl.auth2.handleLoggedin(is_new_account);
		}
	});
};

odl.auth2.handleNewAccountSuccess = function(o) {
	odl.auth2.handleAuthSuccess(o, true);
};

odl.auth2.handleViralCloseX = function() {
	odl.auth2.closeMsgBox();
	if (odl.auth2.options.bounceURL) {
		odl.auth2.redirect(odl.auth2.options.bounceURL);
	}
};

odl.auth2.handlePassresetSuccess = function() {
	odl.auth2.closeMsgBox();
	new odl.msgbox(
		{
			id: 'resetPassword-lightbox',
			header : 'Email Sent',
			close_x : false,
			width : 312,
			content : 'Please check your email to reset your password.'
		});
};

odl.auth2.fbProfileUpgrade = function() {
	var url = '/auth2/upgradefb/';
	if (odl.auth2.options.bounceURL)
		url += '?b=' + odl.auth2.options.bounceURL;
	var option = {
		url : url,
		dataType : 'json',
		success : function(o) {
			if (o.status == 'fully_upgraded_account') {
				odl.auth2.event.track({
					event_type : 'facebook',
					status : 'existing'
				});
				odl.auth2.handleAuthSuccess(o);
			} else if (o.status == 'newly_upgraded_account') {
				odl.auth2.event.track({
					event_type : 'facebook',
					status : 'success'
				});
				odl.auth2.handleNewAccountSuccess(o);
			} else if (o.status == 'fb_no_email') { //should never happen now as we always get full email address from FB
				new odl.msgbox({
					header: 'Permission Error',
					content: 'We had an error with facebook API, please try again',
					error_code: 6001,
					cancel: false
				});
				
				FB.api({
			            method: 'auth.revokeExtendedPermission',
			            perm: 'email'
			          },
			          function(response) {
			          }
			      );
			} else {
				odl.auth2.event.track({
					event_type : 'facebook',
					status : 'error'
				});
				odl.auth2.options.failure(o);
			}
		},
		failure : odl.auth2.options.failure
	};
	jQ.ajax(option);
};

odl.auth2.refresh = function(option)
{
	if (!option)
	{
		option = {};
	}
	
	if (!option['fb_follow_url'])
	{
		option['fb_follow_url'] = '/pro/fb-follow';
	}
	
	if (!option.data) {
		option.data = {};
	}
	
	option.data.url = window.location.href;
	
	jQ.ajax({
		  url: option['fb_follow_url'],
		  dataType: 'json',
		  data: option.data, 
		  success: function(o)
		  {
			  // Handle User auth resolution
			  // Show dialog that show's account conflict resolution
			  
			  if (o)
			  {
				if (o.html)
				{
					jQ('#fb_follow').html(o.html);
					 FB.XFBML.parse($('fb_follow'));
				}
				
				if (o.info)
				{
					for (var i in o.info)
					{
						if (i != 'page' && i != 's_id')
						{
							odl.info[i] = o.info[i];
						}
					}
				}
				
				// Lets trigger document level event
				jQ(document).trigger('odl.refresh', [odl.info]);
				
				if (odl.info.fb_logged_in) {
					jQ('#fb-connect-promo').remove();
				}
				
				if (o.account_html)
				{
					jQ('#my-account-link').html(o.account_html);
				}
				
				if (o.social_listings_count_html)
				{
					if (jQ('#friends-tab a').length && !jQ('#friends-tab .css-badge').length)
					{
						jQ('#friends-tab a').append(o.social_listings_count_html);
					}
				}
				else if (jQ('#friends-tab .css-badge').length) 
				{
					jQ('#friends-tab .css-badge').remove();
				}
				
				if (o.headNav) {
					jQ('#headNav').html(o.headNav);
				}
				
				if (o.account_link) {
					jQ('#header-myaccount-holder').html(o.account_link);
				}
				
				if (odl.auth2.options.refresh_favorites)
					odl.favorites.init();
				
				if (option && option.callback)
				{
					if (option.perms)
					{
						option.callback(option.perms);
					}
					else
					{
						option.callback();
					}
				}
			 }
		  }
		}
	);
};

odl.auth2.logout = function (url)
{
	var done = function()
	{
		if (!url)
			url = document.location.href;

		document.location = url.replace(/(.*)(\?|&)k=(.*?)(&|$)(.*)/, '$1$2$5');	//remove the backdoor login parameter (k=.*) from the url
	};
	
	var logout = function()
	{
		// Log out of oodle
		jQ.ajax({
			  url: "/pro/signout/",
			  dataType: 'json',
			  success: function(o)
				{
					if (o.success)
					{
						if (o.href) {
							url = o.href;
						}
						done();
					}
					else
					{
						alert('There was an error signing out, please try again.');
					}
				}
			}
		);
	};

	if (odl.info.fbjs_enabled) {
		odl.fbready.add(function() {
			// Log out of facebook if the user is logged in
			FB.getLoginStatus(function(response) {
				if (response.authResponse) 
				{
					var key = setTimeout(logout, 4000);
					
					FB.logout(
						function(response)
						{
							response.authResponse = null;
							odl.fb.cookie(response);
							clearTimeout(key);
						  	logout();
						}
					);
				}
				else
				{
					logout();
				}
			});
		});
		if (!odl.fb.initCalled)
		{
			odl.fb.init();
		}

	} else {
		logout();
	}
	
};


safecall(odl.auth2.init);

odl.namespace('event');

odl.event.track = function(/* ... */)
{
	var args = [].splice.call(arguments,0);
	var id = args.join(',');

	jQ.ajax({
		'url' : odl.info.base_path + 'event/track/' + id
	});
};

odl.event.trackNamed = function(events, callback, synchronous)
{
	if (!events)
		return;
		
	if (!(events instanceof Array))
	{
		events = [events];
	}
	
	var timeout = synchronous ? 3000 : 40000;
	
	jQ.ajax({
		'url' : odl.info.base_path + 'event/track-named/',
		'type': 'POST',
		'contentType': 'application/json',
		'data': JSON.stringify(events),
		'success': function(){
			if (callback)
				callback();
		},
		'timeout': timeout,
		'error': function(){
			if (callback)
				callback();
		},
		async: (synchronous ? false : true)
	});
};


//////////////////////////////////
/**
 * Constructor
 * Inits the tracking framework.  You really want to call this inside fire or safecall
 * 
 * @param eventName (required)  string of the event name
 * @param pageType  (required)  string for backend mongo tracking
 */
odl.event.framework = function(eventName, pageType) {
	this.defaultReportingParams = {'event_name': eventName, 'page': pageType};
};

odl.event.framework.prototype.addDefaultParams = function(params) {
	for (var i in params)
		this.defaultReportingParams[i] = params[i];
};

odl.event.framework.prototype.track = function(params, callback, synchronous) {
	var sendParams = {};
	
	for (var i in this.defaultReportingParams)
		sendParams[i] = this.defaultReportingParams[i];
	
	for (var i in params)
		sendParams[i] = params[i]
	
	odl.event.trackNamed(sendParams, callback, synchronous);
};

odl.namespace('msgbox');

/**
 * Instantiates and displays a new message box
 * 
 * Parameters are as follows:
 *   {
 *     id: id_for_the_msgbox (optional)
 *     width: 123 (optional width, default 500, can also be 'auto'),
 *     header: 'Alert' (header / title box content),
 *     content: Main box content (same fbml option as above)
 *     loading: Set to true to display 'loading' spinner (Note: will override any header or content)
 *     singleton: true (only allow one 'singleton' messagebox open at a time)
 *     cancel: function () {} (callback for cancel button, or set to 'false' to hide, or 'true' to show but only closes box),
 *     ok: function () {} (callback for ok button, or like cancel above can set to 'true' or 'false'),
 *     close_x: function () {} (callback for close button, or can be 'true' or 'false')
 *     skin: 'classname' (skin class to add to the message box) NOTE: alias for class, can only have 'class' or 'skin' but not both as 'class' will trump 'skin'
 *     modal: true (whether the box is modal or not - puts a transparent overlay between the box and the page, redering contents underneath unclickable),
 *     overlay: true (will show a semi-transparent overlay over the whole page)
 *     anchor: element (dom element to center box over - NOTE: to just anchor vertically, see anchor_y below, as that will center the box vertically only),
 *     anchor_x: element to anchor just the 'x' coordinate of the lightbox (can not be combined with 'anchor')
 *     anchor_y: element to anchor just the 'y' coordinate of teh lightbox (can not be combined with 'anchor')
 *     offset: JS object with keys "top" and "left" with integers -- e.g. {left: 100, top: 200}
 *             Please do not use with anchor, anchor_x, or anchor_y
 *     cancel_text: 'Cancel' (text for cancel button, defaults to 'Cancel'),
 *     ok_text: 'Ok' (text for ok button, defaults to 'Ok')
 *     form: { action: action, method: method, submit: function () { ... } } or <true> to wrap the entire msgbox in a form, and implement the buttons as <input type="button" />
 *     change_msgbox_skin: Specify the classname that replaces o-msgbox
 *     hide_footer: <true or false> - set to true to keep the footer hidden
 *     hide_header: <true or false> - set to true to keep the header hidden
 *     hide_shadow: <true or false> - set to true if you don't want the shadow to show
 *     url: A url to load the contents from - will do ajax to fetch the URL, hiding buttons, but showing the spinner until loaded
 *     data: data to pass to the URL, will be URL encoded according to the rules of jQuery.ajax (please see jQuery.ajax statement)
 *     dataType: <'html' or 'json'> data format that the url will return.
 *               If 'html', the HTML returned will replace the content of the box only
 *               If 'json', the json returned can update the header, content, and control the footer.
 *                 Example json:
 * 					{header: '<optional> header text / html',
 * 					 content: '<optional> msgbox content text / html',
 *                   hide_footer: true <optionally hide the footer> }
 *                 NOTE: json or HTML will be passed as the parameter to the callback 'load_onsuccess' or 'callback' below
 *     callback: (Deprecated) NOTE: prefer to use callbacks.load_onsuccess below
 *                 callback to call when loading is done (note, content, header, and footer display are optionally set via the json returned)
 *     callbacks: a list of callbacks to use:
 *                  { move:           callback_func,  // Callback on move of the window (optional)
 *                    load_onsuccess: callback_func,  // Callback when load is done (optional) NOTE: wins over 'callback' above, but will combine if only one is provided
 *                    load_onerror:   callback_func,  // Callback if 'error' or '"error"' is received after loading
 *                    close:          callback_func}  // Callback after the box is done closing (shadow disappears, etc.)
 *     buttons: A list of buttons to add to the footer (Overrides 'ok' / 'cancel') 
 *                The button list should look like this:
 *                   [ {text: 'Button1', skin: 'light', click: function() { doSomething(); }, tab_index: 1},
 *                     {text: 'Button2', skin: 'dark', click: function() { doSomething(); }, tab_index: 2},
 *                     {text: 'Button3', skin: 'light', click: function() { doSomething(); }, tab_index: 3} ]
 *
 *						text: the text for the button
 *						skin: the color for the button
 *						click: the function to execute on click
 *						tab_index: a tab index for the button (optional, only works when "form" parameter is used)
 *
 *                Note: presently (12/7/2010) button "skin" types are 'light', and 'dark'.
 *                 - The buttons will be displayed in order, from left to right (buttons[0] == <The Left Most Button>)
 *                 - The buttons can be changed later with the 'adjustButtons' function below.
 *                 - The button text can be assigned just like the header and content assignments
 *     allow_move: (boolean) Whether to allow the user to move the box or not (default: true)
 *     allow_recenter: (boolean) Whether the lightbox should recenter itself when the page is scrolled or the contents change (default: true)
 *     error_code: <code> Shows a default error box prompting the user to contact support and displaying the code.
 *  }
 *  
 *  Examples:
 *
 *  // Start with loading box
 *  var msgbox = new odl.msgbox({ width: 450, loading: true, close_x: true, cancel: false, ok: true, ok_text: 'Done', overlay: true});
 *
 *  // When done loading:
 * 	msgbox.setHeader('Test Header');
 *	msgbox.setContent('This is the content...');
 *  msgbox.setHideFooter(false);
 *  // Show an error msg light box
 *  var msgbox = new odl.msgbox({code: 'aa33', close_x: true});
 * 
 *  // Advanced examples
 *  
 *        // Javascript: Manipulating the progress bar and buttons
 *  			msgbox.showProgress();
 *  			// Do Some Processing....
 *  			msgbox.hideProgress();
 *  			// Clear the buttons
 *				msgbox.adjustButtons({ok: false, cancel: false});
 *				msgbox.close();
 *
 *        // Load over AJAX
 *          ** javascript **
 *			var msgbox = new odl.msgbox({width: 450, url: odl.info.base_path + 'post/test-response/', close_x: true, cancel: false, ok: true, overlay: true});";
 *          ** PHP **
 *			public function testResponse()
 *			{
 *				echo json_encode(array('header' => 'something', 'content' => 'Some content'));
 *			}
 *
 *        // PHP example: A link to open an Ajax-loaded message box, with a callback for the Ok button
 * 				$editLink .= '<a class="edit-link" href="javascript:void(0)" onclick="var msgbox; var okCallback = function () { Oodle.Account.saveThumbnail(msgbox); }; msgbox = new odl.msgbox({ width: 450, url: \'/account/image_center?ajax=1\', close_x: true, cancel: true, ok: okCallback, overlay: true}); return false;">Center Thumbnail Image</a>';
 *
 *        // Javascript: Delayed load with 3 buttons
 *		   var msgbox = new odl.msgbox({ width: 450, content: 'test', loading: true, header: 'Header', close_x: true, buttons: [ {text: 'button1', skin: 'dark', click: function () { log('true');}}, {text: 'button2', skin: 'light', click: function () {msgbox.close()}}, {text: 'button3', skin: 'dark', click: function () {msgbox.close()}}], overlay: true});
 *         setTimeout(function () {
 *				msgbox.setHeader('Test Header');
 *				msgbox.setContent('This is the content...');
 *				msgbox.setHideFooter(false);
 *			}, 2000);
 *
 */
odl.msgbox = function (params)
{
	var disabledElements = new Array();
	// public methods
	/**
	 * Display a progress bar at the bottom of the form, centered
	 */

	this.toggleReadOnlyState = function(container, state)
	{
		if(state == "readonly")
		{
			jQ(container).find(":input").each(function(index, element){
				if(element)
				{
					jQ(element).attr("readonly", true);
					disabledElements[disabledElements.length] = element;
				}
			});
		}

		if(state == "readwrite" && disabledElements.length)
		{
			for(var i = 0; i < disabledElements.length; i++)
			{
				var element = disabledElements[i];
				jQ(disabledElements[i]).attr("readonly", false);
			}
			disabledElements = new Array();
		}
	}

	this.showProgress = function()
	{
		if (!progressShowing)
		{
			//Make all form elements READ ONLY
			that.toggleReadOnlyState(containers["main"], "readonly");
			cacheWindowInfo(function () {
				jQ(containers['footer']).children().each(function () { jQ(this).remove(); });
				jQ(containers['footer']).append(progressImg);
				jQ(containers['footer']).css('text-align', 'center');
				jQ(progressImg).css('display', 'inline-block');

				progressShowing = true;
				centerWindow();
			});
		}
	};
	// Hides the progress bar at the bottom of the form
	this.hideProgress = function()
	{
		if (progressShowing)
		{
			that.toggleReadOnlyState(containers["main"], "readwrite");
			cacheWindowInfo(function () {
				jQ(progressImg).remove();
				progressShowing = false;
	
				that.adjustButtons();
				centerWindow();
			});
		}
	};
	
	this.setHideHeader = function (flag)
	{
		setHideContainer('header', flag);
	};
	this.getHideHeader = function ()
	{
		return containerInfo['header_hide_flag'];
	};
	this.setHideFooter = function (flag)
	{
		setHideContainer('footer', flag);
	};
	this.getHideFooter = function ()
	{
		return containerInfo['footer_hide_flag'];
	};
		
	/**
	 * Set the header
	 *   Note: pass in fbml like this:
	 *       obj.setContent({data_fbml: fbmlContent});
	 */
	this.setHeader = function (params)
	{
		cacheWindowInfo(function () {
			var unpackaged = unpackageContent(params);
			header = unpackaged.content;
	
			if (!containers['header'])
			{
				containers['header'] = addContainer('header', unpackaged);
				containerInfo['header_showing'] = true;				
				jQ(containers['header']).mousedown(function (evt)
				{ 
					moveStart(evt);
					return false;
				});
			}
			else
				setContainerContent(containers['header'], unpackaged);
	
			// Add the close X to the header
			addCloseX();
	
			centerWindow();
		});
	};
	
	this.getHeader = function()
	{
		return header;
	};
	
	
	/**
	 * Set the content
	 *   Note: pass in fbml like this:
	 *       obj.setContent({data_fbml: fbmlContent});
	 */
	this.setContent = function (params, callback)
	{
		cacheWindowInfo(function () {
			var unpackaged = unpackageContent(params);
			content = unpackaged.content;
			if (!containers['content'])
				containers['content'] = addContainer('content', unpackaged, 'div');
			else
				setContainerContent(containers['content'], unpackaged, 'div');
	
			centerWindow();
			if (callback)
				callback();
		});
	};
	this.getContent = function ()
	{
		return content;
	};
	/**
	 * Show a simple error message instructing the user to contact support, and showing an error code at the end.
	 */
	this.showErrorMsg = function (code)
	{
		cacheWindowInfo(function () {
			var oldCenterLock = centerLock;
			centerLock = true;
			that.setHeader('Error');
			that.setContent('An error occurred.  Please ');
			var supportLink = document.createElement('a');
			jQ(supportLink).attr('href', 'http://www.oodle.com/info/help/');
			jQ(supportLink).attr('target', '_blank');
			jQ(supportLink).html('<span>contact support</span>');
			var finalText = document.createElement('span');
			jQ(finalText).html('<span>. (Code: ' + code + ')</span>');
			jQ(containers['content']).append(supportLink);
			jQ(containers['content']).append(finalText);
			that.adjustButtons({ok: true, cancel: false});
			showContainer('footer');
			centerLock = oldCenterLock;
			centerWindow();
		});
	};
	
	/*
	 * Close the dialog box
	 */
	this.close = function (callback)
	{
		if (closingFlag)
			return;
		else
			closingFlag = true;
		
		if (containers['main'])
		{
			// Unbind event handlers on the window
			jQ(window).unbind('resize.msgbox' + msgboxNum, that.center);
			jQ(window).unbind('scroll.msgbox' + msgboxNum, that.center);
			
			var finish = function () {
				jQ(containers['main']).hide();
				jQ(containers['main']).remove();
				containers['main'] = null;
				if (singleton)
				{
					odl.msgbox.singleton = false;
				}
				var callbackFunc = callback || (callbacks ? callbacks.close : null);
				if (callbackFunc && typeof(callbackFunc) == 'function')
				{
					callbackFunc();
				}
				closingFlag = false;
			};
			if (guiOverlay)
			{
				guiOverlay.hide();
			}
			if (shadow)
			{
				shadow.close();			
			}
			jQ(containers['main']).css({opacity:1}).stop().animate({opacity: '0'}, 'slow', function () {finish();});	
		}
	};
	
	/**
	 * Used to remotely load a url into the message box
	 *   Loads url, sets header and content, then calls callback if present
	 *     Finally adjusts the window footer and positioning
	 */
	this.load = function (url, urlData, dataType, callback, callbackError, skipRecenter)
	{
		var load = function () {
			var handleSuccess = function (data)
			{	
				if (!data)
				{
					that.showErrorMsg('data');
					return;
				}
				if (data && (data == 'error' || data === '"error"'))
				{
					if (callbackError)
					{
						callbackError();
						return;
					}
				}
				var oldLock = centerLock;
				centerLock = true;
				if (dataType == 'html')
				{
					that.setContent(data);
					that.setHeader(lastHeader);
				}			
				else
				{
					if (data.header)
						that.setHeader(data.header);
					else
						that.setHeader(lastHeader);
					
					if (data.content)
						that.setContent(data.content);
					else
						that.setContent(lastContent);
				}
	
				if (callback)
					callback(data);
				
				if (dataType != 'html' && typeof(data.hide_footer) != 'undefined')
					that.setHideFooter(data.hide_footer);
				else
					that.setHideFooter(containerInfo['footer_hide_flag']);

				if (dataType != 'html' && typeof(data.hide_header) != 'undefined')
					that.setHideHeader(data.hide_header);
				else
					that.setHideHeader(containerInfo['header_hide_flag']); // might be redundant
				
				centerLock = oldLock;
	
				if (!centerLock) // special load logic for recentering after ajax
				{
					if (!skipRecenter)
					{
						loadRecenter = true;
						centerWindow();
						loadRecenter = false;
					}
					// For some reason on Facebook this needs to be called here.
					if (shadow)
						shadow.resize();
				}
			};
			
			var start = function () {
				jQ.ajax({type: (data ? 'POST' : 'GET'),
					url: url,
					data: urlData,
					timeout: 40000,
					dataType: dataType,
					error: function(xhr, status, err) { log(err); that.showErrorMsg('comm'); },
					success: handleSuccess
				});
			};
			setLoading(start);
		};

		// Cache the window scroll, etc. ahead of time
		cacheWindowInfo(load);
	};
	
	this.center = function (callback)
	{
		if (typeof(callback) !== 'function')
			callback = null;
		var oldAllowRecenter = allowRecenter;
		allowRecenter = true;
		centerWindow(function () {
			allowRecenter = oldAllowRecenter;
			if (callback)
				callback()
		});
	};
	
	/**
	 * Adjusts and displays the buttons either according to the most recent parameters, or new parameters passed in.
	 */
	this.adjustButtons = function (params)
	{
		if (params)
		{
			if (params.buttons)
			{
				buttons = params.buttons;
				
				var buttonsLen = buttons.length;
				for (var i = 0 ; i < buttonsLen; i++)
					buttons[i].text = unpackageContent(buttons[i].text);
			}
			else
			{
				buttons = [];
				if (params.cancel)
				{
					var cancelAction = params.cancel;
					if (typeof(cancelAction) != 'function')
						cancelAction = function () { that.close(); };
					var cancelText = params.cancel_text ? params.cancel_text : 'Cancel';
					
					buttons.push({ skin: 'light', text: unpackageContent(cancelText), click: cancelAction });
				}
				if (params.ok || (!params.cancel && params.ok !== false))
				{
					var okAction = params.ok;
					if (typeof(okAction) != 'function')
						okAction = function () { that.close(); };
						
					
					var okText = params.ok_text ? params.ok_text : 'Ok';				

					buttons.push({ skin: 'dark', text: unpackageContent(okText), click: okAction });
				}
			}
			
			// clear current buttons
			containers['buttons'] = [];
		}
		checkContainer('footer');
		jQ(containers['footer']).children().each(function () { jQ(this).remove(); });

		if (progressShowing)
			progressShowing = false;
		
		if (buttons)
		{
			var tabindex = 1000;
			for (var i = buttons.length - 1; i >= 0 ; i--)
			{
				var button = buttons[i];
				if (!button.text)
				{
					log('No button content found:');
					log(button);
					continue;
				}
	
				var skin = button.skin ? button.skin : 'dark';
				tabindex = (button.tabindex || button.tabindex === 0) ? button.tabindex : tabindex; 
				
				var buttonElement;
				if (containers['form'])
				{
					buttonElement = document.createElement('input');
					jQ(buttonElement).val(button.text.content);
					jQ(buttonElement).attr('type', 'button');
					jQ(buttonElement).attr('tabindex', tabindex);
				}
				else
				{
					buttonElement = document.createElement('a');
					jQ(buttonElement).html(button.text.content);
				}
				jQ(buttonElement).addClass(skin);
								
				containers['buttons'].push(buttonElement);
				jQ(containers['footer']).append(buttonElement);				
				jQ(buttonElement).click(button.click);
				
				if (!button.tabindex)
					tabindex--;
			}
		}
	};

	/**
	 * Adds or removes the closeX
	 */
	this.setCloseX = function (value)
	{
		if (value != closeX) // If there's a change
		{
			// Remove the closeXButton if value is false (or null)
			if (!value && closeXButton)
			{
				jQ(closeXButton).remove();
				closeXButton = null;
			}
			closeX = value;
			if (closeX)
				addCloseX(); // Add/re-add closeX if necessary
		}
	};
	
	/*
	 * Sets the callbacks.
	 *     value: a list of callbacks to use:
	 *                  { move:           callback_func,   // Callback on move of the window (optional)
	 *                    load_onsuccess: callback_func,   // Callback when load is done (optional)
	 *                    close:          callback_func  } // Callback after the dialog is closed (optional)
	 * doNotDirectlyReplace (optional param, false if not provided)
	 *   if false, then directly replace the internal callback object with the given value
	 *             (legacy behaviour)
	 *             
	 *   if true, then append (replace if necessary) the provided callbacks
	 *                 and leaves the other callbacks alone
	 */
	this.setCallbacks = function (value, doNotDirectlyReplace)
	{
		if (doNotDirectlyReplace)
		{
			for (var cbkIdx in value)
				callbacks[cbkIdx] = value[cbkIdx];
		}
		else
			callbacks = value;
	};
	// Private methods
	
	/*
	 * Creates an overlay container
	 */
	var createOverlay = function ()
	{
		var overlayContainer = document.createElement('div');
		jQ(overlayContainer).addClass('o-msgbox-modal');
		jQ(overlayContainer).css('z-index', zIndexOverlay);
		if (overlay)
			jQ(overlayContainer).addClass('o-msgbox-overlay');
		
		jQ(containers['anchor']).append(overlayContainer);
		return overlayContainer;
	};
	
	var addCloseX = function ()
	{
		if (closeX)
		{
			if (closeXButton)
				jQ(closeXButton).remove();
				
			closeXButton = document.createElement('a');
			jQ(closeXButton).addClass('close-x');
			jQ(closeXButton).html('<span>&#215;</span>');
			jQ(containers['header']).prepend(closeXButton);

			var action;
			if (typeof(closeX) == 'function')
				action = closeX;
			else
				action = function () { that.close(); };

			if (action)
				jQ(closeXButton).click(action);

			jQ(closeXButton).mouseover(function () { movable = false;});
			jQ(closeXButton).mouseout(function () { movable = true;});			
		}
	};

	var setHideContainer = function (container, flag)
	{
		var flagKey = container + '_hide_flag';
		oldFlag = containerInfo[flagKey];
		containerInfo[flagKey] = flag;
		
		if (oldFlag != containerInfo[flagKey])
		{
			if (containerInfo[flagKey])
				hideContainer(container);
			else
				showContainer(container);
		}
		else
		{
			// Adjust container
			if (containerInfo[container + '_showing'] && containerInfo[flagKey])
				hideContainer(container);
			else if (!containerInfo[container + '_showing'] && !containerInfo[flagKey])
				showContainer(container);
		}
	};
	
	var hideContainer = function (container)
	{
		if (containerInfo[container + '_showing'])
		{
			cacheWindowInfo(function () {
				jQ(containers['main']).removeClass('show-' + container);
				jQ(containers[container]).css('display', 'none');				
				centerWindow();
				containerInfo[container + '_showing'] = false;
			}); 
		}
	};
	
	var showContainer = function (container)
	{
		if (!containerInfo[container + '_showing'])
		{
			cacheWindowInfo(function () {
				checkContainer(container);
				jQ(containers['main']).addClass('show-' + container);
				jQ(containers[container]).css('display', 'block');
				
				// Adjust the buttons after showing the footer
				if (container === 'footer')
					that.adjustButtons();

				centerWindow();
				containerInfo[container + '_showing'] = true;
			});
		}
	};
	
	var checkContainer = function (container)
	{
		if (!containers[container])
		{
			containers[container] = addContainer(container);
			containerInfo[container + '_showing'] = true;
		}
	};		
	
	// Unpackage content params (psuedo-detect for FBML-type content)
	var unpackageContent = function (params)
	{
		var type = null;
		var content = null;
		if (params)
		{
			type = 'html';
			if (params.data_fbml)
			{
				content = params.data_fbml;
			}
			else if (params.fbml_data)
			{
				content = params.fbml_data;
			}
			else
			{
				if (params.content)
					content = params.content;
				else
					content = params;
			}
		}
		return({content: content, type: type});
	};

	/**
	 * Helper function for setting the container content
	 */
	var setContainerContent = function (container, params, wrapperTag)
	{	
		var contentTemp = params.content != null ? params.content : '';
		if (contentTemp instanceof jQuery)
		{
			jQ(container).children().remove();
			jQ(container).append(contentTemp);
		}
		else {
			jQ(container).html(contentTemp);
		}

		return params.content;
	};		

	/*
	 * Helper function for adding a container to the lightbox
	 */
	var addContainer = function(name, content, wrapperTag)
	{
		var newContainer = document.createElement('div');
		jQ(newContainer).addClass(name);
		if (content)
		{
			setContainerContent(newContainer, content, wrapperTag);
		}

		var addContainer = (containers['form'] ? containers['form'] : containers['main']);
		jQ(addContainer).append(newContainer);

		// Adjust the buttons after showing the footer
		if (name === 'footer')
			jQ(newContainer).addClass('clearfix');

		return(newContainer);
	};
		
	/**
	 * Takes the response from Facebook and turns it into a windowInfoCache object
	 */
	var interpretFBPageInfo = function(fbInfo)
	{
		var info = {};
		info.windowHeight = fbInfo.clientHeight - fbInfo.offsetTop;
		info.windowWidth = jQ(window).width();
		info.scrollTop = fbInfo.scrollTop - fbInfo.offsetTop; // Centers it in the viewport (not just the iframe)			
		info.scrollLeft = fbInfo.scrollLeft;
		info.iframe = true;
		return info;
	};

	var clearWindowInfo = function ()
	{
		if (!windowInfoCacheLock)
		{
			windowInfoCache = null;
		}
	};
	
	/**
	 * Stores the windowInfo into the windowInfoCache, then executes callback
	 *   Note, if centerLock is true, does nothing.
	 */
	var cacheWindowInfo = function (callback)
	{
		if (!centerLock)
		{
			windowInfoCacheLock = true;
			var defaultIframe = function () {
				windowInfoCache = {};
				windowInfoCache.iframe = true;
				windowInfoCache.windowHeight = 500;
				windowInfoCache.windowWidth = jQ(window).width();
				windowInfoCache.scrollTop = 0;
				windowInfoCache.scrollLeft = 0;
				callback(windowInfoCache);	
				windowInfoCacheLock = false;
			};
			if (self !== parent && odl.info.is_facebook && FBPageInfo)
			{
				var fbInfoFlag = false;
				setTimeout(function () {
					if (!fbInfoFlag)
					{
						fbInfoFlag = true;
						defaultIframe();
					}
				}, 500);
					
				FB.Canvas.getPageInfo(
					function (fbInfo) {
						if (!fbInfoFlag)
						{
							fbInfoFlag = true;
							windowInfoCache = interpretFBPageInfo(fbInfo);
							callback(windowInfoCache);
							windowInfoCacheLock = false;
						}
					}
				);
			}
			else if (self !== parent)
			{
				defaultIframe();
			}
			else
			{
				windowInfoCache = {};
				windowInfoCache.windowHeight = jQ(window).height();
				windowInfoCache.windowWidth = jQ(window).width();
				windowInfoCache.scrollTop = jQ(window).scrollTop();
				windowInfoCache.scrollLeft = jQ(window).scrollLeft();
				callback(windowInfoCache);
				windowInfoCacheLock = false;
			}
		}
		else
			callback(windowInfoCache);
	};
	
	
	/** Centers the window using the cached window information
	/*  If there's no windowInfoCache, then cache it, and run the function again.
	 *  However if there's no windowInfoCache, and centerLock is true, do nothing */
	var centerWindow = function(callback)
	{
		var info = {};
		if (windowInfoCache)
		{
			_centerWindow(windowInfoCache);
			if (typeof(callback) === 'function')
				callback();
		}
		else if (!centerLock) // Note this is based on the white-box view of cacheWindowInfo
		{
			cacheWindowInfo(function () {
				centerWindow(callback);
			});
		}
	};
	
	/**
	 * Does the actual centering of the window
	 */
	var _centerWindow = function(info)
	{
		// If centerLock is turned on, abort
		if (centerLock)
			return;

		// Certain conditions, we just abort right away, and clear the windowInfoCache
		//   For example if allowRecenter is false, we only allow recentering if it's been moved
		//   Or loadRecenter is true (which happens during a load)
		if (firstCenter && !allowRecenter && !moved && !loadRecenter)
		{
			clearWindowInfo();
			return;
		}

		if (!firstCenter)
			firstCenter = true;

		var curHeight = jQ(containers['main']).height();
		var curWidth = jQ(containers['main']).width();
		
		// Double check width overflow here - search for 'wide' children (i.e. containers that extend outside the box)
		var offset = jQ(containers['main']).offset();
		
		var searchWidestChild = function (element)
		{
			jQ(element).children().each(function () {
				var childOffset = jQ(this).offset();
				
				// Note: before the window is displayed, jquery doesn't return a width, so try to get it from CSS, then buffer it by 11 for padding plus border.
				var childWidth = jQ(this).width() ? jQ(this).width() : parseInt(jQ(this).css('width').replace(/px/,'').replace(/auto/,0)) + 11;
				if (jQ(this).css('overflow') == 'hidden') // Detect special case
					return;
					
				var childTotalWidth = childOffset.left + childWidth;
				if (offset)
				{
					childTotalWidth -= offset.left;
				}
				
				if (childTotalWidth > curWidth)
				{
					curWidth = childTotalWidth;
				}
				if (jQ(this).children().length)
				{
					// Recurse down
					searchWidestChild(this);
				}
			});
		};
		searchWidestChild(containers['main']);
		
		var windowHeight, windowWidth;
		var xOffsetAdjust = 0;
		var yOffsetAdjust = 0;
		windowHeight = info.windowHeight;
		windowWidth = info.windowWidth;
		var virtualMarginT = 40; // default top - drop shadow on Mozilla and WebKit browsers is 40px...
		var virtualMarginB = 40; // default bottom
		var virtualMarginL = 40; // default left
		var virtualMarginR = 40; // default right
		var anchorMiddleTop = null, anchorMiddleLeft;
		var tempLeft, tempTop;
		var scrollTop = info.scrollTop;
		var scrollLeft = info.scrollLeft;
				
		// If we've moved, it's a special case, do calculations here
		if (moved)
		{
			if (originalTop === false)
				originalTop = topPos;
			if (originalLeft === false)
				originalLeft = leftPos;
			tempLeft = originalLeft + dragOffsetX;
			tempTop = originalTop + dragOffsetY;
		}
		else
		{
			// Otherwise, attempt to center the lightbox, according to window size, or anchors
			if (anchor)
			{
				var offset = jQ(anchor).offset();
				var anchorHeight = jQ(anchor).height();
				var anchorWidth = jQ(anchor).width();
				anchorMiddleTop = Math.floor(anchorHeight/2) - yOffsetAdjust;
				anchorMiddleLeft = Math.floor(anchorWidth/2) - xOffsetAdjust;
				if (offset)
				{
					anchorMiddleTop += offset.top;
					anchorMiddleLeft += offset.left;
				}
			}
			else if (anchorX)
			{
				// Find the center point of the anchor element
				var offset = jQ(anchorX).offset();
				var anchorWidth = jQ(anchorX).width();
				anchorMiddleLeft = Math.floor(anchorWidth/2) - xOffsetAdjust;	
				if (offset)
				{
					anchorMiddleLeft += offset.left;
				}
			}
			else if (anchorY)
			{
				// Find the center (vertically) of the anchor element
				var offset = jQ(anchorY).offset();
				var anchorHeight = jQ(anchorY).height();
				anchorMiddleTop = Math.floor(anchorHeight/2) - yOffsetAdjust;
				if (offset)
				{
					anchorMiddleTop += offset.top;
				}
			}

			// Calculate the new top
			if (anchor || anchorY)
			{
				tempTop = anchorMiddleTop - Math.floor(curHeight / 2);
			}
			else if (offsetParam)
			{
				tempTop = offsetParam.top;
				virtualMarginT = 0; //ignore virtual top margin
			}
			else
			{
				if (windowHeight > curHeight)
         			tempTop = scrollTop + Math.floor(windowHeight / 2) - Math.floor(curHeight / 2);
				else
				{
					// Box is too big for the Window
					//   Try to keep the top of the box below the top of the viewport
					tempTop = scrollTop + 5;
				}
			}
			
			if(anchor || anchorX)
			{
				tempLeft = anchorMiddleLeft - Math.floor(curWidth / 2);		
			}
			else if (offsetParam)
			{
				tempLeft = offsetParam.left;
				virtualMarginL = 0; //ignore virtual left margin
			}
			else if (windowWidth)
			{
				if (windowWidth > curWidth)
					tempLeft = scrollLeft + Math.floor(windowWidth / 2) - Math.floor(curWidth / 2);
				else
				{
					// Box is too big for the Window
					//   Try to keep the left of the box to the left of the viewport
					tempLeft = scrollLeft + 5;
					log('tempLeft2: ' + tempLeft);
				}
			}
		}
				
		var boxHeightPlusMargin = curHeight + virtualMarginB;
		var boxWidthPlusMargin = curWidth + virtualMarginR;
		if (!info.iframe)
		{
			if (windowWidth > boxWidthPlusMargin)
			{
				if (boxWidthPlusMargin + tempLeft > windowWidth + scrollLeft)
				{
					var overage = boxWidthPlusMargin + tempLeft - (windowWidth + scrollLeft);
					// Move box back to within the window
					tempLeft -= overage;
					originalLeft = tempLeft; // This is a reset of our move positions
					dragOffsetX = 0;         // so that the box doesn't continue to move
				}				
			}

			if (windowHeight > boxHeightPlusMargin)
			{
				// This code keeps the box from going below the bottom of the viewport (esp. when being moved)
				if (boxHeightPlusMargin + tempTop > windowHeight + scrollTop)
				{
					var overage = boxHeightPlusMargin + tempTop - (windowHeight + scrollTop);

					// Move box back to within the window
					tempTop -= overage;
					
					originalTop = tempTop; // This is a reset of our move positions 
					dragOffsetY = 0;       // so that the box doesn't continue to move					
				}				
			}

			if (tempTop < virtualMarginT) // Box is too high, move it down some
			{
				tempTop = virtualMarginT;
				originalTop = tempTop; // This is a reset of our move positions 
				dragOffsetY = 0;       // so that the box doesn't continue to move
			}	
			
			if (tempLeft < virtualMarginL) // Don't allow box to go too far to the left
			{
				tempLeft = virtualMarginL; 
				originalLeft = tempLeft; // This is a reset of our move positions
				dragOffsetX = 0;         // so that the box doesn't continue to move
			}

			// Box is too far to the right?
			if (boxWidthPlusMargin + tempLeft > windowWidth)
			{
				var overage = boxWidthPlusMargin + tempLeft - windowWidth;
				tempLeft -= overage;
				
				// Whoa, keep within the margins
				if (tempLeft < virtualMarginT)
				{
					if (shadow)
					{
						shadow.close();
						shadow = null;
					}
					if (tempLeft < 0)
						tempLeft = 0;
				}
				originalLeft = tempLeft;
				dragOffsetX = 0;
			}
		}
 		else
		{
			// If in iFrame, windowHeight will be 500 or some fixed value from above,
			//  therefore use a new variable called 'height'
			var actualWindowHeight = jQ(window).height();
			if (tempTop < virtualMarginT) // Box is too high, move it down some
			{
				tempTop = virtualMarginT;
				originalTop = tempTop; // This is a reset of our move positions 
				dragOffsetY = 0;       // so that the box doesn't continue to move
			}	
			
			if (tempLeft < virtualMarginL) // Don't allow box to go too far to the left
			{
				tempLeft = virtualMarginL; 
				originalLeft = tempLeft; // This is a reset of our move positions
				dragOffsetX = 0;         // so that the box doesn't continue to move
			}
			
			// Box is too low?
			if (boxHeightPlusMargin + tempTop > actualWindowHeight)
			{
				var overage = boxHeightPlusMargin + tempTop - actualWindowHeight;
				tempTop -= overage;
				if (tempTop < virtualMarginT)
				{
					if (shadow)
					{
						shadow.close();
						shadow = null;
					}
					if (tempTop < 0)
						tempTop = 0;
				}
				originalTop = tempTop;
				dragOffsetY = 0;
			}
			
			// Box is too far to the right?
			if (boxWidthPlusMargin + tempLeft > windowWidth)
			{
				var overage = boxWidthPlusMargin + tempLeft - windowWidth;
				tempLeft -= overage;
				
				// Whoa, keep within the margins
				if (tempLeft < virtualMarginT)
				{
					if (shadow)
					{
						shadow.close();
						shadow = null;
					}
					if (tempLeft < 0)
						tempLeft = 0;
				}
				originalLeft = tempLeft;
				dragOffsetX = 0;
			}
		}
		
		// Adjust top and left if changed
		var adjustTop, adjustLeft;
		if (topPos != tempTop)
		{
			topPos = tempTop;
			adjustTop = true;
		}

		if (leftPos != tempLeft)
		{
			leftPos = tempLeft;
			adjustLeft = true;
		}
		// Center the window
		if (adjustLeft)
			jQ(containers['main']).css('left',leftPos + 'px');
		if (adjustTop)
			jQ(containers['main']).css('top',topPos + 'px');

		// Shadow adjustment

		if (shadow)
		{
			shadow.resize();
		}
		
		// Automatically disable recentering if the box is bigger than the window
		if (allowRecenter && (windowHeight < (curHeight + virtualMarginT + virtualMarginB) || windowWidth < (curWidth + virtualMarginL + virtualMarginR)))
		{
			allowRecenter = false;
		}
		
		clearWindowInfo();
		return true;
	};

	var setLoading = function (callback)
	{
		cacheWindowInfo(function ()
		{
			var oldCenterLock = centerLock;
			var oldCloseX = closeX;
	
			centerLock = true;
			closeX = false;  // So the loading header doesn't have a closeX
			
			lastHeader = header;
			lastContent = content;
			that.setHeader('Loading...');
			that.setContent('');
			
			loadingImage = document.createElement('img');
			jQ(loadingImage).attr('src',"http://i.oodleimg.com/a/lightbox-loading.gif");
			jQ(loadingImage).css('margin-left', (Math.floor(jQ(containers['main']).width() / 2) - 26) + "px");
			jQ(loadingImage).css('width', '32px');
			jQ(loadingImage).css('height', '32px');
			jQ(loadingImage).css('margin-top', '20px');
			jQ(loadingImage).css('margin-bottom', '20px');
			jQ(containers['content']).append(loadingImage);
	
			hideContainer('footer');
			centerLock = oldCenterLock;
			closeX = oldCloseX;
			
			centerWindow();
			if (callback)
				callback();
		});
	};

	var move = function (evt)
	{
		// Only move if we're moving
		//   Also sometimes IE was reporting pageX as -3 right after the mouse moved out,
		//   causing a jump to the left if the box was already on the right
		if (moving && evt.pageX >= 0 && evt.pageY >= 0) { 
			offsetX = evt.pageX - beginX;
			offsetY = evt.pageY - beginY;
			
			if (!moved && (offsetX || offsetY))
				moved = true;
			
			dragOffsetX += offsetX;
			dragOffsetY += offsetY;
			beginX = evt.pageX;
			beginY = evt.pageY;
			centerWindow();
			if (callbacks && typeof(callbacks.move) == 'function')
				callbacks.move(evt);				
		 }
	};
	
	var moveStart = function (evt)
	{
		if (allowMove && movable)
		{
			// Refocus the window to deselect any selected text
			if (typeof(document.focus) == 'function')
				document.focus();
			else if (typeof(document.body.focus) == 'function')
				document.body.focus();
			
			moving = true;
			beginX = evt.pageX;
			beginY = evt.pageY;
			oldMouseMove = document.onmousemove;
			oldMouseUp = document.onmouseup;
			oldMouseOut = document.onmouseout;
			
			document.onmousemove = null;
			document.onmouseup = null;
			document.onmouseout = null;

			// Prevent text selection
			oldOnSelectStart = document.onselectstart;
			document.onselectstart = function () { return false; };
			if (evt.currentTarget)
			{
				// prevent drag & drop specific to some browsers
				oldOnDragStart = evt.currentTarget.ondragstart;
				oldOnDragTarget = evt.currentTarget;
				evt.currentTarget.ondragstart = function () { return false; };
			}

			// Track movements of mouse
			jQ(document).bind('mousemove.msgbox' + msgboxNum, function (evt) { move(evt); if (oldMouseMove) { oldMouseMove(evt.originalEvent); } return false; });
			jQ(document).bind('mouseup.msgbox' + msgboxNum, function (evt) { move(evt); moveDone(evt); if (oldMouseUp) { oldMouseUp(evt.originalEvent); } return false; });
			jQ(document).bind('mouseout.msgbox' + msgboxNum, function (evt) { move(evt); moveOut(evt); if (oldMouseOut) { oldMouseOut(evt.originalEvent); }return false; });
		}
	};
	
	var moveOut = function (evt)
	{
		// If we travel outside of our boundaries, we're done.
		//  (no matter what the javascript engine says about the mouse button state)
		// We need to do this as the browser does not report the mouseup event if it happens outside of an iframe
		//  When the mouse pointer comes back into the iframe, even if the mouse button is up
		//  the (regular) onmove event will still report the mouse poiner as being down.
		cacheWindowInfo(function (info)
		{
			if (info)
			{
				var scrollLeft = info.scrollLeft;
				var scrollTop = info.scrollTop;
			
				// If our current position is outside of the window/iframe to the right, we're done
				//  Also if our current position is outside of the window/iframe to the left, we're done
				if (evt.pageX >= (jQ(window).width() + scrollLeft) || // Right
					evt.pageX <= scrollLeft) // Left
				{	
					moveDone(evt);
				}
				
				// Same logic as above, but for top and bottom
				if (evt.pageY >= (jQ(window).height() + scrollTop) || // Top
						evt.pageY <= scrollTop) // Bottom
				{
					moveDone(evt);	
				}
			}
		});
	};
	
	var moveDone = function (evt)
	{
		if (moving)
		{
			// reset handlers for text selection and drag and drop
			document.onselectstart = oldOnSelectStart;
			oldOnSelectStart = null;
			if (oldOnDragTarget)
			{
				oldOnDragTarget.ondragstart = oldOnDragStart;
				oldOnDragTarget = null;
				oldOnDragStart = null;
			}

			// Unbind event handlers bound on start
			jQ(document).unbind('mousemove.msgbox' + msgboxNum);
			jQ(document).unbind('mouseup.msgbox' + msgboxNum);
			jQ(document).unbind('mouseout.msgbox' + msgboxNum);
			
			// reset handlers for standard mouse move events
			document.onmousemove = oldMouseMove;
			document.onmouseup = oldMouseUp;
			document.onmouseout = oldMouseOut;

			oldMouseMove = null;
			oldMouseUp = null;
			oldMouseOut = null;
			moving = false;
		}
	};
	
	/*
	 * Merge params with defaults
	 */
	var mergeParams = function (params)
	{
		var ret = {};
		for ( var i in odl.msgbox.defaultParams)
		{
			ret[i] = odl.msgbox.defaultParams[i];
		}

		if (params && typeof (params) === 'object')
		{
			for ( var i in params)
			{
				if (params[i] && typeof (params[i]) === 'object' && ret[i] && typeof(ret[i]) === 'object')
				{
					for ( var x in params[i])
					{
						ret[i][x] = params[i][x];
					}
				}
				else
				{
					ret[i] = params[i];
				}
			}
		}
		return (ret);
	};

	// Private variables
	var that = this; // should be internal reference to 'this'

	// Parameters
	var width;
	var closeX;
	var skin;
	var guiOverlay;
	var anchor;
	var anchorX;
	var anchorY;
	var url;
	var data;
	var dataType;
	var buttons;
	var headerParams;
	var contentParams;
	var offsetParam;
	
	// Content
	var header;
	var content;
	var lastHeader;
	var lastContent;
	
	// Containers
	var containers = {
		'main'   : null,
		'header' : null,
		'content': null,
		'footer' : null,
		'anchor' : null,
		'form'   : null,
		'buttons': null
	};

	var containerInfo = {
		'footer_showing'  : false,
		'header_showing'  : false,
		'footer_hide_flag': false,
		'header_hide_flag': false
	};

	// Flags
	var centerLock = true;
	var loading = false;
	var progressShowing = false;
	var closingFlag = false;
	var windowInfoCacheLock = false;
	
	// Centering
	var firstCenter = false;
	var loadRecenter = false;
	var allowRecenter = true;
	var containerHeight;
	var containerWidth;

	// Other
	var progressImg;
	var loadingImg;
	var closeXButton;
	var shadow;
	var topPos, leftPos;
	var zIndexOverlay;
	var singleton;
	var windowInfoCache = null;
	var formParams = null;
	
	// Move / Drag - note this could probably be refactored into an object
	var allowMove = true; // developer configurable parameter whether or not to allow moving
	var dragOffsetX = 0;
	var dragOffsetY = 0;
	var beginX = 0;
	var beginY = 0;
	var moving = false;
	var movable = true; // flag whether it's movable right now or not - for example, set to false when over 'X' in header.
	var moved = false; // flag whether it's been moved or not
	var originalTop = false;
	var originalLeft = false;
	var oldMouseMove = null;
	var oldMouseUp = null;
	var oldMouseOut = null;
	var oldOnSelectStart = null;
	var oldOnDragStart = null;
	var oldOnDragTarget = null;
	
	// Positioning
	var initialClickPositionX = 0;
	var initialClickPositionY = 0;
	
	// Callbacks
	var callbacks;
	
	if (odl.msgbox.count)
		odl.msgbox.count++;
	else
		odl.msgbox.count = 1;

	var msgboxNum = odl.msgbox.count;

	// Quick facebook test
	var FBPageInfo = false;
	if (typeof(FB) != 'undefined' && FB.Canvas && FB.Canvas.getPageInfo)
		FBPageInfo = true;
	
	params = mergeParams(params);
	if (params)
	{
		id = params.id;
		width = params.width;
		loading = params.loading;
		closeX = params.close_x;
		modal = params.modal;
		skin = params['class'] ? params['class'] : params.skin;
		overlay = params.overlay;
		anchor = params.anchor;
		anchorX = params.anchor_x;
		anchorY = params.anchor_y;
		offsetParam = params.offset;
		url = params.url;
		data = params.data;
		contentParams = params.content;
		headerParams = params.header;
		formParams = params.form;
		if (params.allow_move === false)
			allowMove = false;
		
		if (params.singleton)
		{
			if (odl.msgbox.singleton)
				return;
			else
			{
				odl.msgbox.singleton = true;
				singleton = true;
			}
		}

		if (!params.callbacks)
			callbacks = {};
		else
			callbacks = params.callbacks;
		
		if (params.callback && !callbacks.load_onsuccess)
			callbacks.load_onsuccess = params.callback;
		
		if (params.allow_recenter === false)
			allowRecenter = false;
		
		dataType = 'json';
		if (params.dataType)
			dataType = params.dataType;
	}
	
	initialClickPositionX = globalMouseDown.x;
	initialClickPositionY = globalMouseDown.y;
	
	if (!width) // Default width: 500
		width = 500;
	
	progressShowing = false;
	
	containers['anchor'] = document.body;
	
	zIndexOverlay = odl.zindex.getHighest();
	var zIndex = odl.zindex.getHighest();
	if (zIndex == zIndexOverlay)
	{
		zIndexOverlay -= 1;
	}
	containers['main'] = document.createElement('div');
	jQ(containers['main']).css('top', '0px');
	jQ(containers['main']).css('left', '0px');
	jQ(containers['main']).addClass(skin);
	
	if (id)
		jQ(containers['main']).attr('id',id);
	
	jQ(containers['main']).addClass('o-msgbox');

	if (params.change_msgbox_skin)
		jQ(containers['main']).removeClass().addClass(params.change_msgbox_skin);
	
	jQ(containers['main']).css('z-index', zIndex);
	var cssWidth = (width.match && width.match(/^[0-9]+$/) ? width + 'px' : width);
	jQ(containers['main']).css('width', cssWidth);

	if (modal || overlay)
	{
		guiOverlay = new Oodle.gui.ext.Overlay(document, zIndexOverlay);
		guiOverlay.show();
	}

	jQ(containers['anchor']).append(containers['main']);
	if (formParams)
	{
		containers['form'] = document.createElement('form');
		if (typeof(formParams) == 'object')
		{
			if (formParams.action)
				jQ(containers['form']).attr('action', formParams.action);
			if (formParams.method)
				jQ(containers['form']).attr('method', formParams.method);
			jQ(containers['main']).append(containers['form']);
			if (formParams.submit)
				jQ(containers['form']).bind('submit.msgbox' + msgboxNum, formParams.submit);
		}
		else
		{
			jQ(containers['main']).append(containers['form']);			
		}
	}
	
	if (params && params.error_code)
	{
		that.showErrorMsg(params.error_code);
	}
	else
	{
		that.setHeader(headerParams);
		that.setContent(contentParams);
		if (params)
			that.adjustButtons(params);
		else
			that.adjustButtons({ok: true});
	}

	if (params)
	{
		that.setHideFooter(params.hide_footer);
		that.setHideHeader(params.hide_header);
	}

	if (loading)
	{
		setLoading();
	}
	else if (url)
	{
		var callback = callbacks ? callbacks.load_onsuccess : null;
		var callbackError = callbacks ? callbacks.load_onerror: null;
		that.load(url, data, dataType, callback, callbackError);
	}
	
	if (allowMove)
	{
		jQ('.o-msgbox .header').css('cursor', 'move');
	}
	
	if (allowRecenter)
	{
		jQ(window).bind('resize.msgbox' + msgboxNum, centerWindow);
		jQ(window).bind('scroll.msgbox' + msgboxNum, centerWindow);
	}
	if (self !== parent && !FBPageInfo)
	{
		if (typeof(FB) != 'undefined' && FB.Canvas)
		{
			FB.Canvas.scrollTo(0,0);
		}
	}

	progressImg = document.createElement('img');
	jQ(progressImg).attr('src', odl.assets.img['progress']);
	jQ(progressImg).addClass('progress');
	centerLock = false;
	
	cacheWindowInfo(function () {
		centerWindow();
		jQ(containers['main']).css('display', 'block');
		if (!params.hide_shadow)
		{
			shadow = new odl.shadow(containers['main']);
		}
	
		// Check for resize of the window
		containerHeight = jQ(containers['main']).height();
		containerWidth = jQ(containers['main']).width();
	
		var resize = function ()
		{
			if (shadow)
				shadow.resize();

			var finish = function () {
				containerHeight = jQ(containers['main']).height();
				containerWidth = jQ(containers['main']).width();
			};
	
			if (allowRecenter)
				that.center(finish);
			else
				finish();
		};
	
		// ResizeLoop - this loop should continuously run until the msgbox is closed
		var origBodyHeight = jQ(document.body).css('height');
		var resizeLoop = function () {
			if (jQ(containers['main']).length && !closingFlag)
			{
				var height = jQ(containers['main']).height();
				var width = jQ(containers['main']).width();
				if (height != containerHeight)
					resize();
				else if (width != containerWidth)
					resize();
	
				if (height > jQ(document.body).height())
				{
					jQ(document.body).height(height + 40);
				}
				setTimeout(resizeLoop, 225);
			}
			else
			{
				jQ(document.body).css('height', origBodyHeight);
			}
		};
		resizeLoop();
		
		jQ(document).bind('keyup.msgbox' + msgboxNum, function(event){
				if (event.which == 27) {
					jQ(document).unbind('keyup.msgbox' + msgboxNum);
					that.close();
			   }
		});
	});
};

odl.msgbox.setup = function (params)
{
	odl.msgbox.defaultParams = params;
};


odl.namespace('shadow');

/**
 * Puts a shadow around the element passed in.
 *   Presently this element must be 
 *     - position: absolute
 *     - have top && left or top && right or bottom && left or bottom && right defined
 * @param element The actual element to put a shadow on / behind
 */
odl.shadow = function (element)
{
	var that = this;	
	var ieCheck = function ()
	{
		var x;
		if (x = jQ(document.documentElement))
		{
			if (x.hasClass('ie6') || x.hasClass('ie7') || x.hasClass('ie8'))
				return true;
		}
		return false;
	}
	var zIndex, zIndexShadow, zIndexElement;
	if (zIndex = jQ(element).css('z-index'))
	{
		zIndexShadow = zIndex - 1;
		zIndexElement = null;
	}
	else
	{
		zIndexShadow = odl.zindex.getHighest();
		zIndexElement = odl.zindex.getHighest();		
	}
	// creates a shadow container
	var createShadowContainer = function ()
	{
		var shadowContainer = document.createElement('div');
		jQ(shadowContainer).css('top', '0px');
		jQ(shadowContainer).css('left', '0px');
		jQ(shadowContainer).addClass('o-shadow');
		jQ(shadowContainer).css('z-index', zIndexShadow);
		jQ(shadowContainer).css('position', 'absolute');
		return shadowContainer;
	}

	this.shadowContainers = null;

	// Simple - non-ie 6/7/8 case
	if (!ieCheck())
	{
		jQ(element).addClass('o-shadow');
	}
	else
	{
		var shadowContainer = createShadowContainer();
		this.shadowContainers = [shadowContainer];
		if (zIndexElement)
			jQ(element).css('z-index', zIndexElement);
		jQ(element).before(shadowContainer);
	}

	// Adjusts the positioning and dimensions of the shadow container
	var adjust = function ()
	{
		if (that.shadowContainers)
		{
			var curHeight = jQ(element).height();
			var curWidth = jQ(element).width();
			var position = jQ(element).position();
			var y, yPos;
			var x, xPos;
			x = 'left';
			xPos = position.left;
			y = 'top';
			yPos = position.top;
	
			// Expand the shadow container
			jQ(that.shadowContainers).css('height', curHeight + 'px');
			jQ(that.shadowContainers).css('width', curWidth + 'px');
			jQ(that.shadowContainers).css(x,(xPos - 20) + 'px');
			jQ(that.shadowContainers).css(y,(yPos - 20) + 'px');
			return true;
		}
	}

	if (this.shadowContainers)
	{
		if (adjust())
		{
			jQ(this.shadowContainers).css('display', 'block');
		}
	}

	this.resize = function () { return adjust(); };
	this.close = function (callback) {
		var shadowOpacity = 0.39;
		// On IE do a special fade out of the shadow
		if (that.shadowContainers && that.shadowContainers[0] && that.shadowContainers[0].filters && typeof(that.shadowContainers[0].filters) != 'function')
		{
			var reduceShadow = function ()
			{
				that.shadowContainers[0].filters.item("DXImageTransform.Microsoft.Blur").ShadowOpacity = shadowOpacity;
				shadowOpacity -= 0.15;
				if (shadowOpacity >= 0)
					setTimeout(reduceShadow, 2);
			}
			reduceShadow();
		}
		if (that.shadowContainers)
		{
			var timeoutFunc = function () {
				if (shadowOpacity >= 0)
				{
					setTimeout(timeoutFunc, 10);
				}
				else
				{
					jQ(that.shadowContainers).remove();
					jQ(element).removeClass('o-shadow');
					if (callback && typeof(callback) == 'function')
						callback();
				}
			};
			timeoutFunc();
		}
		else
		{
			jQ(element).removeClass('o-shadow');
			if (callback && typeof(callback) == 'function')
				callback();
		}
	}
}

/* listing comments, using facebook's comment widget */

odl.namespace("comments");
odl.comments = (function (){
	var show = function(listingID, options)
		{
			var title = "All Comments";
			title = options.title ? title + " on " + options.title : "";
			var customID = "commentslightbox";
			var msgbox = new odl.msgbox(
				{
					url: odl.info.base_path + 'comments/show/' + listingID + "/",
					data: {'customID' : customID , 'moduleType': 'default' },
					dataType: 'html',
					id: "listing-comment-view-" + listingID + "-" + customID,
					singleton: true,
					header: title,
					overlay: true,
					hide_footer: true,
					close_x: true,
					skin: "comments_lightbox"
				});

			if (options.update_tile)
			{
				jQ("body").bind("appendTOListing.tileUIcomments", {'listing_id' : listingID, tile: jQ(event.target).closest("div.tile")} , function(event, data){
				    if (event.data.listing_id == data.listing_id && odl.info.user_id == document.location.href.match(/\d+/))
				    {
					    event.data.tile.find("div.the-comment").html(data.html_data).removeClass("template");
						try	{
							jQ('#main-column').tileUI('reTile', event.data.tile);
						}
						catch(err) {
							console.log("couldn't retile :(");
						}
				    }
				});
			}
		};

	return {
		show: show
	};
})();

;(function(){
	if (!odl.comments.favoriteHandlerSet)
	{
		jQ(document).ready(function(){
			jQ("body").bind("changed.favorite", function(event, data){
				var wrapper = jQ(data.heart_div).closest("div.speech-bubble");
				if (wrapper.get(0))
				{
					var options = {
						listingId: data.listing_id,
						wrapper: wrapper
					};
					odl.listingComment.prototype.refreshComments(options);
				}
			});
		});
		odl.comments.favoriteHandlerSet = true;
	}
})();

odl.namespace('listingComment');

/* constructor
 * moduleType: search, detail, summary, DETAIL(latest IDP)
 */

odl.listingComment = function(listingId, moduleType, customId)
{
	this.listingId = listingId;
	this.moduleType = moduleType;
	this.wrapperId = customId ? '#' + 'listing-comment-view-' + listingId + '-' + customId + ' ' : ''; //wrapper id is used when there can be multiple same listings, such as on home page
	this.currentfbProfileId = null;  //the fb user id of user whose profile link in the comment section 
	this.listingParams = jQ.parseJSON(jQ(this.wrapperId + '#listing-comments-' + this.listingId).attr('data-params'));
	if (moduleType == 'search')
	{
		jQ.extend(this.listingParams, jQ.parseJSON(jQ('#threat-matrix-params').attr('data-params')));
	}
	
	this.commentWidget = jQ(this.wrapperId + '#comment-widget-' + this.listingId);
	this.loadingImage = jQ(this.wrapperId + '#listing-comments-' + this.listingId + ' .loading-image');
    this.askQuestionWrapper = jQ(this.wrapperId + ' #ask-question'); 
	var that = this;

	//add onclick event handler to all comment
	commentLinkSelector = '#comment-link-' + this.listingId;
	if (customId)
	{
		commentLinkSelector += '-' + customId;
	}
	jQ(this.wrapperId + '#listing-comments-' + this.listingId +  ' .comment-box, ' + commentLinkSelector).click
	(
		function(e)
		{
			that.openWidgets();
			that.trackEvent("comment_link");
		}
	);

	//add onclick event handler to all 'show all comments' buttons
	jQ(this.wrapperId + '#listing-comments-' + this.listingId +  ' .existing-comments #show-more-' +  this.listingId).click
	(
		function(e)
		{
			//hack to get it working on detail page where it's not bound to a wrapper
			if (!that.wrapperId)
			{
				that.wrapperId = "#listing-comments-" + that.listingId;
			}
			//fetching listings using ajax, which is a da
			e.preventDefault();
			that.showAllComments();
			that.trackEvent("comment_view_more");
		}
	);

	//register widget events, wait until facebook object is ready
	function init()
	{
		if (typeof odl.info.fb_init == 'undefined' || !odl.info.fb_init)
		{
			setTimeout(function(){init();}, 1000);
		}
		else
		{
			that.registerProfileLinks();
			if(that.moduleType == 'detail' || that.moduleType == 'DETAIL' || that.moduleType == 'summary')
			{
				that.openWidgets();
			}
		}
	};
	init();
	odl.listingComment.lookupTable[this.listingId] = this;
};

/* events when user click a user profile link in any of the existing comment */
odl.listingComment.prototype.registerProfileLinks = function()
{
	var that = this;
	/* if user is not facebook connected, ask for fb permission before user can view other commentor's profile */
	jQ(this.wrapperId + '#comment-list-' + this.listingId + ' .user-name, ' +  this.wrapperId + '#comment-list-' + this.listingId + ' .commentor-profile-link').each
	(
		function(index, element)
		{
			jQ(element).click
			(
				function(e)
				{
					e.preventDefault(); //need to block first since get login is non-syn call
					var profileLink = element.href;
					that.currentfbProfileId = jQ(element).attr('data-fbid');
					FB.getLoginStatus
					(
						function(response)
						{
							if(response && response.authResponse)
							{
								if (element.href)
									top.location.href = element.href;
								else
									top.location.href ="http://www.facebook.com/profile.php?id=" + that.currentfbProfileId;
								return;
							}
							else {
								//ask for email permission
								that.openProfileDialog();
							}
						}, 
						{scope:''}
					);			
				}
			);
		}
	);
}

// show add comment widget for a listing
odl.listingComment.prototype.openCommentWidget = function()
{
	odl.spam.addTM(odl.info.tmsid); //load threat metrix
	
	if (odl.listingComment.isOpening)
		return;
	odl.listingComment.isOpening = true;
	var that = this;
	that.askQuestionWrapper.show();
	that.commentWidget.css('display', 'block');
	var width = that.commentWidget.width();
	
	var wrap = jQ(that.wrapperId + '#listing-comments-' + that.listingId);
	wrap.parent().show(); // in case it was hidden (in serps we hide the module until the user clicks 'comment'

	if (wrap.hasClass('serp_test_hidden'))
	{
		wrap.removeClass('serp_test_hidden');
		wrap.addClass('serp_test_shown');
	}
	
	var cbk = function(response) {
		odl.listingComment.isOpening = false;
		that.loadingImage.css({'display': 'none'});
		jQ(that.wrapperId + '#comment-widget-' + that.listingId).css('position', 'static');
		that.askQuestionWrapper.removeClass("commentOverlay"); 
		
		jQ(that.wrapperId + '#listing-comments-' + that.listingId +  ' .comment-hint').css('display', 'none');
		that.commentWidget.append(response.content);
		that.commentFormDom = jQ(that.wrapperId + '#comment-widget-' + that.listingId).find('.listing-comment-form').first();
		that.commentForm = new odl.ezform(that.commentFormDom);
		odl.listingComment.currentListingId = that.listingId;
		
		jQ('textarea', that.commentWidget).autoResize();
		that.commentWidget.find('.submit-comment-button').first().click
		(
			function()
			{
				that.trackEvent('comment_submit');
				FB.login
				(
					function(response)
					{
						if(response && response.authResponse)
						{
							that.addComment();
							return;
						}
						else {
							//ask for email permission
							that.openDialog();
						}
					},
					{scope:'email,publish_stream'}
				);
			}
		);
		
		that.commentFormDom.find('[name="tmsid"]').val(odl.info.tmsid);
	}


	if (that.moduleType == 'DETAIL' && jQ('.listing-comment-form').length > 0)
		cbk({content: ''});
	else
	{
		//fetch comment content using ajax
		jQ(that.wrapperId + '#comment-widget-' + that.listingId).css('position', 'relative');
		that.loadingImage.css({'display':'block', 'z-index': odl.zindex.getHighest(), 'left' : Math.round(jQ(that.wrapperId + '#comment-widget-' + that.listingId).width()/2) - 16 + 'px', 'top': '-2px'});
		that.askQuestionWrapper.addClass("commentOverlay"); 
		
		jQ.ajax
	    ({
	        'url' : odl.info.base_path + 'comment/show_comment_form/?listingId=' + this.listingId + '&moduleType=' + this.moduleType,
	        'dataType' : 'json',
	        'success' : cbk
	    });
	}
};

odl.listingComment.prototype.openWidgets = function()
{
	//first close opened widgets
	if(odl.listingComment.currentListingId)
	{
		this.closeWidgets(odl.listingComment.currentListingId);
	}
	if (this.moduleType == 'search')
	{
		jQ('.listing-comments.serp_test_shown').each(function(i, e) {
			var wrap = jQ(e);
			if (wrap.hasClass('serp_test_shown'))
			{
				wrap.removeClass('serp_test_shown');
				wrap.addClass('serp_test_hidden');
			}
		});
	}
	this.openCommentWidget();
};

//show all comments
odl.listingComment.prototype.showAllComments = function()
{
	var that = this;
	var options = {
		listingId: that.listingId,
		wrapper: jQ(that.wrapperId)
	};
	odl.listingComment.prototype.refreshComments(options);
	this.trackEvent("comment_view_more");
};

//show all comments
odl.listingComment.prototype.refreshComments = function(options)
{
	var settings =
	{
		type: 'POST',
		url : odl.info.base_path + 'comment/show_all_comments/?listingId=' + options.listingId,
		dataType: 'json',
		success: function(result) //on success, server will return the html for the new added comment
		{
			jQ(options.wrapper).find('ol.comments-list').empty();
			jQ(result['data']).appendTo(jQ(options.wrapper).find('ol.comments-list'));
		}
	};

	var spinnerContainer = null;
	//collapsed
	if (jQ(options.wrapper).find('#comment-list-' + options.listingId + " .show-more"))
	{
		spinnerContainer = jQ(options.wrapper).find('#comment-list-' + options.listingId + " .show-more");
	}
	else //expanded
	{
		spinnerContainer = jQ(options.wrapper).find('ol.comments-list');//#comment-list-' + options.listingId );
	}
	var spinnerImg = '<img src="http://i.oodleimg.com/a/animate/spinner-small.gif" />';
	jQ(spinnerContainer).html(spinnerImg);
	jQ.ajax(settings);
};

//delte a comment, this function is static to make delete newly created comment simple
odl.listingComment.deleteComment = function(listingId, commentId)
{
	var settings =
	{
		type: 'POST',
		url : odl.info.base_path + 'comment/delete_comment/?listingId=' + listingId + "&commentId=" + commentId,
		dataType: 'json',
		success: function(result)
		{
			//jQ('#comment-list-' + this.listingId).append(result.data);
		}
	};
	jQ.ajax(settings);
	var commentEle = jQ('#comment-' + listingId + "-" + commentId);
	var numSiblings = commentEle.siblings().length;
	if (numSiblings == 0)
	{
		commentEle.parents('.listing-comments').parent().hide();
	}
	jQ('#comment-' + listingId + "-" + commentId).remove();
};

//hide comment widget
odl.listingComment.prototype.closeWidgets = function(listingId)
{
	var container = jQ(this.wrapperId + '#listing-comments-' + listingId);
	container.find('#ask-question').hide();
	container.find('.comment-widget').empty();
	container.find('.comment-hint').show();
	odl.listingComment.currentListingId = null;
};

odl.listingComment.postLock = null;

//add comment, fbuid is facebook user id
odl.listingComment.prototype.addComment = function()
{
	if (!odl.listingComment.postLock)
	{
		odl.listingComment.postLock = true;
	}
	else
	{
		return;
	}

	var that = this;
	that.commentForm.callback = function(result) //on success, server will return the html for the new added comment
	{
		odl.listingComment.postLock = null;
		if (result.error)
		{
			//only possible error here is user submit without any input text
			that.commentFormDom.css({'display': 'block'});
			that.loadingImage.css({'display': 'none'});
			jQ(that.wrapperId + '#comment-widget-' + that.listingId).css('position', 'static');
			return;
		}

		if (result.data)
		{
			jQ("body").trigger("appendTOListing.tileUIcomments", {html_data : result.data, listing_id: odl.listingComment.currentListingId});
		}

		//clear and unhide the comment form
		that.openWidgets(); //trick ezform to put hint text back in
		that.commentFormDom.css({'display': 'block'});
		
		if (that.moduleType == 'DETAIL' && result.data)
		{
			//show all hidden comments, then show the new comment at the bottom
			jQ(that.wrapperId + '#comment-list-' + that.listingId).removeClass('no-comments');
		}
		
		jQ('.comment-content textarea[name="comments"]').val('');
		jQ(that.wrapperId + '#comment-list-' + that.listingId).append(result.data);
		jQ(that.wrapperId + "#nolistingstxt").css("display", "none");
		if (result.pending)
		{
			var myListingId = that.listingId;
			setTimeout(function() { 
					jQ(that.wrapperId + '#comment-list-' + myListingId).children('li.pending').fadeOut(); 
				}, 4000
			);
		}
		that.loadingImage.css({'display': 'none'});
		jQ(that.wrapperId + '#comment-widget-' + that.listingId).css('position', 'static');
		that.askQuestionWrapper.removeClass("commentOverlay"); 
		if(that.moduleType == 'search' || that.moduleType == 'home')
		{
			that.closeWidgets(that.listingId);
		}
	};
	that.commentForm.addAjaxOptions({'dataType' : 'json'});
	that.askQuestionWrapper.addClass("commentOverlay"); 
	jQ(that.wrapperId + '#comment-widget-' + that.listingId).css('position', 'relative');
	that.loadingImage.css({'display':'block', 'z-index': odl.zindex.getHighest(), 'left' : Math.round(jQ(that.wrapperId + '#comment-widget-' + that.listingId).width()/2) - 16 + 'px'});
	that.commentForm.ajaxSubmit();
	this.trackEvent("comment");
};

//open popup reminder that asks for fb permission
odl.listingComment.prototype.openDialog = function()
{
	var that = this;
	var msgbox;

	function permLogin()
	{
		that.trackEvent('facebook_start');
		FB.login
		(
			function(response)
			{
				if(response.authResponse)
				{
					var loginCallback = function ()
					{
						var successCallback = function ()
						{
							that.addComment();
							that.trackEvent('facebook_success');
							
							FB.api
							(
								'/me',
								function(meResponse)
								{
									if(meResponse.email.indexOf('@proxymail.facebook.com') != -1)
									{
										that.trackEvent('facebook_proxy_email');
									}
								}
							);
						}
						successCallback();
					}
					odl.auth2.refresh({callback: loginCallback});
					msgbox.close();
				}
				else
				{
					that.trackEvent('facebook_no_permission');
					that.openDialog();
				}
			},
			{scope:'email,publish_stream'}
		);
	}

	function sendEmailBox()
	{
		 msgbox.close();
		 safecall(function() { odl.leadgen.listing( odl.listingComment.currentListingId, 'respond0', false, this)}, function() { return typeof odl.leadgen.listing; }); return false;
	}

	function close()
	{
		msgbox.close();
		that.trackEvent('comment_cancel');
	}

	var params =
	{
		url: '/lightbox/listing-action-lightbox/ask_email_for_comment?listingId=' + odl.listingComment.currentListingId,
		width: 540,
		close_x: close,
		overlay: true,
		buttons: [{text: "Send private message instead...", skin: 'plain-link', click : sendEmailBox} , {text: 'Connect with Facebook', click: permLogin}]
	};
	msgbox = new odl.msgbox(params);
};

//open view profile permission request dialog
odl.listingComment.prototype.openProfileDialog = function()
{
	var that = this;
	var msgbox;
	
	function permLogin()
	{
		that.trackEvent('facebook_start');
		FB.login
		(
			function(response)
			{
				if(response.authResponse)
				{
					odl.auth2.refresh();
					that.trackEvent('facebook_success');
					top.location.href ="http://www.facebook.com/profile.php?id=" + that.currentfbProfileId;
					FB.api
					(
						'/me', 
						function(meResponse)
						{
							if(meResponse.email.indexOf('@proxymail.facebook.com') != -1)
							{
								that.trackEvent('facebook_proxy_email');
							}
						}
					);
				}
				else
				{
					that.trackEvent('facebook_no_permission');
					that.openProfileDialog();
				}
			},
			{scope:'email,publish_stream'}
		);
		msgbox.close();
	}
	
	function close()
	{
		msgbox.close();
		that.trackEvent('profile_cancel');
	}
	
	var params =
	{
		url: '/lightbox/listing-action-lightbox/visit_commentor_profile?fbId=' + that.currentfbProfileId,
		width: 540,
		close_x: close,
		overlay: true,
		buttons: [{text: "Leave ...", skin: 'plain-link', click : close} , {text: 'Connect with Facebook', click: permLogin}]
	};
	msgbox = new odl.msgbox(params);
};

//tracking parameters, the only difference for different event is event_type, which should be set when used
odl.listingComment.prototype.trackEvent = function(eventType)
{
	var params =
	{
		'event_name' : 'comment',
		'event_type' : eventType,
		'page' : this.moduleType,
		'listing_id' : this.listingId,
		'category' : this.listingParams['category'],
		'partner' : odl.info.partner_tag,
		'masquerade' :odl.info.partner_masquerade,
		'session_id' : this.listingParams['session-id'],
		'oodle_id' : odl.info.user_id
	};
	jQ.ajax({
		'url' : odl.info.base_path + 'event/track-named/?' + jQ.param(params)
	});
};

//static variables
odl.listingComment.currentListingId = null; //the listing with open comment widget
odl.listingComment.isOpening = false;
odl.listingComment.isThreatMetrixAdded = false; //if threat matrix is added
odl.listingComment.lookupTable = {}; // Special table for looking up listingComment objects when Facebook callback returns (see register events)

odl.namespace('categorytab');

odl.categorytab.callback = function(action, event)
{
	//position category list 
	if (action == 'pre-open')
	{
		//nothing needed so far
	}
};

jQ(
	function()
	{
		new odl.dropdownMenu('#header-more-category-link', '#header-more-category-list', null, 'slide');
		new odl.dropdownMenu('#header-browse-category-link', '#header-browse-category-list', null, 'slide');
	}
);






odl.namespace('myaccounttab');

/* constructor for more category */
odl.myaccounttab.callback = function(action, event)
{

};

jQ(
	function()
	{
		
	}
);

odl.namespace('spam');

odl.spam.tmOID = '09b6hfnr';
odl.spam.tmSID = '';

odl.spam.addTM = function(tmSID)
{
	if (odl.spam.tmSID)
	{
		return;
	}

	if (!tmSID)
	{
		var r = new String(Math.random()) + new String(Math.random());
		this.tmSID = r.replace(/\./g, '');
	}
	else
	{
		this.tmSID = tmSID;
	}
	
	var params = 'org_id=' + odl.spam.tmOID + '&amp;session_id=' + odl.spam.tmSID; 
	var u = 'https://tm.oodle.com';
	var vhtml = '<div><p style="background:url(' + u + '/fp/clear.png?' + params + '&amp;m=1)"></p>';
	vhtml += '<img src="' + u + '/fp/clear.png?' + params + '&amp;m=2" alt="" />'; 
	vhtml += '<script src="' + u + '/fp/check.js?' + params + ' type="text/javascript"></script>';
	vhtml += '<object type="application/x-shockwave-flash" data="' + u + '/fp/fp.swf?' + params + '" width="1" height="1" id="obj_id">';
	vhtml += '<param name="movie" value="' + u + '/fp/fp.swf?' + params + '" />';
	vhtml += "</object></div>";

	var tmContainer = document.createElement('div');
	document.body.appendChild(tmContainer);
	jQ(tmContainer).html(vhtml);
	
};

function swapTab(tabId)
{
	resetTabs();
	$(tabId).style.display = 'block';
	$('inside-content').className = 'inside-content-' + tabId;
	$(tabId + '-a').className = 'selected';
}

function changeTab(hash)
{
	if (hash != null && hash != "")
	{
		swapTab(hash);
	}
	else
	{
		swapTab('get-started');
	}
}

function resetTabs()
{
	$('features').style.display = 'none';
	$('get-started').style.display = 'none';
	$('faqs').style.display = 'none';
	
	$('features-a').className = '';
	$('get-started-a').className = '';
	$('faqs-a').className = ''
}

function openFeature(hiddenId, no)
{
	
	openFeature(hiddenId, no, null);
	
}

function openFeature(hiddenId, no, trigger)
{
	
	for( var x = 0; x < no; x++ )
	{
		if(trigger == null)
		{	
			if ($(hiddenId + '_'+ x).style.display == 'none')
			{
				$(hiddenId + '_'+ x).style.display = '';
			}
			else
			{
				$(hiddenId + '_'+ x).style.display = 'none';
			}
		}
		else
		{
			if (trigger == 'close')
			{
				$(hiddenId + '_'+ x).style.display = '';
				$('close_open_trigger').value = 'open';
			}
			else
			{
				$(hiddenId + '_'+ x).style.display = 'none';
				$('close_open_trigger').value = 'close';
			}
			
		}
	}
	
}

function openAllFeatures()
{
	var trigger = $('close_open_trigger').value;
	
	openFeature('easy-feature', 5, trigger);
	openFeature('trust-feature', 3, trigger);
	openFeature('reach-feature', 1, trigger);
	openFeature('soc-feature', 6, trigger);
	openFeature('pro-feature', 10, trigger);
	openFeature('ins-feature', 5, trigger);
}

function openFAQ(hiddenId, override)
{
	var display = '';
	
	if (override != null)
		display = (override == 'close') ? 'block' : 'none';
	else
		display = $(hiddenId).style.display == 'block' ? 'none' : 'block';
	

	if(hiddenId == 'q5')
	{
		$('q5-list').style.display = display;
	}
	else if(hiddenId == 'q9')
	{
		$('q9-list').style.display = display;
	}
	$(hiddenId).style.display = display;
}


function openAllFAQs(no)
{
	var trigger = $('close_open_faq_trigger').value;
	
	for( var x = 1; x <= no; x++ )
	{
		openFAQ('q' +x, trigger);
	}

	$('close_open_faq_trigger').value = (trigger == 'close') ? 'open' : 'close';
}


function redirectVertical(selectObj)
{
	var selectedValue = selectObj.options[selectObj.selectedIndex];
	var redirect = selectedValue.value.lastIndexOf("select a category");
	if(redirect != 0 )
	{
		window.location="/pro/vertical/?c=" + selectedValue.value;	
	}
}

function redirectBilling()
{
	var url = '';

	if (jQ('input[name=tier_billing]:checked').val())
		url = '/pro/billing/cc/'+jQ('input[name=tier_billing]:checked').val();
	else
		url = 'pro/';

	setTimeout( function() {
		try
		{
			top.window.location = location.protocol+'//'+location.host+'/'+url;// Handles FF/Safari/Chrome
		}
		catch(err)
		{
			window.parent.location.href =location.protocol+'//'+location.host+'/'+url; // Handling for IE7&8.
		}
		
		}, 0);
}

function openSpecificFaq()
{
	swapTab('faqs');
	openFAQ('q7');
}




odl.namespace('leadgen');

// NOTE: fbResponse can be null (i.e. if fbjs_enabled is false) -- ALWAYS check
// nullity before using it
odl.leadgen.init = function(fbResponse, lead_form_id, trackStart) {
	trackStart= typeof(trackStart) != 'undefined' ? trackStart : true;
	lead_form_id = typeof(lead_form_id) != 'undefined' ? lead_form_id : 'lead';
	odl.leadgen.lead_form_id = lead_form_id;
	// set up hint text
	if (odl.hint)
		odl.hint.setup(odl.leadgen.lead_form_id);

	odl.leadgen.setThreatMetrixParam();
	odl.leadgen.conditionalShowFooterButtons(fbResponse);

	// set up tracking
	// set up captcha
	if (jQ('#' + odl.leadgen.lead_form_id + '-respond-label').text() == 'captcha') {
		jQ('#' + odl.leadgen.lead_form_id + '-recaptcha_response_field-row').css('display', 'block');
		odl.leadgen.tracking.mongo.addDefaultParams({
			'captcha' : 1
		});
	} else
		odl.leadgen.tracking.mongo.addDefaultParams({
			'captcha' : 0
		});

	if (jQ('#' + odl.leadgen.lead_form_id + '-send-already-fb-connected-row').length > 0)
		odl.leadgen.tracking.contactEventType = 'contact_fb_req';
	else if (jQ('#' + odl.leadgen.lead_form_id + '-respond-row').length > 0) // if the FB respond button
													// is shown, either
													// fb_optional or fb_req
	{
		if (jQ('#' + odl.leadgen.lead_form_id + '-send-email-text-row').length > 0)
			odl.leadgen.tracking.contactEventType = 'contact_fb_optional';
		else
			odl.leadgen.tracking.contactEventType = 'contact_fb_req';
	} else
		odl.leadgen.tracking.contactEventType = 'contact';

	if (trackStart)
	{
		odl.leadgen.tracking.mongo.track({
			'event_type' : odl.leadgen.tracking.contactEventType,
			'status' : 'start'
		});
		odl.leadgen.tracking.mongo.track({
			'event_type' : 'leadgen',
			'status' : 'start'
		});
	}

	odl.leadgen.cancelEvent = {
		type : odl.leadgen.tracking.contactEventType,
		status : 'cancel'
	};

	// set up file upload for job responses
	jQ('#' + odl.leadgen.lead_form_id + '-' + 'lead_file-element').change(
			function() {
				var btnElement = $('' + odl.leadgen.lead_form_id + '-' + '_lead_file-element');
				var progressElement = odl.form.showProgress(btnElement);

				// Upload the file to server
				var url = odl.info.base_path + 'file/upload/';
				var options = {
					url : url,
					form_id : odl.leadgen.lead_form_id,
					iframe_id : '' + odl.leadgen.lead_form_id + '-' + 'lead__file-element-iframe',
					success : function(o) {
						jQ('#' + odl.leadgen.lead_form_id + '-' + '_lead_file-element').val('');
						if (!o.error) {
							jQ('#' + odl.leadgen.lead_form_id + '-file_id-element').val(o.id);
							jQ(progressElement).after(o.file_info);
							jQ(progressElement).remove();
							jQ('#' + odl.leadgen.lead_form_id + '-' + 'lead_file-element').attr('name', o.uid);

							jQ('#' + o.id + '-a').click(function() {
								jQ('#' + odl.leadgen.lead_form_id + '-file_id-element').val('');
								jQ('#' + o.id).remove();
								jQ('#' + odl.leadgen.lead_form_id + '-' + 'lead_file-element').css({
									'display' : 'block'
								});
							}).css({
								'cursor' : 'mouse'
							});
						} else {
							odl.form.hideProgress(btnElement, progressElement);
						}
					}
				};

				options.poll_url = odl.info.base_path
						+ 'file/is-file-uploaded/'
						+ jQ('#' + odl.leadgen.lead_form_id + '-' + 'lead_file-element').attr('name');

				new odl.form.upload(options);
			});
	// if seller pic exists, shrink seller-to and seller-subject fields
	if (jQ('#' + odl.leadgen.lead_form_id + '-seller_pic-row').length > 0) {
		var widthWithPic = '300px';
		jQ('#' + odl.leadgen.lead_form_id + '-seller_to-element').css('width', widthWithPic);
		jQ('#' + odl.leadgen.lead_form_id + '-seller_subject-element').css('width', widthWithPic);
		jQ('#' + odl.leadgen.lead_form_id + '-seller_to-row label.hint').css('width', widthWithPic);
		jQ('#' + odl.leadgen.lead_form_id + '-seller_subject-row label.hint').css('width', widthWithPic);
	}

	// aesthetics
	jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer').addClass('fancy-top-border');
	jQ('#' + odl.leadgen.lead_form_id + '-contact-info').addClass('fancy-top-border');
	jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer').addClass('footer');
	jQ('#' + odl.leadgen.lead_form_id + '-contact-info').addClass('footer');

	// bind event handlers to footer buttons
	jQ('#' + odl.leadgen.lead_form_id + '-respond-element').click(odl.leadgen.sendWithFB);
	jQ('#' + odl.leadgen.lead_form_id + '-respond-using-fb-element').click(odl.leadgen.sendWithFB);
	jQ('#' + odl.leadgen.lead_form_id + '-send-email-text-element').click(odl.leadgen.sendEmailText);
	jQ('#' + odl.leadgen.lead_form_id + '-send-email-button-element').click(odl.leadgen.sendEmailButton);
	jQ('#' + odl.leadgen.lead_form_id + '-proxy-email-button-row').click(odl.leadgen.submitEmailProxy);
	jQ('#' + odl.leadgen.lead_form_id + '-send-already-fb-connected-row').click(odl.leadgen.sendWithFB);

	// force the focus to start on the message box
	jQ('.leadgen_msgbox textarea[name=user_comment]').focus();

	// bug 41256 -- do what post is doing and set the ip addr hidden field with
	// odl.info.ip_address
	jQ('#' + odl.leadgen.lead_form_id + '-o_ip_address-element').val(odl.info.ip_address);
	
	//if user typed in something in the comment box, populate ' + odl.leadgen.lead_form_id + 'gen message with that
	var commentTextArea = jQ('#ask-question textarea[name="comments"]');
	if (commentTextArea.length > 0 && !commentTextArea.hasClass('hint'))
		jQ('#' + odl.leadgen.lead_form_id + '-user_comment-element').val(commentTextArea.val());

	if (odl.leadgen.msgbox)
		odl.leadgen.msgbox.center();
};

odl.leadgen.setThreatMetrixParam = function() {
	if (odl.spam && odl.info) {
		var tmEle = jQ('#' + odl.leadgen.lead_form_id + '-tmid-element');
		odl.spam.addTM(odl.info.tmsid);
		tmEle.val(odl.info.tmsid); 
	}
}

// NOTE: fbResponse can be null (i.e. if fbjs_enabled is false) -- ALWAYS check
// nullity before using it
odl.leadgen.conditionalShowFooterButtons = function(fbResponse) {
	// when these three buttons are shown, it is a hint from the server that we
	// take over
	// the logic of conditionally show/hide footer buttons
	if (jQ('#' + odl.leadgen.lead_form_id + '-respond-row').length > 0
			&& jQ('#' + odl.leadgen.lead_form_id + '-send-email-text-row').length > 0
			&& jQ('#' + odl.leadgen.lead_form_id + '-send-email-button-row').length > 0) {
		// let user decide whether to respond on FB or via email (so hide the
		// send email button)
		if (fbResponse && fbResponse.status == 'notConnected')
			jQ('#' + odl.leadgen.lead_form_id + '-send-email-button-row').css('display', 'none');
		else // user must respond with email
		{
			jQ('#' + odl.leadgen.lead_form_id + '-respond-row').remove();
			jQ('#' + odl.leadgen.lead_form_id + '-send-email-text-row').remove();
		}
	}

	var textEle = jQ('#' + odl.leadgen.lead_form_id + '-seller-request-fb-connect-row');
	var email = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_email-element').val())

	// DEV-22021 - display "Respond using user@domain" if user is known
	if (jQ.trim(textEle.text()) == '' && email != '') {
		var linkText = '<a id="update-email" href="' + odl.info.base_path
				+ 'contact/lead/updateEmail/">Update your email address</a>';
		textEle.html('Respond using ' + email + '.  ' + linkText);
		textEle.css('display', 'inline');
	}

	// display first/last name and email field if send email flow AND we don't
	// have all info
	if (jQ('#' + odl.leadgen.lead_form_id + '-send-email-button-row').length > 0
			&& jQ('#' + odl.leadgen.lead_form_id + '-send-email-text-row').length == 0) // prevent weird UI
															// where the
															// name/email
															// section is shown
	// and the "Respond by email..." text is also shown in footer
	{
		// bug 47708 - for now, default UX to name/email
		var fn = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_firstname-element').val());
		var ln = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_lastname-element').val());

		if (fn == '' || ln == '' || email == '')
			jQ('#' + odl.leadgen.lead_form_id + '-contact-info').css('display', 'block');
	}
};

// ------reporting
odl.leadgen.tracking = {};

odl.leadgen.tracking.init = function(params, eventName) {
	params = params || {};
	eventName = eventName || 'leadgen';

	odl.leadgen.tracking.mongo = new odl.event.framework(eventName, '');
	odl.leadgen.tracking.mongo.addDefaultParams(params);
};

odl.leadgen.trackShare = function() {
	odl.leadgen.tracking.mongo.track({
		'event_type' : 'share',
		'status' : 'fb_share'
	});
	odl.leadgen.close();
};

odl.leadgen.cancel = function() {
	odl.leadgen.tracking.mongo.track({
		'event_type' : odl.leadgen.cancelEvent.type,
		'status' : odl.leadgen.cancelEvent.status
	});
	odl.leadgen.close();
};

odl.leadgen.close = function() {
	if (odl.leadgen.msgbox) {
		odl.leadgen.msgbox.close();
		odl.leadgen.msgbox = null;
	}

	// reinstate all the params for the inline listing form
	// if the popup leadgen form is instantiated, all the odl.leadgen params are set to that form's elements/preferences
	// subsequently the inline form stops working
	var trackLeadgenStart = false;
	odl.leadgen.initInlineListingForm(odl.leadgen.listingID, 'respond0', false, trackLeadgenStart);
};

// ------entry points
odl.leadgen.listing = function(listingID, trackingRespondButton, circleFlag, ele, fbLoginFlag) {
	odl.leadgen.circleFlag = circleFlag;
	odl.leadgen.listingID = listingID;

	var params = {
		'listing_id' : listingID
	};
	params.respond_button = trackingRespondButton;

	if (odl.leadgen.btn_tracking_code) {
		params.respond_button = odl.leadgen.btn_tracking_code;
	}
	odl.leadgen.tracking.init(params, fbLoginFlag ? 'leadgen_fblogin' : 'leadgen');
	
	//if on fbmp and not logged in, track + redirect to FB oauth login
	if (odl.info.is_facebook && !odl.info.fb_logged_in)
	{
		odl.leadgen.tracking.mongo.track({
			'event_name': 'leadgen_fblogin', //overwrite
			'event_type': 'redirect',
			'status': 'start'});
		
		var redirectUri = odl.info.fb_base_url.replace(/^http\:/, 'https:')
		                + 'view/' + listingID + '/?respond_to=' + listingID;
		
		var queryParams = ['client_id=' + odl.info.fb.appId,
		                   'redirect_uri=' + encodeURIComponent(redirectUri),
		                   'scope=' + odl.leadgen.fbPermissions];
		var url = 'https://www.facebook.com/dialog/oauth?' + queryParams.join('&');
		top.location.href = url;
		
		return;
	}
	
	//if user has "come back" from the FB oauth login, track a success
	if (fbLoginFlag)
	{
		odl.leadgen.tracking.mongo.track({'event_type': 'redirect', 'status': 'success'});
	}

	ajaxUrl = odl.info.base_path + 'contact/lead/show/?listing_id=' + listingID;
	/*
	TODO: Remove circleFlag from this function signature
	if (circleFlag)
		odl.circle.loginToRespond(ele, listingID, ajaxUrl);
	else
	*/
	odl.leadgen.popup(ajaxUrl, ele);
};

//check url qs for respond_to; if present, call odl.leadgen.listing to auto open lightbox
(function() {
	var m = window.location.search.match(/respond_to=([\d]+)/);
	if (m)
		fire(function() { odl.fbready.add(function() { odl.leadgen.listing(m[1], '', false, null, true); }); });
})();

odl.leadgen.contact = function(sellerID, ele) {
	odl.leadgen.tracking.init({
		'seller_id' : sellerID
	}, 'leadgen_seller');

	ajaxUrl = odl.info.base_path + 'contact/lead/show/?seller_id=' + sellerID;
	odl.leadgen.popup(ajaxUrl, ele);
};

odl.leadgen.autogen = function(url, ele) {
	odl.leadgen.tracking.init();

	ajaxURL = odl.info.base_path + 'contact/lead/show/?autogen=' + url;
	odl.leadgen.popup(ajaxURL, ele);
};


odl.leadgen.initInlineListingForm = function (listingID, trackingRespondButton, circleFlag, trackLeadgenStart) {
	trackLeadgenStart= typeof(trackLeadgenStart) != 'undefined' ? trackLeadgenStart : true;
	odl.leadgen.circleFlag = circleFlag;
	odl.leadgen.listingID = listingID;

	var params = {
		'inline_form': 1,
		'listing_id' : listingID,
		'respond_button': trackingRespondButton
	};

	if (odl.leadgen.btn_tracking_code)
		params.respond_button = odl.leadgen.btn_tracking_code;
	
	odl.leadgen.tracking.init(params);
	
	if (odl.info.fbjs_enabled) {
			FB.getLoginStatus(function(response) {
				odl.leadgen.init(response, 'lead_gen', trackLeadgenStart);
				// FB connected, check if they have already granted permissions
				if (response.authResponse) {
					odl.leadgen.hasAllPerms = true;
				}
				else {
					odl.leadgen.hasAllPerms = false;
				}
			});
	} else {
		odl.leadgen.init(null, 'lead_gen', trackLeadgenStart);
	}
}
/* ---------------end entry points ---------------*/

odl.leadgen.initParams = function () {
	// bug 47650 - IE doesn't show captcha due to ajax caching--break it by
	// using POST
	var data = {
		force_post : 'i-hate-IE'
	};

	if (odl.leadgen.btn_tracking_code
			&& odl.leadgen.btn_tracking_code == 'respond_fbprofile')
		data.isPage = '1';

	var params = {
		singleton : true,
		width : 448,
		modal : true,
		overlay : true,
		buttons : [],
		close_x : odl.leadgen.cancel,
		skin : 'leadgen_msgbox',
		data : data
	};
	return params;
}

odl.leadgen.initMsgBox = function(params) {
	// wait for odl.msgbox to signal that it can be opened
	if (odl.msgbox && odl.msgbox.singleton) {
		safecall(function() {
			odl.leadgen.msgbox = new odl.msgbox(params);
		}, function() {
			return odl.msgbox.singleton ? 'undefined' : 'function';
		});
	} else {
		odl.leadgen.msgbox = new odl.msgbox(params);
	}
}


odl.leadgen.popup = function(ajaxUrl, ele) {
	odl.leadgen.hasAllPerms = false;
	var params = odl.leadgen.initParams();
	params.url = ajaxUrl;
	if (odl.info.fbjs_enabled) {
		FB.getLoginStatus(function(response) {
			odl.leadgen._popup(ele, params, function() {
				odl.leadgen.init(response);
			});

			// FB connected, check if they have already granted permissions
			if (response.authResponse) {
				odl.leadgen.hasAllPerms = true;
			}
			else {
				odl.leadgen.hasAllPerms = false;
			}
		});
	} else
		odl.leadgen._popup(ele, params, function() {
			odl.leadgen.init(null);
		})
};

odl.leadgen._popup = function(ele, params, callback) {
	params.callback = function() {
		fire(callback);
	};

	if (ele != null)
		odl.leadgen.anchor = ele;

	params.anchor_y = odl.leadgen.anchor;

	odl.leadgen.initMsgBox(params);
};

// ------footer button actions
odl.leadgen.sendEmailButton = function() {
	odl.leadgen.tracking.mongo.track({
		'event_type' : odl.leadgen.tracking.contactEventType,
		'status' : 'email_button_submit'
	});
	odl.leadgen.submitForm(odl.leadgen.tracking.contactEventType,
			'email_button_success', 'email_button_validate_error');
};

odl.leadgen.sendEmailText = function() {

	// replace footer buttons with only [Send]
	jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer .row').css('display', 'none');
	jQ('#' + odl.leadgen.lead_form_id + '-send-email-button-row').css('display', 'block');

	var fn = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_firstname-element').val());
	var ln = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_lastname-element').val());
	var email = jQ.trim(jQ('#' + odl.leadgen.lead_form_id + '-user_email-element').val());

	if (fn == '' || ln == '' || email == '') {
		odl.leadgen.tracking.mongo.track({
			'event_type' : odl.leadgen.tracking.contactEventType,
			'status' : 'email_link_open'
		});
		jQ('#' + odl.leadgen.lead_form_id + '-contact-info').css('display', 'block');
	} else {
		odl.leadgen.tracking.mongo.track({
			'event_type' : odl.leadgen.tracking.contactEventType,
			'status' : 'email_link_submit'
		});
		odl.leadgen.submitForm(odl.leadgen.tracking.contactEventType,
				'email_link_success', 'email_link_validate_error');
	}
};

odl.leadgen.submitEmailProxy = function() {
	odl.leadgen.tracking.mongo.track({
		'event_type' : 'prompt_email',
		'status' : 'submit'
	});
	odl.leadgen.submitForm('prompt_email', 'success', 'validate_error');
};

odl.leadgen.sendWithFB = function() {
	odl.leadgen.tracking.mongo.track({
		'event_type' : odl.leadgen.tracking.contactEventType,
		'status' : 'fb_submit'
	});

	var hasErrors = false;

	odl.form.startRequest({
		form_id : odl.leadgen.lead_form_id,
		url : odl.info.base_path + 'contact/lead/validate/',
		success : function(o) {
			if (o.error)
				hasErrors = true;
		},
		button_ele : jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer'),
		async : false
	// must do synchronously so FB login popup window can display (if async,
	// browser will block popup)
	});

	if (hasErrors) {

		odl.leadgen.tracking.mongo.track({
			'event_type' : odl.leadgen.tracking.contactEventType,
			'status' : 'fb_submit_validate_error'
		});
		return; // did not pass validation; do not continue
	}

	if (odl.leadgen.hasAllPerms) // implies already called FB.getSession
	{
		odl.leadgen.tracking.mongo.track({'event_type': 'facebook_connect', 'status': 'existing'});
		odl.fb.getUserInfo(odl.leadgen.postWithFBData);
	}
	else
	{
		odl.leadgen.tracking.mongo.track({'event_type': 'facebook_connect', 'status': 'start'});

		FB.login(function(response) {
			odl.fb.cookie(response);
			
			if (response.authResponse)
			{
				odl.auth2.refresh({
					callback : function() {
						odl.leadgen.tracking.mongo.track({'event_type': 'facebook_connect', 'status': 'success'});
						odl.fb.getUserInfo(function(userResponse) {
							var fbEmail = userResponse.email;
							
							if (fbEmail.indexOf('proxymail.facebook.com') >= 0)
								odl.leadgen.tracking.mongo.track({'event_type': 'facebook_connect', 'status': 'proxy_email'});
							
							odl.leadgen.postWithFBData(userResponse);
						});
					}
				});
			}
			else
			{
				odl.leadgen.tracking.mongo.track({'event_type': 'facebook_connect', 'status': 'no_auth'});
			}
		}, {scope : odl.leadgen.fbPermissions});
	}
};

odl.leadgen.fbPermissions = 'email,publish_stream';

// ------do posting
odl.leadgen.postWithFBData = function(userResponse) {
	// since we reached here, this means the user has logged into FB
	odl.info.fb_logged_in = true;

	jQ('#' + odl.leadgen.lead_form_id + '-user_firstname-element').val(userResponse.first_name);
	jQ('#' + odl.leadgen.lead_form_id + '-user_lastname-element').val(userResponse.last_name);

	// need to handle proxied email specially
	var emailEle = jQ('#' + odl.leadgen.lead_form_id + '-user_email-element');
	var fbEmail = userResponse.email;

	// if not proxy, replace email field with it
	if (fbEmail.indexOf('proxymail.facebook.com') < 0)
		emailEle.val(fbEmail);

	// per flowchart, do we have real email yet?
	var enteredEmail = jQ.trim(emailEle.val());
	if (enteredEmail.length > 0
			&& enteredEmail.indexOf('proxymail.facebook.com') < 0) {
		odl.leadgen.submitForm(odl.leadgen.tracking.contactEventType,
				'fb_submit_success', 'fb_submit_validate_error');
	} else // we don't -> assume proxy email given
	{
		odl.leadgen.tracking.mongo.track({
			'event_type' : 'prompt_email',
			'status' : 'start'
		});
		odl.leadgen.cancelEvent = {
			type : 'prompt_email',
			status : 'cancel'
		};

		// change the look of the lightbox
		jQ('#' + odl.leadgen.lead_form_id + '-seller-info').css('display', 'none');
		jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-body').css('display', 'none');

		jQ('#' + odl.leadgen.lead_form_id + '-contact-info').removeClass('fancy-top-border');
		jQ('#' + odl.leadgen.lead_form_id + '-contact-info').css('display', 'block');
		jQ('#' + odl.leadgen.lead_form_id + '-contact-info .row').css('display', 'none');
		jQ('#' + odl.leadgen.lead_form_id + '-proxy_email_text-row').css('display', 'block');
		jQ('#' + odl.leadgen.lead_form_id + '-user_email-row').css('display', 'block');

		jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer .row').css('display', 'none');
		jQ('#' + odl.leadgen.lead_form_id + '-proxy-email-button-row').css('display', 'block');
	}
};

odl.leadgen.submitForm = function(eventType, successStatus, failureStatus) {
	var callback = function(response) {
		if (response.success) {
			odl.leadgen.tracking.mongo.track({
				'event_type' : eventType,
				'status' : successStatus
			});
			odl.leadgen.tracking.mongo.track({
				'event_type' : odl.leadgen.tracking.contactEventType,
				'status' : 'success'
			});
			odl.leadgen.tracking.mongo.track({
				'event_type' : 'leadgen',
				'status' : 'success'
			});
			
			if (jQ('.isCLTest').length > 0)
				odl.leadgen.tracking.mongo.track({'event_type' : 'leadgen', 'status' : 'success_CLTest'});

			odl.adwords.trackConversion(document.body, '1007965017',
					'apkJCJ_ZzwIQ2abR4AM', '0');

			if ((odl.leadgen.msgbox != null) && (typeof(odl.leadgen.msgbox) != 'undefined'))
				odl.leadgen.msgbox.setHideFooter(true);
			if (response.content) // thank you lightbox
			{
				if ((odl.leadgen.msgbox == null) || (typeof (odl.leadgen.msgbox) == 'undefined')) {
					odl.leadgen.initMsgBox(odl.leadgen.initParams());
				}

				if (response.header)
					odl.leadgen.msgbox.setHeader(response.header);
				
				odl.leadgen.msgbox.setContent(response.content, function() {
					if (jQ('#lead-fb-share-row').length > 0) // share lightbox
					{
						// change the onclick of the X from odl.leadgen.cancel to
						// odl.leadgen.cancelShare
						odl.leadgen.cancelEvent = {
							type : 'share',
							status : 'cancel'
						};
						odl.leadgen.tracking.mongo.track({
							'event_type' : 'share',
							'status' : 'start'
						});
	
						// change title to "Tell Your Friends"
						odl.leadgen.msgbox.setHeader('Tell Your Friends');
	
						//fb share button
						odl.listingShare.initFBShare('.o-msgbox.leadgen_msgbox', function() {
							odl.leadgen.trackShare();
							odl.leadgen.close();
						});
					}
					// yahoo group; doing this so we don't errorneously track it as
					// a phone/shown
					else if (jQ('#' + odl.leadgen.lead_form_id + '-join-yahoo-group-element').length > 0) {
						jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer').addClass('fancy-top-border');
					}
					else // phone lightbox
					{
						odl.leadgen.cancelEvent = {
							type : 'phone',
							status : 'cancel'
						};
						odl.leadgen.tracking.mongo.track({
							'event_type' : 'phone',
							'status' : 'shown'
						});
					}
				});
			}
		} else if (response.error) {
			odl.leadgen.tracking.mongo.track({
				'event_type' : eventType,
				'status' : failureStatus
			});
			odl.leadgen.tracking.mongo.track({
				'event_type' : odl.leadgen.tracking.contactEventType,
				'status' : 'validate_error'
			});

			if (response.error.user_lastname != null
					|| response.error.user_firstname != null
					|| response.error.user_email != null) {
				jQ('#' + odl.leadgen.lead_form_id + '-contact-info').css('display', 'block');

				// reset hint text
				// i.e. prevent hint text from displaying over / covering up /
				// garbling text inside a populated text field
				if (odl.hint)
					odl.hint.setup(odl.leadgen.lead_form_id);
			}

			if (response.error.recaptcha_response_field)
				jQ('#' + odl.leadgen.lead_form_id + '-recaptcha_response_field-row')
						.css('display', 'block');
		}
	}

	var doFormSubmit = function() {
		odl.form.startRequest({
			form_id : odl.leadgen.lead_form_id,
			url : odl.info.base_path + 'contact/lead/post/',
			success : callback,
			button_ele : jQ('#' + odl.leadgen.lead_form_id + '-' + 'leadgen-footer')
		});
	};

	var circleOK = function(data) {
		if (data && data.result)
			odl.leadgen.tracking.mongo.track({
				'event_type' : 'circle',
				'status' : data.result
			});

		doFormSubmit();
	};

	var circleNG = function(data) {
		if (data && data.result)
			odl.leadgen.tracking.mongo.track({
				'event_type' : 'circle',
				'status' : data.result
			});
	};

	if (odl.leadgen.circleFlag)
		odl.circle.verifyMembership(odl.leadgen.listingID, 'lead',
				odl.leadgen.anchor, circleOK, circleNG);
	else
	{
		doFormSubmit();
	}
};

(function() {
  odl.namespace('adwords');
  odl.adwords.getConversionTracker = function(id, label, value, cbk) {
    var img, src;
    img = document.createElement('img');
    src = "//www.googleadservices.com/pagead/conversion/" + id + "/?script=0&label=" + (escape(label));
    if (value != null) {
      src = src + ("&value=" + value);
    }
    img.setAttribute('width', 1);
    img.setAttribute('height', 1);
    img.setAttribute('border', 0);
    img.setAttribute('src', src);
    if (cbk != null) {
      img.setAttribute('onload', cbk);
    }
    return img;
  };
  odl.adwords.trackConversion = function(dropEle, id, label, value, cbk) {
    var child;
    cbk || (cbk = null);
    child = odl.adwords.getConversionTracker(id, label, value, cbk);
    return dropEle.appendChild(child);
  };
}).call(this);

odl.namespace('legacy_yui2');

/**
 * Load YUI 2.0 libraries
 * @param callback - callback to call when loaded
 */
odl.legacy_yui2.loaded = false;
odl.legacy_yui2.load = function (callback)
{
	if (odl.legacy_yui2.loadLock)
	{
		setTimeout(function () { odl.legacy_yui2.load(callback) }, 300);
	}
	
	if (odl.legacy_yui2.loaded)
	{
		callback();
		return;
	}
	
	odl.legacy_yui2.loadLock = true;
	var onSuccess = function() {
	    		odl.legacy_yui2.loaded = true;
	    		odl.legacy_yui2.loadLock = false;
	    		callback();
	} 

	var safeCallback = function () {
		safecall(onSuccess, function () { if (typeof(YAHOO) != 'undefined') { return('function'); } });
	};
	
	var src= 'http://img.oodle.com/exjs/legacy_yui2/11353024000';
	LazyLoad.js(src, safeCallback, null, null);
}

odl.legacy_yui2.loadCarousel = function (callback)
{
	var yuiCallback = function () {
		var src= 'http://img.oodle.com/js/external/carousel_yui/carousel/445307468';
		var func = safecall(callback, function () { if (typeof(YAHOO) != 'undefined' && typeof(YAHOO.extension) != 'undefined') { return typeof(YAHOO.extension.Carousel); } });
		LazyLoad.js(src, func, null, null);
	}
	odl.legacy_yui2.load(yuiCallback);
}
odl.namespace('listing');

odl.listing.fbPermissionAndFeed = function(data)
{
	var requestPerms = {
			scope : 'email,publish_actions,publish_stream'
		};
	
	FB.login(function(response)
		{
			odl.fb.cookie(response);
			if (response.authResponse) 
			{
				var options = {
					url : '/account/listing/update/?action=fb_stream_msg&list[0]=' + data.listing_id,
					timeout: 45000,
					dataType: 'json',
					success: function(data) {
					   window.location.reload();
					}
				};
				
				jQ.ajax(options);
			}
			else
			{
				// do nothing
			}
		}, requestPerms
	);
};

odl.listing.repost = function(listingId, element)
{
	var content = "We've successfully reposted your listing, please wait a while for the listing to show up in search results.";
	var data = {lk: {0: jQ('#listingManagementForm-' + listingId + ' input[name=k]').val()}};

	var link = element;
	var parentNode = jQ(link).parent();
	var oldcontents = '';

	var options = {
		url : '/account/listing/update/?action=repost&list[0]=' + listingId,
		data: data,
		timeout: 45000,
		dataType: 'json',
		success: function(data) {
			if (data.success)
			{
				var buttons = [
				   {text: 'Okay', 
					skin: 'dark', 
					click: function() {
					   window.location.reload();
				   	},
					tab_index: 1
				}];
				
				if (data.fb_share)
				{
					buttons = [
							   {text: 'Okay', 
								skin: 'light', 
								click: function() {
								   window.location.reload();
							   	},
								tab_index: 1
							},
							   {text: 'Share on Facebook', 
								skin: 'dark', 
								click: function() {
									odl.listing.fbPermissionAndFeed(data);
							   	},
								tab_index: 2
							}
						];
				}

				var options = {
					header: 'Successfully Reposted',
					content: content,
					buttons: buttons
				};
				
				new odl.msgbox(options);
			}
			else if (data.error)
			{
				new odl.msgbox({
					header: 'Error',
					content: 'Unable to repost listing: ' + data.error,
					cancel: false
				});
			}
			else
			{
				new odl.msgbox({
					header: 'Unexpected Error',
					content: 'Unable to repost listing due to unexpected error. Please try again later',
					error_code: 5999,
					cancel: false
				});
			}
		},
		error: function() {
			new odl.msgbox({
				header: 'Unexpected Error',
				content: 'Unable to repost listing due to unexpected error. Please try again later',
				error_code: 5999,
				cancel: false
			});
		},
		beforeSend: function(jqXHR, settings) {
			imgEle = odl.assets.getImage('progress-link').clone();
			oldcontents = parentNode.html();
			parentNode.html('');
			parentNode.append(imgEle);				
		},
		complete: function(jqXHR, textStatus) {
			parentNode.html(oldcontents);		
		}
	};

	jQ.ajax(options);
	return false;
};


Oodle = window.Oodle || {};
Oodle.gui = Oodle.gui || {};
Oodle.gui.ext = Oodle.gui.ext || {};

new function(packageName)
{
	function Overlay(doc, zIndex)
	{
		this.document = doc || null;
		this.zIndex = zIndex || 1;
		this.div = null;
		this.shim = null;
	}
	
	Overlay.prototype.show = function()
	{
		if (!this.div)
			this._buildDiv();
		
		this.div.style.display = 'block';
		
		this.document.body.appendChild(this.shim);
		this.document.body.appendChild(this.div);
	}
	
	Overlay.prototype.hide = function()
	{
		if (this.div)
		{
			this.div.style.display = 'none'
			this.document.body.removeChild(this.div);
			this.div = null;
		}
	
		if (this.shim)
		{		
			this.document.body.removeChild(this.shim);
			this.shim = null;
		}
	}
	
	Overlay.prototype._buildDiv = function()
	{
		if (this.document)
		{
			this.div = this.document.createElement('div');
			this.div.id = 'oodle-gui-ext-overlay';

			this.div.style.left = '0px';
			this.div.style.top = '0px';
			this.div.style.zIndex = this.zIndex;
			this.div.style.backgroundColor = 'white';
			this.div.style.opacity = 0.50;
			this.div.style.filter = 'alpha(opacity=50)';
			this.div.style.position = 'fixed';
			this.div.style.height = '100%';
			this.div.style.width = '100%';
			this.div.style.display = 'none';
			
			// create a shim
			this.shim = this.document.createElement('iframe');
			this.shim.id = 'oodle-gui-ext-overlay-shim';
			this.shim.scrolling = "no";
			this.shim.frameBorder = "0";
			this.shim.style.border = "0px";
			this.shim.style.position = "fixed";
			this.shim.style.overflow = "hidden";
			this.shim.style.left = 0;
			this.shim.style.top = 0;
			this.shim.style.zIndex = this.zIndex - 1;
			this.shim.style.height = '100%';
			this.shim.style.width = '100%';
			this.shim.style.opacity = 0;
			this.shim.style.filter = 'alpha(opacity=0)';
			
		}
	}
	
	packageName.Overlay = Overlay;

} (Oodle.gui.ext);

/**
 * The Tools "gear"
 */
odl.namespace('gear');

/**
 * Constructor
 * 
 */
odl.gear = function(wrapperEle) {
	var that = this;
	
	this.listingID = wrapperEle.attr('data-listingid');
	this.isForceOpenLeft = wrapperEle.attr('data-gear-open-left') == '1';
	this.isForceNoDetach = wrapperEle.attr('data-gear-no-detach') == '1';
	
	this.newActionWrapper = wrapperEle;
	this.gear = this.newActionWrapper.find('.gear-link');
	
	this.actionWrapper = this.newActionWrapper.find('.action-wrapper');
	
	//solve bug 46671 by moving actionWrapper as a direct child of body
	if (!this.isForceNoDetach)
		this.detach();
	
	this.gear.click(function() { that.gearClickHandler(that); });
	
	/* @robert place all page-specific JS here */
	//SERP
	jQ('#listing-' + this.listingID).hover(
		function() { that.hoverInHandler(that); },
		function() { that.hoverOutHandler(that); }
	);

	//IDP and expanded tile view
	//@robert cannot do a standard jQ('#listing-tool-label') since that will fire "n" times
	//        (n = number of odl.gear instances)
	//    --> fix this by tying #listing-tool-label to each gear
	this.newActionWrapper.find('.listing-tool-label').click(function() { that.gearClickHandler(that); });
};

odl.gear.prototype.detach = function() {
	this.actionWrapper.detach().appendTo('body');
	this.actionWrapper.find('.new-listing-action').css('top', '0');
};

odl.gear.prototype.hoverInHandler = function(that) {
	that.gear.css('visibility', 'visible');
};

odl.gear.prototype.hoverOutHandler = function(that) {
	that.gear.css('visibility', 'hidden');
};

odl.gear.prototype.gearClickHandler = function(that) {
	//hide all other action wrappers and gears
	jQ('.action-wrapper').css('display', 'none');
	jQ('.gear-link').css('visibility', 'hidden');
	
	//... except on idp, where we show all gears inside the listing detail section
	odl.gear.idphack();

	//handle various "chopoff" cases (e.g. FB iframe)
	var top = that.gear.offset().top;
	var left = that.gear.offset().left;
	var body = jQ("body");

	//bug 46671 - open dropdown upwards if opening it downward will result in chopoff
	if (top + that.actionWrapper.height() > body.height())
		top = body.height() - that.actionWrapper.height();
	
	//open dropdown leftward if forced, or if opening it right will result in chopoff
	if (that.isForceOpenLeft || left + that.actionWrapper.width() > body.width())
		left = that.gear.offset().left + that.gear.width() - that.actionWrapper.width();

	if (that.isForceNoDetach) //change dropdown's position to match gear's position
		that.actionWrapper.position(that.gear.position());
	else //for some reason position and offset doesn't work
	{
		that.actionWrapper.css('top', top);
		that.actionWrapper.css('left', left);
	}
	
	that.actionWrapper.css({'display': 'block', 'z-index': odl.zindex.getHighest()});
	
	//attach an event handler to the gear popup's X
	that.actionWrapper.find('li.tool-header .close').click(function(event) {
		event.stopPropagation();
		that.closeHandler(that);
	});
};

odl.gear.prototype.closeHandler = function(that) {
	that.actionWrapper.css('display', 'none');
	that.gear.css('visibility', 'visible'); //re-display the gear
	
	odl.gear.idphack();
};

/* hack for IDP
 * if we have multiple gears in the listing details area,
 * show all gears when we close any gear dropdown
 */
odl.gear.idphack = function () { jQ('#detail-wrapper .new-listingaction .gear-link').css('visibility', 'visible'); }

odl.gear.parse = function(selector) { jQ(selector + ' .new-listingaction').each(function(i, e) { new odl.gear(jQ(e)); }); }

fire(function() { odl.gear.parse('body') });
odl.namespace('connected');

odl.connected.facebookConnected = function()
{
	odl.event.trackNamed({
		event_name: 'SERP_Social_Connections', event_type: 'FB_connect', status:'start'
	});
	
	odl.auth2.login({
		
		login_mode : 'facebook-direct',
		start_viral_loop : false,
		success: function()
		{
			odl.event.trackNamed({
				event_name: 'SERP_Social_Connections', event_type: 'FB_connect', status:'success'
			});
			jQ.getJSON(
				odl.info.base_path + 'facepile/'+odl.info.sellerId,
				function(json) {
					var cancelCallback = function () { 
						window.location.reload( true );
					};
					if (odl.info.fb_logged_in)
						var c_x = true;
					else
						var c_x = cancelCallback;
					
					var params = {
						id: "share-friend-panel",
						skin: 'new-popup-skin',
						close_x: c_x,
						ok: false,
						hide_footer: true,
						content: json.content,
						header: json.header
					};
					
					if (odl.connected.popupWin)
					{
						odl.connected.popupWin.close();
						odl.connected.popupWin = null;
					}
					
					odl.connected.secondPopupWin  = new odl.msgbox(params);
					odl.report.trackNamed({
						event_name: 'seller_header', event_type: 'view_details', status:'social_connections'
					});
				}
			);
		},
		failure: function(o) {
			if (odl.connected.popupWin)
			{
				odl.event.trackNamed({
					event_name: 'SERP_Social_Connections', event_type: 'FB_connect', status:'cancel'
				});
				odl.connected.popupWin.close();
				odl.connected.popupWin = null;
			}
		}
	});
};

odl.connected.close = function()
{
	if (odl.connected.popupWin)
	{
		odl.event.trackNamed({
			event_name: 'SERP_Social_Connections', event_type: 'value_prop', status:'cancel'
		});
		odl.connected.popupWin.close();
		odl.connected.popupWin = null;
	}	
	
};

odl.namespace('appRequest');
odl.appRequest.inviteFbFriends = function(options)
{
	var callback = function(){
		
	};
	var defaultOptions = {
		callback_failure: callback,
		callback_success: callback,
		message: "Join Marketplace",
		href: 'http://www.oodle.com',
		title: 'Invite friends to Marketplace'
	};

	options = jQ.extend(defaultOptions, options);
	FB.ui(
		{
			method: 'apprequests',
			display: 'iframe',
			filters : ['app_non_users'],
			message: options.message,
			data: {req_type: 'appreq', href: options.href},
			title: options.title
		},
		function (response)
		{
			if (response && response.request_ids)
			{
					options.callback_success();
			}
			else
			{
				options.callback_failure();
			}
		}
	);
};
/*
oodle (rotator dot js http www dot joseph plus finster plus wald dot com)
Modifications by Oodle
*/

(function($) {
    $.oodlerotate = function(s) {
        return $.oodlerotatethirteen($.rotate5(s));
    }

    $.oodlerotatefive = function(s) {
        var b = [],c,i = s.length,a = '0'.charCodeAt(),z = a + 10;
        while (i--) {
            c = s.charCodeAt(i);
            if (c >= a && c < z) { b[i] = String.fromCharCode(((c - a + 5) % (10)) + a); }
            else { b[i] = s.charAt(i); }
        }
        return b.join('');
    };

    $.oodlerotatethirteen = function(s) {
        var b = [],c,i = s.length,a = 'a'.charCodeAt(),z = a + 26,A = 'A'.charCodeAt(),Z = A + 26;
        while (i--) {
            c = s.charCodeAt(i);
            if (c >= a && c < z) { b[i] = String.fromCharCode(((c - a + 13) % (26)) + a); }
            else if (c >= A && c < Z) { b[i] = String.fromCharCode(((c - A + 13) % (26)) + A); }
            else { b[i] = s.charAt(i); }
        }
        return b.join('');
    };
})(jQuery)

odl.namespace('ezform');

//constructor, f can either be a dom element, or id for the form
odl.ezform = function(form)
{
	this.form = jQ(form);
	this.form.addClass('ezform');
	this.fieldsSetting = jQ.parseJSON(this.form.attr('data-config'));
	this.isSubmitting = false;
	this.callback = null; //call back function when submit form
	//default ajax options, can be overwritten
	var that = this;
	this.ajaxOptions = 	
	{
		success : function(response)
		{
			that.isSubmitting = false; 
			that.callback(response);
		},
		error : function(response)
		{
			that.isSubmitting = false;
		},
		dataType : 'json'
	};
	
	this.form.find('input,select,textarea').each
	(
		function(index, element)
		{
			var element = jQ(element);
			var eName = element.attr('name');
			if(that.fieldsSetting[eName])
			{
				/* display hint text, register hint related events*/
				if (that.fieldsSetting[eName]['hint'])
				{
					if(!element.val())
					{
						element.val(that.fieldsSetting[eName]['hint']).addClass('hint');
					}
					element.bind
					(
						'focus',
						function(e)
						{
							if (element.val() == that.fieldsSetting[eName]['hint'])
							{
								element.val('').removeClass('hint');
							}
						}
					);
					element.bind
					(
						'focusout',
						function(e)
						{
							if (element.val() == '')
							{
								element.val(that.fieldsSetting[eName]['hint']).addClass('hint');
							}
						}
					);
				}
				
				/* add class for required fields, user can define how required fields look like */
				function setRequiredStatus(element)
				{
					var eName = element.attr('name');
					if (element.val() != that.fieldsSetting[eName]['hint'] && element.val() != '')
					{
						element.removeClass('require');
					}
					else
					{
						element.addClass('require');
					}					
				}
				
				if (that.fieldsSetting[eName]['required'] == 1)
				{
					setRequiredStatus(element);
					element.keyup( function(e) { setRequiredStatus(element);});
					element.change( function(e) { setRequiredStatus(element);});
				}
			}
		}
	);
	
	//make catridge return not as direct submit but ajax submit
	this.form.submit
	(
		function(e)
		{
			e.preventDefault();
			that.ajaxSubmit(this.ajaxOptions);
		}
	);
};

/* add custom ajax options */
odl.ezform.prototype.addAjaxOptions = function($ops)
{
	for (var k in $ops)
	{
		this.ajaxOptions[k] = $ops[k];
	}
};

/* 
 * ajax submit the form, do proper checks 
 * options does not need to specify the callback function, since it is passed as the first parameter
 * 
 */
odl.ezform.prototype.ajaxSubmit = function()
{
	if(this.isSubmitting)
	{
		return;
	}
	else
	{
		this.isSubmitting = true;
	}
	var error = this.checkError();
	if (error)
	{
		/* make it simple, report the first error encountered */
		this.callback(error);
		this.isSubmitting = false;
	}
	else /* ajax submit the form */
	{
		this.form.ajaxSubmit(this.ajaxOptions);
	}
};

/* check form error on client */
odl.ezform.prototype.checkError = function()
{
	/* first check client error using client javascript*/
	var that = this;
	var errorMsg;
	var errorFields = [];
	this.form.find('input,select,textarea').each
	(
		function(index, element)
		{
			var element = jQ(element);
			var eName = element.attr('name');
			if (that.fieldsSetting[eName] && that.fieldsSetting[eName]['required'] && 
				(element.val() === that.fieldsSetting[eName]['hint'] || element.val() == ''))
			{
				errorFields.push(eName);
			}
		}
	);

	if (errorFields.length > 0)
	{
		return  {'error' : true, 'errorMsg' : errorFields[0].replace(/[-_]/g, ' ') + ' is required', 'errorFields' : [errorFields[0]]};
	}
	else 
	{
		return false;
	}
};

odl.namespace('report');

odl.report = {};

odl.report.init = function()
{
	jQ('div#social-bluepill-text').bind('click', odl.report.trackSocialRefineLink);
};

// odl.report namespace is used for organization purposes, so it's easy to find all related tracking
// in case we every want to remove all user engagement tracking specific to searches
odl.report.trackNamed = function(params, callback)
{
	odl.event.trackNamed(params, callback);
}

odl.report.trackSocialRefineLink = function()
{
	odl.report.track('search', 'social_refine');
};

odl.report.trackSortOnChange = function(dropdown, callback)
{
	odl.report.trackNamed({event_name: 'search', event_type: 'sort', status: jQ(dropdown).val().split('?')[1]}, callback);
	return false;
};

odl.report.keywordSearchSubmit = function(pageType)
{
	odl.report.track('search', 'keyword', pageType);
};

odl.report.trackCrossCategoryOnChange = function()
{
	odl.report.track('apartments_cross_category_module', 'click');
};

odl.report.trackCrossCategoryPageLoad = function()
{
	odl.report.track('apartments_cross_category_module', 'hectoimpression');
};

odl.report.track = function(eventName, eventType, pageType)
{
	/*need to implement for browser page later*/
	if (pageType != '' && pageType != null && pageType != 'undefined')
	{
		odl.info.page.type = pageType;
	}
	
	var pageTypes = [4, 5, 6, 16];
	if (indexOf(pageTypes, odl.info.page.type) >= 0)
	{
		if (odl.info.page.type == 5)
		{
			var pageType = 'Search';
		}
		else if (odl.info.page.type == 4)
		{
			var pageType = 'Homepage';
		}
		else if (odl.info.page.type == 6)
		{
			var pageType = 'IDP';
		}
		else if (odl.info.page.type == 16)
		{
			var pageType = 'Broswe';
		}
		
		var params = {'event_name': eventName, 'event_type' : eventType, 'page_type' : pageType};
		odl.event.trackNamed(params);
		return false;
	}
	
};

fire(odl.report.init);


//ajax call to replace the profile tab body


//name space
if(typeof Oodle == 'undefined')
{
	var Oodle = {};
}

if(typeof Oodle.FbProfileTab == 'undefined')
{
	Oodle.FbProfileTab = {};
}

Oodle.FbProfileTab.expandedNavId = null;

Oodle.FbProfileTab.getListingBody = function(url, obj)
{
	var i, queryStr, queryPairs, queryParams = [], queryKeyVal;
	var tupleStr, tuples, sib;

	// add extra parameters to set all tuples to on if it has not been set yet, otherwise the tuples will be replaced in SearchURLParser.php
	queryStr = url.match(/(.+?)\?(.+)/);
	//first get all query parameters into an array
	queryPairs = queryStr[2].split('&');
	for(i = 0; i < queryPairs.length; i++)
	{
		queryKeyVal = queryPairs[i].split('=');
		//only store those that does not have value 'on', since we will add them later
		if(queryKeyVal[1] != 'on')
		{
			queryParams[queryKeyVal[0]] = queryKeyVal[1];
		}
	}

	//then turn on the tuples if they have not been turned on yet
	tupleStr = url.match(/[&|?]t=(.+?)&/);
	if(tupleStr && tupleStr.length == 2)
	{
		tuples = tupleStr[1].split("%2F");
		for(i = 0; i < tuples.length; i++)
		{
			if(!queryParams[tuples[i]])
			{
				queryParams[tuples[i]] ="on";
			}
		}
	}		
	
	//if search comes from navigator form, either search by price range, or by key word
	if(obj.getTagName() == 'INPUT')
	{
		sib = obj.getParentNode().getFirstChild();
		while(sib)
		{
			if(sib.getTagName() == "INPUT" && sib !== obj && sib.getName())
			{
				queryParams[sib.getName()]= escape(sib.getValue());
			}
			sib = sib.getNextSibling();
		}
	}
	
	var newQueryString = '';
	for(var name in queryParams)
	{
		if(queryParams.hasOwnProperty(name))
		{
			newQueryString += '&' + name + '=' + queryParams[name];
		}
	}
	
	//compose url
	url= queryStr[1] + '?' + newQueryString.substr(1);
	
	//show progress image
	document.getElementById('listings').setStyle('display', 'none');
	document.getElementById('progress').setStyle('display', 'block');
	var ajax = new Ajax();
	ajax.responseType = Ajax.JSON;
	
	ajax.ondone = function(data) 
	{ 
		document.getElementById('progress').setStyle('display', 'none');
		document.getElementById('listing-content').setInnerFBML(data.fbml_data);
		document.getElementById('listing-content').setStyle('display', 'block');
	};
	
	ajax.onerror = function()
	{
		document.getElementById('progress-image').setStyle('display', 'none');
		document.getElementById('loading-error').setStyle('display', 'block');		
	};
	ajax.post(url); 
};

//show detailed navigator
Oodle.FbProfileTab.showDetailedNav = function()
{
	document.getElementById('brief-nav').setStyle('display', 'none');
	Oodle.FbProfileTab.closeExpandedNav();
	document.getElementById('detailed-nav').setStyle('display', 'block');
};

/*
 * close the currently opened navigator, if any
 */
Oodle.FbProfileTab.closeExpandedNav = function()
{
	//close the previous expanded navigator
	if(Oodle.FbProfileTab.expandedNavId)
	{
		var prevExpandedNav = document.getElementById(Oodle.FbProfileTab.expandedNavId);
		prevExpandedNav.setStyle({display:'none'});
		//show the selected value of the previous expanded navigator since it was hidden when the nav bar was expanded
		var prevExpandedNavBar = prevExpandedNav.getPreviousSibling();
		while(prevExpandedNavBar.getTagName() != 'DIV')
		{
			prevExpandedNavBar = prevExpandedNavBar.getPreviousSibling();
		}
		var prevAttrValDiv = prevExpandedNavBar.getLastChild();
		while(prevAttrValDiv.getTagName() != 'DIV')
		{
			prevAttrValDiv = prevAttrValDiv.getPreviousSibling();
		}
		prevAttrValDiv.setStyle({display:'block'});
		Oodle.FbProfileTab.expandedNavId = null;
	}		
};


//toggle expanded navigator
Oodle.FbProfileTab.toggleExpand = function(expandId, navBar)
{
	//find the next sibling that is a div, which is the expand-nav
	var expandNav = document.getElementById(expandId);
	if(typeof(navBar) == 'string')
	{
		navBar = document.getElementById(navBar);
	}
	//hide or show attribute value section, get the attribute value section first
	var attrValDiv = navBar.getLastChild();
	while(attrValDiv.getTagName() != 'DIV')
	{
		attrValDiv = attrValDiv.getPreviousSibling();
	}

	//close the previous expanded navigator
	if(Oodle.FbProfileTab.expandedNavId != expandId)
	{
		Oodle.FbProfileTab.closeExpandedNav();
	}
	
	if (expandNav.getStyle('display') == 'none')
	{
		expandNav.setStyle({display:'block'});
		attrValDiv.setStyle({display: 'none'});
		Oodle.FbProfileTab.expandedNavId = expandId;
	}
	else
	{
		expandNav.setStyle({display:'none'});
		attrValDiv.setStyle({display:'block'});
	}
};

/*
 * expand selected navigator when user click the selected attributes in the brief navigaotor view
 * This will expand the expanded nav view, as well as expand the navigator related to the clicked attribute
 * 
 * @param attr : attribute of the selected navigator
 */
Oodle.FbProfileTab.expandSelected = function(attr)
{
	Oodle.FbProfileTab.showDetailedNav();
	Oodle.FbProfileTab.toggleExpand('expand-nav-' + attr, 'nav-title-' + attr);
};

///////////////////////////////////
Oodle.FbProfileTab.polishLightbox = function() {
	safecall(
		function() {
			//add hint text
			if (odl.hint)
				odl.hint.setup('fb_connect_page');
		},
		function() { return document.getElementById('fb_connect_page') ? 'function' : 'undefined'; }
	);
};

Oodle.FbProfileTab.install = function() {
	var lightbox;
	
	var onLoad = function(data) {
		button = {text: data.buttons.text,
				  skin: data.buttons.skin,
				  click: function() { top.location.href = data.buttons.url; }};
		lightbox.adjustButtons({buttons: [button]});
	};
	
	var params = {
		callbacks: {load_onsuccess: onLoad},
		url: odl.info.base_path + 'lightbox/pages/install-my-listings/',
		close_x: true
	};
	
	lightbox = new odl.msgbox(params);
};

Oodle.FbProfileTab.connect = function(sessionName, sessionID) {
	safecall(
		function() {
			//need offline_access,publish_stream to post listings to page's wall
			//asking for manage_pages as a just in case
			//asking for email because spec says this should act just like the respond flow
			//                 (and it makes things easier to interface with odl.auth2.js)
			var perms = 'offline_access,email,publish_stream,manage_pages';
			
			FB.login(function(response) {
				if (response && response.authResponse)
				{
					var data = {};
					data[sessionName] = sessionID;
					
					Oodle.Wizard.Show('page-frame', 'show', data);
				}
			}, {scope: perms});
		},
		function() { return typeof(FB) != 'undefined' ? 'function' : 'undefined'; }
	);
};

Oodle.FbProfileTab.createNewAccount = function(pageID, pageURL) {
	/*
	 * Note about redirection:
	 * - cannot do top.location.reload() due to not same origin
	 * - doing window.location.reload() will not work (will show "Not Connected to FBMP")
	 * - so we do the same thing as Oodle.FbProfileTab.connect() and reset the top location
	 */
	
	var successCallback = function() {
		//we are assured that odl.info is updated
		//but if it isn't properly updated for some unknown reason (should never happen),
		//gracefully handle it by refreshing the page
		if (odl.info.user_id)
		{
			jQ.get(
				'/pro/connect-to-page-ajax',
				{'p': pageID, 'u': odl.info.user_id},
				function (data, textStatus) { if(data) { top.location.href = pageURL } }
			);
		}
		else
			top.location.href = pageURL;
	};
	
	var authOptions = {
		login_mode : 'oodle',
		success: successCallback,
		failure: function() { }
	};
	odl.auth2.login(authOptions);
};

Oodle.FbProfileTab.disconnectUser = function(pageID, userID) {
	jQ.get(
		'/pro/disconnect-from-page-ajax',
		{'p':pageID, 'u':userID},
		function (data, textStatus) { if(data) { window.location.reload(); } }
	);
};

Oodle.FbProfileTab.disconnectCircle = function(pageID, circleID) {
	
};

Oodle.FbProfileTab.updateSource = function() {
	odl.form.submit(
		'pageframe-admin-listingsrc',
		'/page-frame/update-source/',
		jQ('#pageframe-admin-listingsrc-source-update-row a.css-button')
	);
};

Oodle.FbProfileTab.updateFeed = function() {
	odl.form.submit(
		'pageframe-admin-feedfreq',
		'/page-frame/update-frequency/',
		jQ('#pageframe-admin-feedfreq-feed-update-row a.css-button')
	);
};

Oodle.FbProfileTab.getModels = function(searchURL, make) {
	var params = {u: searchURL, m: make};
	var str = jQ.param(params);
	jQ.get(
	 '/page-frame/get-models/',
	 params,
	 function (data) { 
		var models = jQ("#models"); 
		models.children().remove();
		models.append(data); }
	);
};

//Adds the location parameters to the SORT URL
Oodle.FbProfileTab.sortUpdate = function(obj)
{
	Oodle.FbProfileTab.showUpdateListings();
	url = jQ(obj).val();
	var urlparts = {};
	var parts = url.split("?");
	if (parts[1])
	{
		var vars = parts[1].split("&");
		for (var i=0;i<vars.length;i++)
		{
			var pair = vars[i].split("=");
			urlparts[pair[0]] = pair[1];  
		}
		var radius = jQ('#radius').val();
		var country = jQ('#country').val();
		var location = jQ('#location').val();
		if (radius && radius != 'null')
			urlparts['radius'] = radius;
		if (location && location != 'null')
			urlparts['location'] = location;
		if (country && country != 'null')
			urlparts['country'] = country; 
		urlparts['sortupd'] = 1;
		urlparts['submit'] = 1;
		var variables = Array();
		for(var value in urlparts)
		{
		    variables.push(value + "=" + urlparts[value]);
		}
		url = '?' + variables.join('&');
	}
	window.location = url;
};

Oodle.FbProfileTab.showUpdateListings = function () {
	jQ("#listings").addClass('loading');
};

Oodle.FbProfileTab.showFanGraphInstructions = function(sessionID, pageID) {
	var msgbox;
	
	var onLoad = function(data) {
		var button = {
			text: data.buttons.text,
			skin: data.buttons.skin,
			click: function() { top.location.href = data.buttons.url }
		};
		msgbox.adjustButtons({buttons: [button]});
	};
	
	msgbox = new odl.msgbox({
		callbacks: {load_onsuccess: onLoad},
		url: odl.info.base_path + 'page-frame/fan-graph/?osid=' + sessionID + '&pageid=' + pageID,
		close_x: true
	});
};

Oodle.FbProfileTab.editSettings = function(pageID, sessionID, controller, anchorEle) {
	var msgbox;
	var isRecoApp = controller == 'recommendations' ? 1 : 0;
	var permObj = {
			scope: 'publish_stream,manage_pages'};
	
	var editSettingsURL = '/' + controller + '/edit-settings/?osid=' + sessionID;
	
	var parseButton = function(msgbox, data) {
		var button = {text: data.buttons.text, skin: 'dark'};
		
		if (data.buttons.url)
			button.click = function() { top.location.href = data.buttons.url; };
		else if (data.buttons.script)
			button.click = function() {
				msgbox.showProgress();
				
				jQ.get('/page-frame/fan-graph/?osid=' + sessionID + '&pageid=' + pageID, function(data) {
					msgbox.hideProgress();
					parseButton(msgbox, data);
					msgbox.setHeader(data.header);
					msgbox.setContent(data.content);
				}, 'json');
			};
		
		msgbox.adjustButtons({buttons: [button]});
	};
	
	var handleFBFunc = function(response) {
		msgbox = new odl.msgbox({
			callbacks: { 
				load_onsuccess: function(data) {
					if (data == 'edit-settings')
					{
						msgbox.close();
						window.location.href = editSettingsURL;
					}
					else
					{
						parseButton(msgbox, data);
					}
				}
			},
			url: '/page-frame/check-fan-graph/?osid=' + sessionID + '&pageid=' + pageID + '&isRecoApp=' + isRecoApp,
			close_x: function() { window.location.href = editSettingsURL; },
			overlay: true,
			anchor_y: anchorEle
		});
	};
	
	safecall(
		function() { FB.login(handleFBFunc, permObj) },
		function() { return typeof(FB) != 'undefined' ? 'function' : 'undefined'; }
	);
};
/* 
 * for user comments on general items, odl.listing-comment.js is specifically for listings
 * Ideally we should use this file only, but we already have all kind of strings attached to odl.listing-comment.js
 * 
 */
odl.namespace('userComment');

//open comment box
odl.userComment.init = function(itemInfo)
{
	//if there is a open form already
	if (odl.userComment.itemInfo && itemInfo.hint_expand)
	{
		var boxId = '#user-comment-box-' + odl.userComment.itemInfo.type + '-' + odl.userComment.itemInfo.id;
		//do nothing if the selected form is already open
		if (odl.userComment.itemInfo.id == itemInfo.id && odl.userComment.itemInfo.type == itemInfo.type)
		{
			jQ(boxId + ' .hint-box').css({'display':'none'});
			jQ(boxId + ' .comment-fields').css({'display':'block'});
			return;
		}
		//close previously opened box
		jQ(odl.userComment.boxId + ' .hint-box').css({'display':'block'});
		jQ(odl.userComment.boxId + ' .comment-fields').css({'display':'none'});
	}
	
	odl.userComment.itemInfo = itemInfo;
	odl.userComment.boxId = '#user-comment-box-' + odl.userComment.itemInfo.type + '-' + odl.userComment.itemInfo.id;
	odl.userComment.formId = '#comment-form-' + odl.userComment.itemInfo.type + '-' + odl.userComment.itemInfo.id;
	odl.userComment.commentsId = '#comments-' + odl.userComment.itemInfo.type + '-' + odl.userComment.itemInfo.id;
	//initialize form
	odl.userComment.form = new odl.ezform(odl.userComment.formId);

	odl.userComment.form.callback = function(response)
	{
		if(!response.error)
		{
			jQ(odl.userComment.commentsId).append(response.info.comment);
			jQ(odl.userComment.formId + ' .post-button').css({display: 'inline-block'});
			jQ(odl.userComment.formId + ' .loading-pic').css({display: 'none'});
			jQ(odl.userComment.formId + ' .comment-text').val('');
			
			if (odl.userComment.itemInfo.hint_expand) //if comment module is expanded by click hint, collapse
			{
				jQ(odl.userComment.formId + ' .hint-box').css({'display':'block'});
				jQ(odl.userComment.formId + ' .comment-fields').css({'display':'none'});
			}
		}
		else //the only error possible is that input box is empty
		{
			jQ(odl.userComment.formId + ' .post-button').css({display: 'inline-block'});
			jQ(odl.userComment.formId + ' .loading-pic').css({display: 'none'});
		}
	};
	
	jQ(odl.userComment.boxId + ' .hint-box').css({'display':'none'});
	jQ(odl.userComment.boxId + ' .comment-fields').css({'display':'block'});
};

//submit form
odl.userComment.submit = function()
{
	var submit = function()
	{
		jQ(odl.userComment.formId + ' .post-button').css({display: 'none'});
		jQ(odl.userComment.formId + ' .loading-pic').css({display: 'block'});
		odl.userComment.form.addAjaxOptions({dataType: 'json', data: {fb_user_id: odl.userComment.fbUserId}});	
		odl.userComment.form.ajaxSubmit();		
	};
	
	if (odl.userComment.fbUserId)
	{
		submit();
		return;
	}
	
	FB.login
	(
		function(response)
		{
			odl.fb.cookie(response);
			if(response.authResponse)
			{
				odl.userComment.fbUserId = response.authResponse.userID;
				submit();
			}
		},
		{scope:'email,publish_stream'}
	);	
};

//delete comment
odl.userComment.deleteComment = function(blockID, commentID, deleteUrl)
{
	var removeCommentDOM = function()
	{
		jQ(blockID).remove();
	}

	jQ.ajax({
		url : deleteUrl,
		dataType : 'json',
		data : {comment_id : commentID},
		success: removeCommentDOM
	});
};

//show all comments, 
odl.userComment.showAllComments = function(ele)
{
	jQ(ele.parentNode).find('.existing-comment').css({display:'block'});
	jQ(ele).remove();
};

odl.namespace('worker');

/**
 * Wrapper for Web-Worker support on IE 7-9
 */
odl.worker = function (callback)
{
	if (typeof(Worker) !== 'undefined')
	{
		callback();
		return;
	}
	var src = 'http://img.oodle.com/js/workers/worker/1064706647';
	LazyLoad.js(src, callback, null, null);
};

odl.namespace('async');

odl.async.ujs = function()
{
	//favorites
	jQuery(function() { odl.favorites.init(); });
	
	// odl.msgbox ujs
	jQuery(function() {
		jQ("[data-msgbox-url]").each(function(index, element) {
			jQ(element).unbind('click');
		});
	});

	jQuery(function() {
		jQ("[data-msgbox-url]").each(function(index, element) {
			jQ(element).click(function() {
				var ajax_url = jQ(element).attr('data-msgbox-url');
				var hide_header = jQ(element).attr('data-hide-header');
				var popup_class = "new-popup-skin ";
				var closeX = true;
				var params = {
					id: "share-friend-panel",
					skin : popup_class,
					close_x: closeX,
					ok: false,
					singleton: true,
					hide_footer: true,
					url: ajax_url
				};
				if (ab_type == 1 || ab_type == 2)
				{
					if (hide_header)
					{
						popup_class += " hide-header";
						params.skin = popup_class;
						var closeX = false;
						odl.event.trackNamed({
							event_name: 'SERP_Social_Connections', event_type: 'value_prop', status:'start'
						});
					}
					odl.connected.popupWin = new odl.msgbox(params);

				}
				else
				{
					var c = jQ(element).attr('data-odl-event-callback');
					var event_callback = c ? function () { eval(c) } : null;

					if (typeof event_callback == 'function')
					{
						if (odl.info.logged_in)
						{
							params.loading = true;
							event_callback();
							odl.connected.facebookConnected();
							odl.connected.popupWin = new odl.msgbox(params);
						}
						else
						{
							event_callback();
							odl.connected.facebookConnected();
						}
					}
				}
			});
		});
	});

	jQuery(function() {
		jQ("[data-odl-event]").each(function(index, element) {
			jQ(element).click(function() {
				var event_json = jQ(element).attr('data-odl-event');
				var c = jQ(element).attr('data-odl-event-callback');
				var event_callback = c ? function () { eval(c) } : null;
				var a = jQ(element).attr('data-odl-event-synchronous');
				var event_synchronous = a ? (parseInt(a) ? true : false) : false;
				odl.event.trackNamed(eval("(" + event_json + ")"), event_callback, event_synchronous);
			});
		});
	});

	safecall(function() { odl.listingShare.init(); },
			 function() { return (typeof odl.listingShare != 'undefined') ? 'function' : 'blah'; });
};


(function($){
	$.tiny = $.tiny || { };
	
	$.tiny.scrollbar = {
		options: {	
			axis: 'y', // vertical or horizontal scrollbar? ( x || y ).
			wheel: 40,  //how many pixels must the mouswheel scroll at a time.
			scroll: true, //enable or disable the mousewheel;
			size: 'auto', //set the size of the scrollbar to auto or a fixed number.
			sizethumb: 'auto' //set the size of the thumb to auto or a fixed number.
		}
	};	
	
	$.fn.tinyscrollbar = function(options) { 
		var options = $.extend({}, $.tiny.scrollbar.options, options); 		
		this.each(function(){ $(this).data('tsb', new Scrollbar($(this), options)); });
		return this;
	};
	$.fn.tinyscrollbar_update = function(sScroll) { return $(this).data('tsb').update(sScroll); };
	
	function Scrollbar(root, options){
		var oSelf = this;
		var oWrapper = root;
		var oViewport = { obj: $('.viewport', root) };
		
		var oContent = { obj: $('.overview', root) };
		var oScrollbar = { obj: $('.scrollbar', root) };
		var oTrack = { obj: $('.track', oScrollbar.obj) };
		var oThumb = { obj: $('.thumb', oScrollbar.obj) };
		var sAxis = options.axis == 'x', sDirection = sAxis ? 'left' : 'top', sSize = sAxis ? 'Width' : 'Height';
		var iScroll, iPosition = { start: 0, now: 0 }, iMouse = {};

		function initialize() {	
			oSelf.update();
			setEvents();
			return oSelf;
		}
		this.update = function(sScroll){
			oViewport[options.axis] = oViewport.obj[0]['offset'+ sSize];
			oContent[options.axis] = oContent.obj[0]['scroll'+ sSize];
			oContent.ratio = oViewport[options.axis] / oContent[options.axis];
			oScrollbar.obj.toggleClass('disable', oContent.ratio >= 1);
			oTrack[options.axis] = options.size == 'auto' ? oViewport[options.axis] : options.size;
			oThumb[options.axis] = Math.min(oTrack[options.axis], Math.max(0, ( options.sizethumb == 'auto' ? (oTrack[options.axis] * oContent.ratio) : options.sizethumb )));
			oScrollbar.ratio = options.sizethumb == 'auto' ? (oContent[options.axis] / oTrack[options.axis]) : (oContent[options.axis] - oViewport[options.axis]) / (oTrack[options.axis] - oThumb[options.axis]);
			iScroll = (sScroll == 'relative' && oContent.ratio <= 1) ? Math.min((oContent[options.axis] - oViewport[options.axis]), Math.max(0, iScroll)) : 0;
			iScroll = (sScroll == 'bottom' && oContent.ratio <= 1) ? (oContent[options.axis] - oViewport[options.axis]) : isNaN(parseInt(sScroll)) ? iScroll : parseInt(sScroll);
			setSize();
		};
		function setSize(){
			oThumb.obj.css(sDirection, iScroll / oScrollbar.ratio);
			oContent.obj.css(sDirection, -iScroll);
			iMouse['start'] = oThumb.obj.offset()[sDirection];
			var sCssSize = sSize.toLowerCase(); 
			oScrollbar.obj.css(sCssSize, oTrack[options.axis]);
			oTrack.obj.css(sCssSize, oTrack[options.axis]);
			oThumb.obj.css(sCssSize, oThumb[options.axis]);		
		};		
		function setEvents(){
			oThumb.obj.bind('mousedown', start);
			oThumb.obj[0].ontouchstart = function(oEvent){
				oEvent.preventDefault();
				oThumb.obj.unbind('mousedown');
				start(oEvent.touches[0]);
				return false;
			};	
			oTrack.obj.bind('mouseup', drag);
			if(options.scroll && this.addEventListener){
				oWrapper[0].addEventListener('DOMMouseScroll', wheel, false);
				oWrapper[0].addEventListener('mousewheel', wheel, false );
			}
			else if(options.scroll){oWrapper[0].onmousewheel = wheel;}
		};
		function start(oEvent){
			iMouse.start = sAxis ? oEvent.pageX : oEvent.pageY;
			var oThumbDir = parseInt(oThumb.obj.css(sDirection));
			iPosition.start = oThumbDir == 'auto' ? 0 : oThumbDir;
			$(document).bind('mousemove', drag);
			document.ontouchmove = function(oEvent){
				$(document).unbind('mousemove');
				drag(oEvent.touches[0]);
			};
			$(document).bind('mouseup', end);
			oThumb.obj.bind('mouseup', end);
			oThumb.obj[0].ontouchend = document.ontouchend = function(oEvent){
				$(document).unbind('mouseup');
				oThumb.obj.unbind('mouseup');
				end(oEvent.touches[0]);
			};
			return false;
		};		
		function wheel(oEvent){
			if(!(oContent.ratio >= 1)){
				var oEvent = oEvent || window.event;
				var iDelta = oEvent.wheelDelta ? oEvent.wheelDelta/120 : -oEvent.detail/3;
				iScroll -= iDelta * options.wheel;
				iScroll = Math.min((oContent[options.axis] - oViewport[options.axis]), Math.max(0, iScroll));
				oThumb.obj.css(sDirection, iScroll / oScrollbar.ratio);
				oContent.obj.css(sDirection, -iScroll);
				
				oEvent = $.event.fix(oEvent);
				oEvent.preventDefault();
			};
		};
		function end(oEvent){
			$(document).unbind('mousemove', drag);
			$(document).unbind('mouseup', end);
			oThumb.obj.unbind('mouseup', end);
			document.ontouchmove = oThumb.obj[0].ontouchend = document.ontouchend = null;
			return false;
		};
		function drag(oEvent){
			if(!(oContent.ratio >= 1)){
				iPosition.now = Math.min((oTrack[options.axis] - oThumb[options.axis]), Math.max(0, (iPosition.start + ((sAxis ? oEvent.pageX : oEvent.pageY) - iMouse.start))));
				iScroll = iPosition.now * oScrollbar.ratio;
				oContent.obj.css(sDirection, -iScroll);
				oThumb.obj.css(sDirection, iPosition.now);
			}
			return false;
		};
		
		return initialize();
	};
})(jQuery);

(function($) {
	category = function(options) {
		var categories = options.categories;
		var title = options.title || 'Category';
		var scrollbar = $('<div class="scrollbar-container"><div class="scrollbar"><div class="track"><div class="thumb"><div class="end"></div></div></div></div><div class="viewport"></div></div>');
		var list = $('<ul class="overview" />');
		var me = this;
		this.options = options;
		this.categories = categories;
		
		var currentDepth = options.depth || 1;
		var maxDepth = options.maxDepth || 3;
		
		var element = $('<div class="category-list" />');
		element.append('<div class="title">' + title + '</div>');
		scrollbar.find('.viewport').append(list);
		element.append(scrollbar);
		
		var nextElement = $('<div />');
		
		var onSelect = function() {
			var $this = $(this);
			$this.parent().siblings().removeClass('selected');
			$this.parent().addClass('selected');
						
			element.after(nextElement);
			
			var categoryId = $this.attr('href').replace('#', '');
			var categoryName = $this.attr('category-name');
			var categoryInfo = categories[categoryName];
			
			var subOptions = {};
			options.depth = currentDepth + 1;
			if (currentDepth < maxDepth)
			{
				if (categoryInfo.children) {
					subOptions = $.extend({}, options, {
							categories: categoryInfo.children,
							title: title == 'Sub-category' ? 'Sub-category<span class="subtitle">(optional)</span>' : 'Sub-category',
							parent: me,
							categoryInfo: categoryInfo
						});
				}
				else
				{
					subOptions = $.extend({}, options, {
						categories: null,
						title: 'No sub-categories',
						parent: me,
						categoryInfo: {}
					});
				}
				
				var cat = new category(subOptions);
				me.cat = cat;
				
				// Copy the state of parent element
				if (!me.element.is(':visible')) {
					cat.element.toggle(false);
				}
				
				nextElement.html(cat.element);
			}
			
			me.value = categoryId;
			var ancestors = me.findAncestors(categoryId);
			me.options.inputElement.trigger('category_change', [categoryId, ancestors]);
			
			nextElement.find('.scrollbar-container').tinyscrollbar();
			
			if (options.breadcrumb) {
				var label = me.getBreadCrumb(categoryInfo) || 'Select a Category';
				options.breadcrumb.text(label);
			}
			
			if (options.inputElement) {
				options.inputElement.val(categoryId);
			}
			
			return false;
		}; 
		
		for (var index in categories) {
			var $link = $('<a />')
				.attr({
					href: '#' + categories[index].id,
					id: 'cata-' + categories[index].id,
					title: categories[index].label,
					'category-name': index
				})
				.click(onSelect)
				.text(categories[index].label);
			
			var $item = $('<li />').append($link);
			list.append($item);
		}
		
		this.element = element;
	};
	
	category.prototype.getBreadCrumb = function(categoryInfo) {
		if (this.options.parent) {
			var label = this.options.parent.getBreadCrumb(this.options.categoryInfo);
			label += ' > '  + categoryInfo.label;
			
			return label;
		}
		
		return categoryInfo.label;
	};
	
	category.prototype.setValue = function(categoryId) {
		var ancestors = this.findAncestors(categoryId);
		this.ancestors = ancestors;
		this.value = categoryId;
		if (ancestors) {
			for (var index in ancestors) {
				this.element.find('#cata-' + ancestors[index]).click();
				if (this.cat)
				{
					this.cat.setValue(ancestors[index]);
				}
			}
		}
	};
	
	category.prototype.lockRootCategory = function() {
		this.element.find(".overview li").each(function() {
			if (!$(this).hasClass('selected')) {
				$(this).remove();
			}
		});
	};
	
	category.prototype.getValue= function() {
		return this.value;
	};
	
	category.prototype.findAncestors = function (categoryId, categories) {
		if (this.options.parent) {
			return this.options.parent.findAncestors(categoryId);
		}
		
		if (!categories) {
			categories = this.categories;
		}
		
		for (var name in categories) {
			var id = categories[name].id;
			
			if (id == categoryId) {
				return [id];
			}
			else if (typeof categories[name].children != 'undefined') {
				var childRetVal = this.findAncestors(categoryId, categories[name].children);
				
				if (childRetVal) {
					childRetVal.unshift(id);
					return childRetVal;
				}
			}
		}
		
		return null;
	};
	
	var methods = {};

    /**
     * jQuery wrapper
     * 
     * @param options
     * @returns
     */
    methods.init = function(options) {
        return this.each(function() {
        	var $arrow = $('<span class="ar down"></span>');
        	var $breadcrumb = $('<a class="breadcrumb">Select a Category</a>');
        	var $ui = $('<div class="clearfix"/>');
        	
        	var cat = new category({
	        		categories: options.categories,
	        		breadcrumb: $breadcrumb,
	        		inputElement: $(this),
	        		ui: $ui
	    		});
        	$(this).data('post_category', cat);
        	cat.element.toggle(false);
        	
        	var $wrap = $('<div />');
        	$wrap.append($arrow).append($breadcrumb);
        	
        	// Bind to a category hidden element
        	$ui.append($wrap);
        	$ui.append(cat.element);
        	
        	$(this).toggle(false).after($ui);
        	cat.element.find('.scrollbar-container').tinyscrollbar();
        	cat.setValue($(this).val());
        	
        	
        	$wrap.click(function() {
        		if (cat.element.is(':visible')) {
        			$ui.find('.category-list').slideUp(200);
            		$arrow.removeClass('up').addClass('down');
        		}
        		else {
            		$ui.find('.category-list').slideDown(200);
            		$ui.find('.scrollbar-container').tinyscrollbar();
            		$arrow.removeClass('down').addClass('up');
        		}
        	});
        });
    };
    
    methods.destroy = function() {
    	// Destroy jquery instance, remove all memory foot print
        return this.each(function() {
        	var cat = $(this).data('post_category');
        	if (cat) {
        		cat.options.ui.remove();
        		$(this).data('post_category', null);
        	}
        });
    };
    
    methods.value = function(categoryId) {
        return this.each(function() {
        	var cat = $(this).data('post_category');
        	if (cat) {
        		if (!categoryId) {
        			cat.getValue();
    			}
        		else {
            		return cat.setValue(categoryId);
        		}
        	}
        });
    };
    
    methods.cat = function() {
    	var retval = null;
        this.each(function() {
        	var cat = $(this).data('post_category');
        	if (cat) {
        		retval = cat;
        	}
        });
        
        return retval;
    };
    
    methods.toggle = function(visible) {
        return this.each(function() {
        	var cat = $(this).data('post_category');
        	var breadcrumbs = cat.options.breadcrumb;
        	breadcrumbs.toggle(visible);
        });
    };

    $.fn.pCategory = function(method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else {
            if (typeof method === 'object' || !method) {
                return methods.init.apply(this, arguments);
            }
            else {
                $.error('Method ' + method + ' does not exist on jQuery.ajaxForm');
            }
        }
    };
})(jQuery);

(function ($) {
	
	$.widget('odlUI.tileUI', {
		options: {
			numCols: 3,
			vertSpacing: 14,
			horizSpacing: 10,
			maxPages: 1
		},
		_create: function() {
		},
		_isLoading: false,
		_noMoreData: false,
		_init: function() {
			var self = this;
			this.heights = [];
			this.tiles = [];
			this.pagesShown = 1;
			this.element.css({position: 'relative'});
			for (index = 0; index < this.options.numCols; index++) {
				this.heights[index] = 0;	
				this.tiles[index] = [];
			};
			// place the tiles
			this.element.children().each(
				function(index, tileElement) {
					if ($(tileElement).is('div,span,p')) {
						self._place(tileElement);
					}
				}
			);
			if (this.options.infiniteScroll == true && !this._noMoreData) {
				this._infiniteScroll();
			}

		},
		_infiniteScroll: function() {
			var self = this;
			var didScroll = false;
		
			var fbScrolledPos = 0;
			var fbScrollHeight = 0;
			if (odl.info.is_facebook && typeof(FB) !== 'undefined') // on facebook scroll detection is a bit different.
			{
				setInterval(function() {
					FB.Canvas.getPageInfo(
						function (info) {
							fbScrollHeight = info.clientHeight;
							if (info.scrollTop > fbScrolledPos) {
								didScroll = true;
							}
							fbScrolledPos = info.scrollTop;
					});
				}, 250);
			} else {
				$(window).scroll(function() {
				    didScroll = true;
				});
			}

			setInterval(function() {
				if (didScroll) {
					didScroll = false;
					var scrollThreshold;
					var scrollTop;
					if (odl.info.is_facebook) {
						scrollThreshold = fbScrollHeight * 0.8;
						scrollTop = fbScrolledPos;
					} else {
						scrollThreshold = $(window).height() * 0.8; // detect when the viewer gets close to the bottom of the page
						scrollTop = $(document).scrollTop();
					}

					if (self._noMoreData) return false;
					if (self.pagesShown >= self.options.maxPages) return false;
					if (self._isLoading) return false;
					if (scrollTop < scrollThreshold) return false;
					//self._showLoading(); // TODO: implement this if I have time (@Teju)

					self._isLoading = true;
					self.pagesShown++;
					self._fetchNextTiles();
				}
			}, 500);
		},
		_fetchNextTiles: function() { // fetches and places
			var self = this;
			var params = {nextPg: true};
			$.extend(params, self.options.nextParams);
			$.ajax({
				url: self.options.nextUrl,
				type: 'POST',
				data: params,
				dataType: 'html',
				success: function(response) {
					if (!response.trim()) { //response returned nothing but whitespace
						self._noMoreData = true;
					}
					else {
						var displayTiles = $(response);
						var numTilesToPlace = 0;
						self.element.append(displayTiles);
						displayTiles.css({visibility:'hidden'}); // hide the elements
						// place the tiles
						displayTiles.each(
							function(index, tileElement) {
								if ($(tileElement).is('div,span,p')) {
									self._place(tileElement);
									numTilesToPlace ++;
									$(tileElement).css({visibility:'visible'}); // show the elements
								}
							}
						);
						if (numTilesToPlace == 0) {
							self._noMoreData = true;
						}
						self._isLoading = false;
					}
				}
			});
		},
		_place: function(tile) {
			/* make sure all images in the tile have width/height set in css or on the image tag, so the dimension calculations are performed correctly */
			var $tile = $(tile);
			var placementIndex = this._shortest();
			var tileWidth = $tile.width();
			var left = placementIndex * (tileWidth + this.options.vertSpacing);
			
			var top = this.heights[placementIndex];
			this.heights[placementIndex] += $tile.height();
			
			if (top > 0) //don't add unnecessary whitespace to first row
			{
				top += this.options.horizSpacing;
				this.heights[placementIndex] += this.options.horizSpacing;
			}
			
			$tile.data('columnIndex', placementIndex);
			$tile.data('position', this.tiles[placementIndex].length);
			this.tiles[placementIndex].push(tile);
			
			$tile.css({ position: 'absolute', 
			              left: left + 'px', 
			              top: top + 'px'});
			
			this.element.css({height: this._tallestCol()});
		},
		reTile: function(tile) {
			var self = this;
			var $tile = $(tile);
			var tileData = $tile.data();
			var column = self.tiles[tileData.columnIndex];
			var currentTilePosition = tileData.position;

			var i;
			var currentTileHeightWithPadding = $tile.position().top + $tile.height() + self.options.horizSpacing;
			var nextTileTopPosition = $(column[currentTilePosition + 1]).position().top;
			var tileHeightDiff = currentTileHeightWithPadding - nextTileTopPosition;
			if (tileHeightDiff !== 0)
			{
				var newTopPos = 0;
				var $tileToResize;
				for (i = currentTilePosition+1; i < column.length; i++) {
					$tileToResize = $(column[i]);
					newTopPos = $tileToResize.position().top + tileHeightDiff;
					$tileToResize.css({top: newTopPos});
				}
				self.heights[tileData.columnIndex] += tileHeightDiff;
				self.element.css({height: this._tallestCol()});
			}
		},
		_shortest: function() {
			var shortest = 0;
			var minHeight = null;
			$(this.heights).each(function(index, value) {
				if (minHeight === null || value < minHeight) {
					minHeight = value;
					shortest = index;
				} 
			});
			return shortest;
		},
		_tallestCol : function() {
			return Math.max.apply(Math, this.heights);	
		},
		_setOption: function(key, value) {
			// TODO: different action based on value of key?

			// In $ UI 1.8, you have to manually invoke the _setOption method from the base widget
			$.Widget.prototype._setOption.apply(this,arguments);
			// TODO on jquery UI upgrade: In jQuery UI 1.9 and above, you use the _super method instead
			//this._super( "_setOption", key, value );
		},
		destroy: function() {
			// In jQuery UI 1.8, you must invoke the destroy method from the base widget
			$.Widget.prototype.destroy.call(this);
			// TODO on jquery ui upgrade: In jQuery UI 1.9 and above, you would define _destroy instead of destroy and not call the base method
		}
	});
})(jQuery);


/*
 * The purpose of this script is to make custom form input fields behave like native ones.
 * currently it works for checkbox and radio button. <select> partially works( not used yet)
 * 
 * Note :
 * 1. shadow form element css should be : { position: absolute; left: -10000px; width: 1px;}, for ie7 : {width: 0; height: 0;}
 *    If scroll jumps when clicking, make the closer parent of the shadow element have css {position:relative}.
 * 2. A shadow element should immediately follow its respective UI element
 * 3. Need to style the css class 'on-focus' and 'selected' on the tagged element to have desired UI
 */

odl.namespace('shadowFormElement');

odl.shadowFormElement.elements = []; //this is to track elements that has already been registered

odl.shadowFormElement.updateAll = function() {
	for(var i in odl.shadowFormElement.elements)
	{
		var $this = jQ(odl.shadowFormElement.elements[i]);
		var $tag = $this.prev();
		
		if ($this.is(':checked'))
			$tag.addClass('selected');
		else
			$tag.removeClass('selected');
	}
};

odl.shadowFormElement.add = function(formSelector, shadowElementSelector, options)
{
	var defaultOptions = {
		//if true, user can check/uncheck only by clicking the sprite (not the entire label)
		toggleSpriteOnly: false,
		
		//if true, whenever the tagged element is clicked, set focus on the shadow element
		//(caution: this will also affect set/unset the on-focus class on the tagged element)
		focus: true
	};
	
	options = options || {};
	options = jQ.extend({}, defaultOptions, options);
	
	jQ(formSelector).find(shadowElementSelector).each
	(
		function(index, shadowElement)
		{
			//if element is already being registered, return
			for (var i in odl.shadowFormElement.elements)
			{
				if (odl.shadowFormElement.elements[i] === shadowElement)
				{
					return;
				}
			}
			odl.shadowFormElement.elements.push(shadowElement);
			
			//bind to their sibling
			shadowElement = jQ(shadowElement);
			var taggedElement = shadowElement.prev();
			var elementType = shadowElement.attr('type');
			if (!elementType)
			{
				elementType = shadowElement[0].tagName.toLowerCase();
			}

			if (taggedElement.hasClass('selected'))
			{
				if (elementType == 'checkbox' || elementType == 'radio')
				{
					shadowElement.attr('checked', 'checked');
				}
			}
			
			//if form element is checked server-side, make sure shadow element reflects the proper state
			if (shadowElement.is(':checked'))
				taggedElement.addClass('selected');
			
			var clickListenElement = options.toggleElementOnly ? taggedElement.find('.widget') : taggedElement;
			clickListenElement.mouseup //should use click, but in ie7 somehow click gets fired twice
			(options,
				function(e)
				{
					if (e.which == 1) //left mouse button
					{
						//skip form elements that are disabled or readonly
						if (shadowElement.attr('disabled') == 'disabled'
							 || shadowElement.attr('readonly') == 'readonly'
							 || shadowElement.parent('.target-select').hasClass('disabled'))
								return;
						
						jQ(formSelector).find('input').blur();
						
						if (e.data.focus)
							shadowElement.focus();
						
						if (elementType == 'checkbox')
						{
							if (shadowElement.attr('checked') == 'checked')
							{
								taggedElement.removeClass('selected');
								shadowElement.removeAttr('checked');
							}
							else
							{
								taggedElement.addClass('selected');
								shadowElement.attr('checked', 'checked');
							}
						}
						//radio buttons work a bit differently from checkboxes
						//as you cannot un-check a radio button that has been checked
						else if (elementType == 'radio')
						{
							uncheckRestRadios(shadowElement);
							taggedElement.addClass('selected');
							shadowElement.attr('checked', 'checked');
						}
						else if (elementType == 'select')
						{
							
						}
						shadowElement.trigger('change', true);
					}
				}
			);
			
			//when shadow element has focus, add on-focus class to the tagged element
			shadowElement.focus
			(
				function()
				{
					taggedElement.addClass('on-focus');
				}
			)
			.blur //when shadow element loose focus, remove on-focus class from the tagged element
			(
				function()
				{
					taggedElement.removeClass('on-focus');
				}
			);
			
			//checkbox and radio button state can be changed using space key, need to change the UI state accordingly
			//note that use down/up arrow in a selection does not change selection, unless followed by enter or space
			shadowElement.change
			(
				function(e, isCustom)
				{
					if (isCustom)
					{
						return;
					}
					if (elementType == 'checkbox')
					{
						if (shadowElement[0].checked)
						{
							taggedElement.addClass('selected');
						}
						else
						{
							taggedElement.removeClass('selected');
						}
					}
					//radio buttons work a bit differently from checkboxes
					//as you cannot un-check a radio button that has been checked
					else if (elementType == 'radio')
					{
						uncheckRestRadios(shadowElement);
						taggedElement.addClass('selected');
					}
					else if (elementType == 'select')
					{
						var taggedOptions = taggedElement.find('li');
						for(var i = 0; i < taggedOptions.length; i++)
						{
							if (i == shadowElement[0].selectedIndex)
							{
								jQ(taggedOptions[i]).addClass('selected');
							}
							else
							{
								jQ(taggedOptions[i]).removeClass('selected');
							}
						}						
					}
					
					//add UI behavior for disabled element
					if (shadowElement.attr('disabled') == 'disabled')
					{
						taggedElement.addClass('disabled');
					}
					else
					{
						taggedElement.removeClass('disabled');
					}
				}
			);

			//<select> element is quite different, we assume that the individual selectable elements are <li> elements
			//multiple selection is not supported at the moment
			if (elementType == 'select')
			{
				var taggedOptions = taggedElement.find('li');
				taggedOptions.each
				(
					function(index, element)
					{
						jQ(element).click
						(
							function()
							{
								shadowElement[0].selectedIndex = index;
								for(var i = 0; i < taggedOptions.length; i++)
								{
									if (i == index)
									{
										jQ(taggedOptions[i]).addClass('selected');
									}
									else
									{
										jQ(taggedOptions[i]).removeClass('selected');
									}
								}
							}
						);
					}
				);
			}			
			
			//unselect redio buttons that belongs to the same group as shadowElement, except for the shadowElement
			var uncheckRestRadios = function(shadowElement)
			{
				var name = shadowElement.attr('name');
				jQ(formSelector).find('input[name="' + name + '"]').each
				(
					function(index, element)
					{
						if (element !== shadowElement[0])
						{
							jQ(element).removeAttr('checked')
								.prev().removeClass('selected');
						}
					}
				);				
			};
		}
	);
};

odl.namespace('favorites');

odl.favorites = (function($) {
	var id_element_hash = {};
	var favedClass = 'tetris-heart_on';
	var unfavedClass = 'tetris-heart_off';
	
	var FAV = '/fav/';
	var ENTER_KEYCODE = 13;
	
	//turns on/off all hearts tied to the listing id
	var markFavorite = function(listingID) { mark(listingID, favedClass, unfavedClass); };
	var markUnfavorite = function(listingID) { mark(listingID, unfavedClass, favedClass); };
	var mark = function(listingID, addClass, removeClass) {
		if (id_element_hash[listingID])
			for (ele in id_element_hash[listingID])
				id_element_hash[listingID][ele].addClass(addClass).removeClass(removeClass);
	};
	
	var favoriteChanged = function(listingID, $heart) {
		jQ("body").trigger("changed.favorite", {listing_id: listingID, heart_div: $heart});
	};
	
	//"constructor"
	var favorite = function($this) {
		var listingID = $this.data('listingId');
		
		var spriteSuffix = $this.data('favSpriteSuffix');
		if (spriteSuffix)
		{
			favedClass += spriteSuffix;
			unfavedClass += spriteSuffix;
		}
		
		$this.click(function() {
			odl.event.trackNamed({'event_name': 'favorite', 'event_type': 'heart_click', 'status': 'click'});
			
			var openLightbox = function() {
				if ($this.hasClass(favedClass))
					open('Edit This Favorite', 'edit favorite', listingID, $this);
				else
				{
					if (odl.info.prefs.favorites.show_on_add)
						open('Add to a Collection', 'add favorite', listingID, $this);
					else
					{
						markFavorite(listingID); //immediately add to uncategorized
						$.post(FAV + 'listing/' + listingID + '/', function(){ favoriteChanged(listingID, $this); });
					}
				}
			};
			
			if (odl.info.fb_logged_in)
				openLightbox();
			else
				odl.auth2.login({
					login_mode: 'facebook',
					event_params: {event_name: 'FavoriteLogin'},
					refresh_favorites: true,
					success: openLightbox
				});
		});
	};
	
	//determines whether we need to do the scrollbar
	var doScrollbar = function(scrollToBottom) {
		var overview = $('.o-msgbox.favorite .overview');
		var viewport = $('.o-msgbox.favorite .viewport');
		
		var height = parseInt(overview.css('height'));
		var maxHeight = parseInt(viewport.css('max-height'));
		
		if (height > maxHeight)
		{
			viewport.css({'height': overview.css('height')});
			overview.css({'position': 'absolute'});
			
			$('.o-msgbox.favorite .scrollbar-container').tinyscrollbar().tinyscrollbar_update(scrollToBottom ? 'bottom' : '');
		}
	};
	
	var updateCurrentList = function() {
		var currentList = $('.o-msgbox.favorite input[type=radio]:checked');
		
		//replaces the <p> with the text of the currently chosen list
		$('.o-msgbox.favorite .wrap > p > span:last-child').text(currentList.siblings('span').first().text());
		
		//make only this one bold
		$('.o-msgbox.favorite .overview li').removeClass('selected');
		currentList.parents('li').addClass('selected');
	};
	
	var msgbox;
	
	//opens the add/edit favorite lightbox
	var open = function(title, skin, listingID, $heart) {
		var loadCbk = function() {
			$('.o-msgbox.favorite').css({'width': 'auto'}); //hack around odl.msgbox
			
			$('.o-msgbox.favorite [placeholder]').hint({label: 1});
			odl.shadowFormElement.add('.o-msgbox.favorite form .footer', '.shadow-element input');
			
			var cbkFn = function(status) {
				switch(status)
				{
					case 'post-open':
						doScrollbar(false);
						$('.o-msgbox.favorite .wrap .sprite').removeClass('tetris-img_arrow_down').addClass('tetris-img_arrow_up');
						break;
					case 'post-close':
						$('.o-msgbox.favorite .wrap .sprite').removeClass('tetris-img_arrow_up').addClass('tetris-img_arrow_down');
						break;
				}
			};
			
			var dropdown = new odl.dropdownMenu('.o-msgbox.favorite .column p', '.o-msgbox.favorite .column .dropdown', cbkFn, 'slide');
			
			updateCurrentList();
			
			createListListener(dropdown);
			toggleListListener(dropdown);
			
			updateFavListener(listingID, $heart);
			removeFavListener(listingID);
			hideLightboxListener();
		};
		
		title = '<div class="tetris-heart_on"></div>' + title;
		
		var params = {
			header: title,
			skin: 'manage ' + skin,
			width: 300,
			close_x: true,
			dataType: 'html',
			url: FAV + 'listing/manage/' + listingID,
			overlay: true,
			callbacks: {load_onsuccess: loadCbk},
			//don't use odl.msgbox's automatic footer; the lightbox content will do the footer
			hide_footer: true, ok: false, cancel: false
		};
		
		if (msgbox)
			msgbox.close();
		
		msgbox = new odl.msgbox(params);
	};
	
	var updateFavListener = function(listingID, $heart) {
		$('.o-msgbox.favorite .footer .update').click(function() {
			if ($(this).hasClass('disabled'))
				return;
			
			var formData = $('.o-msgbox.favorite form').serialize();
			
			$.ajax(FAV + 'listing/' + listingID + '/?' + formData,
				{type: 'PUT', success: function(){ favoriteChanged(listingID, $heart); }});
			
			if (msgbox)
				msgbox.close();
			
			markFavorite(listingID);
		});
	};
	
	var removeFavListener = function(listingID, $heart) {
		$('.o-msgbox.favorite .footer .remove').click(function() {
			if ($(this).hasClass('disabled'))
				return;
			
			$.ajax(FAV + 'listing/' + listingID + '/',
				{type: 'DELETE', success: function(){ favoriteChanged(listingID, $heart); }});
			
			if (msgbox)
				msgbox.close();
			
			markUnfavorite(listingID);
		});
	};
	
	var hideLightboxListener = function() {
		$('.o-msgbox.favorite .footer input').change(function() {
			var $this = $(this);
			var showOnAdd = $this.is(':checked') ? 0 : 1;
			
			$.ajax(FAV + 'update/?showOnAdd=' + showOnAdd, {type: 'PUT'});
			odl.info.prefs.favorites.show_on_add = showOnAdd;
		});
	};
	
	//listens to events with the fav list checkboxes
	var toggleListListener = function(dropdown) {
		$('.o-msgbox.favorite .overview').on('change', 'input[type=radio]', function() {
			updateCurrentList();
			if (dropdown.isOpen) dropdown.close();
		});
	};
	
	//checks the list name to see if it is ok
	var checkListName = function(val) {
		var errorDiv = $('.o-msgbox.favorite .column .error');
		errorDiv.toggle(false);
		
		//check against existing lists (don't allow two lists with the same name)
		var okName = true;
		$('.o-msgbox.favorite .column li span').each(function(i, e) {
			okName = okName && $(e).text() != val;
		});
		
		if (!okName)
		{
			errorDiv.html('You already have a list with this name.<br />Please enter a different list name.').toggle(true);
			return false;
		}
		
		return true;
	};
	
	//listens to and handles the "create new list" text field
	var createListListener = function(dropdown) {
		var input = $('.o-msgbox.favorite .create input');
		var createButton = $('.o-msgbox.favorite .create button');
		
		var refreshInput = function(val) { input.val(val).trigger('change'); }
		
		var lock = false;
		var handler = function() {
			if (lock) return;
			
			lock = true;
			
			var val = $.trim(input.val());
			
			if (val && checkListName(val)) //list name should be OK, create list
			{
				//disable buttons
				$('.o-msgbox.favorite .footer .dark').addClass('disabled');
				createButton.prop('disabled', 'disabled')
				            .addClass('disabled')
				            .html('<img src="http://i.oodleimg.com/a/animate/spinner-small.gif" />');
				
				$.post(FAV + 'list/', {"name": val}, function(o) {
					o = $.parseJSON(o);
					if (o)
					{
						var id = o.id;
						
						var li = $('.o-msgbox.favorite .column li')
						var last = li.last();
						var clone = last.clone();
						var input = clone.find('label input');
						
						//modify the clone to represent the newly created list
						clone.find('span').text(val);
						input.val(id).attr('value', id);
						last.removeClass('selected');
						clone.insertAfter(last);
						
						refreshInput(''); //clear "create new list" text field
						
						//use the new list by default
						li.find('input').prop('checked', false); //prevent multiple radios from being checked in IE7
						input.prop('checked', true).trigger('change');
						
						//re-enable buttons
						$('.o-msgbox.favorite .footer .disabled').removeClass('disabled');
						createButton.prop('disabled', null).removeClass('disabled').html('Create');
					}
					
					lock = false;
				});
			}
			else
				lock = false;
			
			//"reset" the text field if user enters only spaces
			refreshInput(val);
		};
		
		createButton.click(handler);
		input.keyup(function(evt) { if (evt.keyCode == ENTER_KEYCODE) handler(); });
	};
	
	return {
		init: function() {
			jQ('.favorite.sprite').not('[data-fav-processed]').each(function() {
				var $this = $(this);
				$this.attr('data-fav-processed', '1');
				var listingID = $this.data('listingId');
				
				if (id_element_hash[listingID]) id_element_hash[listingID].push($this);
				else                            id_element_hash[listingID] = [$this];
				
				new favorite($this);
			});
			
			$('.favorite.count').click(function() {
				var listingID = $(this).data('listingId');
				
				if (msgbox)
					msgbox.close();
				
				msgbox = new odl.msgbox({
					header: 'Others who faved this listing',
					skin: 'favorite whoelse',
					width: 273,
					hide_footer: true, ok: false, cancel: false,
					close_x: true,
					dataType: 'html',
					overlay: true,
					url: FAV + 'listing/who/' + listingID
				});
			});
		},
		debug: function() {
			odl.log(id_element_hash);
		},
		update: function() {
			//ajaxily fetch this user's favorites and update listings' favorite status
			$.get(FAV + 'listing.json', function(o) {
				var o = $.parseJSON(o);
				for(i in o)
					markFavorite(o[i]);
			});
		}
	};
})(jQuery);

if(typeof(odl) == 'undefined')
{
	var odl = {};
}

if(typeof(odl.post) == 'undefined')
{
	odl.post = {};
}

odl.post.info = {"categories":{"Community":{"label":"Community","id":1038,"children":{"Announcements":{"label":"Announcements","id":1090,"children":{"Auction":{"label":"Auction","id":1091},"Celebrations":{"label":"Celebrations","id":1108},"Company":{"label":"Company","id":1118},"Death":{"label":"Death","id":1121},"Government":{"label":"Government","id":1119},"Legal":{"label":"Legal","id":1092},"Lost":{"label":"Lost","id":1120},"Other":{"label":"Other","id":1095},"Proposals":{"label":"Proposals","id":1093},"Trustee":{"label":"Trustee","id":1094}}},"Art & Music News":{"label":"Art & Music News","id":1039,"children":{"Artists":{"label":"Artists","id":1043},"Filmmakers":{"label":"Filmmakers","id":1041},"Musicians & Bands":{"label":"Musicians & Bands","id":1040},"Other Art News":{"label":"Other Art News","id":1042}}},"Groups":{"label":"Groups","id":1047},"Politics":{"label":"Politics","id":1044},"Rants":{"label":"Rants","id":1045},"Rideshare":{"label":"Rideshare","id":1046},"Wanted":{"label":"Wanted","id":1178}}},"For Rent":{"label":"For Rent","id":549,"children":{"Apartments":{"label":"Apartments","id":550},"Commercial":{"label":"Commercial","id":553,"children":{"Industrial":{"label":"Industrial","id":1098},"Office":{"label":"Office","id":554},"Retail":{"label":"Retail","id":1099}}},"Condos":{"label":"Condos","id":555},"Garages":{"label":"Garages","id":556},"Homes":{"label":"Homes","id":557},"Mobile Homes":{"label":"Mobile Homes","id":558},"Open Houses":{"label":"Open Houses","id":559},"Other":{"label":"Other","id":564},"Roommates":{"label":"Roommates","id":560},"Short Term":{"label":"Short Term","id":561},"Storage":{"label":"Storage","id":562},"Vacation":{"label":"Vacation","id":563}}},"Jobs":{"label":"Jobs","id":577,"children":{"Accounting\/Finance":{"label":"Accounting\/Finance","id":578},"Admin\/Clerical":{"label":"Admin\/Clerical","id":590},"Architect\/Design":{"label":"Architect\/Design","id":605},"Art":{"label":"Art","id":608,"children":{"Other":{"label":"Other","id":1055},"Visual Art":{"label":"Visual Art","id":1056}}},"Automotive":{"label":"Automotive","id":621},"Banking":{"label":"Banking","id":583},"Biotech\/Pharmaceutical":{"label":"Biotech\/Pharmaceutical","id":736},"Business Opportunities":{"label":"Business Opportunities","id":1126},"Computer\/Software":{"label":"Computer\/Software","id":754},"Construction\/Skilled Trade":{"label":"Construction\/Skilled Trade","id":620},"Consulting":{"label":"Consulting","id":692},"Customer Service":{"label":"Customer Service","id":635},"Distribution":{"label":"Distribution","id":1127},"Education":{"label":"Education","id":743},"Engineering":{"label":"Engineering","id":641},"Everything Else":{"label":"Everything Else","id":765},"Facilities\/Maintenance":{"label":"Facilities\/Maintenance","id":650},"Franchise":{"label":"Franchise","id":1132},"General Business":{"label":"General Business","id":1133},"General Labor":{"label":"General Labor","id":651},"Government":{"label":"Government","id":615},"Grocery":{"label":"Grocery","id":1128},"Healthcare":{"label":"Healthcare","id":652},"Home Care":{"label":"Home Care","id":636},"Hospitality\/Travel":{"label":"Hospitality\/Travel","id":663},"HR & Recruiting":{"label":"HR & Recruiting","id":675},"Installation\/Maintenance\/Repair":{"label":"Installation\/Maintenance\/Repair","id":633},"Insurance":{"label":"Insurance","id":678},"Inventory":{"label":"Inventory","id":699},"IT":{"label":"IT","id":747},"Law Enforce & Secure":{"label":"Law Enforce & Secure","id":682},"Legal":{"label":"Legal","id":687},"Management & Exec":{"label":"Management & Exec","id":691},"Manufacturing\/Operations":{"label":"Manufacturing\/Operations","id":698},"Marketing\/PR":{"label":"Marketing\/PR","id":601},"Media\/Journalism\/Newspaper":{"label":"Media\/Journalism\/Newspaper","id":614},"Military":{"label":"Military","id":696},"Nonprofit & Fund":{"label":"Nonprofit & Fund","id":697},"Oil\/Energy\/Power":{"label":"Oil\/Energy\/Power","id":1089},"Paralegal":{"label":"Paralegal","id":690},"Professional Services":{"label":"Professional Services","id":1134},"Quality Assurance":{"label":"Quality Assurance","id":704},"Real Estate":{"label":"Real Estate","id":705},"Recreation\/Fitness":{"label":"Recreation\/Fitness","id":1129},"Research & Dev":{"label":"Research & Dev","id":709},"Restaurant\/Food Service":{"label":"Restaurant\/Food Service","id":710},"Retail":{"label":"Retail","id":715},"Sales & Biz Dev":{"label":"Sales & Biz Dev","id":719},"Salon\/Beauty":{"label":"Salon\/Beauty","id":728},"Science":{"label":"Science","id":739},"Social Services":{"label":"Social Services","id":740},"Strategy & Planning":{"label":"Strategy & Planning","id":695},"Telecommunications":{"label":"Telecommunications","id":1130},"Training":{"label":"Training","id":746},"Transportation":{"label":"Transportation","id":760},"TV\/Film\/Musicians":{"label":"TV\/Film\/Musicians","id":1079,"children":{"Acting":{"label":"Acting","id":609},"Dancing":{"label":"Dancing","id":610},"Modeling":{"label":"Modeling","id":613},"Music":{"label":"Music","id":1054},"Post-Production":{"label":"Post-Production","id":1058},"Production":{"label":"Production","id":1057}}},"Vet & Animal Care":{"label":"Vet & Animal Care","id":763},"Warehouse":{"label":"Warehouse","id":1131},"Work from Home":{"label":"Work from Home","id":764}}},"Merchandise":{"label":"Merchandise","id":1,"children":{"Antiques":{"label":"Antiques","id":76},"Appliances":{"label":"Appliances","id":2,"children":{"Dishwashers":{"label":"Dishwashers","id":4},"Fridge & Freezers":{"label":"Fridge & Freezers","id":6},"Microwaves":{"label":"Microwaves","id":5},"Other":{"label":"Other","id":23},"Oven & Ranges":{"label":"Oven & Ranges","id":3},"Small":{"label":"Small","id":9},"Washer & Dryers":{"label":"Washer & Dryers","id":19},"Water Heaters":{"label":"Water Heaters","id":22}}},"Arts & Crafts":{"label":"Arts & Crafts","id":1159,"children":{"Artwork":{"label":"Artwork","id":77},"Supplies":{"label":"Supplies","id":995}}},"Baby & Kid Stuff":{"label":"Baby & Kid Stuff","id":276,"children":{"Baby Accessories":{"label":"Baby Accessories","id":996},"Backpacks":{"label":"Backpacks","id":277},"Bedding":{"label":"Bedding","id":281},"Bikes":{"label":"Bikes","id":282},"Books":{"label":"Books","id":283},"Car Seats":{"label":"Car Seats","id":280},"Clothes":{"label":"Clothes","id":284},"Cribs":{"label":"Cribs","id":172},"Furniture":{"label":"Furniture","id":285},"Safety":{"label":"Safety","id":278},"Strollers":{"label":"Strollers","id":279},"Toys":{"label":"Toys","id":286}}},"Bags & Luggage":{"label":"Bags & Luggage","id":1140,"children":{"Backpacks":{"label":"Backpacks","id":44},"Briefcases":{"label":"Briefcases","id":1141},"Handbags":{"label":"Handbags","id":1142},"Luggage":{"label":"Luggage","id":49},"Wallets":{"label":"Wallets","id":52}}},"Books & Magazines":{"label":"Books & Magazines","id":35,"children":{"Audio Books":{"label":"Audio Books","id":37},"Books":{"label":"Books","id":36},"Kids":{"label":"Kids","id":39},"Magazines":{"label":"Magazines","id":41},"Manuals":{"label":"Manuals","id":38},"Textbooks":{"label":"Textbooks","id":40}}},"CDs & DVDs":{"label":"CDs & DVDs","id":164,"children":{"Blu-Ray":{"label":"Blu-Ray","id":1160},"CD":{"label":"CD","id":166},"DVD":{"label":"DVD","id":165},"Other":{"label":"Other","id":1144},"VHS":{"label":"VHS","id":1143}}},"Clothes & Accessories":{"label":"Clothes & Accessories","id":42,"children":{"Accessories":{"label":"Accessories","id":43},"Dresses":{"label":"Dresses","id":54},"Exercise":{"label":"Exercise","id":55},"Military Gear & Surplus":{"label":"Military Gear & Surplus","id":1027},"Other":{"label":"Other","id":74},"Outerwear":{"label":"Outerwear","id":53},"Outfits & Sets":{"label":"Outfits & Sets","id":62},"Pants & Jeans":{"label":"Pants & Jeans","id":63},"Shirts & Tops":{"label":"Shirts & Tops","id":64},"Shoes":{"label":"Shoes","id":65},"Shorts":{"label":"Shorts","id":66},"Skirts":{"label":"Skirts","id":67},"Sleep & Underwear":{"label":"Sleep & Underwear","id":68},"Socks & Hosiery":{"label":"Socks & Hosiery","id":69},"Suit & Jackets":{"label":"Suit & Jackets","id":70},"Sweaters":{"label":"Sweaters","id":71},"Swimwear":{"label":"Swimwear","id":72},"Wedding":{"label":"Wedding","id":73}}},"Collectibles":{"label":"Collectibles","id":75,"children":{"Cards":{"label":"Cards","id":82},"Coins":{"label":"Coins","id":78},"Comics":{"label":"Comics","id":79},"Military Memorabilia":{"label":"Military Memorabilia","id":1028},"Sports":{"label":"Sports","id":80},"Stamps":{"label":"Stamps","id":81}}},"Computers & Acc.":{"label":"Computers & Acc.","id":83,"children":{"Desktops":{"label":"Desktops","id":110},"Input Devices":{"label":"Input Devices","id":85},"Laptops":{"label":"Laptops","id":111},"Monitors":{"label":"Monitors","id":88},"Networking":{"label":"Networking","id":91},"Other":{"label":"Other","id":118},"PC Components":{"label":"PC Components","id":84},"Printers":{"label":"Printers","id":112},"Servers":{"label":"Servers","id":109},"Software":{"label":"Software","id":98},"Storage":{"label":"Storage","id":99}}},"Electronics":{"label":"Electronics","id":119,"children":{"Audio":{"label":"Audio","id":120},"Cameras":{"label":"Cameras","id":139},"Car":{"label":"Car","id":147},"DVD players":{"label":"DVD players","id":151},"DVRs":{"label":"DVRs","id":152},"Gadgets":{"label":"Gadgets","id":163},"GPS":{"label":"GPS","id":153},"iPads & Tablets":{"label":"iPads & Tablets","id":154},"iPods & MP3 Players":{"label":"iPods & MP3 Players","id":137},"Phones":{"label":"Phones","id":155},"Satellite":{"label":"Satellite","id":160},"Televisions":{"label":"Televisions","id":161},"VCRs":{"label":"VCRs","id":162},"Video Cameras":{"label":"Video Cameras","id":145}}},"Everything Else":{"label":"Everything Else","id":445},"Free":{"label":"Free","id":168},"Furniture":{"label":"Furniture","id":169,"children":{"Beds":{"label":"Beds","id":170},"Benches & Stools":{"label":"Benches & Stools","id":174},"Bookcases":{"label":"Bookcases","id":177},"Cabinets & Armoire":{"label":"Cabinets & Armoire","id":178},"Chairs":{"label":"Chairs","id":182},"Desks":{"label":"Desks","id":185},"Dressers":{"label":"Dressers","id":186},"Other":{"label":"Other","id":199},"Rugs":{"label":"Rugs","id":187},"Sofas":{"label":"Sofas","id":188},"Tables":{"label":"Tables","id":194}}},"Garage Sales":{"label":"Garage Sales","id":24,"children":{"Auctions":{"label":"Auctions","id":25},"Estate Sales":{"label":"Estate Sales","id":26},"Garage Sales":{"label":"Garage Sales","id":27}}},"Health & Beauty":{"label":"Health & Beauty","id":1063,"children":{"Cosmetics":{"label":"Cosmetics","id":1065},"Hair Products":{"label":"Hair Products","id":1066},"Skin Care":{"label":"Skin Care","id":1064},"Supplements":{"label":"Supplements","id":1135}}},"Home & Garden":{"label":"Home & Garden","id":204,"children":{"Bedding":{"label":"Bedding","id":205},"Carpets":{"label":"Carpets","id":206},"Cleaning":{"label":"Cleaning","id":207},"Food & Produce":{"label":"Food & Produce","id":208},"Heat\/Air":{"label":"Heat\/Air","id":209},"Home Decor":{"label":"Home Decor","id":268},"Kitchen":{"label":"Kitchen","id":270},"Lawn & Garden":{"label":"Lawn & Garden","id":272},"Lawnmowers":{"label":"Lawnmowers","id":273},"Lighting":{"label":"Lighting","id":271},"Pools & Spas":{"label":"Pools & Spas","id":274},"Security":{"label":"Security","id":269},"Windows & Curtains":{"label":"Windows & Curtains","id":275}}},"Jewelry":{"label":"Jewelry","id":56,"children":{"Bracelets":{"label":"Bracelets","id":57},"Earrings":{"label":"Earrings","id":58},"Necklaces":{"label":"Necklaces","id":59},"Rings":{"label":"Rings","id":60},"Watches":{"label":"Watches","id":61}}},"Mobile Phones":{"label":"Mobile Phones","id":158,"children":{"Android":{"label":"Android","id":1152},"Blackberry":{"label":"Blackberry","id":1156},"iPhone":{"label":"iPhone","id":1151},"Other":{"label":"Other","id":1158},"Windows":{"label":"Windows","id":1157}}},"Musical Instruments":{"label":"Musical Instruments","id":287,"children":{"Accessories":{"label":"Accessories","id":330},"Brass":{"label":"Brass","id":288},"Drums":{"label":"Drums","id":303},"Guitars":{"label":"Guitars","id":322},"Other":{"label":"Other","id":350},"Pianos":{"label":"Pianos","id":335},"Strings":{"label":"Strings","id":297},"Woodwinds":{"label":"Woodwinds","id":341}}},"Office & Biz":{"label":"Office & Biz","id":351,"children":{"Agriculture":{"label":"Agriculture","id":352},"Biz for Sale":{"label":"Biz for Sale","id":354},"Building Supplies":{"label":"Building Supplies","id":353},"Medical":{"label":"Medical","id":355},"Office":{"label":"Office","id":356},"Restaurant":{"label":"Restaurant","id":357}}},"Sports & Bicycles":{"label":"Sports & Bicycles","id":376,"children":{"Bicycles":{"label":"Bicycles","id":28},"Camping":{"label":"Camping","id":377},"Equestrian":{"label":"Equestrian","id":378},"Exercise":{"label":"Exercise","id":379},"Hunting":{"label":"Hunting","id":384},"Indoor Games":{"label":"Indoor Games","id":387},"Other":{"label":"Other","id":416},"Snow Sports":{"label":"Snow Sports","id":393},"Sports Equipment":{"label":"Sports Equipment","id":396},"Water Sports":{"label":"Water Sports","id":405},"Weights":{"label":"Weights","id":415}}},"Tools":{"label":"Tools","id":213,"children":{"Hand Tools":{"label":"Hand Tools","id":214},"Other":{"label":"Other","id":238},"Power":{"label":"Power","id":239},"Woodworking":{"label":"Woodworking","id":267}}},"Video Games and Consoles":{"label":"Video Games and Consoles","id":167,"children":{"Consoles":{"label":"Consoles","id":1153},"Games":{"label":"Games","id":1155},"Portable":{"label":"Portable","id":1154}}},"Adult":{"label":"Adult","id":1123}}},"Pets":{"label":"Pets","id":358,"children":{"Birds":{"label":"Birds","id":359},"Cats":{"label":"Cats","id":360},"Dogs":{"label":"Dogs","id":361},"Fish":{"label":"Fish","id":362},"Horses":{"label":"Horses","id":363},"Livestock":{"label":"Livestock","id":364,"children":{"Supplies":{"label":"Supplies","id":365}}},"Other":{"label":"Other","id":369},"Pet Supplies":{"label":"Pet Supplies","id":370,"children":{"Bird Supplies":{"label":"Bird Supplies","id":371},"Cat Supplies":{"label":"Cat Supplies","id":372},"Dog Supplies":{"label":"Dog Supplies","id":373},"Fish Supplies":{"label":"Fish Supplies","id":374},"Horse Supplies":{"label":"Horse Supplies","id":375}}},"Rabbits":{"label":"Rabbits","id":366},"Reptiles":{"label":"Reptiles","id":367},"Small & Furry":{"label":"Small & Furry","id":368}}},"Real Estate":{"label":"Real Estate","id":565,"children":{"Commercial":{"label":"Commercial","id":566,"children":{"Industrial":{"label":"Industrial","id":1096},"Office":{"label":"Office","id":567},"Retail":{"label":"Retail","id":1097}}},"Condo\/Townhome":{"label":"Condo\/Townhome","id":568},"Farm\/Ranch":{"label":"Farm\/Ranch","id":1020},"Foreclosures":{"label":"Foreclosures","id":569},"Land":{"label":"Land","id":571},"Mobile Homes":{"label":"Mobile Homes","id":572},"Multi Family":{"label":"Multi Family","id":1021},"Open Houses":{"label":"Open Houses","id":573},"Other":{"label":"Other","id":576},"Single Family":{"label":"Single Family","id":570},"Storage":{"label":"Storage","id":574},"Vacation Property":{"label":"Vacation Property","id":575}}},"Services":{"label":"Services","id":766,"children":{"Auto":{"label":"Auto","id":767,"children":{"Detailing":{"label":"Detailing","id":768},"Oil Change":{"label":"Oil Change","id":769},"Rentals":{"label":"Rentals","id":772},"Repair":{"label":"Repair","id":770},"Tires":{"label":"Tires","id":771}}},"Career":{"label":"Career","id":773},"Child & Elderly Care":{"label":"Child & Elderly Care","id":774,"children":{"Child Care":{"label":"Child Care","id":775},"Child Safety":{"label":"Child Safety","id":777},"Elderly Care":{"label":"Elderly Care","id":778},"Home Nurse":{"label":"Home Nurse","id":779}}},"Cleaning":{"label":"Cleaning","id":780,"children":{"Carpet & Upholstery":{"label":"Carpet & Upholstery","id":781},"Chimney & Fireplace":{"label":"Chimney & Fireplace","id":782},"Exterior Home":{"label":"Exterior Home","id":783},"Junk Removal":{"label":"Junk Removal","id":785},"Maid Service":{"label":"Maid Service","id":784},"Windows":{"label":"Windows","id":786}}},"Coupons":{"label":"Coupons","id":787,"children":{"Art & Collectibles":{"label":"Art & Collectibles","id":1000},"Automotive":{"label":"Automotive","id":1003},"Baby & Kid":{"label":"Baby & Kid","id":1001},"Books":{"label":"Books","id":1002},"Clothing":{"label":"Clothing","id":1004},"Computers & Electronics":{"label":"Computers & Electronics","id":1007},"Dining":{"label":"Dining","id":1005},"Education":{"label":"Education","id":1006},"Entertainment":{"label":"Entertainment","id":1008},"Gifts, Gourmet, etc.":{"label":"Gifts, Gourmet, etc.","id":1010},"Groceries":{"label":"Groceries","id":1009},"Health & Beauty":{"label":"Health & Beauty","id":1011},"Home & Garden":{"label":"Home & Garden","id":1012},"Office & Business":{"label":"Office & Business","id":1013},"Other":{"label":"Other","id":1019},"Pets":{"label":"Pets","id":1014},"Phone & Internet":{"label":"Phone & Internet","id":1015},"Services":{"label":"Services","id":1016},"Sports & Fitness":{"label":"Sports & Fitness","id":1017},"Travel":{"label":"Travel","id":1018}}},"Creative":{"label":"Creative","id":1048,"children":{"Design":{"label":"Design","id":1052},"Film\/Production":{"label":"Film\/Production","id":1050},"Other":{"label":"Other","id":1053},"Photography":{"label":"Photography","id":1051},"Recording":{"label":"Recording","id":1049}}},"Everything Else":{"label":"Everything Else","id":991,"children":{"Special Offers":{"label":"Special Offers","id":992}}},"Financial":{"label":"Financial","id":788,"children":{"Accounting":{"label":"Accounting","id":789},"Credit":{"label":"Credit","id":794},"Financial Advisors":{"label":"Financial Advisors","id":790},"Insurance":{"label":"Insurance","id":795},"Investments":{"label":"Investments","id":796},"Loans":{"label":"Loans","id":791},"Other":{"label":"Other","id":798},"Tax Prep":{"label":"Tax Prep","id":797}}},"Food & Restaurants":{"label":"Food & Restaurants","id":980,"children":{"Bars, Pubs & Clubs":{"label":"Bars, Pubs & Clubs","id":981},"Restaurants":{"label":"Restaurants","id":982}}},"Health & Beauty":{"label":"Health & Beauty","id":799,"children":{"Alt Medicine":{"label":"Alt Medicine","id":800},"Body Art":{"label":"Body Art","id":801},"Chiropractors":{"label":"Chiropractors","id":802},"Counseling":{"label":"Counseling","id":803},"Exercise & Fitness":{"label":"Exercise & Fitness","id":804},"Hair Care":{"label":"Hair Care","id":805},"Manicure & Pedicure":{"label":"Manicure & Pedicure","id":806},"Massage":{"label":"Massage","id":807},"Medical Care":{"label":"Medical Care","id":808},"Other":{"label":"Other","id":810},"Skin Care":{"label":"Skin Care","id":809}}},"Home":{"label":"Home","id":811,"children":{"Appliances":{"label":"Appliances","id":812},"Carpentry & Cabinets":{"label":"Carpentry & Cabinets","id":815},"Concrete, Stone":{"label":"Concrete, Stone","id":822},"Constr'n & Remodels":{"label":"Constr'n & Remodels","id":827},"Decorating":{"label":"Decorating","id":869},"Electric & Lighting":{"label":"Electric & Lighting","id":839},"Flooring":{"label":"Flooring","id":845},"Furniture":{"label":"Furniture","id":853},"Handyman":{"label":"Handyman","id":856},"Heating & Cooling":{"label":"Heating & Cooling","id":857},"Other":{"label":"Other","id":903},"Painting & Staining":{"label":"Painting & Staining","id":870},"Plumbing":{"label":"Plumbing","id":875},"Roofing & Siding":{"label":"Roofing & Siding","id":883},"Walls & Ceilings":{"label":"Walls & Ceilings","id":890},"Windows & Doors":{"label":"Windows & Doors","id":895}}},"Lawn & Garden":{"label":"Lawn & Garden","id":911,"children":{"Blacktop & Paving":{"label":"Blacktop & Paving","id":912},"Decks":{"label":"Decks","id":913},"Fences":{"label":"Fences","id":914},"Fountains & Ponds":{"label":"Fountains & Ponds","id":915},"Hardscaping":{"label":"Hardscaping","id":916},"Landscaping":{"label":"Landscaping","id":919},"Lawn Care":{"label":"Lawn Care","id":922},"Other":{"label":"Other","id":923},"Snow Removal":{"label":"Snow Removal","id":924},"Tree & Shrubs":{"label":"Tree & Shrubs","id":925}}},"Legal":{"label":"Legal","id":926},"Lessons":{"label":"Lessons","id":927,"children":{"Arts & Crafts":{"label":"Arts & Crafts","id":928},"Cooking":{"label":"Cooking","id":929},"Dance":{"label":"Dance","id":930},"Driving":{"label":"Driving","id":931},"Language":{"label":"Language","id":933},"Music":{"label":"Music","id":934},"Other":{"label":"Other","id":939},"Schools":{"label":"Schools","id":932},"Sports":{"label":"Sports","id":936},"Technology":{"label":"Technology","id":938},"Tutoring":{"label":"Tutoring","id":935}}},"Moving & Storage":{"label":"Moving & Storage","id":940,"children":{"Hauling":{"label":"Hauling","id":941},"Moving":{"label":"Moving","id":942},"Storage":{"label":"Storage","id":943}}},"Party & Entertain":{"label":"Party & Entertain","id":944,"children":{"Catering":{"label":"Catering","id":945},"Event Planners":{"label":"Event Planners","id":946},"Kids Parties":{"label":"Kids Parties","id":947},"Music":{"label":"Music","id":948},"Other":{"label":"Other","id":950},"Rentals":{"label":"Rentals","id":949}}},"Pet Services":{"label":"Pet Services","id":951,"children":{"Kennels":{"label":"Kennels","id":953},"Other":{"label":"Other","id":957},"Pet Sitting":{"label":"Pet Sitting","id":954},"Veterinarians":{"label":"Veterinarians","id":955},"Walking":{"label":"Walking","id":952},"Washing & Grooming":{"label":"Washing & Grooming","id":956}}},"Pool & Spa Services":{"label":"Pool & Spa Services","id":958,"children":{"Pools":{"label":"Pools","id":967},"Saunas":{"label":"Saunas","id":963},"Spas & Tubs":{"label":"Spas & Tubs","id":959}}},"Psychic":{"label":"Psychic","id":1100},"Real Estate":{"label":"Real Estate","id":971,"children":{"Agents & Brokers":{"label":"Agents & Brokers","id":978},"Appraiser":{"label":"Appraiser","id":972},"Home Inspectors":{"label":"Home Inspectors","id":973},"Other":{"label":"Other","id":977},"Staging Services":{"label":"Staging Services","id":979}}},"Tech Help":{"label":"Tech Help","id":983,"children":{"Audio & Video":{"label":"Audio & Video","id":984},"Computer":{"label":"Computer","id":985},"Electronics":{"label":"Electronics","id":986},"Networking":{"label":"Networking","id":987}}},"Travel & Transportation":{"label":"Travel & Transportation","id":988,"children":{"Transportation":{"label":"Transportation","id":989},"Travel":{"label":"Travel","id":990}}}}},"Tickets":{"label":"Tickets","id":417,"children":{"Concerts":{"label":"Concerts","id":418},"Group Events":{"label":"Group Events","id":419,"children":{"Business & Networking":{"label":"Business & Networking","id":1069},"Classes & Workshops":{"label":"Classes & Workshops","id":1068},"Conferences & Seminars":{"label":"Conferences & Seminars","id":1067},"Dance":{"label":"Dance","id":1074},"Festivals":{"label":"Festivals","id":1073},"Food & Wine":{"label":"Food & Wine","id":1070},"Free":{"label":"Free","id":1077},"Health & Spiritual":{"label":"Health & Spiritual","id":1072},"Kids & Family":{"label":"Kids & Family","id":1075},"Other":{"label":"Other","id":1076},"Sports & Outdoor":{"label":"Sports & Outdoor","id":1071}}},"Other":{"label":"Other","id":435,"children":{"Movies & Film Events":{"label":"Movies & Film Events","id":436},"Travel":{"label":"Travel","id":437}}},"Sports":{"label":"Sports","id":420,"children":{"Auto Racing":{"label":"Auto Racing","id":421},"Baseball":{"label":"Baseball","id":422},"Basketball":{"label":"Basketball","id":423},"Boxing":{"label":"Boxing","id":424},"Cricket":{"label":"Cricket","id":997},"Football":{"label":"Football","id":425},"Golf":{"label":"Golf","id":426},"Hockey":{"label":"Hockey","id":427},"Horse Racing":{"label":"Horse Racing","id":428},"Olympics":{"label":"Olympics","id":429},"Other":{"label":"Other","id":433},"Rugby":{"label":"Rugby","id":998},"Soccer":{"label":"Soccer","id":430},"Tennis":{"label":"Tennis","id":431},"Track and Field":{"label":"Track and Field","id":432},"Wrestling":{"label":"Wrestling","id":999}}},"Theater":{"label":"Theater","id":434}}},"Vehicles":{"label":"Vehicles","id":446,"children":{"Airplanes":{"label":"Airplanes","id":447},"ATVs":{"label":"ATVs","id":546},"Boats":{"label":"Boats","id":448,"children":{"Commercial":{"label":"Commercial","id":1186},"Fishing":{"label":"Fishing","id":449},"High Performance":{"label":"High Performance","id":1181},"House":{"label":"House","id":1183},"Inflatable":{"label":"Inflatable","id":1185},"JetSkis":{"label":"JetSkis","id":450},"Motor":{"label":"Motor","id":451},"Pontoon":{"label":"Pontoon","id":1182},"Sailing":{"label":"Sailing","id":452},"Small":{"label":"Small","id":1184},"Trailer":{"label":"Trailer","id":1187},"Wakeboard":{"label":"Wakeboard","id":1188},"Yachts":{"label":"Yachts","id":453}}},"Cars":{"label":"Cars","id":454,"children":{"Classics":{"label":"Classics","id":455},"Convertibles":{"label":"Convertibles","id":1022},"Coupes":{"label":"Coupes","id":1023},"Hatchbacks":{"label":"Hatchbacks","id":1125},"Hybrids":{"label":"Hybrids","id":1078},"Mini-Vans":{"label":"Mini-Vans","id":1024},"Sedans":{"label":"Sedans","id":1025},"Station Wagons":{"label":"Station Wagons","id":1026},"SUVs":{"label":"SUVs","id":456},"Trucks":{"label":"Trucks","id":457},"Vans":{"label":"Vans","id":458}}},"Commercial Trucks":{"label":"Commercial Trucks","id":459,"children":{"Auto Carriers":{"label":"Auto Carriers","id":460},"Bucket":{"label":"Bucket","id":461},"Cab & Chassis":{"label":"Cab & Chassis","id":516},"Cabover":{"label":"Cabover","id":462},"Construction":{"label":"Construction","id":495},"Crane":{"label":"Crane","id":497},"Day Cabs":{"label":"Day Cabs","id":498},"Dump Truck":{"label":"Dump Truck","id":499},"Expeditor & Hot Shot":{"label":"Expeditor & Hot Shot","id":500},"Flatbed":{"label":"Flatbed","id":501},"Grain":{"label":"Grain","id":502},"Logging":{"label":"Logging","id":503},"Mixers":{"label":"Mixers","id":504},"Other":{"label":"Other","id":519},"Refrigerated":{"label":"Refrigerated","id":505},"Refuse":{"label":"Refuse","id":506},"Roll Off":{"label":"Roll Off","id":510},"Rollback":{"label":"Rollback","id":511},"Service & Utility":{"label":"Service & Utility","id":512},"Severe Duty":{"label":"Severe Duty","id":513},"Sleeper":{"label":"Sleeper","id":496},"Tank Trucks":{"label":"Tank Trucks","id":514},"Tow":{"label":"Tow","id":515},"Trailers":{"label":"Trailers","id":464},"Van":{"label":"Van","id":517},"Yard":{"label":"Yard","id":518}}},"Everything Else":{"label":"Everything Else","id":545},"Heavy Equipment":{"label":"Heavy Equipment","id":520},"Motorcycles":{"label":"Motorcycles","id":521,"children":{"Classic":{"label":"Classic","id":1161},"Competition":{"label":"Competition","id":1162},"Custom":{"label":"Custom","id":1163},"Electric":{"label":"Electric","id":1168},"Golf Carts":{"label":"Golf Carts","id":1165},"Mini & Pocket":{"label":"Mini & Pocket","id":1164},"Motorcycle Trailers":{"label":"Motorcycle Trailers","id":1167},"Off Road Bikes":{"label":"Off Road Bikes","id":522},"Road Bikes":{"label":"Road Bikes","id":523},"Scooters":{"label":"Scooters","id":524},"Trike":{"label":"Trike","id":1166}}},"Parts & Accessories":{"label":"Parts & Accessories","id":526,"children":{"ATVs":{"label":"ATVs","id":527},"Aviations":{"label":"Aviations","id":528},"Boats":{"label":"Boats","id":532},"Cars & Trucks":{"label":"Cars & Trucks","id":536},"Motorcycles":{"label":"Motorcycles","id":539},"RVs":{"label":"RVs","id":540},"Snowmobiles":{"label":"Snowmobiles","id":544}}},"Power Sports":{"label":"Power Sports","id":1036},"RVs":{"label":"RVs","id":525,"children":{"Campers":{"label":"Campers","id":1137},"Motorhomes":{"label":"Motorhomes","id":1139},"Trailers":{"label":"Trailers","id":1138}}},"Snowmobiles":{"label":"Snowmobiles","id":547},"Storage":{"label":"Storage","id":1136,"children":{"RV Parks":{"label":"RV Parks","id":543},"Storage":{"label":"Storage","id":535}}}}}},"post_html":"\n\n \n\n\n<form class=\"post-form\" action=\"\/post2\/\" method=\"post\"  accept-charset=\"utf-8\">\n\t\n\n\t<div class=\"speech-bubble\">\n\t\t<div class=\"speech-bubble-main\">\n\t\t\t<div><input type=\"text\" id=\"listingForm_title\" name=\"listingForm[title]\"    placeholder=\"What are you posting?\" value=\"\" \/><\/div>\n\t\t\t<div><input type=\"text\" id=\"listingForm_why\" name=\"listingForm[why]\"    maxlength=\"128\" placeholder=\"Why are you posting it?\" value=\"\" \/><\/div>\n\t\t\t<div class=\"post-body\"><textarea id=\"listingForm_body\" name=\"listingForm[body]\"    class=\"custom-scroll\" placeholder=\"Describe it ...\" resize=\"off\"><\/textarea><\/div>\n\n\t\t\t\t\t\t\t\t<div class=\"post-gallery-holder odl-scroll-gallery\"><div class=\"image-upload clearfix\"><div class=\"post-media-gallery clearfix\"><\/div><div class=\"image-uploader-container\"><\/div><div class=\"video-uploader-container clearfix\"><\/div><\/div><\/div>\n\t\t\t\n\t\t\t\t\t\t\t<div class=\"post-category\" tabindex=\"-1\" id=\"listingForm_categoryId-container\">\n\t\t\t\t\t<input type=\"text\" id=\"listingForm_categoryId\" name=\"listingForm[categoryId]\" value=\"\" \/>\n\t\t\t\t<\/div>\n\t\t\t\n\t\t\t\t\t\t\t<div id=\"listingForm_priceType-container\" class=\"price clearfix\">\n\t\t\t\t\t<div class=\"price-fields n\">\n\t\t\t\t\t\t<label placeholder=\"Price\" for=\"listingForm_price\">$<\/label>\n\t\t\t\t\t\t<input type=\"text\" id=\"listingForm_price\" name=\"listingForm[price]\"    placeholder=\"Price\" value=\"\" \/>\n\n\t\t\t\t\t\t\t\t\t\t<span class=\"target-select check-box-2 shadow-element obo\">\n\t\t<label>\n\t\t\t<span class=\"widget\"><\/span>\n\t\t\tOr Best Offer\n\t\t<\/label>\n\t\t<input type=\"checkbox\" id=\"listingForm_obo\" name=\"listingForm[obo]\" value=\"1\" \/>\n\t\t\t<\/span>\n\n\t\t\t\t\t<\/div>\n\n\t\t\t\t\t\t\t\t\t<span class=\"target-select check-box-2 shadow-element free\">\n\t\t<label>\n\t\t\t<span class=\"widget\"><\/span>\n\t\t\tFree\n\t\t<\/label>\n\t\t<input type=\"checkbox\" id=\"listingForm_isFree\" name=\"listingForm[isFree]\" value=\"1\" \/>\n\t\t\t<\/span>\n\n\t\t\t\t<\/div>\n\t\t\t\n\t\t\t\t\t\t\t<div class=\"post_attributes\">\n\t\t\t\t\t<span class=\"ar up\"><\/span>\n\n\t\t\t\t\t<div class=\"hdr\">\n\t\t\t\t\t\t<span class=\"attr-title link\">Select an Attribute<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"body\">\n\t\t\t\t\t\t<div id=\"attributes-565\" class=\"attributes attributes_housing_sale\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_housing_sale_price\" name=\"listingForm[attributes][housing_sale][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-566 default-default-1096 default-default-567 default-default-1097 default-default-571 default-default-574\" disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_bedrooms\">Bedrooms<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_bedrooms\" name=\"listingForm[attributes][housing_sale][bedrooms]\"    data-remove-categories=\"default-default-566 default-default-1096 default-default-567 default-default-1097 default-default-571 default-default-574\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-566 default-default-1096 default-default-567 default-default-1097 default-default-571 default-default-574\" disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_bathrooms\">Bathrooms<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_bathrooms\" name=\"listingForm[attributes][housing_sale][bathrooms]\"    data-remove-categories=\"default-default-566 default-default-1096 default-default-567 default-default-1097 default-default-571 default-default-574\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-571 default-default-574\" disabled=\"disabled\" placeholder=\"yyyy\" for=\"listingForm_attributes_housing_sale_year\">Year Built<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_year\" name=\"listingForm[attributes][housing_sale][year]\"    data-remove-categories=\"default-default-571 default-default-574\" disabled=\"disabled\" placeholder=\"yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_mls_id\">MLS Number<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_mls_id\" name=\"listingForm[attributes][housing_sale][mls_id]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-571\" disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_square_feet\">Sq. Feet<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_square_feet\" name=\"listingForm[attributes][housing_sale][square_feet]\"    data-remove-categories=\"default-default-571\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_address\">Address<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_address\" name=\"listingForm[attributes][housing_sale][address]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_seller_type\">For Sale by<\/label><select id=\"listingForm_attributes_housing_sale_seller_type\" name=\"listingForm[attributes][housing_sale][seller_type]\"    disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"By Owner\">Owner<\/option><option value=\"Agent\/Broker\">Agent\/Broker<\/option><option value=\"Builder\">Developer<\/option><\/select><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-GBR-573\" data-add-categories=\"default-default-573\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" for=\"listingForm_attributes_housing_sale_event_date___1\">Open House Date<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_event_date___1\" name=\"listingForm[attributes][housing_sale][event_date___1]\"    data-remove-categories=\"default-GBR-573\" data-add-categories=\"default-default-573\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-GBR-573\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" for=\"listingForm_attributes_housing_sale_event_date___2\">Open House Date<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_event_date___2\" name=\"listingForm[attributes][housing_sale][event_date___2]\"    data-add-categories=\"default-GBR-573\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-default-573\" disabled=\"disabled\" for=\"listingForm_attributes_housing_sale_time___3\">Time<\/label><input type=\"text\" id=\"listingForm_attributes_housing_sale_time___3\" name=\"listingForm[attributes][housing_sale][time___3]\"    data-add-categories=\"default-default-573\" disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-549\" class=\"attributes attributes_housing_rent\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_housing_rent_price\" name=\"listingForm[attributes][housing_rent][price]\"    data-remove-categories=\"default-default-550 default-default-551 default-default-552 default-default-557 default-default-555\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_housing_rent_price___1\" name=\"listingForm[attributes][housing_rent][price___1]\"    data-add-categories=\"default-default-550 default-default-551 default-default-552\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_housing_rent_price___2\" name=\"listingForm[attributes][housing_rent][price___2]\"    data-add-categories=\"default-default-557\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_housing_rent_price___3\" name=\"listingForm[attributes][housing_rent][price___3]\"    data-add-categories=\"default-default-555\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-553 default-default-1098 default-default-554 default-default-1099 default-default-562\" disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_bedrooms\">Bedrooms<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_bedrooms\" name=\"listingForm[attributes][housing_rent][bedrooms]\"    data-remove-categories=\"default-default-553 default-default-1098 default-default-554 default-default-1099 default-default-562\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-553 default-default-1098 default-default-554 default-default-1099 default-default-562\" disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_bathrooms\">Bathrooms<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_bathrooms\" name=\"listingForm[attributes][housing_rent][bathrooms]\"    data-remove-categories=\"default-default-553 default-default-1098 default-default-554 default-default-1099 default-default-562\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_square_feet\">Sq. Feet<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_square_feet\" name=\"listingForm[attributes][housing_rent][square_feet]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_address\">Address<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_address\" name=\"listingForm[attributes][housing_rent][address]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_pets_allowed\">Pets Allowed<\/label><select id=\"listingForm_attributes_housing_rent_pets_allowed\" name=\"listingForm[attributes][housing_rent][pets_allowed]\"    disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Dogs\">Dogs OK<\/option><option value=\"Cats\">Cats OK<\/option><option value=\"Cats|Dogs\">Dogs OK\/Cats OK<\/option><option value=\"None\">No Pets<\/option><\/select><\/div><div class=\"clearfix\"><label data-add-categories=\"default-default-559\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" for=\"listingForm_attributes_housing_rent_event_date___4\">Open House Date<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_event_date___4\" name=\"listingForm[attributes][housing_rent][event_date___4]\"    data-add-categories=\"default-default-559\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-default-559\" disabled=\"disabled\" for=\"listingForm_attributes_housing_rent_time___5\">Time<\/label><input type=\"text\" id=\"listingForm_attributes_housing_rent_time___5\" name=\"listingForm[attributes][housing_rent][time___5]\"    data-add-categories=\"default-default-559\" disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-577\" class=\"attributes attributes_job\" style=\"display:block\"><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_job_company\">Company<\/label><input type=\"text\" id=\"listingForm_attributes_job_company\" name=\"listingForm[attributes][job][company]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_job_job_title\">Job Title<\/label><input type=\"text\" id=\"listingForm_attributes_job_job_title\" name=\"listingForm[attributes][job][job_title]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_job_employee_type\">Job Type<\/label><select id=\"listingForm_attributes_job_employee_type\" name=\"listingForm[attributes][job][employee_type]\"    disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Contractor\">Contractor<\/option><option value=\"Employee\">Employee<\/option><option value=\"Gig\">Gig<\/option><option value=\"Intern\">Intern<\/option><option value=\"Volunteer\">Volunteer<\/option><option value=\"Full Time\">Full Time<\/option><option value=\"Part Time\">Part Time<\/option><\/select><\/div><\/div><div id=\"attributes-358\" class=\"attributes attributes_sale_pet\" style=\"display:block\"><div class=\"clearfix\"><label data-remove-categories=\"default-default-365 default-default-370 default-default-371 default-default-372 default-default-373 default-default-374 default-default-375\" disabled=\"disabled\" for=\"listingForm_attributes_sale_pet_pet_breed\">Breed<\/label><input type=\"text\" id=\"listingForm_attributes_sale_pet_pet_breed\" name=\"listingForm[attributes][sale_pet][pet_breed]\"    data-remove-categories=\"default-default-365 default-default-370 default-default-371 default-default-372 default-default-373 default-default-374 default-default-375\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-365 default-default-370 default-default-371 default-default-372 default-default-373 default-default-374 default-default-375\" disabled=\"disabled\">Sex<\/label><div class=\"radio-wrap clearfix\" data-remove-categories=\"default-default-365 default-default-370 default-default-371 default-default-372 default-default-373 default-default-374 default-default-375\" disabled=\"disabled\"><span class=\"target-select radio shadow-element\"><label><span class=\"widget\"><\/span>\n\t\t\tMale\n\t\t<\/label><input type=\"radio\" id=\"listingForm_attributes_sale_pet_sex_Male\" name=\"listingForm[attributes][sale_pet][sex]\" value=\"Male\" \/><\/span><span class=\"target-select radio shadow-element\"><label><span class=\"widget\"><\/span>\n\t\t\tFemale\n\t\t<\/label><input type=\"radio\" id=\"listingForm_attributes_sale_pet_sex_Female\" name=\"listingForm[attributes][sale_pet][sex]\" value=\"Female\" \/><\/span><\/div><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_sale_pet_pet_age\">Age<\/label><select id=\"listingForm_attributes_sale_pet_pet_age\" name=\"listingForm[attributes][sale_pet][pet_age]\"    disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Adult\">Adult<\/option><option value=\"Baby\">Baby<\/option><option value=\"Senior\">Senior<\/option><option value=\"Young\">Young<\/option><\/select><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_pet_price\" name=\"listingForm[attributes][sale_pet][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_pet_free\" name=\"listingForm[attributes][sale_pet][free]\"    disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-1\" class=\"attributes attributes_sale\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_price\" name=\"listingForm[attributes][sale][price]\"    data-remove-categories=\"default-default-168 default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_obo\" name=\"listingForm[attributes][sale][obo]\"    data-remove-categories=\"default-default-168 default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_free\" name=\"listingForm[attributes][sale][free]\"    data-remove-categories=\"default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-GBR-170 default-GBR-1150 default-GBR-171 default-GBR-173\" data-add-categories=\"default-default-170 default-default-1150 default-default-171 default-default-173\" disabled=\"disabled\" for=\"listingForm_attributes_sale_size___1\">Size<\/label><select id=\"listingForm_attributes_sale_size___1\" name=\"listingForm[attributes][sale][size___1]\"    data-remove-categories=\"default-GBR-170 default-GBR-1150 default-GBR-171 default-GBR-173\" data-add-categories=\"default-default-170 default-default-1150 default-default-171 default-default-173\" disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Twin\">Twin<\/option><option value=\"Full\">Full<\/option><option value=\"Queen\">Queen<\/option><option value=\"King\">King<\/option><option value=\"California King\">California King<\/option><\/select><\/div><div class=\"clearfix\"><label data-add-categories=\"default-GBR-170 default-GBR-1150 default-GBR-171 default-GBR-173\" disabled=\"disabled\" for=\"listingForm_attributes_sale_size___2\">Size<\/label><select id=\"listingForm_attributes_sale_size___2\" name=\"listingForm[attributes][sale][size___2]\"    data-add-categories=\"default-GBR-170 default-GBR-1150 default-GBR-171 default-GBR-173\" disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Twin\">Twin<\/option><option value=\"Full\">Full<\/option><option value=\"Queen\">Queen<\/option><option value=\"King\">King<\/option><\/select><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-GBR-24 default-GBR-25 default-GBR-26 default-GBR-27\" data-add-categories=\"default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" for=\"listingForm_attributes_sale_event_date___3\">Date<\/label><input type=\"text\" id=\"listingForm_attributes_sale_event_date___3\" name=\"listingForm[attributes][sale][event_date___3]\"    data-remove-categories=\"default-GBR-24 default-GBR-25 default-GBR-26 default-GBR-27\" data-add-categories=\"default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-GBR-24 default-GBR-25 default-GBR-26 default-GBR-27\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" for=\"listingForm_attributes_sale_event_date___4\">Date<\/label><input type=\"text\" id=\"listingForm_attributes_sale_event_date___4\" name=\"listingForm[attributes][sale][event_date___4]\"    data-add-categories=\"default-GBR-24 default-GBR-25 default-GBR-26 default-GBR-27\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" for=\"listingForm_attributes_sale_time___5\">Time<\/label><input type=\"text\" id=\"listingForm_attributes_sale_time___5\" name=\"listingForm[attributes][sale][time___5]\"    data-add-categories=\"default-default-24 default-default-25 default-default-26 default-default-27\" disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-417\" class=\"attributes attributes_sale_tickets\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_tickets_price\" name=\"listingForm[attributes][sale_tickets][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_tickets_obo\" name=\"listingForm[attributes][sale_tickets][obo]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_sale_tickets_free\" name=\"listingForm[attributes][sale_tickets][free]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-GBR-417 default-GBR-418 default-GBR-419 default-GBR-1067 default-GBR-1068 default-GBR-1069 default-GBR-1070 default-GBR-1071 default-GBR-1072 default-GBR-1073 default-GBR-1074 default-GBR-1075 default-GBR-1076 default-GBR-1077 default-GBR-420 default-GBR-421 default-GBR-422 default-GBR-423 default-GBR-424 default-GBR-997 default-GBR-425 default-GBR-426 default-GBR-427 default-GBR-428 default-GBR-429 default-GBR-998 default-GBR-430 default-GBR-431 default-GBR-432 default-GBR-999 default-GBR-433 default-GBR-434 default-GBR-435 default-GBR-436 default-GBR-437\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" for=\"listingForm_attributes_sale_tickets_event_date\">Event Date<\/label><input type=\"text\" id=\"listingForm_attributes_sale_tickets_event_date\" name=\"listingForm[attributes][sale_tickets][event_date]\"    data-remove-categories=\"default-GBR-417 default-GBR-418 default-GBR-419 default-GBR-1067 default-GBR-1068 default-GBR-1069 default-GBR-1070 default-GBR-1071 default-GBR-1072 default-GBR-1073 default-GBR-1074 default-GBR-1075 default-GBR-1076 default-GBR-1077 default-GBR-420 default-GBR-421 default-GBR-422 default-GBR-423 default-GBR-424 default-GBR-997 default-GBR-425 default-GBR-426 default-GBR-427 default-GBR-428 default-GBR-429 default-GBR-998 default-GBR-430 default-GBR-431 default-GBR-432 default-GBR-999 default-GBR-433 default-GBR-434 default-GBR-435 default-GBR-436 default-GBR-437\" disabled=\"disabled\" placeholder=\"mm\/dd\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-GBR\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" for=\"listingForm_attributes_sale_tickets_event_date___1\">Event Date<\/label><input type=\"text\" id=\"listingForm_attributes_sale_tickets_event_date___1\" name=\"listingForm[attributes][sale_tickets][event_date___1]\"    data-add-categories=\"default-GBR\" disabled=\"disabled\" placeholder=\"dd\/mm\/yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_sale_tickets_event_time\">Event Time<\/label><input type=\"text\" id=\"listingForm_attributes_sale_tickets_event_time\" name=\"listingForm[attributes][sale_tickets][event_time]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_sale_tickets_num\"># Tickets<\/label><input type=\"text\" id=\"listingForm_attributes_sale_tickets_num\" name=\"listingForm[attributes][sale_tickets][num]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-add-categories=\"default-default-420 default-default-421 default-default-422 default-default-423 default-default-424 default-default-997 default-default-425 default-default-426 default-default-427 default-default-428 default-default-429 default-default-998 default-default-430 default-default-431 default-default-432 default-default-999 default-default-433\" disabled=\"disabled\" for=\"listingForm_attributes_sale_tickets_team___2\">Team(s)<\/label><input type=\"text\" id=\"listingForm_attributes_sale_tickets_team___2\" name=\"listingForm[attributes][sale_tickets][team___2]\"    data-add-categories=\"default-default-420 default-default-421 default-default-422 default-default-423 default-default-424 default-default-997 default-default-425 default-default-426 default-default-427 default-default-428 default-default-429 default-default-998 default-default-430 default-default-431 default-default-432 default-default-999 default-default-433\" disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-766\" class=\"attributes attributes_service\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_service_price\" name=\"listingForm[attributes][service][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_service_free\" name=\"listingForm[attributes][service][free]\"    disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-993\" class=\"attributes attributes_personals\" style=\"display:block\"><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_personals_looking_for_type\" class=\" required\">I Want<\/label><select id=\"listingForm_attributes_personals_looking_for_type\" name=\"listingForm[attributes][personals][looking_for_type]\" required=\"required\"    disabled=\"disabled\"><option value=\"\">Select...<\/option><option value=\"Friends\">Friends<\/option><option value=\"Casual Encounters\">Casual Encounters<\/option><option value=\"Dating\">Dating<\/option><\/select><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_personals_age\">My Age<\/label><input type=\"text\" id=\"listingForm_attributes_personals_age\" name=\"listingForm[attributes][personals][age]\"    disabled=\"disabled\" value=\"\" \/><\/div><\/div><div id=\"attributes-446\" class=\"attributes attributes_vehicle\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_vehicle_price\" name=\"listingForm[attributes][vehicle][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_vehicle_obo\" name=\"listingForm[attributes][vehicle][obo]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_vehicle_free\" name=\"listingForm[attributes][vehicle][free]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" placeholder=\"yyyy\" for=\"listingForm_attributes_vehicle_year\">Year<\/label><input type=\"text\" id=\"listingForm_attributes_vehicle_year\" name=\"listingForm[attributes][vehicle][year]\"    disabled=\"disabled\" placeholder=\"yyyy\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_vehicle_make\">Make<\/label><input type=\"text\" id=\"listingForm_attributes_vehicle_make\" name=\"listingForm[attributes][vehicle][make]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_vehicle_model\">Model<\/label><input type=\"text\" id=\"listingForm_attributes_vehicle_model\" name=\"listingForm[attributes][vehicle][model]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-526 default-default-527 default-default-528 default-default-529 default-default-530 default-default-532 default-default-533 default-default-534 default-default-536 default-default-537 default-default-538 default-default-539 default-default-540 default-default-541 default-default-542 default-default-544\" disabled=\"disabled\" for=\"listingForm_attributes_vehicle_mileage\">Mileage<\/label><input type=\"text\" id=\"listingForm_attributes_vehicle_mileage\" name=\"listingForm[attributes][vehicle][mileage]\"    data-remove-categories=\"default-default-526 default-default-527 default-default-528 default-default-529 default-default-530 default-default-532 default-default-533 default-default-534 default-default-536 default-default-537 default-default-538 default-default-539 default-default-540 default-default-541 default-default-542 default-default-544\" disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label disabled=\"disabled\" for=\"listingForm_attributes_vehicle_vin\">VIN<\/label><input type=\"text\" id=\"listingForm_attributes_vehicle_vin\" name=\"listingForm[attributes][vehicle][vin]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><label data-remove-categories=\"default-default-526 default-default-527 default-default-528 default-default-529 default-default-530 default-default-532 default-default-533 default-default-534 default-default-536 default-default-537 default-default-538 default-default-539 default-default-540 default-default-541 default-default-542 default-default-544\" disabled=\"disabled\">Seller Type<\/label><div class=\"radio-wrap clearfix\" data-remove-categories=\"default-default-526 default-default-527 default-default-528 default-default-529 default-default-530 default-default-532 default-default-533 default-default-534 default-default-536 default-default-537 default-default-538 default-default-539 default-default-540 default-default-541 default-default-542 default-default-544\" disabled=\"disabled\"><span class=\"target-select radio shadow-element\"><label><span class=\"widget\"><\/span>\n\t\t\tDealer\n\t\t<\/label><input type=\"radio\" id=\"listingForm_attributes_vehicle_seller_type_Dealer\" name=\"listingForm[attributes][vehicle][seller_type]\" value=\"Dealer\" \/><\/span><span class=\"target-select radio shadow-element\"><label><span class=\"widget\"><\/span>\n\t\t\tPrivate Party\n\t\t<\/label><input type=\"radio\" id=\"listingForm_attributes_vehicle_seller_type_Private Party\" name=\"listingForm[attributes][vehicle][seller_type]\" value=\"Private Party\" \/><\/span><\/div><\/div><\/div><div id=\"attributes-1038\" class=\"attributes attributes_community\" style=\"display:block\"><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_community_price\" name=\"listingForm[attributes][community][price]\"    disabled=\"disabled\" value=\"\" \/><\/div><div class=\"clearfix\"><input type=\"hidden\" id=\"listingForm_attributes_community_free\" name=\"listingForm[attributes][community][free]\"    disabled=\"disabled\" value=\"\" \/><\/div><\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\n\t\t\t<div class=\"location-widget\">\n<div class=\"location-bar\">\n\t<span class=\"ar down\"><\/span>\n\tIn:\n\t<span class=\"neighborhood-label\"><\/span>\n\t<span class=\"city-label\"><\/span>\n<\/div>\n\n<div class=\"location-panel clearfix\">\n<div id=\"listingForm_locationForm\" class=\"loc-leftdiv\"><div><select class=\"loc-countryselect\" id=\"listingForm_locationForm_countryCode\" name=\"listingForm[locationForm][countryCode]\"><option value=\"AUS\"> Australia <\/option><option value=\"CAN\"> Canada <\/option><option value=\"IND\"> India <\/option><option value=\"IRL\"> Ireland <\/option><option value=\"NZL\"> New Zealand <\/option><option value=\"GBR\"> United Kingdom <\/option><option value=\"USA\" selected=\"selected\"> United States <\/option><\/select><\/div><div class=\"loc-locationblock\"><input type=\"text\" id=\"listingForm_locationForm_location\" name=\"listingForm[locationForm][location]\" class=\"loc-location\" value=\"\" placeholder=\"city &amp; state or zip\" \/><\/div><div class=\"location-suggestions\"><div class=\"loc-suggest-container scrollbar-container suggest-container\"><div class=\"loc-suggest\"><\/div><\/div><\/div><\/div><div class=\"loc-rightdiv\"><div class=\"neighborhood-suggestions\"><span class=\"pltext\">Neighborhood<\/span><div class=\"neighborhood-suggest-container scrollbar-container suggest-container\"><\/div><\/div><div class=\"neighborhoodError\"><\/div><\/div><input type=\"hidden\" disabled=\"disabled\" class=\"loc-payload\" value=\"{&quot;hint&quot;:{&quot;CAN&quot;:&quot;city or postal code&quot;,&quot;GBR&quot;:&quot;city or post code&quot;,&quot;IND&quot;:&quot;city&quot;,&quot;IRL&quot;:&quot;city&quot;,&quot;USA&quot;:&quot;city &amp; state or zip&quot;,&quot;AUS&quot;:&quot;city or postcode&quot;,&quot;NZL&quot;:&quot;city or postcode&quot;},&quot;selected_neighborhood&quot;:null}\" \/><input type=\"hidden\" id=\"listingForm_locationForm_locationCity\" name=\"listingForm[locationForm][locationCity]\" class=\"loc-location_city\" value=\"\"\/><\/div>\n<\/div>\n\n\t\t<\/div>\n\t<\/div>\n\n\t<div class=\"ftr\">\n\t\t\t\t\t<p class=\"dog-category-warning\">\n\t\t\t\tNote: In order to post Dogs, you must be <span class=\"link\" onclick=\"odl.post2.fbconnect()\">connected with Facebook<\/span>.\n\t\t\t\t<br \/>Only free Dogs ads will appear on Oodle Marketplace on Facebook.\n\t\t\t<\/p>\n\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"target-select check-box-2 shadow-element facebook-select clearfix\">\n\t\t<label class=\"selected \">\n\t\t\t<span class=\"widget\"><\/span>\n\t\t\tAlso post to my Facebook Timeline\n\t\t<\/label>\n\t\t<input type=\"checkbox\" id=\"listingForm_postTarget_facebook\" name=\"listingForm[postTarget][facebook]\"    class=\"share-fb\" value=\"1\" checked=\"checked\" \/>\n\t\t<div class=\"fbd\"><span class=\"link\" onclick=\"odl.post2.fbconnect()\">Connect with Facebook<\/span> to use this feature<\/div>\t<\/span>\n\n\t\t<input type=\"submit\" value=\"Post\"\/>\n\t<\/div>\n\n\t<input type=\"hidden\" id=\"listingForm_listingId\" name=\"listingForm[listingId]\" value=\"\" \/><input type=\"hidden\" id=\"listingForm_adType\" name=\"listingForm[adType]\" value=\"post\" \/><input type=\"hidden\" id=\"listingForm_tmsid\" name=\"listingForm[tmsid]\" value=\"\" \/>\n\t<div id=\"listingForm-container\" class=\"no-adjustments\">\n\t<\/div>\n\n\t\t<input type=\"hidden\" name=\"iefixenc\" type=\"hidden\" value=\"&#9760;\" \/>\n<\/form>\n\n\t<div class=\"disabled\">\n\t\t<form class=\"image-upload-form\" target=\"iframe_upload_gallery_form\" enctype=\"multipart\/form-data\" method=\"POST\">\n\t\t\t<input type=\"file\" name=\"temp_image\" class=\"file\" size=\"1\" tabindex=\"-1\" \/>\n\t\t\t<span class=\"add-media-link\"><span class=\"icon\"><\/span><span>Add Photo<\/span><\/span>\n\t\t<\/form>\n\n\t\t<form class=\"video-upload-form\" target=\"iframe_upload_gallery_form\" enctype=\"multipart\/form-data\" method=\"POST\">\n\t\t<span class=\"add-media-link\"><span class=\"icon\"><\/span><span>Add Video<\/span><\/span>\n\t\t<div class=\"add-video-input-o\">\n\t\t\t<input type=\"text\" name=\"video_url\" class=\"add-video-input\" placeholder=\"Insert YouTube URL here\" \/><span class=\"video-add-submit\">OK<\/span>\n\t\t<\/div>\n\t\t<\/form>\n\t<\/div>\n","ask_html":"\n\n \n\n\n<form class=\"post-form\" action=\"\/post2\/\" method=\"post\"  accept-charset=\"utf-8\">\n\t\n\n\t<div class=\"speech-bubble\">\n\t\t<div class=\"speech-bubble-main\">\n\t\t\t<div><input type=\"text\" id=\"listingForm_title\" name=\"listingForm[title]\"    placeholder=\"What are you looking for?\" value=\"\" \/><\/div>\n\t\t\t<div><input type=\"text\" id=\"listingForm_why\" name=\"listingForm[why]\"    maxlength=\"128\" placeholder=\"Why are you looking for it?\" value=\"\" \/><\/div>\n\t\t\t<div class=\"post-body\"><textarea id=\"listingForm_body\" name=\"listingForm[body]\"    class=\"custom-scroll\" placeholder=\"Describe it ...\" resize=\"off\"><\/textarea><\/div>\n\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<div class=\"location-widget\">\n<div class=\"location-bar\">\n\t<span class=\"ar down\"><\/span>\n\tIn:\n\t<span class=\"neighborhood-label\"><\/span>\n\t<span class=\"city-label\"><\/span>\n<\/div>\n\n<div class=\"location-panel clearfix\">\n<div id=\"listingForm_locationForm\" class=\"loc-leftdiv\"><div><select class=\"loc-countryselect\" id=\"listingForm_locationForm_countryCode\" name=\"listingForm[locationForm][countryCode]\"><option value=\"AUS\"> Australia <\/option><option value=\"CAN\"> Canada <\/option><option value=\"IND\"> India <\/option><option value=\"IRL\"> Ireland <\/option><option value=\"NZL\"> New Zealand <\/option><option value=\"GBR\"> United Kingdom <\/option><option value=\"USA\" selected=\"selected\"> United States <\/option><\/select><\/div><div class=\"loc-locationblock\"><input type=\"text\" id=\"listingForm_locationForm_location\" name=\"listingForm[locationForm][location]\" class=\"loc-location\" value=\"\" placeholder=\"city &amp; state or zip\" \/><\/div><div class=\"location-suggestions\"><div class=\"loc-suggest-container scrollbar-container suggest-container\"><div class=\"loc-suggest\"><\/div><\/div><\/div><\/div><div class=\"loc-rightdiv\"><div class=\"neighborhood-suggestions\"><span class=\"pltext\">Neighborhood<\/span><div class=\"neighborhood-suggest-container scrollbar-container suggest-container\"><\/div><\/div><div class=\"neighborhoodError\"><\/div><\/div><input type=\"hidden\" disabled=\"disabled\" class=\"loc-payload\" value=\"{&quot;hint&quot;:{&quot;CAN&quot;:&quot;city or postal code&quot;,&quot;GBR&quot;:&quot;city or post code&quot;,&quot;IND&quot;:&quot;city&quot;,&quot;IRL&quot;:&quot;city&quot;,&quot;USA&quot;:&quot;city &amp; state or zip&quot;,&quot;AUS&quot;:&quot;city or postcode&quot;,&quot;NZL&quot;:&quot;city or postcode&quot;},&quot;selected_neighborhood&quot;:null}\" \/><input type=\"hidden\" id=\"listingForm_locationForm_locationCity\" name=\"listingForm[locationForm][locationCity]\" class=\"loc-location_city\" value=\"\"\/><\/div>\n<\/div>\n\n\t\t<\/div>\n\t<\/div>\n\n\t<div class=\"ftr\">\n\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"target-select check-box-2 shadow-element facebook-select clearfix\">\n\t\t<label class=\"selected \">\n\t\t\t<span class=\"widget\"><\/span>\n\t\t\tAlso post to my Facebook Timeline\n\t\t<\/label>\n\t\t<input type=\"checkbox\" id=\"listingForm_postTarget_facebook\" name=\"listingForm[postTarget][facebook]\"    class=\"share-fb\" value=\"1\" checked=\"checked\" \/>\n\t\t<div class=\"fbd\"><span class=\"link\" onclick=\"odl.post2.fbconnect()\">Connect with Facebook<\/span> to use this feature<\/div>\t<\/span>\n\n\t\t<input type=\"submit\" value=\"Ask\"\/>\n\t<\/div>\n\n\t<input type=\"hidden\" id=\"listingForm_listingId\" name=\"listingForm[listingId]\" value=\"\" \/><input type=\"hidden\" id=\"listingForm_adType\" name=\"listingForm[adType]\" value=\"ask\" \/><input type=\"hidden\" id=\"listingForm_tmsid\" name=\"listingForm[tmsid]\" value=\"\" \/>\n\t<div id=\"listingForm-container\" class=\"no-adjustments\">\n\t<\/div>\n\n\t\t<input type=\"hidden\" name=\"iefixenc\" type=\"hidden\" value=\"&#9760;\" \/>\n<\/form>\n\n","composer_html":"<div id=\"nf_composer\" class=\"ui-composer clearfix\">\n\t<div id=\"profile-polaroid-wrapper\" class=\"profile-polaroid\">\n\t\t<div style=\"float: left\">\n\t\t\t<div class=\"profile-polaroid-pic\">\n\t\t\t\t<img \/>\n\t\t\t<\/div>\n\n\t\t\t<div class=\"profile-polaroid-action-fb login\">\n\t\t\t\t<a href=\"javascript:void(0)\">Login<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\n\t<div class=\"composer clearfix\">\n\t\t<div class=\"composer-options\">\n\t\t\t\t\t\t\t<span class=\"ask selected link\"><span class=\"icon\"><\/span>Ask<\/span>\n\t\t\t\t<span class=\"search link\"><span class=\"icon\"><\/span>Search<\/span>\n\t\t\t\t\t\t<span class=\"post link\"><span class=\"icon\"><\/span>Post<\/span>\n\t\t<\/div>\n\n\t\t<div id=\"composer-fields\">\n\t\t\t<div id=\"container_search\">\n\t\t\t\t<div id=\"composer-input-wrapper\" class=\"composer-input\">\n\t\t\t\t\t<form id=\"composer-form\" onsubmit=\"return false;\">\n\t\t\t\t\t\t<input type=\"text\" name=\"title\" value=\"\" \/>\n\t\t\t\t\t\t<span id=\"submit-orange-button\" class=\"composer-button\">\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\n\t\t\t<div id=\"container_ask\"><\/div>\n\t\t\t<div id=\"container_post\"><\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<script>\n\tjQ('#nf_composer').nfComposer();\n\todl.post2.init();\n<\/script>\n"};