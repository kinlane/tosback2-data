//var foreseeSampling = 6
//var foreseeLoyalty = 2

// Initialize with options
var $$FSR = {
    'timestamp': 'February 17, 2012 @ 11:08 AM',
    'version': '11.3.0',
    'enabled': true,
    'sessionreplay': true,
    'auto': true,
    'encode': false,
    'files': '/us/foresee/',
    'id': 'tgAMRkpFp0cVAsY9kAwBcQ==',
    'definition': 'foresee-surveydef.js',
    'embedded': false,
    'replay_id': 'site.com',
    'renderer': 'W3C', // or "ASRECORDED"
    'layout': 'CENTERFIXED', // or "LEFTFIXED" or "LEFTSTRETCH" or "CENTERSTRETCH"
    'sites': [{
        name: 'reebok.com',
        path: 'reebok.com',
        domain: 'reebok.com'
    }, {
        name: 'shopadidas.com',
        path: 'shopadidas.com',
        domain: 'shopadidas.com'
    }, {
        name: 'adidas.com',
        path: 'adidas.com',
        files: '/us/foresee/',
        domain: 'adidas.com'
    }, {
        name: 'adidas.de',
        path: 'adidas.de',
        domain: 'adidas.de'
    }, {
        name: 'adidas.co.uk',
        path: 'adidas.co.uk',
        domain: 'adidas.co.uk'
    }, {
        name: 'adidas.nl',
        path: 'adidas.nl',
        domain: 'adidas.nl'
    }, {
        name: 'adidas.fr',
        path: 'adidas.fr',
        domain: 'adidas.fr'
    }],
    storageOption: 'cookie'
};
// -------------------------------- DO NOT MODIFY ANYTHING BELOW THIS LINE ---------------------------------------------
(function(a,g,d){for(var b=a.sites,c=0,h=b.length;c<h;c++){var e;"[object Array]"!==Object.prototype.toString.call(b[c].path)&&(b[c].path=[b[c].path]);for(var f=0,i=b[c].path.length;f<i;f++)if(e=d.location.href.match(b[c].path[f])){a.siteid=c;a.site=a.sites[c];a.site.domain?"default"==a.site.domain&&(a.site.domain=null):a.site.domain=e[0];a.site.secure||(a.site.secure=null);a.site.name||(a.site.name=e[0]);break}if(e)break}b={b:function(b){var j;j=(b=d.cookie.match("(?:^|;)\\s*"+b.replace(/([-.*+?^${}()|[\]\/\\])/g,
"\\$1")+"=([^;]*)"))?b[1]:null,b=j;a.encode&&(b=b?decodeURIComponent(b):null);return b},a:function(){d.cookie="fsr.a"+(a.site.cookie?"."+a.site.cookie:"")+"="+(new Date).getTime()+";path=/"+(a.site.domain?";domain="+a.site.domain+";":";")+(a.site.secure?"secure":"")}};if(!b.b("fsr.a"+(a.site.cookie?"."+a.site.cookie:"")))b.a(),g.fsr$timer=setInterval(b.a,1E3),d.cookie="fsr.paused=1;path=/"+(a.site.domain?";domain="+a.site.domain+";":";")+(a.site.secure?"secure":"")})($$FSR,window,window.document);// JavaScript Document
/**
* hoverIntent r5 // 2007.03.27 // jQuery 1.1.2+
* <http://cherne.net/brian/resources/jquery.hoverIntent.html>
* 
* @param  f  onMouseOver function || An object with configuration options
* @param  g  onMouseOut function  || Nothing (use configuration options object)
* @author    Brian Cherne <brian@cherne.net>
*/
(function($){$.fn.hoverIntent=function(f,g){var cfg={sensitivity:7,interval:100,timeout:0};cfg=$.extend(cfg,g?{over:f,out:g}:f);var cX,cY,pX,pY;var track=function(ev){cX=ev.pageX;cY=ev.pageY;};var compare=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);if((Math.abs(pX-cX)+Math.abs(pY-cY))<cfg.sensitivity){$(ob).unbind("mousemove",track);ob.hoverIntent_s=1;return cfg.over.apply(ob,[ev]);}else{pX=cX;pY=cY;ob.hoverIntent_t=setTimeout(function(){compare(ev,ob);},cfg.interval);}};var delay=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);ob.hoverIntent_s=0;return cfg.out.apply(ob,[ev]);};var handleHover=function(e){var p=(e.type=="mouseover"?e.fromElement:e.toElement)||e.relatedTarget;while(p&&p!=this){try{p=p.parentNode;}catch(e){p=this;}}if(p==this){return false;}var ev=jQuery.extend({},e);var ob=this;if(ob.hoverIntent_t){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);}if(e.type=="mouseover"){pX=ev.pageX;pY=ev.pageY;$(ob).bind("mousemove",track);if(ob.hoverIntent_s!=1){ob.hoverIntent_t=setTimeout(function(){compare(ev,ob);},cfg.interval);}}else{$(ob).unbind("mousemove",track);if(ob.hoverIntent_s==1){ob.hoverIntent_t=setTimeout(function(){delay(ev,ob);},cfg.timeout);}}};return this.mouseover(handleHover).mouseout(handleHover);};})(jQuery);
/*End*/

adus = {};
adus.productGallaryViewer = function(){
	
	var currentSize;
	
	//Hiding all product thumnails group
	$("#productPreviewWrapper .moreViewList").hide();
	
	//Showing first product thumnails group
	//$("#productPreviewWrapper .moreViewList:first").show();
	
	//Hiding all product Size and quanitiy dropdowns
	$(".prodConfigurationForm li ul.sizeQuanitity").hide();
	
	//Showing first product Size and quanitiy dropdowns
	//$(".prodConfigurationForm li ul.sizeQuanitity:first").show();
	 
	//Setting Price Container value 
	//priceCont = $("#selectColor option:first").attr("price");
	//$("#productDetailWrapper ul.pricingOptions li.price").text(priceCont);

	//Adding small thumbnail in color option
	$("#productPreviewWrapper .moreViewList").each(function(i){
		//AUSO-1083 : if flash is not enabled, we remove the swf references
		if (!isFlashEnabled()){
			$(this).children("li").find("a").attr("href", "#productPreviewWrapper");
		}
		var firstProduct = $(this).children("li:first").html();
		var sThumbSrc = $(firstProduct).find("img").attr("src");
		var subThumbSrc = sThumbSrc.split('?');
		// UER-3973
		$(firstProduct).find("img").attr("src",subThumbSrc[0]+'?wid=35&hei=35&fmt=jpeg&qlt=92,0&resMode=sharp2&op_usm=1.1,0.5,1,0');
		$("ul#colorOptions").append("<li>"+firstProduct+"</li>");
		
		$("ul#colorOptions li a").eq(i).each(function(){			
			currentIndexTitle = $("#selectColor option").eq(i).attr("title");
			$(this).children("img").attr('alt',currentIndexTitle);
		});
		
		
	});
	
	var currentIndex = $("#selectColor").attr("selectedIndex");
	var currentImgSrc = $("#colorOptions li img").eq(currentIndex).attr("src");
	var currentImgOverlay = $("#colorOptions li img").eq(currentIndex).attr("overlay");
	var currentImgSrcWithOverlay = (currentImgSrc+currentImgOverlay);
	var updatedImgSrc = changeImageDimensions(currentImgSrcWithOverlay,500,500);
	$("ul#colorOptions li a").removeClass("selectedProduct");
	$("ul#colorOptions li a").eq(currentIndex).addClass("selectedProduct");
	//Assigning first image for preview from color change option
	$(".previewImage img").attr("src",updatedImgSrc);
	//$(".previewImage img").attr("src", currentImgSrc);
	/*Set Flash Src*/
	$("#productFlash").flash(
		{
			swf: $("#productPreviewWrapper .moreViewList").eq(currentIndex).find('li a:first').attr('href'), 
			menu: false
		}
	);

	$("#productPreviewWrapper .moreViewList").hide();
	$("#productPreviewWrapper .moreViewList").eq(currentIndex).show();
		
	//Show hide product decription and details
	$("div.productText").hide();
	$("div.productText").eq(currentIndex).show();
				
	//Show hide product bookmarks
	$("div.bookmarks").hide();
	$("div.bookmarks").eq(currentIndex).show();
		
	//hide scene7 flash
	$("#productFlash").hide();
	$("#productImage").show();
		
	$(".prodConfigurationForm li ul.sizeQuanitity").hide();
	$("#selectColor").parents("li").next("li").children("ul.sizeQuanitity").eq(currentIndex).show();	
		
	//Setting first view item with pointed arrow for first record
	$("ul.moreViewList:visible li a:first").addClass("selectedProduct");		
	
	//Setting price on color selection
	//priceCont = $("#selectColor option:selected").attr("price");
	//$("#productDetailWrapper ul.pricingOptions li.price").text(priceCont);
	$(".pricingOptions .price ul li").hide();
	$(".pricingOptions .price ul li").eq(currentIndex).show();	

	//AUSO-1083 : we enable the flash zoom thing only if flash is enabled on the user browser
	if (isFlashEnabled()){
		// Zoom click event
		$('#zoomButton').click(function() {
			// show scene7 flash
			$("#productFlash").show();
			$("#productImage").hide();
			$("#zoomHelp").show();
		});	
	}


	//Zoom Tool Tip
	$("#zoomHelp a").hover(
		function(){
		$(this).next().show();
		},
		function(){
		$(this).next().hide();
		}		
	)
	//Mouseover function for thumbnail to show large image
	$(".moreViewList li a").mouseover(function(){											   
		//Setting flash data 
		currentFlashSrc = $(this).attr("href");
		$("#productFlash").flash(currentFlashSrc);
		$("#productFlash").flash(
			{
				swf: currentFlashSrc, 
				menu: false
			}
		);

		currentProductSrc = $(this).children("img").attr("src");
		currentProductOverlay = $(this).children("img").attr("overlay");
		currentProductSrc = (currentProductSrc+currentProductOverlay);
		var updatedImgSrc = changeImageDimensions(currentProductSrc,500,500);
		$(".previewImage img").attr("src",updatedImgSrc);
		//$(".previewImage img").attr("src", currentProductSrc);
		
		//Main image Src setting
		//currentProductTitle = $(this).children("img").attr("title");
		currentProductId = $(this).children("img").attr("prodId");
		currentProductPosition = $(this).children("img").attr("id");
		//$(".previewImage img").attr("title", currentProductTitle);
		
		//Main image tooltip setting
		$("ul.moreViewList li a").removeClass("selectedProduct");
		$(this).addClass("selectedProduct");
		
		//hide scene7 flash
		$("#productFlash").hide();
		$("#productImage").show();
		
		$("#zoomHelp").hide();
		//coremetrics tagging
		tagElementAltImage(currentProductId,currentProductPosition);
		
	});
	// Looping available color option for miscellaneous things
	$("ul#colorOptions li").each(function(i){
		// Mouseover function for creating event on small thumbnail of color option
		$("ul#colorOptions li a").eq(i).click(function(){
			$("ul#colorOptions li a").removeClass("selectedProduct");
			$(this).addClass("selectedProduct");
			//Assigning first image for preview from color change option
			var currentImgSrc = $(this).children("img").attr("src");
			var currentImgOverlay = $(this).children("img").attr("overlay");
			var currentImgSrcWithOverlay = (currentImgSrc+currentImgOverlay);
			document.getElementsByName("facebook_image").content = currentImgSrcWithOverlay;
			var updatedImgSrc = changeImageDimensions(currentImgSrcWithOverlay,500,500);
			$(".previewImage img").attr("src",updatedImgSrc);
			//$(".previewImage img").attr("src", currentImgSrc);
				
			$("#productPreviewWrapper .moreViewList").hide();
			$("#productPreviewWrapper .moreViewList").eq(i).show();
			/*Set Flash Src*/
			$("#productFlash").flash(
				{
					swf: $("#productPreviewWrapper .moreViewList").eq(i).find('li a:first').attr('href'), 
					menu: false
				}
			);
				
			//$("#selectColor").val($("#selectColor option").eq(i).text());
			//Select the same index of color
			$("#selectColor option").eq(i).attr('selected', true);
				
			//Show hide product decription and details
			$("div.productText").hide();
			$("div.productText").eq(i).show();
							
			//Show hide product bookmarks
			$("div.bookmarks").hide();
			$("div.bookmarks").eq(i).show();
				
			$(".prodConfigurationForm li ul.sizeQuanitity").hide();
			$(this).parents("li").next("li").children("ul.sizeQuanitity").eq(i).show();
		
			//Size drop down replaced with lable only
		if($(".sizeQuanitity:visible #selectsize option").length == 2 )
				{	
				var v = $('.sizeQuanitity:visible #selectsize option').eq(1).val();
				var x = $('.sizeQuanitity:visible #selectsize option').eq(1).text();
				
				/*Quantity set for single size*/
				var len = $('.sizeQuanitity:visible #selectsize option').eq(1).attr("qty");
				if(len!='default')
				{
					$('.sizeQuanitity:visible #selectQuantity option').remove();
					for(var qty=0; qty<len; qty++){
					$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value='+(qty+1)+'>'+(qty+1)+'</option>');					
					}
				}
				else
				{
					$('.sizeQuanitity:visible #selectQuantity option').remove();
					$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value="Select Quantity">Select Quantity</option>');
				}
				/**/
				
				$('.sizeQuanitity:visible #selectsize option').parent().replaceWith("<span style='color:#000;width:100px;display:inline-block;padding-bottom:4px;padding-left:5px'>"+ x +"</span><input type='hidden' id='selectsize' value='"+v+"' />");
			}
				
			//AUSO-911 : start, get the necessary informations to trigger coremetrics JS
			//Setting tooltip for color value
			currentIndexTitle = $("#selectColor option").eq(i).attr("title");
			currentIndexProductName = $("#selectColor option").eq(i).attr("productname");
			currentIndexProductColor = $("#selectColor option").eq(i).attr("productcolor");
			currentIndexTitle = $("#selectColor option").eq(i).attr("title");	currentIndexProductAllSizes = $("#selectColor option").eq(i).attr("cmproductsizes");
			currentIndexProductAllSizes = currentIndexProductAllSizes.replace(/\$/g,',');	
			currentIndexProductTmbCount = $("#selectColor option").eq(i).attr("cmthumbnailcount");		
			currentIndexProductRating = $("#selectColor option").eq(i).attr("cmrating");
			currentIndexBrand = $("#selectColor option").eq(i).attr("cmbrand");
			currentIndexGender = $("#selectColor option").eq(i).attr("cmgender");
			currentIndexProduct = $("#selectColor option").eq(i).attr("cmproduct");
			currentIndexSportProp = $("#selectColor option").eq(i).attr("cmsportprop");
			currentIndexCollection = $("#selectColor option").eq(i).attr("cmcollection");
			currentIndexAllColors = $("#selectColor option").eq(i).attr("cmallcolors");
			//AUSO-911 : end
			$(this).children("img").attr('title',currentIndexTitle);
		
			//Setting first view item with pointed arrow for first record
			$("ul.moreViewList:visible li a:first").addClass("selectedProduct");
				
			//Setting price on color selection
			//priceCont = $("#selectColor option:selected").attr("price");
			//$("#productDetailWrapper ul.pricingOptions li.price").text(priceCont);
			$(".pricingOptions .price ul li").hide();
			$(".pricingOptions .price ul li").eq(i).show();
				
			//hide scene7 flash
			$("#productFlash").hide();
			$("#productImage").show();		
			
			$("#zoomHelp").hide();
			
			$(".sizeQuanitity:visible #selectsize option:first").attr('selected', true);	/*Setting size by default to first*/		
			$(".sizeQuanitity:visible #selectsize option").each(function(i){				/*Setting size on the basis of match from global variable*/
				if(this.value == currentSize){
					$(this).attr('selected', true);
				}
			});
			
			/*If Select Size is set to default Quantity should also set to default*/
			var sizelen = $(".sizeQuanitity:visible #selectsize option:selected").attr("qty");
			if(sizelen=='default'){				 
				$('.sizeQuanitity:visible #selectQuantity option').remove();
				$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value=default>Select Quantity</option>');
}
			//To change product review color specific
			bvReloadRR(currentIndexTitle);
			//AUSO-911 : start
			//coremetrics tagging on color change
			tagElementAltColor(currentIndexTitle,currentIndexProductName,currentIndexProductColor,currentIndexProductAllSizes,currentIndexProductTmbCount,currentIndexProductRating,currentIndexBrand, currentIndexGender, currentIndexProduct, 
					currentIndexSportProp, currentIndexCollection, currentIndexAllColors);
			//AUSO-911 : end
			/*Function to set Position for product action links on basis of validation message exist or not, for size dropdown*/
			if($('.LV_validation_message').length > 0){
				$('.LV_validation_message').remove();
				if($.browser.version == '7.0'){ //check for ie7.0
					$('#productActions').css('top','-97px');
				}
				else{
					$('#productActions').css('top','-98px');
				}
			}
			/**/			
			return false;
		});
		$("ul#colorOptions li a").eq(i).mouseover(function(){
			//Setting tooltip for color value
			currentIndexTitle = $("#selectColor option").eq(i).attr("title");
			$(this).children("img").attr('title',currentIndexTitle);
		});
		
		/*If Select Size is set to default Quantity should also set to default*/
			var sizelen = $(".sizeQuanitity:visible #selectsize option:selected").attr("qty");
			if(sizelen=='default'){				 
				$('.sizeQuanitity:visible #selectQuantity option').remove();
				$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value=default>Select Quantity</option>');
}
		
	});
	$("#selectColor").change(function(){
		var currentIndex = $(this).attr("selectedIndex");
		var currentImgSrc = $("#colorOptions li img").eq(currentIndex).attr("src");
		var currentImgOverlay = $("#colorOptions li img").eq(currentIndex).attr("overlay");
		var currentImgSrcWithOverlay = (currentImgSrc+currentImgOverlay);
		document.getElementsByName("facebook_image").content = currentImgSrcWithOverlay;
		var updatedImgSrc = changeImageDimensions(currentImgSrcWithOverlay,500,500);
		//var currentFlashSrc = $("#colorOptions li a").eq(currentIndex).attr("href");
		$("ul#colorOptions li a").removeClass("selectedProduct");
		$("ul#colorOptions li a").eq(currentIndex).addClass("selectedProduct");
		
		//Assigning first image for preview from color change option
		$(".previewImage img").attr("src",updatedImgSrc);
		
		//$(".previewImage img").attr("src", currentImgSrc);		
		//$("#productFlash embed").attr("src", currentFlashSrc);
		
		$("#productPreviewWrapper .moreViewList").hide();
		$("#productPreviewWrapper .moreViewList").eq(currentIndex).show();
		$("#productFlash").flash(
			{
				swf: $("#productPreviewWrapper .moreViewList").eq(currentIndex).find('li a:first').attr('href'), 
				menu: false
			}
		);
		$(".prodConfigurationForm li ul.sizeQuanitity").hide();
		$(this).parents("li").next("li").children("ul.sizeQuanitity").eq(currentIndex).show();
		
		
		//Size drop down replaced with lable only
		if($(".sizeQuanitity:visible #selectsize option").length == 2 )
				{	
				var v = $('.sizeQuanitity:visible #selectsize option').eq(1).val();
				var x = $('.sizeQuanitity:visible #selectsize option').eq(1).text();
				
				/*Quantity set for single size*/
				var len = $('.sizeQuanitity:visible #selectsize option').eq(1).attr("qty");
				if(len!='default')
				{
					$('.sizeQuanitity:visible #selectQuantity option').remove();
					for(var qty=0; qty<len; qty++){
					$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value='+(qty+1)+'>'+(qty+1)+'</option>');					
					}
				}
				else
				{
					$('.sizeQuanitity:visible #selectQuantity option').remove();
					$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value="Select Quantity">Select Quantity</option>');
				}
				/**/
				
				$('.sizeQuanitity:visible #selectsize option').parent().replaceWith("<span style='color:#000;width:100px;display:inline-block;padding-bottom:4px;padding-left:5px'>"+ x +"</span><input type='hidden' id='selectsize' value='"+v+"' />");
			}


		//Show hide product decription and details
		$("div.productText").hide();
		$("div.productText").eq(currentIndex).show();
			
		//Show hide product bookmarks
		$("div.bookmarks").hide();
		$("div.bookmarks").eq(currentIndex).show();
		
		//Setting first view item with pointed arrow for first record
		$("ul.moreViewList:visible li a:first").addClass("selectedProduct");
		
		//Setting price on color selection
		//priceCont = $("#selectColor option:selected").attr("price");
		//$("#productDetailWrapper ul.pricingOptions li.price").text(priceCont);
		$(".pricingOptions .price ul li").hide();
		$(".pricingOptions .price ul li").eq(currentIndex).show();
		
		//To change product review color specific			
		//AUSO-911 : start, get the needed informations to trigger coremetrics JS
		selectedOptionTitle = $("#selectColor option:selected").attr("title");
		currentIndexProductName = $("#selectColor option:selected").attr("productname");
		currentIndexProductColor = $("#selectColor option:selected").attr("productcolor");
		currentIndexProductAllSizes = $("#selectColor option:selected").attr("cmproductsizes");
		currentIndexProductAllSizes = currentIndexProductAllSizes.replace(/\$/g,',');	
		currentIndexProductTmbCount = $("#selectColor option:selected").attr("cmthumbnailcount");		
		currentIndexProductRating = $("#selectColor option:selected").attr("cmrating");
		currentIndexBrand = $("#selectColor option:selected").attr("cmbrand");
		currentIndexGender = $("#selectColor option:selected").attr("cmgender");
		currentIndexProduct = $("#selectColor option:selected").attr("cmproduct");
		currentIndexSportProp = $("#selectColor option:selected").attr("cmsportprop");
		currentIndexCollection = $("#selectColor option:selected").attr("cmcollection");
		currentIndexAllColors = $("#selectColor option:selected").attr("cmallcolors");
		//To change product review color specific
		bvReloadRR(selectedOptionTitle);
		//coremetrics tagging on color change
		tagElementAltColor(currentIndexTitle,currentIndexProductName,currentIndexProductColor,currentIndexProductAllSizes,currentIndexProductTmbCount,currentIndexProductRating,currentIndexBrand, currentIndexGender, currentIndexProduct, 
				currentIndexSportProp, currentIndexCollection, currentIndexAllColors);
		//AUSO-911 : end
		//hide scene7 flash
		$("#productFlash").hide();
		$("#productImage").show();
		
		$("#zoomHelp").hide();
		
		$(".sizeQuanitity:visible #selectsize option:first").attr('selected', true);	/*Setting size by default to first*/		
		$(".sizeQuanitity:visible #selectsize option").each(function(i){				/*Setting size on the basis of match from global variable*/
			if(this.value == currentSize){
				$(this).attr('selected', true);
			}
		});	

		/*If Select Size is set to default Quantity should also set to default*/
			var sizelen = $(".sizeQuanitity:visible #selectsize option:selected").attr("qty");
			if(sizelen=='default'){				 
				$('.sizeQuanitity:visible #selectQuantity option').remove();
				$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value=default>Select Quantity</option>');

}				
		/*Function to set Position for product action links on basis of validation message exist or not, for size dropdown*/
		if($('.LV_validation_message').length > 0){
			$('.LV_validation_message').remove();
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-97px');
			}
			else{
				$('#productActions').css('top','-98px');
			}
		}
		/**/
	});	
		
	//Adding class to show pointed arrow for first record
	//$("ul#colorOptions li a:first").addClass("selectedProduct");
	//$("ul.moreViewList li a:first").addClass("selectedProduct");
	
	//Color drop down replaced with lable only
	if($("#selectColor option").length <= 1 )
	{
		$("#selectColor").hide();
		$("#colorOptions").replaceWith("<span style='color:#000;position:relative;top:0'>"+ $("#selectColor").text() +"</span>");
		$("#lbColor").css('padding-top','0px');
		$(".prodConfigurationForm li:first").css('width','100%');
	}
	
	//View List hidden when only one item is there
	/*if($("ul.moreViewList:visible li").length <= 1 )
	{
		$('ul.moreViewList:visible').hide();
	}*/
}

/*AUSO-997 : code removed*/

/*My Account Pages top navigation rollover fix*/
$(function(){
	if ($('div').hasClass('myAccountProfile')) {
    	$('.mainNavigation ul.category li a#categoryMan').mouseover(function(){
			$(this).css('background-position','0px 0px');
		});
		$('.mainNavigation ul.category li a#categoryWomen').mouseover(function(){
			$(this).css('background-position','-48px 0px');
		});
		$('.mainNavigation ul.category li a#categoryKids').mouseover(function(){
			$(this).css('background-position','-115px 0px');
		});
		$('.mainNavigation ul.brandMenu li a#brandSports').mouseover(function(){
			$(this).css('background-position','-190px 0px');
		});
		$('.mainNavigation ul.brandMenu li a#brandOriginals').mouseover(function(){
			$(this).css('background-position','-245px 0px');
		});
	}
});
/*PDP - Select Size On Change function*/
function selectSize(elem){
	var currentQty = $(elem).find("option:selected").attr("qty");	
	currentSize = $(elem).find("option:selected").attr("value"); /*Setting value for current size global variable*/
		//Condition to check size field is selected.
		if (currentSize == 'default'){
			$('.LV_validation_message').remove();
		}
		else{
			$('.LV_validation_message').remove();
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-97px');
			}
			else{
				$('#productActions').css('top','-98px');
			}
		}
		
		//Condition to put quantity in the next drop down.
	if(currentQty!='default'){
		$(elem).parent('li').next('li').find('#selectQuantity option').remove();
		for(var i=0; i<currentQty;i++)
		{
			$(elem).parent('li').next('li').find('#selectQuantity').append('<option value='+(i+1)+'>'+(i+1)+'</option>');	
		}
	}
	else{
		$(elem).parent('li').next('li').find('#selectQuantity option').remove();
		$(elem).parent('li').next('li').find('#selectQuantity').append('<option value="Select Quantity">Select Quantity</option>');
	}
}

/*Function to check size for outfitlanding page */
function removeErrorMsgForOutfitLanding(v_prodId,addToCart){
	
		var selectVal = document.getElementById(v_prodId + "_selectSize").value;
		
		if( selectVal != 'default'){
			 $('.LV_validation_message').remove();
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-97px');
			}
			else{
				$('#productActions').css('top','-98px');
			}
		}
}

/*Function to check size selected */
function checkSize(addToCart){
		var selectVal = $("ul.sizeQuanitity:visible" ).find("#selectsize").val();
		if( selectVal == 'default'){
			$('.LV_validation_message').remove();
			$("ul.sizeQuanitity:visible" ).find("#selectsize").after("<span class='LV_validation_message' style='position:relative; left:105px'>Please select size</span>");
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-124px');
			}
			else{
				$('#productActions').css('top','-122px');
			}
		}
		else{
			$('.LV_validation_message').remove();
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-97px');
			}
			else{
				$('#productActions').css('top','-98px');
			}
		}
}

/*Function to check size for outfitlanding page */
function checkSizeForOutfitLanding(v_prodId,addToCart,div_no){
	
		var selectVal = document.getElementById(v_prodId + "_selectSize").value;
		
		if( selectVal == 'default'){
			$('.LV_validation_message').remove();
			
			$("ul.sizeQuanitity:visible" ).find("#"+v_prodId+"_selectSize").after("<span class='LV_validation_message' style='position:relative; left:105px'>Please select size</span>");
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-124px');
			}
			else{
				$('#productActions').css('top','-122px');
			}
		}
		else{
			$('.LV_validation_message').remove();
			if($.browser.version == '7.0'){ //check for ie7.0
				$('#productActions').css('top','-97px');
			}
			else{
				$('#productActions').css('top','-98px');
			}
			verifySizeQuantity(v_prodId,div_no)
		}
}




$(document).ready(function(){
	// UER-3001
	$('form').submit(function() {
	    $('div.errorContainer').hide();
	});
	
	// For mainNav drop down menu script 	   
	$("ul.dropdownMenuWrapper").hide();

	// For mainNav drop down menu script 	   
	$("ul.category li, ul.brandMenu li").mouseenter(function(){ 
		/*$(this).addClass("hover");
		$($(this).next('ul'),this).css('display', 'block');
		*/
		$(this).addClass("show");
		$(this).children('a.tab').addClass("hover");
	});

	$("ul.category li, ul.brandMenu li").mouseleave(function(){ 
		/*$(this).removeClass("hover");
		$($(this).next('ul'),this).css('display', 'none');*/
		$(this).removeClass("show");
		$(this).children('a.tab').removeClass("hover");
	});	
	
});//document ready ends

/* ************************************ 
 * AUSO-7 Changes start 
 * ***************************** */

$(document).ready(function() {	
	
	var pageName = $('body').attr('id');
	
	if(pageName!='searchResultPage'){
	//Size drop down replaced with lable only
	if($(".sizeQuanitity:visible #selectsize option").length == 2 ) {	
		var v = $('.sizeQuanitity:visible #selectsize option').eq(1).val();
		var x = $('.sizeQuanitity:visible #selectsize option').eq(1).text();
		
		/*Quantity set for single size*/
		var len = $('.sizeQuanitity:visible #selectsize option').eq(1).attr("qty");
		if(len!='default')
		{
			$('.sizeQuanitity:visible #selectQuantity option').remove();
			for(var qty=0; qty<len; qty++){
			$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value='+(qty+1)+'>'+(qty+1)+'</option>');					
			}
		}
		else
		{
			$('.sizeQuanitity:visible #selectQuantity option').remove();
			$('.sizeQuanitity:visible').find('#selectQuantity').append('<option value="Select Quantity">Select Quantity</option>');
		}
		/**/
		
		$('.sizeQuanitity:visible #selectsize option').parent().replaceWith("<span style='color:#000;width:100px;display:inline-block;padding-bottom:4px;padding-left:5px'>"+ x +"</span><input type='hidden' id='selectsize' value='"+v+"' />");
	} else if ($(".sizeQuanitity:visible #selectsize option").length > 2) {
		var currentQty = $(".sizeQuanitity:visible #selectsize option:selected").attr("qty");	
		currentSize = $(".sizeQuanitity:visible #selectsize option:selected").attr("value"); 
		/*Setting value for current size global variable*/
		if(currentQty!='default') {
			$(".sizeQuanitity:visible #selectQuantity option").remove();
			for(var i=0; i<currentQty;i++) {
				$(".sizeQuanitity:visible").find("#selectQuantity").append('<option value='+(i+1)+'>'+(i+1)+'</option>');	
			}
		}
		else {
			$(".sizeQuanitity:visible #selectQuantity option").remove();
			$(".sizeQuanitity:visible").find("#selectQuantity").append('<option value="Select Quantity">Select Quantity</option>');
		}
	}
	
	//ACCORDION BUTTON ACTION (ON CLICK DO THE FOLLOWING)
	$('.accordionButton').click(function() {
		//REMOVE THE ON CLASS FROM ALL BUTTONS
		$('.accordionButton').removeClass('on');		  
		//NO MATTER WHAT WE CLOSE ALL OPEN SLIDES
	 	$('.accordionContent').slideUp('normal');   
		
		//IF THE NEXT SLIDE WASN'T OPEN THEN OPEN IT
		if($(this).next().is(':hidden') == true) {			
			//ADD THE ON CLASS TO THE BUTTON
			$(this).addClass('on');			  
			//OPEN THE SLIDE
			$(this).next().slideDown('normal');
		 } 		  
	 });
	  
	/********************************************************************************************************************
	CLOSES ALL S ON PAGE LOAD
	********************************************************************************************************************/	
	$('.accordionContent').hide();
	
	$('.close').click(function(){
		$('.accordionContent').slideUp();
    });
	
    /* Removed for AUSO-235*/
	
	/********* function to show hide size chart *************/	
	$('ul li.sizeChart a').click(function(){
		sizeChartSrc = $('#sizeChart').attr('rel');		
		$('img#sizeChart').attr('src',sizeChartSrc);		
		$(this).next().show();
		return false;
	});
	/* AUSO-69 */
	$('#sizeChartContainer a.pageLink').bind('click', function(){			
		$(this).parents('#sizeChartContainer').css('display','none');
		return false;
	});
	/**/	
	
	
	$(".technologyUsed a").hover(
		function(){
			$(this).next().show();
		},
		function(){
			$(this).next().hide();
		}		
	)
	
	$("#productActions a.email").hover(
		function(){
			$("#productActions a.email span").show();
		},
		function(){
			$("#productActions a.email span").hide();
		}		
	)
	
	$("#productActions a.wishlist").hover(
		function(){
			$("#productActions a.wishlist span").show();
		},
		function(){
			$("#productActions a.wishlist span").hide();
		}		
	)	
	
	$("#shippingDetails a.toggle").toggle(
		function(){
			$(this).removeClass("collapsed");
			$(this).addClass("expanded");
			$(this).text("Click here for less details");
			$(this).next().show();
		},
		function(){
			$(this).removeClass("expanded");
			$(this).addClass("collapsed");
			$(this).text("Click here for more details");
			$(this).next().hide();
		}		
	)
	
	/* Start Outfit page color option functions */ 
	$(".outfitProdCont ul.thumb li").each(function(i){
		// Mouseover function for creating event on small thumbnail of color option
		$("ul.thumb li a").eq(i).mouseenter(function(){
			//Will remove pointed arrow class from the current item only										
			$(this).parents('.outfitProdCont').find("ul.thumb li a").removeClass("selectedProduct");		
			//Will add pointed arrow class to current anchor only
			$(this).addClass("selectedProduct");
			
			var mainImage = $(this).attr("href"); //Find Image Name		
			$(this).parents('.outfitProdCont').find('.main_view img').attr({ src: mainImage, height:"170", width:"170"}); //main view
			
			var mainImageLink = $(this).attr("rel"); //Find Image Link	
			$(this).parents('.outfitProdCont').find('.main_view a').attr({ href: mainImageLink }); //set main view Link 
			$(this).parents('.outfitProdCont').find('.colTwo a:first').attr({ href: mainImageLink }); //set main view Link 
			
			//Select the same index of color
			//$(this).closest('.outfitProdCont').find('.selectColor option').eq(i).attr('selected', true);
			$('.outfitProdCont').find('.selectColor option').eq(i).attr('selected', true);
			
			//Will show only Size Quantity dropdowns related to color selected
			$(this).parents('.outfitProdCont').find('.sizeQuanitity').hide();
			$('.outfitProdCont').find('.sizeQuanitity').eq(i).show();
						
			//console.log($('.outfitProdCont').find('.selectColor option').eq(i).html() + "\n i:" +i );
			//alert( $('.selectColor')[1].selectedIndex );
			return false;	
		});
	});	
	$(".selectColor").change(function(){
		var currentIndex = $(this).attr("selectedIndex");		
		//Assigning image for preview from color change option
		var currentImgSrc = $(this).parents('.outfitProdCont').find('ul.thumb li a').eq(currentIndex).attr("href");
		$(this).parents('.outfitProdCont').find('.main_view img').attr({ src: currentImgSrc });		
		//Assigning image link for preview image from color change option
		var currentImgSrcLink = $(this).parents('.outfitProdCont').find('ul.thumb li a').eq(currentIndex).attr("rel");
		$(this).parents('.outfitProdCont').find('.main_view a').attr({ href: currentImgSrcLink });	
		//Will remove pointed arrow class from the current item only	
		$(this).parents('.outfitProdCont').find('ul.thumb li a').removeClass("selectedProduct");
		//Will add pointed arrow class to current anchor only
		$(this).parents('.outfitProdCont').find('ul.thumb li a').eq(currentIndex).addClass("selectedProduct");
		var mainImage = $(this).attr("href"); //Find Image Name				
		$(this).parents('.outfitProdCont').find('.main_view img').attr({ src: mainImage, height:"170", width:"170"}); //main view		
		//Will show only Size Quantity dropdowns related to color selected
		$(this).parents('.outfitProdCont').find('.sizeQuanitity').hide();
		$(this).parents('.outfitProdCont').find('.sizeQuanitity').eq(currentIndex).show();
		$(this).parents('.outfitProdCont').find('.colTwo a:first').attr({ href: currentImgSrcLink }); //set main view Link 
	});	
	$(".sizeQuanitity .selectsize").change(function(){
		var currentQty = $(this).find("option:selected").attr("qty");
		$(this).parents('.outfitProdCont').find('.selectQuantity option').remove();
		for(var i=0; i<currentQty;i++)
		{
			$(this).parents('.outfitProdCont').find('.selectQuantity').append('<option value='+(i+1)+'>'+(i+1)+'</option>');		
		}
	});	
	//Setting first view item with pointed arrow for first record
	$("ul.thumb li:first-child a").addClass("selectedProduct");
	//Hide sizeQuantity dropdowns and show only first one for each product
	$(".outfitProdCont .sizeQuanitity").hide();
	$(".outfitProdCont").each(function(){
		$(this).find(".sizeQuanitity:first").show();
	});
	//function to disable thumb link
	$("ul.thumb li a").click(function(){
		return false;
	});
	/* End Outfit color option functions */	
	}
	
});


/* ******************* 
 * AUSO-7 Changes end 
 * ***************************/



/*Start : functions for catalogue search view larger with delay*/
//function noError(){return true;}
function hoverIntentOver() {
	//window.onerror = noError; /*To suppress js error offset().left null | causing no harm*/
	var widowWidth = $(window).width();  /*Right most link should open on left side*/ 
	var offsetLink = $(this).offset().left;	/*Right most link should open on left side*/
	/*AUSO-997*/
	if(  offsetLink >= 800 ){ 
		$(this).next('.viewLargeColors').css('left','-135%');
		$(this).next('.viewLarge').css('left','-85%');
	}
    $(this).next().hide();	//To make sure popup is hidden.
	$(this).next().fadeIn(300); //To show popup with fade effect.
	//Find and select thumb to point arrow
	$(this).next().find("ul.thumb li a").removeClass("selectedProduct");
	$(this).next().find("ul.thumb li.selected a").addClass("selectedProduct");
			
	//Find and select First Image path
	//var mainImage = $(this).next().find("ul.thumb li a:first").attr("href"); 		
	//$(this).parents('.productOptions').find('.main_view img').attr({ src: mainImage });
			
	//Find and select first color text
	$(".viewLargeColors .color li").hide();
	$(this).next('.viewLargeColors').find('.color li.selected').show();
	
	//Find and select first price text
	$(".viewLargeColors .price li").hide();
	$(this).next('.viewLargeColors').find('.price li.selected').show();
			
	//Setting price dynamically coming from link price attribute
	//priceCont = $(this).next().find("ul.thumb li.selected a").attr('price');
	//$(this).parents('.productOptions').find('.price').text(priceCont);
			
	var mainImage = $(this).next().find("ul.thumb li.selected a").attr("id"); //Find Image path		
	$(this).parents('.productOptions').find('.main_view img').attr({ src: mainImage });//Select the color
	
	var mainLink = $(this).next().find("ul.thumb li.selected a").attr("href"); //Find Image Link		
	$(this).parents('.productOptions').find('.main_view a').attr({ href: mainLink });//set href for main image link
	$(this).parents('.productOptions').find('.detailLink a').attr({ href: mainLink });//set href for title link	
			
	//Setting only current element parent to position relative
	$(this).parents('.productOptions').css('position','relative');
	
	//Function added to replace thumbnail id's to src
	$(this).next().find("ul.thumb li a img").each(function(){
		thumbImgSrc = $(this).attr("id");
		$(this).attr("src",thumbImgSrc);
	});
}		
function hoverIntentOut() {
	//nothing goes here;
}	

/*AUSO-997 : start*/
function viewLargeColorHover(){
	$(".viewLargeColors ul.thumb li a").mouseover(function(){
	  index = $(this).attr("rel");
	  //Will remove pointed arrow class from the current item only
	  $(this).parents('.productOptions').find("ul.thumb li a").removeClass("selectedProduct");
	  
	  //hide all color except the one is selected
	  $(".viewLargeColors .color li").hide();
	  $(this).parents('.productOptions').find('.viewLargeColors .color li').eq(index).show();
	  
	  //hide all price except the one is selected
	  $(".viewLargeColors .price li").hide();
	  $(this).parents('.productOptions').find('.viewLargeColors .price li').eq(index).show();
	  
	  //Will add pointed arrow class to current anchor only
	  $(this).addClass("selectedProduct");
	  
	  //Setting price dynamically coming from link price attribute
	  //priceCont = $(this).attr("price");
	  //$(this).parents('.productOptions').find('.price').text(priceCont);
	  
	  var mainImage = $(this).attr("id"); //Find Image path		
	  $(this).parents('.productOptions').find('.main_view img').attr({ src: mainImage });//Select the color main image
			
	  var mainLink = $(this).attr("href"); //Find Image path		
	  $(this).parents('.productOptions').find('.main_view a').attr({ href: mainLink });//set href for main image link
	  $(this).parents('.productOptions').find('.detailLink a').attr({ href: mainLink });//set href for title link		
	});	
	$(".viewLargeColors").mouseleave(function(){	
		//Removing position relative from the element on mouseleave
		$(this).parents('.productOptions').css('position','static');
		$(this).remove();
	});
	$(".viewLarge").mouseleave(function(){	
		//Removing position relative from the element on mouseleave
		$(this).parents('.productOptions').css('position','static');
		$(this).remove();
	});
}
//Index value designate array index of nth search result and starts from 0, selected list item is the selected color variant.
function viewMoreColors(indexValue,selectedListItem,elem) {
	var sHTML = '';
	sHTML += '<div class="viewLargeColors" onmouseover="viewLargeColorHover()">';
	sHTML += '<div class="main_view"><a href=""><img src="" alt="adidas- '+ viewLargeColor[indexValue][4][0] +'" title="adidas- '+ viewLargeColor[indexValue][4][0] +'" /></a></div>';
	sHTML += '<ul class="thumb">';
	/*Loop to create thumbnail list*/
	for( var thumbN=0; thumbN < viewLargeColor[indexValue][1].length; thumbN++ ){
		if (thumbN == selectedListItem){
		sHTML += '<li class="selected"><a href="'+viewLargeColor[indexValue][5][thumbN]+'" id="'+viewLargeColor[indexValue][0][thumbN]+'" rel="'+thumbN+'"><img src="" id="'+viewLargeColor[indexValue][1][thumbN]+'" alt="adidas- '+ viewLargeColor[indexValue][4][0] +'" title="adidas- '+ viewLargeColor[indexValue][4][0] +'" /></a></li>';
		}
		else{
		sHTML += '<li><a href="'+viewLargeColor[indexValue][5][thumbN]+'" id="'+viewLargeColor[indexValue][0][thumbN]+'" rel="'+thumbN+'"><img src="" id="'+viewLargeColor[indexValue][1][thumbN]+'" alt="adidas- '+ viewLargeColor[indexValue][4][0] +'" title="adidas- '+ viewLargeColor[indexValue][4][0] +'" /></a></li>';
		}
	}
	sHTML += '</ul>';
	sHTML += '<div class="details">';
	sHTML += '<div class="detailLink"> ';
	sHTML +='<a href="">'+ viewLargeColor[indexValue][4][0] +'</a>';
	sHTML += '</div>';
	sHTML += '<ul class="price">';	
	/*Loop to create price list*/
	for( var priceN=0; priceN < viewLargeColor[indexValue][2].length; priceN++ ){
		// Condition to point arrow on selected item
		if (priceN == selectedListItem){
			// Condition to check if sale price is similar to old price, normal sale price should appear in black 
			// and if these two are different and sale price should appear in red
			if(viewLargeColor[indexValue][8][priceN] == 'TRUE'){ 
			sHTML += '<li class="selected"><strike>'+viewLargeColor[indexValue][3][priceN]+'</strike>&nbsp;<span class="red">'+viewLargeColor[indexValue][2][priceN]+'</span></li>';
			}
			else{
			sHTML += '<li class="selected"><span class="">'+viewLargeColor[indexValue][2][priceN]+'</span></li>';	
			}
		}
		else{
			if(viewLargeColor[indexValue][8][priceN] == 'TRUE'){
			sHTML += '<li><strike>'+viewLargeColor[indexValue][3][priceN]+'</strike>&nbsp;<span class="red">'+viewLargeColor[indexValue][2][priceN]+'</span></li>';		
			}
			else{
			sHTML += '<li><span class="">'+viewLargeColor[indexValue][2][priceN]+'</span></li>';		
			}
		}
	}
	sHTML += '</ul>';		
	sHTML += '<ul class="color">';	
	/*Loop to create color list*/
	for( var colN=0; colN < viewLargeColor[indexValue][6].length; colN++ ){
		if (colN == selectedListItem){
		sHTML += '<li class="selected"><p><span>Color: </span><span>'+viewLargeColor[indexValue][6][colN]+'</span>&nbsp;<span>'+viewLargeColor[indexValue][7][colN]+'</span></p></li>';
		}
		else{
		sHTML += '<li><p><span>Color: </span><span>'+viewLargeColor[indexValue][6][colN]+'</span>&nbsp;<span>'+viewLargeColor[indexValue][7][colN]+'</span></p></li>';
		}
	}
	sHTML += '</ul>';
	sHTML += '</div>';
	sHTML += '</div>';
	
	$(".viewLargeColors").remove(); //To remove all instances of viewLargeColors div before making a new one.
	$(elem).after(sHTML);
}


function viewLargeImage(indexValue,elem) {
	var sHTML = '';
	sHTML += '<div class="viewLarge" onmouseover="viewLargeColorHover()">';
	sHTML += '<div class="main_view"><a href="'+viewLarge[indexValue][6]+'"><img src="'+viewLarge[indexValue][0]+'" alt="'+viewLarge[indexValue][5]+'" title="'+viewLarge[indexValue][5]+'" style="width:300px; height:300px" /></a></div>';
	sHTML += '<div class="details">';
	sHTML += '<div class="detailLink"> <a href="'+viewLarge[indexValue][6]+'">'+viewLarge[indexValue][2]+'</a> </div>';
	if(viewLarge[indexValue][8] == 'TRUE'){
		sHTML += '<div class="price"><strike>'+viewLarge[indexValue][4]+'</strike>&nbsp;<span class="red">'+viewLarge[indexValue][3]+'</span></div>';	
	}
	else{
		sHTML += '<div class="price"><span class="">'+viewLarge[indexValue][3]+'</span></div>';
	}
	sHTML += '<ul class="color">';
	sHTML += '<li>';
	sHTML += '<p><span>Color: </span><span>'+viewLarge[indexValue][2]+'</span>&nbsp;<span>'+viewLarge[indexValue][7]+'</span></p>';
	sHTML += '</li></ul></div></div>';
	$(".viewLarge").remove(); //To remove all instances of viewLargeColors div before making a new one.
	$(elem).after(sHTML);
}
/*End*/
/*AUSO-997 : end*/

/*********** Start: Home Page *********************/
/**
 * Equal Heights Plugin
 * Equalize the heights of elements. Great for columns.
 *
 * Copyright (c) 2008 Rob Glazebrook (cssnewbie.com) 
 *
 * Usage Example: $('.columns').equalHeights();
 * http://www.cssnewbie.com/advanced-jquery-tabbed-box-techniques/
 *
 */

(function($) {
	$.fn.equalHeights = function() {
		tallest = 0;
		this.each(function() {
			if($(this).height() > tallest) {
				tallest = $(this).height();
			}
		});
		return this.each(function() {
			$(this).height(tallest);
		});
	}
})(jQuery);

var currentTab = 0; 
var rotateSpeed = 5000;
var numTabs;
var autoRotate;
 
function openTab(clickedTab) {
	var thisTab = $(".tabbed-box .tabs a").index(clickedTab);
	$(".tabbed-box .tabs li a").removeClass("active");
	$(".tabbed-box .tabs li a:eq("+thisTab+")").addClass("active");
	$(".tabbed-box .tabbed-content").hide();
	$(".tabbed-box .tabbed-content:eq("+thisTab+")").show();
	currentTab = thisTab;
} 
function rotateTabs() {
	var nextTab = (currentTab == (numTabs - 1)) ? 0 : currentTab + 1;
	openTab($(".tabbed-box .tabs li a:eq("+nextTab+")"));
} 
$(document).ready(function() {
	$(".tabbed-content").equalHeights();
	numTabs = $(".tabbed-box .tabs li a").length;
 
	$(".tabbed-box .tabs li a").click(function() { 
		openTab($(this)); return false; 
	});
 
	autoRotate = setInterval("rotateTabs()", rotateSpeed);	
	$(".tabbed-box .tabs li a:eq("+currentTab+")").click()	

   
   $(".stop").click(function(){
		clearInterval(autoRotate);
		$(this).hide();
		$(".tabbed-box .play").show();
   });
   $(".play").click(function(){
		autoRotate = setInterval("rotateTabs()", rotateSpeed);
		$(this).hide();
		$(".tabbed-box .stop").show();
   });   
   $(".tabbed-box .tabs li a").click(function() { 
		clearInterval(autoRotate);
		$(".stop").hide();
		$(".tabbed-box .play").show();
	});
});
/**********Start: Contry dropdown script*******************/
$(function(){
	$("#countrySelector").click(function(){
		$(".countryList").show();
	});
	$(".countryList").hover(
		function(){
		$(".countryList").show();
		},
		function(){
		$(".countryList").hide();
	});
});
/**/
/*********** End: Home Page *********************/

/*****Function to open popup windows**********/
function cPop(url, wide, high) 
{window.open(url,"popup",'width=' + wide + ',height=' + high+',scrollbars=yes',0); 
} 

/*****Function to open modal popup windows**********/
function cModal(url, wide, high) {
	if (window.showModalDialog) {
		window.showModalDialog(url,this,"dialogWidth:" + wide + "px;dialogHeight:" + high + "px");
	} else {
		window.open(url,'modalWindow','height=' + high + ',width=' + wide + ',toolbar=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,modal=yes');
	} 
}
/*****Function to check size drop down value **********/
function chkSize(){
	if(document.getElementById('selectsize').value=='default')
		{
		  alert('Please select a size');
		  return false;
		}
	else{
		window.location="http://yahoo.com";
	}
}
/*End*/

/******* Start: Modal Window gift card page *************/
jQuery(function ($) {
	$('.create').click(function (e) {
		$("#dialog").modal({
			opacity:20,
			overlayCss: {backgroundColor:"#000"}
		});
	});
});
/*End*/
/*General function to change button padding on these browsers throught site*/
jQuery(function ($) {
	if ($.browser.webkit || $.browser.opera) {
    	$("input[type='button']").css('padding','3px 10px');
		$("input[type='submit']").css('padding','3px 10px');
 	}
});
/*End*/

/* Begin: Credit Card validations */
/*
This routine checks the credit card number. The following checks are made:
1.  To check if the value for credit card number has been provided. 
2.  To check if the value for credit card type has been provided. 
3.  To check if the value for credit card identification number has been provided. 
4.  To check if the expiration date is a future date or not. 
5.  To check if the credit card number is a numeric value or not. 
6.  To check if the credit card identification number is a numeric value or not. 
7.  To check if the credit card number's length is correct according to the credit card type selected. 
8.  To check if the credit card number's prefix is correct according to the credit card type selected. 
9.  To check if the credit card identification number's length is correct according to the credit card type selected. 
10. To check if the credit card's modulus 10 checksum (LUHN algorithm) is correct or not.

If the validation fails an error is reported through alert.
*/

var ccErrorNo = 0;
var ccErrors = new Array ()

ccErrors [0] = "Please select the credit card type.";
ccErrors [1] = "Please provide a credit card number.";
ccErrors [2] = "Credit card number is in invalid format.";
ccErrors [3] = "Credit card number is invalid.";
ccErrors [4] = "Credit card number has an inappropriate number of digits.";
ccErrors [5] = "Please provide a credit card identification number.";
ccErrors [6] = "Credit card identification number is in invalid format.";
ccErrors [7] = "Credit card identification number has an inappropriate number of digits.";
ccErrors [8] = "Credit card expiration date should be a future date.";
ccErrors [9] = "Please select the credit card expiration date.";
ccErrors [10] = "Please select the credit card expiration date.";

function checkCreditCard (CardNumberControl, CardNameControl, CVNumberControl, CardExpirationMonthControl, CardExpirationYearControl) {
	var cardnumber = document.getElementById(CardNumberControl).value;
	var	cardname = document.getElementById(CardNameControl).value;
	var cvnnumber = document.getElementById(CVNumberControl).value;
	var expMonth = document.getElementById(CardExpirationMonthControl).value;
	var expYear = document.getElementById(CardExpirationYearControl).value;
	
	var v_bErrorFlag = false;
	var v_bCCNErrorFlag = false;

	// Check if the expiration month has been selected or not
	var v_objExpirationMonth = document.getElementById(CardExpirationMonthControl);
	
	// Array to hold the permitted card characteristics
  var cards = new Array();

  // Define the cards we support. You may add addtional card types as follows.
  
  //  Name:         As in the selection box of the form - must be same as user's
  //  Length:       List of possible valid lengths of the card number for the card
  //  prefixes:     List of possible prefixes for the card
  //  checkdigit:   Boolean to say whether there is a check digit
  
  // Visa
  cards [0] = {name: "001", 
               length: "13,16",
			   cvnlength: "3",
               prefixes: "4",
               checkdigit: true};
  // MasterCard
  cards [1] = {name: "002", 
               length: "16", 
			   cvnlength: "3",
               prefixes: "51,52,53,54,55",
               checkdigit: true};
  // American Express
  cards [2] = {name: "003", 
               length: "15", 
			   cvnlength: "4",
               prefixes: "34,37",
               checkdigit: true};
  // Discovery
  cards [3] = {name: "004", 
               length: "16",
			   cvnlength: "3",			   
               prefixes: "6011,622,64,65",
               checkdigit: true};
/* AUSO-7 code removed */
	
	// Establish card type
  var cardType = -1;
  for (var i=0; i<cards.length; i++) {

    // See if it is this card (ignoring the case of the string)
    if (cardname.toLowerCase () == cards[i].name.toLowerCase()) {
      cardType = i;
      break;
    }
  }
  
  	// If card type not found, report an error
  if (cardType == -1) {
     showErrorMessage(0, CardNameControl);
     v_bErrorFlag = true;
  }

  // Ensure that the user has provided a credit card number
  if (cardnumber.length == 0)  {
     showErrorMessage(1, CardNumberControl);
     v_bCCNErrorFlag = true;
  }
  	if (v_objExpirationMonth.selectedIndex <= '0') {
		showErrorMessage(9, CardExpirationMonthControl);
		v_bErrorFlag = true;
	}
	

	
	// Check if the expiration year has been selected or not
	var v_objExpirationYear = document.getElementById(CardExpirationYearControl);
	if (v_objExpirationYear.selectedIndex <= '0') {
		showErrorMessage(10, CardExpirationYearControl);
		v_bErrorFlag = true;
	}
	
	// Check if the expiration year has been selected or not
	
	// Check if the expiration date is a future date or not
	var currDate = new Date();
	currMonth = currDate.getMonth() + 1;
	currYear = currDate.getFullYear();
	if (expYear == currYear) {
		if ((expMonth < currMonth)&&(expMonth!="")) {
			showErrorMessage(8, CardExpirationMonthControl);
			v_bErrorFlag = true;
		}
	}

  // Check that the CVN number is numeric
  var cvnNo = cvnnumber
  var cardexp = /^[0-9]{3,4}$/;
    // Ensure that the user has provided a credit card verification number
  if (cvnnumber.length == 0)  {
     showErrorMessage(5, CVNumberControl);
     v_bErrorFlag = true;
  } else if (cvnnumber.length > 0 && !cardexp.exec(cvnNo))  {
     showErrorMessage(6, CVNumberControl);
     v_bErrorFlag = true;
  } 
  // See if the credit card identification number is of correct length.
  else if(cardType != -1 && cards[cardType].cvnlength != cvnnumber.length) {
	 showErrorMessage(7, CVNumberControl);
	 v_bErrorFlag = true;
  }

  // Check that the card number is numeric
  var cardNo = cardnumber
  var cardexp = /^[0-9]{13,19}$/;
  if (!v_bCCNErrorFlag && cardnumber.length > 0 && !cardexp.exec(cardNo))  {
     showErrorMessage(2, CardNumberControl);
     v_bCCNErrorFlag = true;
  }
  // Now check the modulus 10 check digit - if required
  if (!v_bCCNErrorFlag && cardType != -1 && cards[cardType].checkdigit) {
    var checksum = 0;                                  // running checksum total
    var mychar = "";                                   // next char to process
    var j = 1;                                         // takes value of 1 or 2
  
    // Process each digit one by one starting at the right
    var calc;
    for (i = cardNo.length - 1; i >= 0; i--) {
    
      // Extract the next digit and multiply by 1 or 2 on alternative digits.
      calc = Number(cardNo.charAt(i)) * j;
    
      // If the result is in two digits add 1 to the checksum total
      if (calc > 9) {
        checksum = checksum + 1;
        calc = calc - 10;
      }
    
      // Add the units element to the checksum total
      checksum = checksum + calc;
    
      // Switch the value of j
      if (j ==1) {j = 2} else {j = 1};
    } 
  
    // All done - if checksum is divisible by 10, it is a valid modulus 10.
    // If not, report an error.
    if (checksum % 10 != 0)  {
     showErrorMessage(3, CardNumberControl);
     v_bErrorFlag = true;
    } else {
  	  // The following are the card-specific checks we undertake.
  	  var LengthValid = false;
  	  var PrefixValid = false; 
  	  var undefined; 

  	  // We use these for holding the valid lengths and prefixes of a card type
  	  var prefix = new Array ();
  	  var lengths = new Array ();
  		
  	  if (cardType != -1) {
  		  // Load an array with the valid prefixes for this card
  		  prefix = cards[cardType].prefixes.split(",");
  			  
  		  // Now see if any of them match what we have in the card number
  		  for (i=0; i<prefix.length; i++) {
  			var exp = new RegExp ("^" + prefix[i]);
  			if (exp.test (cardNo)) PrefixValid = true;
  		  }
  			  
  		  // If it isn't a valid prefix there's no point at looking at the length
  		  if (!v_bCCNErrorFlag && !PrefixValid) {
  			 showErrorMessage(3, CardNumberControl);
  			 v_bErrorFlag = true; 
  		  }
  			
  		  // See if the length is valid for this card
  		  lengths = cards[cardType].length.split(",");
  		  for (j=0; j<lengths.length; j++) {
  			if (cardNo.length == lengths[j]) LengthValid = true;
  		  }
  		  
  		  // See if all is OK by seeing if the length was valid. We only check the length if all else was 
  		  // hunky dory.
  		  if (!v_bCCNErrorFlag && !LengthValid) {
  			 showErrorMessage(4, CardNumberControl);
  			 v_bErrorFlag = true; 
  		  }
  	  }
    }
  }  

  if(v_bErrorFlag || v_bCCNErrorFlag) {
	// The credit card validation failed.
	return false;
  } else {
	// The credit card is in the required format.
	return true;
  }
}

function showErrorMessage(errorcode, controlId)
{
	var objElement = $("#"+controlId);
	
	objElement.after("<span class='LV_validation_message' style='position:relative;'>" + ccErrors [errorcode] + "</span>");
	objElement.focus();
	//alert(ccErrors [errorcode]);
}
/* End: Credit Card validations */

function changeImageDimensions(v_strImageURL, v_iHeight, v_iWidth) {
	if(v_strImageURL != null && v_strImageURL!='undefined') {
		var v_strHeightAttr = getDimensionValue(v_strImageURL, 'hei');
		var v_strWidthAttr = getDimensionValue(v_strImageURL, 'wid');
		v_strImageURL = v_strImageURL.replace(v_strHeightAttr, 'hei=500');
		v_strImageURL = v_strImageURL.replace(v_strWidthAttr, 'wid=500');
		//alert('Height Attr >>>> ' + v_strHeightAttr + '\nWidth Attr >>>> ' + v_strWidthAttr + '\nImage >>>> ' + v_strImageURL);
	}
	return v_strImageURL;
}

function getDimensionValue(v_strImageURL, v_strDimName) {
	var v_strAttr = '';
	var v_iStartIndex = v_strImageURL.indexOf(v_strDimName);
	if(v_iStartIndex != -1) {
		var v_iEndIndex = v_strImageURL.indexOf('&', v_iStartIndex);
		if(v_iEndIndex != -1) {
			v_strAttr = v_strImageURL.substring(v_iStartIndex, v_iEndIndex);
		} else {
			v_strAttr = v_strImageURL.substring(v_iStartIndex);
		}
	}
	return v_strAttr;
}

function getCookie(name)
{
	var cookies = document.cookie;
	if (cookies.indexOf(name) != -1)
	{
		var startpos = cookies.indexOf(name)+name.length+1;
		var endpos = cookies.indexOf(";",startpos)-1;
		if (endpos == -2) endpos = cookies.length;
		return unescape(cookies.substring(startpos,endpos));
	}
	else
	{
		return false; // the cookie couldn't be found! it was never set before, or it expired.
	}
}
function getCartCount(cookie)
{
	var name='cc===';
	if (cookie.indexOf(name) != -1)
	{
		var startpos = cookie.indexOf(name)+name.length;
		var endpos = cookie.indexOf("&&&",startpos);
		if (endpos == -2) endpos = cookie.length;
		return unescape(cookie.substring(startpos,endpos));
	}
	else
	{
		return false; // the cookie couldn't be found! it was never set before, or it expired.
	}
}
function isUserLoggedIn(cookie)
{
	var name='lf===';
	if (cookie.indexOf(name) != -1)
	{
		var startpos = cookie.indexOf(name)+name.length;
		var endpos = cookie.indexOf("&&&",startpos)-1;
		if (endpos == -2) endpos = cookie.length;	
		return unescape(cookie.substring(startpos,endpos));
	}
	else
	{
		return false; // the cookie couldn't be found! it was never set before, or it expired.
	}
}

/**
 * @returns {Boolean} true if flash is enabled in the user browser
 */
function isFlashEnabled(){	
	var hasFlash = false;
	try {
	  var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
	  if(fo) hasFlash = true;
	}catch(e){
	  if(navigator.mimeTypes && navigator.mimeTypes["application/x-shockwave-flash"] && navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin) hasFlash = true;
	}
return hasFlash;
}

/*	Promotional TextBox Validation	*/
$(function(){
	$('a#promotion').click(function(){
		var txtVal = $('#promCode').val();
		if(txtVal==""){
			$('.cartPage .leftCol .btnContainer').css("padding-bottom","25px");
			$('#promCode').after('<span class="LV_validation_message LV_invalid">Enter Promotional Code.</span>');		
		}
	});
/* AUSO-7 code removed */
	
	$('#promCode').focus(function(){
		var txtVal = $('#promCode').val();
		if(txtVal==""){
			$('.cartPage .leftCol .btnContainer').css("padding-bottom","5px");
			$(this).parents('.promCode').find('.LV_validation_message').remove();		
		}
	});	
});

function returnCurrentDate(){
	var currFullDate = new Date();
	currDate = currFullDate.getDate();
	currMonth = currFullDate.getMonth()+1;
	currYear = currFullDate.getFullYear()%100;
	if(currDate<10){
		currDate="0"+currDate;
	}
	if(currMonth<10){
		currMonth="0"+currMonth;
	}
	if(currYear<10){
		currYear="0"+currYear;
	}
	return currMonth+currDate+currYear;
}