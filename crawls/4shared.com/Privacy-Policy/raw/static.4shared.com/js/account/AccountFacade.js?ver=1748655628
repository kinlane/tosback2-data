function AccountFacade() {
  return this;
}

AccountFacade.RECYCLE_BIN_DIR_ID = 2147483645
AccountFacade.SEARCH_RESULT_DIR_ID = 2147483639
AccountFacade.INCOMPLETED_DIR_ID = 2147483647
AccountFacade.SHARED_FOLDERS_DIR_ID = 2147483636

AccountFacade.loadingHtml
AccountFacade.loadingDiv
AccountFacade.sId
AccountFacade.setSid = function(sId) {
  AccountFacade.sId = sId;
  return false;
}
AccountFacade.showLoadingDiv = function(element) {
  element = element || '#includeFileList'
  if (!AccountFacade.loadingHtml) AccountFacade.loadingHtml = $('#accountLoadingDiv').html()

  AccountFacade.loadingDiv = $(AccountFacade.loadingHtml)
  $(element).append(AccountFacade.loadingDiv)
  AccountFacade.loadingDiv.show()
}

AccountFacade.hideLoadingDiv = function() {
  if (!AccountFacade.loadingDiv) return

  AccountFacade.loadingDiv.hide()
}

AccountFacade.reloadCurrentDir = function() {
  changeDirLeft(currentDirId)
}

AccountFacade.reloadFolderTree = function(callback) {
  var sidValue = AccountFacade.sId ? AccountFacade.sId : -1;
  callback = callback || function(){};
  $.ajax({
    url: '/account/homeAction.jsp',
    sId: sidValue,
    data: {sId: sidValue},
    method: 'POST',
    success: function(data) {
      if (data.foldertreejs) {
        initWebFXTreeHandler();
        eval(data.foldertreejs);
      }
      callback();
    }
  })
}
//cgdcont=1
AccountFacade.isSpecialDir = function(dir) {
  return dir >= 2147483636
}

AccountFacade.isRecycleBin = function(dir) {
  return dir == AccountFacade.RECYCLE_BIN_DIR_ID
}

AccountFacade.isSearchResult = function(dir) {
  return dir == AccountFacade.SEARCH_RESULT_DIR_ID
}

AccountFacade.isIncompletedDir = function(dir) {
  return dir == AccountFacade.INCOMPLETED_DIR_ID
}

AccountFacade.isSharedWithMeDir = function(dir) {
  return dir == AccountFacade.SHARED_FOLDERS_DIR_ID
}

AccountFacade.isSharedWithMeDir = function(dir) {
  return dir == AccountFacade.SHARED_FOLDERS_DIR_ID
}


/*
 onclick(e)

 AccountFacade.userPromt({
 event: e,
 description: 'Edit folder name',
 title: 'Edit folder name',
 value: 'Current folder name',
 offsetx: 100,
 offsety: 100,
 width: 300,
 height: 500
 }, function(value) {

 })
 */
AccountFacade.userPromt = function(params, callback) {
  if (!dragObj.supported || typeof document.body.innerHTML == "undefined") return false

  var id = Math.random()
  var content = '<div class="text"><form name="prompt" id="id' + id + '" style="padding: 5px">' +
    params.description + '<br />' +
    '<input type="text" name="promptText" value="' + params.value + '" style="width: 180px" class="xBox" /> ' +
    '<input type="submit" value="Ok" style="width: 50px" /></form></div>';
  $('#popupTitle').html(params.title);

  writeDrag.set(params.event, content, params.width, params.offsetx, params.offsety, null, null);
  document.prompt.promptText.focus();
  document.prompt.promptText.select();

  $('form[id="id' + id + '"]').submit(function() {
    callback($('input[name=promptText]', this).val())
    writeDrag.hide()
    return false
  })
}

AccountFacade.copy = function(files, dirs, toDir, callback) {
  $.ajax({
    url: '/account/fio?operation=copy' + ((files != null) ? '&files=' + files : '') + ((dirs != null) ? '&dirs=' + dirs : '') + '&toDir=' + toDir + '&sId=' + (AccountFacade.sId ? AccountFacade.sId : -1),
    success: function(data) {
      callback(data)
    }
  })
}

AccountFacade.move = function(files, dirs, toDir, callback) {
  $.ajax({
    url: '/account/fio?operation=move' + ((files != null) ? '&files=' + files : '') + ((dirs != null) ? '&dirs=' + dirs : '') + '&toDir=' + toDir + '&sId=' + (AccountFacade.sId ? AccountFacade.sId : -1),
    method: 'post',
    success: function(data) {
      callback(data)
    }
  })
}

AccountFacade.remove = function(files, dirs, callback) {
  $.ajax({
    url: '/account/fio?operation=remove' + ((files != null) ? '&files=' + files : '') + ((dirs != null) ? '&dirs=' + dirs : ''),
    success: function(data) {
      callback(data)
    }
  })
}

/*
 $(document).click(function() {
 if ($('#ww_window').is(':visible')) {
 $('#ww_window').fadeOut('fast', function() {
 //$('#ww_window').remove()
 });
 $('#ww_overlay').fadeOut('fast', function() {
 //$(this).remove()
 });
 }
 })
 */

AccountFacade.popup = function(params) {
  var id = 'p_window'
  $('#' + id).remove()

  if (params.element) {
    params.content = params.element.html()
  }

  params.afterClose = params.afterClose || function(){}

  if (!!!params.title) {
    params.title = 'Title';
  }
  this.overlayHeight = $(document).height()
  $('.p_overlay').remove();
  var closeText = params.closeButton !== false ? "<a class='close'></a>" : "";
  var el = $('<div id="p_overlay" class="p_overlay"></div><div id="' + id + '"><div class="ii"><div class="hh"><span id="accountPopupTitle">' + params.title + '</span>' + closeText + "</div><div class='cc'>" + params.content + '<div class="clear"></div></div></div></div>')
    .prependTo('body')

  if ($.browser.msie) {
    el.show()
  } else {
    el.fadeIn('fast')
  }

  /* Grab viewport height middle position */
  var vph = $(window).height() / 2;

  /* Grab viewport width middle position */
  var vpw = $(window).width() / 2;

  /* Grab overlay height middle position */
  var vbh = $('#' + id).height() / 2;
  /* Grab overlay width middle position */
  var vbw = $('#' + id).width() / 2;

  /* Find overlay height middle on screen */
  var hoffsetval = vph - vbh + $(window).scrollTop() - 15 + 'px';
  /* Find overlay width middle on screen */
  var woffsetval = vpw - vbw - 15 + 'px';

  /* Assign top offset to overlay and make visible */
  $('#' + id).css({'top' : hoffsetval, 'left' : woffsetval,  'visibility': 'visible'});

  if($.browser.msie && ($.browser.version == 7)) {
    $('#' + id + ' .hh').width($('.ii').width());
  }
  $('#p_overlay').height(this.overlayHeight);
  //$('#p_overlay').css({'position':'fixed'});

  $('#' + id + ' .close').die('click');
  $('#p_overlay').die('click');

  $('#' + id + ' .close').live('click', function() {
    if (!!params.onClose && !params.onClose()) {
      return;
    }
    $('#' + id).fadeOut('fast', function() {
      $('#' + id).remove()
    });

    $('#p_overlay').fadeOut('fast', function() {
      $(this).remove()
    })
    params.afterClose();
  });
  var closeOnClick = params.closeOnClickOnOutsideArea != undefined? params.closeOnClickOnOutsideArea : true;
  if (closeOnClick){
    $('#p_overlay').live('click', function() {
      if (!!params.onClose && !params.onClose()) {
        return;
      }
      $('#' + id).fadeOut('fast', function() {
        $('#' + id).remove();
      });

      $('#p_overlay').fadeOut('fast', function() {
        $(this).remove()
      })
    params.afterClose();
  });
  }
  if (params.loadingDiv != undefined){
      $("#"+params.loadingDiv).show();
  }
  attachTips(true);
  return {
    hide: function() {
      $('#' + id).remove();
      $('#p_overlay').remove();
      //document.getElementById("statFileDown").
      params.afterClose();
    },

    setTitle: function(newTitle) {
      $("#accountPopupTitle").text(newTitle);
    },

    hideLoading: function (){
      $("#"+params.loadingDiv).hide()
    }
  }
};


AccountFacade.writeDragContent = ''
AccountFacade.writeDrag = function(params) {
  if (!AccountFacade.writeDragContent) {
    AccountFacade.writeDragContent = $('#writeDragMain').html()
    $('#writeDragMain').remove()
  }
  $('#wdMain').remove()

  var main = $(AccountFacade.writeDragContent).appendTo($(document.body))

  $('.dragDivTitle', main).html(params.title)
  if (params.content) {
    $('.dragDivContent', main).html(params.content)
  } else if (params.element) {
    $('.dragDivContent', main).html(params.element.html())
  }

  var dialog = new WriteDrag('wdMain')
  dialog.doNotHideFlag = true
  dialog.hideFlag = false
  dialog.set({}, undefined, params.width ? params.width : 410, 'c', 'c', undefined, params.height ? params.height : undefined)

  var onHide = function() {
    Events.removeListener('WriteDrag.hide', onHide)
    if (params.onClose) params.onClose()
  }
  Events.addListener('WriteDrag.hide', onHide)

  $('.close', main).unbind('click').click(function() {
    Events.removeListener('WriteDrag.hide', onHide)
    dialog.hide()
    if (params.onClose) params.onClose()
    return false
  })

  return dialog
}

AccountFacade.saveButtonPressed = function(button, pressed) {
  var value = $.cookie('pressed.buttons')

  var buttons = []
  var index = -1
  if (value) {
    value = value.replace(',,', ',')
    buttons = value.split(',')
    index = Utils.indexOf(buttons, button)
  }

  if (pressed && index < 0) {
    buttons.push(button)
  } else if (!pressed && index >= 0) {
    buttons.splice(index, 1)
  }

  $.cookie('pressed.buttons', buttons.length > 0 ? buttons.join(',') : '', {path: '/'})
}

AccountFacade.isButtonPressed = function(button) {
  var value = $.cookie('pressed.buttons')
  if (value == null) {
    value = 'folders'
    $.cookie('pressed.buttons', value, {path: '/'})
  }
  if (!value) return false

  return Utils.indexOf(value.split(','), button) >= 0
}

AccountFacade.goToMessagePage = function(body, title){
  var form = $("<form action='/web/message' method='post'></form>")
  form.append($("<input type='hidden' name='body'>").val(body))
    .append("<input type='submit'/>")
  if(title){
    form.append($("<input type='hidden' name='title'>").val(title))
  }
  $("body").append(form)
  form.submit()
}


var features = {}
var dirRights = {}
var currentDirRight = {}

AccountFacade.setCurrentRights = function (right) {
  currentDirRight = right.commands;
}

AccountFacade.getCurrentRights = function () {
  return currentDirRight
}

AccountFacade.setRights = function (right) {
  dirRights['rights' + right.dirId] = right.commands;
}

AccountFacade.getRights = function (id) {
  if (dirRights['rights' + id]) return dirRights['rights' + id]
  return {'OpenDir':true}
}

AccountFacade.hasFeatures = function (feature) {
  return features[feature];
}

AccountFacade.setFeatures = function (featurez) {
  features = featurez
}
