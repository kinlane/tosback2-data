(function(){

	/******************************/
	/*	 START - document.ready	  */
	/******************************/
	
	$(document).ready(function(){
	
		/**************************/
		/* Promotions*/
		/**************************/
	
		// Execute all promotions display logic - self-contained except for temporary global a/b test variable
		
		/*Initiate the iPad detection for perma-footer*/
		leutil.ui.browser.isiPad();
		
		/*Initiate the promo display and ajax content for promos*/
		promoDisplay();
	  
		/* if cookies are enabled display cookies error banner */
		if($.cookie.test() == false) $("#cookiesErrorBanner").show();
	  
		/*	Current Year Update	 */
		$('#current-year').text(new Date().getUTCFullYear());
		
	});
	
	

	/******************************/
	/*	START - PROMO Code	*/
	/******************************/	
	  function promoDisplay(){

		var applyPromoStatus = ($.query.get("applyPromo")+"").match(/^\w+$/);
		var promoCookie = $.cookie("promoCookieKey");
 
		/* start executing our promotions functionality */
		function execute() {
			if(applyPromoStatus) {
				/* just applied a promotion, display promotion applied overlay */
				if(typeof navTestGroup == "undefined" || navTestGroup == "C" || navTestGroup == "D") {
						le.uxd.ui.promotion.displayPromotion({location: 'modal'});
				}
			}
			if(promoCookie){
				var promoBrand = promoCookie.split('_')[2];
				var isCanvas = /canvas/.test(window.location.host);
				if ((window.location+"").indexOf("OrderConfirm.cgi") != -1) {
					setCookie("promoCookieKey", "" , null);
				} else if(promoBrand=="0" || (promoBrand=="1" && !isCanvas) || (promoBrand=="2" && isCanvas)){
					le.uxd.ui.promotion.displayPromotion();
				}
			}
		}
	
	execute();
	
	}
	
})();/***************************************************code added for peak_sev1_fix **************************************************/var buttonDisabler = new function(){	var delay = 15; //seconds	var data = [		"#shopping-bag div.productBlockRight a", 		"#shopping-bag div.subHeader a",		"#shopping-bag-tool",		"#account-tool-status",		"#account-tool-access",		"#track-order-tool",		"#shopping-bag div.sb_continueBtn input", 		"#ship-to div.continueBtn input",		"#bill-to div.btn_bill_to input",		"#login div.login_btn input"	];	var buttons = new Array();	function Button(myElement,myWait){		var element = myElement;		var timer;		var wait = myWait * 1000;		var waiting = false;			element.bind("click",function(e){			if(waiting == true){				return false;			}			else{				waiting = true;				clearTimeout(timer);				timer = setTimeout(enable,wait);			}		});		var enable = function(){			waiting = false;		}	}	this.init = function(){                   		for(var a = 0; a<data.length; a++){			var temp = $(data[a]);			temp.each(function(){                                                      				buttons.push(new Button($(this),delay));			});		}	}} $(document).ready(function() {                 buttonDisabler.init(); });/*************************************************** START overlayAlert function* Nifty reusable overlay alert function -* Leaving global in case anybody else decides to use it **************************************************/function overlayAlert(overlayCopy) {  scroll(0,0);  //hides the selects boxes due to IE6  $('select').hide();  $('body').prepend('<div id="overlay"><div id="overlay-filter"></div>'+      '<div id="overlay-window"><div id="close-window"></div>'+      '<div class="overlay-window-n"></div><div class="overlay-window-ne"></div><div class="overlay-window-e"></div>'+      '<div class="overlay-window-se"></div><div class="overlay-window-s"></div><div class="overlay-window-sw"></div>'+      '<div class="overlay-window-w"></div><div class="overlay-window-nw"></div>'+      '</div></div>'  );  $('#overlay,#overlay-filter').height($(document).height());  $('#overlay-filter').fadeTo('slow', 0.80);  $('#overlay-window').fadeIn()  .css({'width': '500px', 'margin-left':'-250px'})  .append('<div id="overlay-content">'+      '<div class="head"></div><div class="body">'+ overlayCopy +'</div>'+      '<div class="foot"></div>'  );  $('.overlay-window-n, .overlay-window-s').width($('#overlay-content').width());  $('.overlay-window-w, .overlay-window-e').height($('#overlay-content').height());  $('#overlay-content img').load(function() {    $('.overlay-window-n, .overlay-window-s').width($('#overlay-content').width());    $('.overlay-window-w, .overlay-window-e').height($('#overlay-content').height());  });  $('#overlay-filter, #cancel, #close-window, .close').live('click', function(){    $('select').show();    $('#overlay, #overlay-filter, .overlay-window').fadeTo('slow', 0, function() {      $('#overlay, #overlay-filter, .overlay-window').remove();      $('html, body').removeClass('overlay-hidden');    });  });}var eglvchathandle = null;

function openHelp(egchat_queueId, egchat_templatename, location_descriptor, send_omtr) {
    try {
        if (eglvchathandle !== null && eglvchathandle.closed === false) {
            eglvchathandle.focus();
            return;
        }
    } catch (err) {}

	// must explicitly cancel omniture tag call
	send_omtr = send_omtr || true;
	
	if (send_omtr) {
		var prop41 = s_omtr.pageName + '';
		s_omtr.prop39 = 'Chat_Reactive';
		s_omtr.prop40 = location_descriptor || "unavailable";
		s_omtr.prop41 = prop41;
		var s_code = s_omtr.tl();
	}
	
    var refererName = document.title;
    var refererurl = encodeURIComponent(document.location.href);
    var hashIndex = refererurl.lastIndexOf('#');
    if (hashIndex != -1) {
        refererurl = refererurl.substring(0, hashIndex);
    }

    var w = 520,
        h = 600;
    var t = 0,
        l = 0;
    if (window.screen) {
        l = (window.screen.availWidth - w) * 98 / 100;
    }
    var eglvcaseid = (/eglvcaseid=[0-9]*/gi).exec(window.location.search);
    var params = "width=" + w + ",height=" + h + ",left=" + l + ",top=" + t + ",resizable=no,scrollbars=yes,toolbar=no";
    eglvchathandle = window.open('https://support.landsend.com/system/web/view/live/templates/' + egchat_templatename + '/chat.html?entryPointId=' + egchat_queueId + '&referer=' + refererurl + '&eglvrefname=' + refererName + '&' + eglvcaseid, '', params);
}/*
* jQuery Cycle Lite Plugin
* http://malsup.com/jquery/cycle/lite/
* Copyright (c) 2008-2011 M. Alsup
* Version: 1.3 (01-JUN-2011)
* Dual licensed under the MIT and GPL licenses:
* http://www.opensource.org/licenses/mit-license.php
* http://www.gnu.org/licenses/gpl.html
* Requires: jQuery v1.3.2 or later
*/
;(function($) {

var ver = 'Lite-1.3';

$.fn.cycle = function(options) {
    return this.each(function() {
        options = options || {};
        
        if (this.cycleTimeout) clearTimeout(this.cycleTimeout);
        this.cycleTimeout = 0;
        this.cyclePause = 0;
        
        var $cont = $(this);
        var $slides = options.slideExpr ? $(options.slideExpr, this) : $cont.children();
        var els = $slides.get();
        if (els.length < 2) {
            window.console && console.log('terminating; too few slides: ' + els.length);
            return; // don't bother
        }

        // support metadata plugin (v1.0 and v2.0)
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;
if (meta)
opts = $.extend(opts, meta);
            
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];
        opts.after.unshift(function(){ opts.busy=0; });
            
        // allow shorthand overrides of width, height and timeout
        var cls = this.className;
        opts.width = parseInt((cls.match(/w:(\d+)/)||[])[1]) || opts.width;
        opts.height = parseInt((cls.match(/h:(\d+)/)||[])[1]) || opts.height;
        opts.timeout = parseInt((cls.match(/t:(\d+)/)||[])[1]) || opts.timeout;

        if ($cont.css('position') == 'static')
            $cont.css('position', 'relative');
        if (opts.width)
            $cont.width(opts.width);
        if (opts.height && opts.height != 'auto')
            $cont.height(opts.height);

        var first = 0;
        $slides.css({position: 'absolute', top:0, left:0}).each(function(i) {
            $(this).css('z-index', els.length-i)
        });
        
        $(els[first]).css('opacity',1).show(); // opacity bit needed to handle reinit case
        if ($.browser.msie) els[first].style.removeAttribute('filter');

        if (opts.fit && opts.width)
            $slides.width(opts.width);
        if (opts.fit && opts.height && opts.height != 'auto')
            $slides.height(opts.height);
        if (opts.pause)
            $cont.hover(function(){this.cyclePause=1;}, function(){this.cyclePause=0;});

        var txFn = $.fn.cycle.transitions[opts.fx];
txFn && txFn($cont, $slides, opts);
        
        $slides.each(function() {
            var $el = $(this);
            this.cycleH = (opts.fit && opts.height) ? opts.height : $el.height();
            this.cycleW = (opts.fit && opts.width) ? opts.width : $el.width();
        });

        if (opts.cssFirst)
            $($slides[first]).css(opts.cssFirst);

        if (opts.timeout) {
            // ensure that timeout and speed settings are sane
            if (opts.speed.constructor == String)
                opts.speed = {slow: 600, fast: 200}[opts.speed] || 400;
            if (!opts.sync)
                opts.speed = opts.speed / 2;
            while((opts.timeout - opts.speed) < 250)
                opts.timeout += opts.speed;
        }
        opts.speedIn = opts.speed;
        opts.speedOut = opts.speed;

  opts.slideCount = els.length;
        opts.currSlide = first;
        opts.nextSlide = 1;

        // fire artificial events
        var e0 = $slides[first];
        if (opts.before.length)
            opts.before[0].apply(e0, [e0, e0, opts, true]);
        if (opts.after.length > 1)
            opts.after[1].apply(e0, [e0, e0, opts, true]);
        
        if (opts.click && !opts.next)
            opts.next = opts.click;
        if (opts.next)
            $(opts.next).bind('click', function(){return advance(els,opts,opts.rev?-1:1)});
        if (opts.prev)
            $(opts.prev).bind('click', function(){return advance(els,opts,opts.rev?1:-1)});

        if (opts.timeout)
            this.cycleTimeout = setTimeout(function() {
                go(els,opts,0,!opts.rev)
            }, opts.timeout + (opts.delay||0));
    });
};

function go(els, opts, manual, fwd) {
    if (opts.busy) return;
    var p = els[0].parentNode, curr = els[opts.currSlide], next = els[opts.nextSlide];
    if (p.cycleTimeout === 0 && !manual)
        return;

    if (manual || !p.cyclePause) {
        if (opts.before.length)
            $.each(opts.before, function(i,o) { o.apply(next, [curr, next, opts, fwd]); });
        var after = function() {
            if ($.browser.msie)
                this.style.removeAttribute('filter');
            $.each(opts.after, function(i,o) { o.apply(next, [curr, next, opts, fwd]); });
        };

        if (opts.nextSlide != opts.currSlide) {
            opts.busy = 1;
            $.fn.cycle.custom(curr, next, opts, after);
        }
        var roll = (opts.nextSlide + 1) == els.length;
        opts.nextSlide = roll ? 0 : opts.nextSlide+1;
        opts.currSlide = roll ? els.length-1 : opts.nextSlide-1;
    }
    if (opts.timeout)
        p.cycleTimeout = setTimeout(function() { go(els,opts,0,!opts.rev) }, opts.timeout);
};

// advance slide forward or back
function advance(els, opts, val) {
    var p = els[0].parentNode, timeout = p.cycleTimeout;
    if (timeout) {
        clearTimeout(timeout);
        p.cycleTimeout = 0;
    }
    opts.nextSlide = opts.currSlide + val;
    if (opts.nextSlide < 0) {
        opts.nextSlide = els.length - 1;
    }
    else if (opts.nextSlide >= els.length) {
        opts.nextSlide = 0;
    }
    go(els, opts, 1, val>=0);
    return false;
};

$.fn.cycle.custom = function(curr, next, opts, cb) {
    var $l = $(curr), $n = $(next);
    $n.css(opts.cssBefore);
    var fn = function() {$n.animate(opts.animIn, opts.speedIn, opts.easeIn, cb)};
    $l.animate(opts.animOut, opts.speedOut, opts.easeOut, function() {
        $l.css(opts.cssAfter);
        if (!opts.sync) fn();
    });
    if (opts.sync) fn();
};

$.fn.cycle.transitions = {
    fade: function($cont, $slides, opts) {
$slides.not(':eq(0)').hide();
opts.cssBefore = { opacity: 0, display: 'block' };
opts.cssAfter = { display: 'none' };
opts.animOut = { opacity: 0 };
opts.animIn = { opacity: 1 };
    },
    fadeout: function($cont, $slides, opts) {
opts.before.push(function(curr,next,opts,fwd) {
$(curr).css('zIndex',opts.slideCount + (fwd === true ? 1 : 0));
$(next).css('zIndex',opts.slideCount + (fwd === true ? 0 : 1));
});
$slides.not(':eq(0)').hide();
opts.cssBefore = { opacity: 1, display: 'block', zIndex: 1 };
opts.cssAfter = { display: 'none', zIndex: 0 };
opts.animOut = { opacity: 0 };
    }
};

$.fn.cycle.ver = function() { return ver; };

// @see: http://malsup.com/jquery/cycle/lite/
$.fn.cycle.defaults = {
animIn: {},
animOut: {},
fx: 'fade',
    after: null,
    before: null,
cssBefore: {},
cssAfter: {},
    delay: 0,
    fit: 0,
    height: 'auto',
metaAttr: 'cycle',
    next: null,
    pause: 0,
    prev: null,
    speed: 1000,
    slideExpr: null,
    sync: 1,
    timeout: 4000
};

})(jQuery);window.le = window.le || {};window.le.uxd = le.uxd || {};le.uxd.namespace = function(nsString){	var parts = nsString.split('.'),		parent = le,		i;			if (parts[0] === 'le'){		parts = parts.slice(1);	}		for(i=0;i< parts.length;i++){		if (typeof parent[parts[i]] === 'undefined'){			parent[parts[i]] = {};		}		parent = parent[parts[i]];	}	return parent;};le.uxd.namespace('le.uxd.ui');

(function (le, $) {
	var ui = le.modernizrfix = {};

	ui.detectBoxSizing = function () {
		Modernizr.addTest('boxsizing', function() {
			return Modernizr.testAllProps('boxSizing') && (document.documentMode === undefined || document.documentMode > 7);
		});
	};

	ui.detectNthChild = function () {
		// https://gist.github.com/1333330
		Modernizr.testStyles('#modernizr div:nth-child(3n){width:10px}', function (elem, rule) {
			var bool = false,
				divs = elem.getElementsByTagName('div'),
				test;

			if (divs.length === 7) {
				test = window.getComputedStyle ? function (i) {
					return getComputedStyle(divs[i], null).width === '10px';
				} : function (i) {
					return divs[i].currentStyle.width === '10px';
				};
				bool = !test(0) && !test(1) && test(2) && !test(3) && !test(4) && test(5) && !test(6);
			}
			Modernizr.addTest('nthchild', bool);
		}, 7);
	};

	ui.fixBoxSizing = function () {
		if (!Modernizr.boxsizing) {
			$('.region').wrapInner('<div class="region-wrap"><\/div>');
			$('.blocks > div').wrapInner('<div class="blocks-wrap"><\/div>');
		}
	};


	ui.fixNthChild = function () {
		if (Modernizr.nthchild) return;

		var $blocks = $('.blocks li'),
			blocksEnd = false,
			blocksStart = false,
			endClass = 'blocks-end',
			startClass = 'blocks-start',
			updateNthChild = function () {
				if (ui.matchViewport('(min-width:600px)')) {
					blocksEnd = '.blocks-two-up > div:nth-child(2n),' +
						'.blocks-three-up > div:nth-child(3n),' +
						'.blocks-four-up > div:nth-child(4n),' +
						'.blocks-five-up > div:nth-child(5n),' +
						'.blocks-six-up > div:nth-child(6n)';
					blocksStart = '.blocks-two-up > div:nth-child(2n+1),' +
						'.blocks-three-up > div:nth-child(3n+1),' +
						'.blocks-four-up > div:nth-child(4n+1),' +
						'.blocks-five-up > div:nth-child(5n+1),' +
						'.blocks-six-up > div:nth-child(6n+1)';
				} else if (ui.matchViewport('(min-width:480px)')) {
					blocksEnd = '.blocks-two-up > div:nth-child(2n),' +
						'.blocks-three-up > div:nth-child(2n),' +
						'.blocks-four-up > div:nth-child(2n),' +
						'.blocks-five-up > div:nth-child(3n),' +
						'.blocks-six-up > div:nth-child(3n)';
					blocksStart = '.blocks-two-up > div:nth-child(2n+1),' +
						'.blocks-three-up > div:nth-child(2n+1),' +
						'.blocks-four-up > div:nth-child(2n+1),' +
						'.blocks-five-up > div:nth-child(3n+1),' +
						'.blocks-six-up > div:nth-child(3n+1)';
				} else if (ui.matchViewport('(min-width:320px)')) {
					blocksEnd = '.blocks-four-up > div:nth-child(2n),' +
						'.blocks-five-up > div:nth-child(2n),' +
						'.blocks-six-up > div:nth-child(2n)';
					blocksStart = '.blocks-four-up > div:nth-child(2n+1),' +
						'.blocks-five-up > div:nth-child(2n+1),' +
						'.blocks-six-up > div:nth-child(2n+1)';
				}

				$blocks.removeClass(startClass).removeClass(endClass);

				if (blocksStart) {
					$(blocksStart).addClass(startClass);
				}

				if (blocksEnd && $('html').hasClass('ie7')) {
					$(blocksEnd).addClass(endClass);
				}
			};

		ui.onDelayedResize(updateNthChild, true);
	};

	ui.matchViewport = function (value) {
		if (!(value)) {
			return false;
		} else if (Modernizr.mq('only all')) {
			if (Modernizr.mq(value)) {
				return true;
			} else {
				return false;
			}
		} else if ((value.indexOf('min-width') > 0 && ui.viewportWidth() >= value.replace('(min-width:', '').replace('px)', '')) || (value.indexOf('min-height') > 0 && ui.viewportHeight() >= value.replace('(min-height:', '').replace('px)', ''))) {
			return true;
		} else {
			return false;
		}
	};

	ui.onDelayedResize = function (callback, fireNow) {
		if (typeof callback !== 'function' || typeof fireNow !== 'boolean') return;

		if (fireNow) callback();

		var delay = (function () {
				var timer = 0;

				return function (callback, ms) {
					clearTimeout(timer);
					timer = setTimeout(callback, ms || 250);
				};
			}());

		$(window).resize(function () {
			delay(callback);
		});
	};

	ui.viewportHeight = function () {
		return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight || 0;
	};

	ui.viewportWidth = function () {
		return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth || 0;
	};



	$(function () {
		
		function doFixes(){
			ui.detectBoxSizing();
			ui.detectNthChild();
			ui.fixBoxSizing();
			ui.fixNthChild();
		}
		
		function loadFixes(){
			if (!Modernizr){
				setTimeout(loadFixes,100);
			}else{
				doFixes();
			}
		}
		
		loadFixes();
	});
}(le.uxd.ui, jQuery));le.uxd.namespace('le.uxd.ui.personalization');le.uxd.ui.personalization.certona = {	showHoverRec: function(target, size, opts){		le.uxd.ui.hoverCard.open(			$(target),			{				parentClass	:	'certona-recs', // pass style information to the hovercard				onFillStart	:	function(content){									var $content = $(content);									var $img = $content.find('img');									var imageOnload = function(){										$img.attr('src',this.src);									};									var image = new Image();																		image.onload = image.onerror = null;									image.onload = imageOnload;	// must come before image.src									image.src = $img.attr('src').replace(/\?.+/g,'?'+$img.attr('data-mouseover-image'));									return $content;								},				width		: 133,				height		: 265		});	}};le.uxd.namespace('le.uxd.ui');le.uxd.ui.hoverCard = function() {	var _baseHtml = '<div class="hc"> \						<div class="hct"> \							<b class="hcw"></b><b class="hcn"></b><b class="hce"></b> \						</div> \						<div class="hcm"> \							<b class="hcw"></b> \							<div class="hcc"></div> \							<b class="hce"></b> \						</div> \						<div class="hcb"> \							<b class="hcw"></b><b class="hcs"></b><b class="hce"></b> \						</div> \					</div>';				var defaults = {		onFillStart: null,		onFillComplete: null,		skin: 'shadow',		skinSize: 'medium',		paddingSize: 'medium',		width: '100%',		height: '100%',		parentClass: ''	};	var _getViewportCoords = function(){		var st = $(document).scrollTop(),			sl = $(document).scrollLeft();		return {			x1: sl,			x2: $(window).width() + sl,			y1: st,			y2: $(window).height() + st		}	};	var _convert = function($hcSettings) {		var offSetSkinSize, offSetPaddingSize, paddingSizeName, skinSize = $hcSettings.skinSize,			paddingSize = $hcSettings.paddingSize; // converting skin size		if (skinSize == 'small') {			offSetSkinSize = 5;		}		if (skinSize == 'medium') {			offSetSkinSize = 10;		}		if (skinSize == 'large') {			offSetSkinSize = 20;		} // converting padding name and size		if (paddingSize == 'small') {			paddingSizeName = 'pas';			offSetPaddingSize = 5;		}		if (paddingSize == 'medium') {			paddingSizeName = 'pam';			offSetPaddingSize = 10;		}		if (paddingSize == 'large') {			paddingSizeName = 'pal';			offSetPaddingSize = 20;		}		return {			offSetSize: offSetSkinSize + offSetPaddingSize,			paddingSizeName: paddingSizeName		};	};	var _build = function() {		return $(_baseHtml);	};		var _fill = function(content, $hoverCard, $hcSettings) {		var $hcContent = content;		if ($(content).length > 0) {			var $elm = $(content);			$hcContent = $('<div>').append($elm.clone()).html();		}		if ($hcSettings.onFillStart && typeof $hcSettings.onFillStart == 'function') {			$hcContent = $hcSettings.onFillStart($hcContent);		}		$hoverCard.find('.hcc').html($hcContent).end() 			.addClass('hc-' + $hcSettings.skin + '-' + $hcSettings.skinSize + '');		if ($hcSettings.onFillComplete && typeof $hcSettings.onFillComplete == 'function') {			$hoverCard = $hcSettings.onFillComplete($hoverCard);		}		return $hoverCard;	};	var _show = function(content, $hoverCard, $hcSettings) {		var $elm = content;		var hoverCardOptions = _convert($hcSettings);		var $hcPosition = $elm.offset();		var $elmWidth = $elm.width();		var $elmHeight = $elm.height();		var hcPositionOffsetWidth = ($hcSettings.width - $elmWidth) / 2;		var hcPositionOffsetHeight = ($hcSettings.height - $elmHeight) / 2;		var v = _getViewportCoords();				var oCoords = {};		oCoords.x1 = $hcPosition.left - (hcPositionOffsetWidth) - hoverCardOptions.offSetSize;		oCoords.x2 = oCoords.x1 + $hcSettings.width + (hoverCardOptions.offSetSize * 2);		oCoords.y1 = $hcPosition.top - (hcPositionOffsetHeight) - hoverCardOptions.offSetSize;		oCoords.y2 = oCoords.y1 + $hcSettings.height + (hoverCardOptions.offSetSize * 2);				oCoords.width = function(){			return this.x2-this.x1;		};		oCoords.height = function(){			return this.y2 - this.y1;		}				var nCoords = $.extend(true,{},oCoords);				if (oCoords.y1 < v.y1){			nCoords.y1 = v.y1;			nCoords.y2 = v.y1 + oCoords.height();		}				if (oCoords.y2 > v.y2){			nCoords.y2 = v.y2 - (hoverCardOptions.offSetSize / 2);			nCoords.y1 = nCoords.y2 - oCoords.height();		}				if (oCoords.x1 < v.x1){			nCoords.x1 = v.x1;			nCoords.x2 = v.x1 + oCoords.width();		}				if (oCoords.x2 > v.x2){			nCoords.x2 = v.x2 - (hoverCardOptions.offSetSize / 2);			nCoords.x1 = nCoords.x2 - oCoords.width();		}		$hoverCard			.find('.hcc').addClass(hoverCardOptions.paddingSizeName + ' ' + $hcSettings.parentClass)			.end()			.css({							"width": $elmWidth + (hoverCardOptions.offSetSize * 2),				"height": $elmHeight + (hoverCardOptions.offSetSize * 2),				"left": $hcPosition.left - hoverCardOptions.offSetSize,				"top": $hcPosition.top - hoverCardOptions.offSetSize,				"display": 'block'			});				$('body').prepend($hoverCard);				$hoverCard.animate({			width: nCoords.width(),			height: nCoords.height(),			left: nCoords.x1,			top: nCoords.y1		}, 100);				$hoverCard.mouseleave(function(){				setTimeout( function() {				_destroy($hoverCard);			}, 1 );		});				};	var _destroy = function($hoverCard) {		$hoverCard.stop().remove();	};	var _open = function(content, options) {		var $hoverCard = _build();		var $hcSettings = $.extend({}, defaults, options);		_fill(content, $hoverCard, $hcSettings);		_show(content, $hoverCard, $hcSettings);				// clean up		setTimeout(function(){			_destroy($hoverCard);		},10000);	};	return {		open: function(content, options) {			_open(content, options);		},		close: function() {			_destroy();		}	};}();le.uxd.namespace('le.uxd.ui');

le.uxd.ui.promotion = {
			getOfferDetailsUrl: function(){
				var promoCookie = $.cookie("promoCookieKey");
				var promoId = (promoCookie) ? promoCookie.split('_').slice(0,2).join("_") : "";
				var offerDetailsUrl = (promoCookie) ? "/pp/OfferDetails_"+promoCookie.split("_")[1]+"_"+promoCookie.split("_")[0]+".html" : "";
				this.offerDetailsUrl = offerDetailsUrl;
				
				return this.offerDetailsUrl;
				
			},
			displayPromotion: function(options){
				var defaults = {
					showInFooter:true,
					showInModal:false,
					location: 'footer'
				};
				
				var displayOptions = $.extend({}, defaults, options);

				var offerDetailsUrl = this.getOfferDetailsUrl();
				
				if(offerDetailsUrl){
					if(displayOptions.location == 'footer'){
						le.uxd.ui.promotion._showInPermaFooter();
					}
					if(displayOptions.location == 'modal'){
						le.uxd.ui.promotion._showInModal();
					}
				}else{
					le.uxd.ui.promotion.clearPromotion();
				}
			},
			clearPromotion: function(){
					
					var $pfPromo = $('#pf-promo');
					var promoTitle = $('.promo-title', $pfPromo);
					var promoPanel = $('.promo-panel p', $pfPromo);
					var promoPanelTitle = $('.promo-panel-title', $pfPromo);
					
					$pfPromo.find('pf-levee').css('display','none');
					promoTitle.text('');
					promoPanel.text('');
					promoPanelTitle.text('');
					
				
			},
			_showInPermaFooter: function(){

				var offerDetailsUrl = this.getOfferDetailsUrl();

				var populatePromoInfo = function(ajaxResponse){	
									
					var $ajaxResponse = $(ajaxResponse);
					var ajaxPromoTitle = $ajaxResponse.find('.txtHeader').text();
					var ajaxPromoDescription = $ajaxResponse.find('#detailCopy table tr td').text();
					var $pfPromo = $('#pf-promo');
					var promoTitle = $('.promo-title', $pfPromo);
					var promoPanel = $('.promo-panel p', $pfPromo);
					var promoPanelTitle = $('.promo-panel-title', $pfPromo);
					
					promoTitle.html(ajaxPromoTitle);
					promoPanel.html(ajaxPromoDescription);
					promoPanelTitle.html(ajaxPromoTitle);
					
					//we need to get the height of the promo description copy
					$pfPromo.find('.oo-water').css('display','block').end().css('display','block');
					
					
					if(promoTitle.width() >= 400){
						promoTitle.append('<span> &#8230; view details<span>');
					}

					if($pfPromo.find('.oo-water').height()>120){
						
						$pfPromo.find('.promo-panel').css({'height':'100px'});
						
						$pfPromo.find('a.more').click(function(){
							$(this).remove();
							$pfPromo.find('.promo-panel').css('height','100%');
						});
						
					}else{
						$pfPromo.find('a.more').remove();
					}

					$pfPromo.find('.pf-levee').leLevee();
				};
				
				$.when(
					$.get(offerDetailsUrl)
				).done(
					populatePromoInfo

				);
			
			},
			_showInModal: function(){
				var applyPromoStatus = ""+($.query.get("applyPromo")+"").match(/^\w+$/)+"";
				
				var offerDetailsUrl = this.getOfferDetailsUrl();
				
				var populatePromoInfo = function(ajaxResponse){	
									
					var $ajaxResponse = $(ajaxResponse);
					var ajaxPromoTitle = $ajaxResponse.find('.txtHeader').text();
					var ajaxPromoDescription = $ajaxResponse.find('#detailCopy table tr td').text();
						
						var overLayHtml = null;
						
						switch (applyPromoStatus) {
							case "0":
							case "7":
								overLayHtml = '<h1 class="promo-title">'+ajaxPromoTitle+'</h1>'+
									'<p><a href="javascript:LE_popup(\''+offerDetailsUrl+'\');">details</a></p>'+
									'<span class="oo-fe oo-btn btnp"><span class="first-child"><a href="#" class="close">Shop</a></span></span>';
								break;
							case "emailPromoOff":
								overLayHtml = '<p><img src="/promo/errors/OL_emailPromoOff.jpg"></p>'+
									'<span class="oo-fe oo-btn btnp"><span class="first-child"><a href="#" class="close">continue</a></span></span>';
								break;
							case "promoOff":
								overLayHtml = '<p><img src="/promo/errors/OL_promoOff.jpg"></p>'+
									'<span class="oo-fe oo-btn btnp"><span class="first-child"><a href="#" class="close">continue</a></span></span>';
								break;
							case "51":
								overLayHtml = '<p><img src="/promo/errors/OL_maxUse.jpg"></p>'+
									'<span class="oo-fe oo-btn btnp"><span class="first-child"><a href="#" class="close">continue</a></span></span>';
								break;
							default:
								overLayHtml = '<p><img src="/promo/errors/OL_default_message.jpg"></p>'+
									'<span class="oo-fe oo-btn btnp"><span class="first-child"><a href="#" class="close">continue</a></span></span>';
								break;
						}
					
					overlayAlert(overLayHtml);

				};
				
				$.when(
					$.get(offerDetailsUrl)
				).done(
					populatePromoInfo
				);

			}


};(function($){	
	$.leLevee = function(el, options, parameter){		
		// To avoid scope issues, use 'base' instead of 'this'
		// to reference this class from internal events and functions.
		var base = this;
		
		// Access to jQuery and DOM versions of element
		base.$el = $(el);
		base.el = el;
		
		// Add a reverse reference to the DOM object
		base.$el.data("le.udx.plugins.Levee", base);
		
		base.init = function(){
			if( typeof( parameter ) === "undefined" || parameter === null ) parameter = "value";
			
			base.$el.data('levee_set','true');
			
			base.parameter = parameter;
			
			base.options = $.extend({},$.leLevee.defaultOptions, options);
			
			
			base.$damControl = base.$el.find('a.oo-dam');		//set the controlling class for the dam
			base.$floodWater = base.$el.find('.oo-water');		//sets the object for the water
			base.animate = base.$el.attr('data-animate');
	
			base.addEvent();
		};

		// Sample Function, Uncomment to use
		// base.functionName = function(paramaters){
		// 
		// };
		
		base.isVisible = function(){
		// Put your initialization code here
			return (base.$floodWater.is(':visible')) ? 1 : 0;
		};
		
		base.addEvent = function(){
			base.$floodWater.css({'display':'none'});

			base.$damControl.click(function(){
					base.$el.addClass('oo-'+base.animate);
					if(!base.isVisible()){
						base.$floodWater.stop().animate({			//animate the floodwater
							'height': 'toggle'
						}, 500);	
					}
					else{
						base.$floodWater.animate({			//animate the floodwater
							'height': 'toggle'
						}, 500);
					}
			});
		};
		
		// Run initializer
		base.init();
	};
	
	$.leLevee.defaultOptions = {
		option: "value"
	};
	
	$.fn.leLevee = function(options, parameter){
		return this.each(function(){
			if(!$(this).data('levee_set')){
				(new $.leLevee(this, options, parameter));
			}
		});
	};
	
})(jQuery);var addPageSizeToURL = function(href) {
	var lhref = href;
	var setpagecookievar = $.cookie("setPageSize");


	// set the page size on the url
	if (lhref.indexOf("setPageSize=") == -1 && lhref.indexOf("pageSize=") == -1) {
		if ($.cookie("kiosk") != null) setpagecookievar  = 12;
		if (setpagecookievar != undefined && 
				setpagecookievar != null && setpagecookievar != "" &&
				setpagecookievar > 0) {
			lhref = lhref + "&pageSize=" + setpagecookievar;
		}
	}
	else {
		if (lhref.indexOf("setPageSize=") == -1 && lhref.indexOf("pageSize=") > 0) {
			if ($.cookie("kiosk") != null) setpagecookievar  = 12;
			if (setpagecookievar != undefined && 
					setpagecookievar != null && setpagecookievar != "" &&
					setpagecookievar > 0) {                                      
				lhref = lhref.replace(/pageSize=\d+/g,"pageSize=" + setpagecookievar);
			}
		}
	}
	return lhref;
}
var addSortToURL = function(href) {
	var lhref = href;
	var setSortCookie = $.cookie("setSort");

	// set the sort on the url
	if (lhref.indexOf("setSort=") == -1 && lhref.indexOf("sort=") == -1) {
		if (setSortCookie != undefined && setSortCookie != null && setSortCookie != "") {
			lhref = lhref + "&sort=" + encodeURIComponent(setSortCookie).replace(/%20/g, '+');
		}
	}
	else {
		if (lhref.indexOf("setSort=") == -1 && lhref.indexOf("sort=") > 0) {
			if (setSortCookie != undefined && setSortCookie != null && setSortCookie != "") {                                   
				lhref = lhref.replace(/sort=[^&]+/g,"sort=" + encodeURIComponent(setSortCookie).replace(/%20/g, '+'));
			}
		}
	}
	return lhref;
}

$("a[href*='/ix/']").live("click",function(){
	this.href = addPageSizeToURL(this.href);
	this.href = addSortToURL(this.href);
});le.uxd.namespace('le.uxd.ui.abtest');
le.uxd.ui.abtest.manager = function(){
	
	var getGroup = function(id, alloc) {
		for(var i=0,base=0; i< alloc.length; i++) {
			base +=alloc[i];
			if (id < base) break;
		}
		return String.fromCharCode(65+i);
	};
	
	return {

		execute: function (testName, opts) {
			try {
				var forcedGroup = $.query ? $.query.get(testName) : '';
				if (getCookie("kiosk") != "") forcedGroup = opts.kioskGroup;
				
				forcedGroup = forcedGroup.toUpperCase();
				
				if (forcedGroup.match(/^[A-Z]$/) != null) {
					setCookie(testName,forcedGroup,opts.duration);
				}
				
				var group = getCookie(testName);
				if((group == null || group.match(/^[A-Z]$/) == null)){
					group = getGroup(new Date().getMilliseconds()%100, opts.allocation);
					setCookie(testName,group,opts.duration);
				}
				s_omtr[opts.eVar]=s_omtr.getValOnce(opts.eVarFormat(testName, group), testName+'-setOnce', 0);
				
				opts.command(group);
			}catch(e){
				if (opts.error && typeof opts.error == 'function') {
					opts.error();
				}
			}  
			return group;
		}
	}
}();(function(){

	/*=============================================================
	
	START - document.ready

	-------------------------------------------------------------*/
	
	$(document).ready(function(){
	
			//Toggle Family Sites
			$('#fn-family-sites-dropdown').bind('click',function(e){
				e.preventDefault();
				e.stopPropagation();
				$(this).parent().find(".family-sites-container").toggle();
			});
			
			//Hide Family of Sites
			$('body').bind('click', function(){
				if($('.family-sites-container:visible')){
					$('.family-sites-container').hide();
				}
			});

			
			// Initiate Watermarks
			leutil.ui.watermarkHandler.init();

			// Site Search			
			$("#fn-site-search-form").submit(function(){
				
				if($('#fn-site-search-input').val().length == 0){
					
					leutil.ui.tooltipHandler.show({
						button: $(".site-search-button"),
						text: "Please enter a keyword or item # in the search box, then click \"Search\".",
						type: "error", 
						orientation: "top"
					});	
				
					$("#fn-site-search-input").focus();
				
								
					//Omniture Search Tags
					s_omtr = s_gi(s_account);
					s_omtr.pageName="Null search pop";
					s_omtr.tl(true,'o','link');

					return false;
					
				}

			});
			
			// Hide site search tooltip
			$("#fn-site-search-input").bind('keyup focusout blur', function() {
				leutil.ui.tooltipHandler.hideAll();
			});

			
			// Account Status (Sign In & Sign Out)
			if($.cookie){
				if ($.cookie("signedIn") == "1" || $.cookie("cid") != null){
					$('#account-tool-status, #sign-in').text('Sign Out').attr({href:"http://" + location.host + "/cgi-bin/SignOut.cgi?resetSID=Y"});
					$('#account-tool-access').text('My Account').attr({href:"https://" + location.host + "/cgi-bin/Login.cgi?redirect=/cgi-bin/AccountPortal.cgi&type=GenLogin"});
				} else {
					$('#account-tool-status, #sign-in').text('Sign In').attr({href:"https://" + location.host + "/cgi-bin/Login.cgi?redirect=/cgi-bin/AccountPortal.cgi&type=GenLogin"});
					$('#account-tool-access').text('Create Account').attr({href:"https://" + location.host + "/cgi-bin/Login.cgi?redirect=/cgi-bin/AccountPortal.cgi&type=GenLogin"});
					$.cookie("signedIn", null);
				}
			}
			
			// Partner Links Overlay  */
			$('.fn-partner-link').live('click', function(){
				overlayAlert(''+
					'<p class="nav">'+
					'<img src="/global_navigation/images/overlay/partner_link.jpg"><br />'+
					'<span class="oo-fe oo-btn btnt mrm">'+
						'<span class="first-child">'+
							'<a href="'+$(this).attr('href')+'" target="_blank">continue</a>'+
						'</span>'+
					'</span>'+
					'<span class="oo-fe oo-btn btnp">'+
						'<span class="first-child">'+
							'<a href="javascript:void(0)" class="close">stay on landsend.com</a>'+
						'</span>'+
					'</span>'+
					'</p>'
				);
				return false;
			});

				
	});
	
	
})();(function(){

	/*=============================================================
	
	START - document.ready

	-------------------------------------------------------------*/
	
	$(document).ready(function(){
	
		// Initiate Watermarks
		leutil.ui.watermarkHandler.init();

		// Email Collection
		$("#sitewide-email-signup-input").bind('keyup focusout', function() {
			leutil.ui.tooltipHandler.hideAll();
		});
		
		
		$("#site-wide-email-signup").submit(function() {
		
			var email = $('#sitewide-email-signup-input').val();
			
			var re = new RegExp(/^[A-Z1-9][\w.+-]*@[\w.-]+\.[A-Z]{2,6}$/i);
			
			
			if (email.length == 0 || !re.test(email)) {
			
				leutil.ui.tooltipHandler.show({
					button: $(".email-aquisition-button"),
					text: "Please enter a valid email address to receive exclusive Lands\' End offers and news updates.",
					type: "error", 
					orientation: "top"
				});
				
				$("#sitewide-email-signup-input").focus();
				
				return false;
				
			}
			
		});
		
		//Remove Title Tags
		$('#ft').find('a').hover(function(){
			$(this)
			.attr('data-title',$(this).attr('title'))
			.removeAttr('title');
				
		}, function(){
			$(this).attr('title',$(this).attr('data-title'));
		});

	
	});
	
	
})();(function(){

	/*=============================================================
	
	START - document.ready

	-------------------------------------------------------------*/
	
	$(document).ready(function(){
	
		var pathArray = window.location.pathname.split( '/' );
		// This assumes we are compensating for the /ix/ pathing
		// switch to [1] if once /ix/ is removed.
		var tab = pathArray[2];
		
		$('.fn-tab-'+tab).find('.first-level-title-link').addClass("is-active");
		
		
		
		//Individual Mapping for Landing pages
		if(window.location.pathname == '/kids/') {
			$('.fn-tab-kids').find('.first-level-title-link').addClass("is-active");
		}

		if(window.location.pathname == '/shoes/') {
			$('.fn-tab-shoes').find('.first-level-title-link').addClass("is-active");
		}

		//Individual Mapping for Canvas tab pages
		$('#womens-tab-page').find('.fn-women-tab').find('.first-level-title-link').addClass("is-active");
		$('#mens-tab-page').find('.fn-men-tab').find('.first-level-title-link').addClass("is-active");
		$('#accessories-tab-page').find('.fn-accessories-tab').find('.first-level-title-link').addClass("is-active");
		$('#sale-tab-page').find('.fn-sale-tab').find('.first-level-title-link').addClass("is-active");



		//Mouse over the 2nd level item
		function tabNavOver(){
			$(this)
				.find('.third-level-menu')
				.addClass('is-active')
				.end()
				.find('.second-level-link')
				.addClass('is-active');
		};
		
		//Mouse out of the 2nd level item
		function tabNavOut(){
			$(this)
				.find('.third-level-menu')
				.removeClass('is-active')
				.end()
				.find('.second-level-link')
				.removeClass('is-active');

		};


		// Delay on Third Level drop downs
		// Configured Hover Intent
		var tabNavConfig = {
				over: tabNavOver, // function = onMouseOver callback (REQUIRED)    
				sensitivity:10,
				interval:115,
				timeout: 250, // number = milliseconds delay before onMouseOut    
				out: tabNavOut // function = onMouseOut callback (REQUIRED)    
			};
		
		//Initiate Hover Intent on 2nd level items only
		$('.second-level-item').hoverIntent( tabNavConfig );
	

		//Remove Title Tags
		$('#hd').find('a').hover(function(){
			$(this)
			.attr('data-title',$(this).attr('title'))
			.removeAttr('title');
				
		}, function(){
			$(this).attr('title',$(this).attr('data-title'));
		});


		// Combines URLs which were split to make for better SEO
		$('#tab-navigation a').click( function(e) {
			var $target = this;
			le.uxd.ui.urlAttributeCombiner.combine($target, e);
		});
		
	});
	
})();le.uxd.namespace('le.uxd.ui');

le.uxd.ui.urlAttributeCombiner = {

	combine: function ($target, e) {
		var queryData = $($target).attr('data-query') || "";
		var thisHref = $($target).attr('href');
		var fullPath = thisHref + queryData;
		var separator = "";

		// If no data-query then just fire it straight off; otherwise prevent default and then create the URL
		if (queryData.length > 0) {
			e.preventDefault();
		} else {
			return;
		}

		// Use a ? or & as needed
		if (thisHref.indexOf("?") == -1) {
			separator = "?";
		} else {
			separator = "&";
		}

		// Combine elements
		fullPath = thisHref + separator + queryData;

		window.location = fullPath;
	}
	
};$(document).ready(function(){
	
	// take the size button selectors from the pdp and add numeric equivalents from JSON file _size_charts/size_chart_pdp_map.js
	var $root = $('#productGrids');

	if ($root.length > 0){

		var getFeatureSet = function getFeatureSet(parent, parts){
			if (!parent) {
				return false;
			}
			
			for(i=0;i< parts.length;i++){
				if (typeof parent[parts[i]] !== 'undefined'){
					parent = parent[parts[i]];
				}else{
					parent = null;
				}
			}
			return parent;
		};

	
		var displaySizeChartMap = function displaySizeChartMap(data){				
			$root.find('.pp-size-selector').each(function(index,item){
				var 
					$item = $(item),
					feature = $item.attr('data-feature-list'),
					pageKey = $item.find('.pp-text-link').attr('href'),
					parts;
					
				if (feature && pageKey && data){
					
					// add the pageKey as the first item in the key list
					parts = feature.split('_');
					parts.splice('0','0',pageKey);
					
					$item.find('li a').each(function(index,item){
						var 
							$item = $(item),
							idArray = $item.attr('id').split('_');
						
						$item.text(getFeatureSet(data, parts)[idArray[idArray.length-1]]);
					});
				}
			});
		};
		
		$.getJSON('/_size_charts/js/_size_chart_pdp_map.js').done(displaySizeChartMap);
	}
});