(function (e, t) { function rt(e) { return J.test(e + "") } function it() { var e, t = []; return e = function (n, r) { if (t.push(n += " ") > i.cacheLength) { delete e[t.shift()] } return e[n] = r } } function st(e) { e[w] = true; return e } function ot(e) { var t = l.createElement("div"); try { return e(t) } catch (n) { return false } finally { t = null } } function ut(e, t, n, r) { var i, s, o, u, a, c, d, v, g, y; if ((t ? t.ownerDocument || t : E) !== l) { f(t) } t = t || l; n = n || []; if (!e || typeof e !== "string") { return n } if ((u = t.nodeType) !== 1 && u !== 9) { return [] } if (!h && !r) { if (i = K.exec(e)) { if (o = i[1]) { if (u === 9) { s = t.getElementById(o); if (s && s.parentNode) { if (s.id === o) { n.push(s); return n } } else { return n } } else { if (t.ownerDocument && (s = t.ownerDocument.getElementById(o)) && m(t, s) && s.id === o) { n.push(s); return n } } } else if (i[2]) { _.apply(n, D.call(t.getElementsByTagName(e), 0)); return n } else if ((o = i[3]) && S.getByClassName && t.getElementsByClassName) { _.apply(n, D.call(t.getElementsByClassName(o), 0)); return n } } if (S.qsa && !p.test(e)) { d = true; v = w; g = t; y = u === 9 && e; if (u === 1 && t.nodeName.toLowerCase() !== "object") { c = ht(e); if (d = t.getAttribute("id")) { v = d.replace(Y, "\\$&") } else { t.setAttribute("id", v) } v = "[id='" + v + "'] "; a = c.length; while (a--) { c[a] = v + pt(c[a]) } g = $.test(e) && t.parentNode || t; y = c.join(",") } if (y) { try { _.apply(n, D.call(g.querySelectorAll(y), 0)); return n } catch (b) { } finally { if (!d) { t.removeAttribute("id") } } } } } return Et(e.replace(R, "$1"), t, n, r) } function at(e, t) { var n = t && e, r = n && (~t.sourceIndex || A) - (~e.sourceIndex || A); if (r) { return r } if (n) { while (n = n.nextSibling) { if (n === t) { return -1 } } } return e ? 1 : -1 } function ft(e) { return function (t) { var n = t.nodeName.toLowerCase(); return n === "input" && t.type === e } } function lt(e) { return function (t) { var n = t.nodeName.toLowerCase(); return (n === "input" || n === "button") && t.type === e } } function ct(e) { return st(function (t) { t = +t; return st(function (n, r) { var i, s = e([], n.length, t), o = s.length; while (o--) { if (n[i = s[o]]) { n[i] = !(r[i] = n[i]) } } }) }) } function ht(e, t) { var n, r, s, o, u, a, f, l = C[e + " "]; if (l) { return t ? 0 : l.slice(0) } u = e; a = []; f = i.preFilter; while (u) { if (!n || (r = U.exec(u))) { if (r) { u = u.slice(r[0].length) || u } a.push(s = []) } n = false; if (r = z.exec(u)) { n = r.shift(); s.push({ value: n, type: r[0].replace(R, " ") }); u = u.slice(n.length) } for (o in i.filter) { if ((r = V[o].exec(u)) && (!f[o] || (r = f[o](r)))) { n = r.shift(); s.push({ value: n, type: o, matches: r }); u = u.slice(n.length) } } if (!n) { break } } return t ? u.length : u ? ut.error(e) : C(e, a).slice(0) } function pt(e) { var t = 0, n = e.length, r = ""; for (; t < n; t++) { r += e[t].value } return r } function dt(e, t, n) { var i = t.dir, s = n && i === "parentNode", o = T++; return t.first ? function (t, n, r) { while (t = t[i]) { if (t.nodeType === 1 || s) { return e(t, n, r) } } } : function (t, n, u) { var a, f, l, c = x + " " + o; if (u) { while (t = t[i]) { if (t.nodeType === 1 || s) { if (e(t, n, u)) { return true } } } } else { while (t = t[i]) { if (t.nodeType === 1 || s) { l = t[w] || (t[w] = {}); if ((f = l[i]) && f[0] === c) { if ((a = f[1]) === true || a === r) { return a === true } } else { f = l[i] = [c]; f[1] = e(t, n, u) || r; if (f[1] === true) { return true } } } } } } } function vt(e) { return e.length > 1 ? function (t, n, r) { var i = e.length; while (i--) { if (!e[i](t, n, r)) { return false } } return true } : e[0] } function mt(e, t, n, r, i) { var s, o = [], u = 0, a = e.length, f = t != null; for (; u < a; u++) { if (s = e[u]) { if (!n || n(s, r, i)) { o.push(s); if (f) { t.push(u) } } } } return o } function gt(e, t, n, r, i, s) { if (r && !r[w]) { r = gt(r) } if (i && !i[w]) { i = gt(i, s) } return st(function (s, o, u, a) { var f, l, c, h = [], p = [], d = o.length, v = s || wt(t || "*", u.nodeType ? [u] : u, []), m = e && (s || !t) ? mt(v, h, e, u, a) : v, g = n ? i || (s ? e : d || r) ? [] : o : m; if (n) { n(m, g, u, a) } if (r) { f = mt(g, p); r(f, [], u, a); l = f.length; while (l--) { if (c = f[l]) { g[p[l]] = !(m[p[l]] = c) } } } if (s) { if (i || e) { if (i) { f = []; l = g.length; while (l--) { if (c = g[l]) { f.push(m[l] = c) } } i(null, g = [], f, a) } l = g.length; while (l--) { if ((c = g[l]) && (f = i ? P.call(s, c) : h[l]) > -1) { s[f] = !(o[f] = c) } } } } else { g = mt(g === o ? g.splice(d, g.length) : g); if (i) { i(null, o, g, a) } else { _.apply(o, g) } } }) } function yt(e) { var t, n, r, s = e.length, o = i.relative[e[0].type], u = o || i.relative[" "], f = o ? 1 : 0, l = dt(function (e) { return e === t }, u, true), c = dt(function (e) { return P.call(t, e) > -1 }, u, true), h = [function (e, n, r) { return !o && (r || n !== a) || ((t = n).nodeType ? l(e, n, r) : c(e, n, r)) } ]; for (; f < s; f++) { if (n = i.relative[e[f].type]) { h = [dt(vt(h), n)] } else { n = i.filter[e[f].type].apply(null, e[f].matches); if (n[w]) { r = ++f; for (; r < s; r++) { if (i.relative[e[r].type]) { break } } return gt(f > 1 && vt(h), f > 1 && pt(e.slice(0, f - 1)).replace(R, "$1"), n, f < r && yt(e.slice(f, r)), r < s && yt(e = e.slice(r)), r < s && pt(e)) } h.push(n) } } return vt(h) } function bt(e, t) { var n = 0, s = t.length > 0, o = e.length > 0, u = function (u, f, c, h, p) { var d, v, m, g = [], y = 0, b = "0", w = u && [], E = p != null, S = a, T = u || o && i.find["TAG"]("*", p && f.parentNode || f), N = x += S == null ? 1 : Math.random() || .1; if (E) { a = f !== l && f; r = n } for (; (d = T[b]) != null; b++) { if (o && d) { v = 0; while (m = e[v++]) { if (m(d, f, c)) { h.push(d); break } } if (E) { x = N; r = ++n } } if (s) { if (d = !m && d) { y-- } if (u) { w.push(d) } } } y += b; if (s && b !== y) { v = 0; while (m = t[v++]) { m(w, g, f, c) } if (u) { if (y > 0) { while (b--) { if (!(w[b] || g[b])) { g[b] = M.call(h) } } } g = mt(g) } _.apply(h, g); if (E && !u && g.length > 0 && y + t.length > 1) { ut.uniqueSort(h) } } if (E) { x = N; a = S } return w }; return s ? st(u) : u } function wt(e, t, n) { var r = 0, i = t.length; for (; r < i; r++) { ut(e, t[r], n) } return n } function Et(e, t, n, r) { var s, o, a, f, l, c = ht(e); if (!r) { if (c.length === 1) { o = c[0] = c[0].slice(0); if (o.length > 2 && (a = o[0]).type === "ID" && t.nodeType === 9 && !h && i.relative[o[1].type]) { t = i.find["ID"](a.matches[0].replace(et, tt), t)[0]; if (!t) { return n } e = e.slice(o.shift().value.length) } s = V["needsContext"].test(e) ? 0 : o.length; while (s--) { a = o[s]; if (i.relative[f = a.type]) { break } if (l = i.find[f]) { if (r = l(a.matches[0].replace(et, tt), $.test(o[0].type) && t.parentNode || t)) { o.splice(s, 1); e = r.length && pt(o); if (!e) { _.apply(n, D.call(r, 0)); return n } break } } } } } u(e, c)(r, t, h, n, $.test(e)); return n } function St() { } var n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w = "sizzle" + -(new Date), E = e.document, S = {}, x = 0, T = 0, N = it(), C = it(), k = it(), L = typeof t, A = 1 << 31, O = [], M = O.pop, _ = O.push, D = O.slice, P = O.indexOf || function (e) { var t = 0, n = this.length; for (; t < n; t++) { if (this[t] === e) { return t } } return -1 }, H = "[\\x20\\t\\r\\n\\f]", B = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", j = B.replace("w", "w#"), F = "([*^$|!~]?=)", I = "\\[" + H + "*(" + B + ")" + H + "*(?:" + F + H + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + j + ")|)|)" + H + "*\\]", q = ":(" + B + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + I.replace(3, 8) + ")*)|.*)\\)|)", R = new RegExp("^" + H + "+|((?:^|[^\\\\])(?:\\\\.)*)" + H + "+$", "g"), U = new RegExp("^" + H + "*," + H + "*"), z = new RegExp("^" + H + "*([\\x20\\t\\r\\n\\f>+~])" + H + "*"), W = new RegExp(q), X = new RegExp("^" + j + "$"), V = { ID: new RegExp("^#(" + B + ")"), CLASS: new RegExp("^\\.(" + B + ")"), NAME: new RegExp("^\\[name=['\"]?(" + B + ")['\"]?\\]"), TAG: new RegExp("^(" + B.replace("w", "w*") + ")"), ATTR: new RegExp("^" + I), PSEUDO: new RegExp("^" + q), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + H + "*(even|odd|(([+-]|)(\\d*)n|)" + H + "*(?:([+-]|)" + H + "*(\\d+)|))" + H + "*\\)|)", "i"), needsContext: new RegExp("^" + H + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + H + "*((?:-\\d)?\\d*)" + H + "*\\)|)(?=[^-]|$)", "i") }, $ = /[\x20\t\r\n\f]*[+~]/, J = /^[^{]+\{\s*\[native code/, K = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, Q = /^(?:input|select|textarea|button)$/i, G = /^h\d$/i, Y = /'|\\/g, Z = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, et = /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g, tt = function (e, t) { var n = "0x" + t - 65536; return n !== n ? t : n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, n & 1023 | 56320) }; try { D.call(E.documentElement.childNodes, 0)[0].nodeType } catch (nt) { D = function (e) { var t, n = []; while (t = this[e++]) { n.push(t) } return n } } o = ut.isXML = function (e) { var t = e && (e.ownerDocument || e).documentElement; return t ? t.nodeName !== "HTML" : false }; f = ut.setDocument = function (e) { var n = e ? e.ownerDocument || e : E; if (n === l || n.nodeType !== 9 || !n.documentElement) { return l } l = n; c = n.documentElement; h = o(n); S.tagNameNoComments = ot(function (e) { e.appendChild(n.createComment("")); return !e.getElementsByTagName("*").length }); S.attributes = ot(function (e) { e.innerHTML = "<select></select>"; var t = typeof e.lastChild.getAttribute("multiple"); return t !== "boolean" && t !== "string" }); S.getByClassName = ot(function (e) { e.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>"; if (!e.getElementsByClassName || !e.getElementsByClassName("e").length) { return false } e.lastChild.className = "e"; return e.getElementsByClassName("e").length === 2 }); S.getByName = ot(function (e) { e.id = w + 0; e.innerHTML = "<a name='" + w + "'></a><div name='" + w + "'></div>"; c.insertBefore(e, c.firstChild); var t = n.getElementsByName && n.getElementsByName(w).length === 2 + n.getElementsByName(w + 0).length; S.getIdNotName = !n.getElementById(w); c.removeChild(e); return t }); S.sortDetached = ot(function (e) { return ot(function (t) { return e.compareDocumentPosition && !!(e.compareDocumentPosition(t) & 1) }) }); i.attrHandle = ot(function (e) { e.innerHTML = "<a href='#'></a>"; return e.firstChild && typeof e.firstChild.getAttribute !== L && e.firstChild.getAttribute("href") === "#" }) ? {} : { href: function (e) { return e.getAttribute("href", 2) }, type: function (e) { return e.getAttribute("type") } }; if (S.getIdNotName) { i.find["ID"] = function (e, t) { if (typeof t.getElementById !== L && !h) { var n = t.getElementById(e); return n && n.parentNode ? [n] : [] } }; i.filter["ID"] = function (e) { var t = e.replace(et, tt); return function (e) { return e.getAttribute("id") === t } } } else { i.find["ID"] = function (e, n) { if (typeof n.getElementById !== L && !h) { var r = n.getElementById(e); return r ? r.id === e || typeof r.getAttributeNode !== L && r.getAttributeNode("id").value === e ? [r] : t : [] } }; i.filter["ID"] = function (e) { var t = e.replace(et, tt); return function (e) { var n = typeof e.getAttributeNode !== L && e.getAttributeNode("id"); return n && n.value === t } } } i.find["TAG"] = S.tagNameNoComments ? function (e, t) { if (typeof t.getElementsByTagName !== L) { return t.getElementsByTagName(e) } } : function (e, t) { var n, r = [], i = 0, s = t.getElementsByTagName(e); if (e === "*") { while (n = s[i++]) { if (n.nodeType === 1) { r.push(n) } } return r } return s }; i.find["NAME"] = S.getByName && function (e, t) { if (typeof t.getElementsByName !== L) { return t.getElementsByName(name) } }; i.find["CLASS"] = S.getByClassName && function (e, t) { if (typeof t.getElementsByClassName !== L && !h) { return t.getElementsByClassName(e) } }; d = []; p = [":focus"]; if (S.qsa = rt(n.querySelectorAll)) { ot(function (e) { e.innerHTML = "<select><option selected=''></option></select>"; if (!e.querySelectorAll("[selected]").length) { p.push("\\[" + H + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)") } if (!e.querySelectorAll(":checked").length) { p.push(":checked") } }); ot(function (e) { e.innerHTML = "<input type='hidden' i=''/>"; if (e.querySelectorAll("[i^='']").length) { p.push("[*^$]=" + H + "*(?:\"\"|'')") } if (!e.querySelectorAll(":enabled").length) { p.push(":enabled", ":disabled") } e.querySelectorAll("*,:x"); p.push(",.*:") }) } if (S.matchesSelector = rt(v = c.matchesSelector || c.mozMatchesSelector || c.webkitMatchesSelector || c.oMatchesSelector || c.msMatchesSelector)) { ot(function (e) { S.disconnectedMatch = v.call(e, "div"); v.call(e, "[s!='']:x"); d.push("!=", q) }) } p = new RegExp(p.join("|")); d = d.length && new RegExp(d.join("|")); m = rt(c.contains) || c.compareDocumentPosition ? function (e, t) { var n = e.nodeType === 9 ? e.documentElement : e, r = t && t.parentNode; return e === r || !!(r && r.nodeType === 1 && (n.contains ? n.contains(r) : e.compareDocumentPosition && e.compareDocumentPosition(r) & 16)) } : function (e, t) { if (t) { while (t = t.parentNode) { if (t === e) { return true } } } return false }; g = c.compareDocumentPosition ? function (e, t) { if (e === t) { y = true; return 0 } var r = t.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(t); if (r) { if (r & 1 || e.parentNode && e.parentNode.nodeType === 11 || b && t.compareDocumentPosition(e) === r) { if (e === n || m(E, e)) { return -1 } if (t === n || m(E, t)) { return 1 } return b ? P.call(b, e) - P.call(b, t) : 0 } return r & 4 ? -1 : 1 } return e.compareDocumentPosition ? -1 : 1 } : function (e, t) { var r, i = 0, s = e.parentNode, o = t.parentNode, u = [e], a = [t]; if (e === t) { y = true; return 0 } else if (!s || !o) { return e === n ? -1 : t === n ? 1 : s ? -1 : o ? 1 : 0 } else if (s === o) { return at(e, t) } r = e; while (r = r.parentNode) { u.unshift(r) } r = t; while (r = r.parentNode) { a.unshift(r) } while (u[i] === a[i]) { i++ } return i ? at(u[i], a[i]) : u[i] === E ? -1 : a[i] === E ? 1 : 0 }; y = false; [0, 0].sort(g); S.detectDuplicates = y; return l }; ut.matches = function (e, t) { return ut(e, null, null, t) }; ut.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== l) { f(e) } t = t.replace(Z, "='$1']"); if (S.matchesSelector && !h && (!d || !d.test(t)) && !p.test(t)) { try { var n = v.call(e, t); if (n || S.disconnectedMatch || e.document && e.document.nodeType !== 11) { return n } } catch (r) { } } return ut(t, l, null, [e]).length > 0 }; ut.contains = function (e, t) { if ((e.ownerDocument || e) !== l) { f(e) } return m(e, t) }; ut.attr = function (e, t) { var n; if ((e.ownerDocument || e) !== l) { f(e) } if (!h) { t = t.toLowerCase() } if (n = i.attrHandle[t]) { return n(e) } if (h || S.attributes) { return e.getAttribute(t) } return ((n = e.getAttributeNode(t)) || e.getAttribute(t)) && e[t] === true ? t : n && n.specified ? n.value : null }; ut.error = function (e) { throw new Error("Syntax error, unrecognized expression: " + e) }; ut.uniqueSort = function (e) { var t, n = [], r = 1, i = 0; y = !S.detectDuplicates; b = !S.sortDetached && e.slice(0); e.sort(g); if (y) { for (; t = e[r]; r++) { if (t === e[r - 1]) { i = n.push(r) } } while (i--) { e.splice(n[i], 1) } } return e }; s = ut.getText = function (e) { var t, n = "", r = 0, i = e.nodeType; if (!i) { for (; t = e[r]; r++) { n += s(t) } } else if (i === 1 || i === 9 || i === 11) { if (typeof e.textContent === "string") { return e.textContent } else { for (e = e.firstChild; e; e = e.nextSibling) { n += s(e) } } } else if (i === 3 || i === 4) { return e.nodeValue } return n }; i = ut.selectors = { cacheLength: 50, createPseudo: st, match: V, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling"} }, preFilter: { ATTR: function (e) { e[1] = e[1].replace(et, tt); e[3] = (e[4] || e[5] || "").replace(et, tt); if (e[2] === "~=") { e[3] = " " + e[3] + " " } return e.slice(0, 4) }, CHILD: function (e) { e[1] = e[1].toLowerCase(); if (e[1].slice(0, 3) === "nth") { if (!e[3]) { ut.error(e[0]) } e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * (e[3] === "even" || e[3] === "odd")); e[5] = +(e[7] + e[8] || e[3] === "odd") } else if (e[3]) { ut.error(e[0]) } return e }, PSEUDO: function (e) { var t, n = !e[5] && e[2]; if (V["CHILD"].test(e[0])) { return null } if (e[4]) { e[2] = e[4] } else if (n && W.test(n) && (t = ht(n, true)) && (t = n.indexOf(")", n.length - t) - n.length)) { e[0] = e[0].slice(0, t); e[2] = n.slice(0, t) } return e.slice(0, 3) } }, filter: { TAG: function (e) { if (e === "*") { return function () { return true } } e = e.replace(et, tt).toLowerCase(); return function (t) { return t.nodeName && t.nodeName.toLowerCase() === e } }, CLASS: function (e) { var t = N[e + " "]; return t || (t = new RegExp("(^|" + H + ")" + e + "(" + H + "|$)")) && N(e, function (e) { return t.test(e.className || typeof e.getAttribute !== L && e.getAttribute("class") || "") }) }, ATTR: function (e, t, n) { return function (r) { var i = ut.attr(r, e); if (i == null) { return t === "!=" } if (!t) { return true } i += ""; return t === "=" ? i === n : t === "!=" ? i !== n : t === "^=" ? n && i.indexOf(n) === 0 : t === "*=" ? n && i.indexOf(n) > -1 : t === "$=" ? n && i.slice(-n.length) === n : t === "~=" ? (" " + i + " ").indexOf(n) > -1 : t === "|=" ? i === n || i.slice(0, n.length + 1) === n + "-" : false } }, CHILD: function (e, t, n, r, i) { var s = e.slice(0, 3) !== "nth", o = e.slice(-4) !== "last", u = t === "of-type"; return r === 1 && i === 0 ? function (e) { return !!e.parentNode } : function (t, n, a) { var f, l, c, h, p, d, v = s !== o ? "nextSibling" : "previousSibling", m = t.parentNode, g = u && t.nodeName.toLowerCase(), y = !a && !u; if (m) { if (s) { while (v) { c = t; while (c = c[v]) { if (u ? c.nodeName.toLowerCase() === g : c.nodeType === 1) { return false } } d = v = e === "only" && !d && "nextSibling" } return true } d = [o ? m.firstChild : m.lastChild]; if (o && y) { l = m[w] || (m[w] = {}); f = l[e] || []; p = f[0] === x && f[1]; h = f[0] === x && f[2]; c = p && m.childNodes[p]; while (c = ++p && c && c[v] || (h = p = 0) || d.pop()) { if (c.nodeType === 1 && ++h && c === t) { l[e] = [x, p, h]; break } } } else if (y && (f = (t[w] || (t[w] = {}))[e]) && f[0] === x) { h = f[1] } else { while (c = ++p && c && c[v] || (h = p = 0) || d.pop()) { if ((u ? c.nodeName.toLowerCase() === g : c.nodeType === 1) && ++h) { if (y) { (c[w] || (c[w] = {}))[e] = [x, h] } if (c === t) { break } } } } h -= i; return h === r || h % r === 0 && h / r >= 0 } } }, PSEUDO: function (e, t) { var n, r = i.pseudos[e] || i.setFilters[e.toLowerCase()] || ut.error("unsupported pseudo: " + e); if (r[w]) { return r(t) } if (r.length > 1) { n = [e, e, "", t]; return i.setFilters.hasOwnProperty(e.toLowerCase()) ? st(function (e, n) { var i, s = r(e, t), o = s.length; while (o--) { i = P.call(e, s[o]); e[i] = !(n[i] = s[o]) } }) : function (e) { return r(e, 0, n) } } return r } }, pseudos: { not: st(function (e) { var t = [], n = [], r = u(e.replace(R, "$1")); return r[w] ? st(function (e, t, n, i) { var s, o = r(e, null, i, []), u = e.length; while (u--) { if (s = o[u]) { e[u] = !(t[u] = s) } } }) : function (e, i, s) { t[0] = e; r(t, null, s, n); return !n.pop() } }), has: st(function (e) { return function (t) { return ut(e, t).length > 0 } }), contains: st(function (e) { return function (t) { return (t.textContent || t.innerText || s(t)).indexOf(e) > -1 } }), lang: st(function (e) { if (!X.test(e || "")) { ut.error("unsupported lang: " + e) } e = e.replace(et, tt).toLowerCase(); return function (t) { var n; do { if (n = h ? t.getAttribute("xml:lang") || t.getAttribute("lang") : t.lang) { n = n.toLowerCase(); return n === e || n.indexOf(e + "-") === 0 } } while ((t = t.parentNode) && t.nodeType === 1); return false } }), target: function (t) { var n = e.location && e.location.hash; return n && n.slice(1) === t.id }, root: function (e) { return e === c }, focus: function (e) { return e === l.activeElement && (!l.hasFocus || l.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: function (e) { return e.disabled === false }, disabled: function (e) { return e.disabled === true }, checked: function (e) { var t = e.nodeName.toLowerCase(); return t === "input" && !!e.checked || t === "option" && !!e.selected }, selected: function (e) { if (e.parentNode) { e.parentNode.selectedIndex } return e.selected === true }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling) { if (e.nodeName > "@" || e.nodeType === 3 || e.nodeType === 4) { return false } } return true }, parent: function (e) { return !i.pseudos["empty"](e) }, header: function (e) { return G.test(e.nodeName) }, input: function (e) { return Q.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return t === "input" && e.type === "button" || t === "button" }, text: function (e) { var t; return e.nodeName.toLowerCase() === "input" && e.type === "text" && ((t = e.getAttribute("type")) == null || t.toLowerCase() === e.type) }, first: ct(function () { return [0] }), last: ct(function (e, t) { return [t - 1] }), eq: ct(function (e, t, n) { return [n < 0 ? n + t : n] }), even: ct(function (e, t) { var n = 0; for (; n < t; n += 2) { e.push(n) } return e }), odd: ct(function (e, t) { var n = 1; for (; n < t; n += 2) { e.push(n) } return e }), lt: ct(function (e, t, n) { var r = n < 0 ? n + t : n; for (; --r >= 0; ) { e.push(r) } return e }), gt: ct(function (e, t, n) { var r = n < 0 ? n + t : n; for (; ++r < t; ) { e.push(r) } return e })} }; for (n in { radio: true, checkbox: true, file: true, password: true, image: true }) { i.pseudos[n] = ft(n) } for (n in { submit: true, reset: true }) { i.pseudos[n] = lt(n) } u = ut.compile = function (e, t) { var n, r = [], i = [], s = k[e + " "]; if (!s) { if (!t) { t = ht(e) } n = t.length; while (n--) { s = yt(t[n]); if (s[w]) { r.push(s) } else { i.push(s) } } s = k(e, bt(i, r)) } return s }; i.pseudos["nth"] = i.pseudos["eq"]; i.filters = St.prototype = i.pseudos; i.setFilters = new St; f(); if (typeof define === "function" && define.amd) { define(function () { return ut }) } else { e.Sizzle = ut } })(window); var TLT = function () { "use strict"; function e(e, t) { var n, r; if (e) { for (n = 0, r = e.length; n < r; n += 1) { if (e[n] === t) { return n } } } return -1 } function t(e) { return typeof e === "undefined" || e === null } function n(e, t, n) { var r, i; if (!e || !e.length || !t || !t.call) { return } for (r = 0, i = e.length; r < i; r += 1) { t.call(n, e[r], r, e) } } function r(e) { var t, n, r, i; for (r = 1, i = arguments.length; r < i; r += 1) { n = arguments[r]; for (t in n) { if (Object.prototype.hasOwnProperty.call(n, t)) { e[t] = n[t] } } } return e } function i(e) { if (e.nodeType !== 9) { return !t(e.ownerDocument) ? e.ownerDocument : e.document } return e } function s(e) { if (e.self !== e) { var n = i(e); return !t(n.defaultView) ? n.defaultView : n.parentWindow } return e } function o(e, t, n, r) { var i = null, s = TLT.getService("queue"), o = TLT.getModule("replay"), u = null; if (!t || typeof t !== "string") { return } if (!n || typeof n !== "string") { n = "" } i = { type: 2, screenview: { type: e, name: t, url: window.location.pathname, referrer: n} }; if (e === "LOAD") { if (o) { u = { type: "screenview_load" }; o.onevent(u) } } if (e === "LOAD" || e === "UNLOAD") { s.post("", i, "DEFAULT") } } var u = {}, a = {}, f = false, l = null, c = function () { var e = 0; return e } (), h = function () { var e = false; return e } (), p = window.window, d = null, v = { config: ["getConfig", "updateConfig", "getCoreConfig", "updateCoreConfig", "getModuleConfig", "updateModuleConfig", "getServiceConfig", "updateServiceConfig"], queue: ["post", "setAutoFlush", "flushAll"], browserBase: ["processDOMEvent"] }, m = function () { var e = {}; return { normalizeModuleEvents: function (t, i) { var s = false, o = false, u = N.getService("browser"); e[t] = { loadFired: false, pageHideFired: false }; n(i, function (e) { switch (e.name) { case "load": s = true; i.push(r(r({}, e), { name: "pageshow" })); break; case "unload": o = true; i.push(r(r({}, e), { name: "pagehide" })); i.push(r(r({}, e), { name: "beforeunload" })); break; case "change": if (h && u.getServiceName() === "W3C") { i.push(r(r({}, e), { name: "propertychange" })) } break } }); if (!s && !o) { delete e[t]; return } e[t].silentLoad = !s; e[t].silentUnload = !o; if (!s) { i.push({ name: "load", target: window.window }) } if (!o) { i.push({ name: "unload", target: window.window }) } }, canPublish: function (t, n) { var r; if (e.hasOwnProperty(t) === false) { return true } r = e[t]; switch (n.type) { case "load": r.pageHideFired = false; r.loadFired = true; return !r.silentLoad; case "pageshow": r.pageHideFired = false; n.type = "load"; return !r.loadFired && !r.silentLoad; case "pagehide": n.type = "unload"; r.loadFired = false; r.pageHideFired = true; return !r.silentUnload; case "unload": case "beforeunload": n.type = "unload"; r.loadFired = false; return !r.pageHideFired && !r.silentUnload } return true }, isUnload: function (e) { return typeof e === "object" ? e.type === "unload" || e.type === "beforeunload" || e.type === "pagehide" : false } } } (), g = {}, y = function () { }, b = null, w = true, E = null, S = false, x = false, T = navigator.userAgent.indexOf("iPhone") > -1 || navigator.userAgent.indexOf("iPod") > -1 || navigator.userAgent.indexOf("iPad") > -1, N = { init: function (e, t) { b = t; if (!w) { throw "init must only be called once!" } w = false; y(e, t) }, isInitialized: function () { return f }, getState: function () { return l }, destroy: function (e) { var t = "", n = "", r = null, i = null, s = null, o = null; this.stopAll(); if (!e) { o = this.getService("browser"); for (t in g) { if (g.hasOwnProperty(t) && o !== null) { n = t.split("|")[0]; r = g[t].target; o.unsubscribe(n, r, this._publishEvent) } } } for (i in a) { if (a.hasOwnProperty(i)) { s = a[i].instance; if (s && typeof s.destroy === "function") { s.destroy() } } } g = {}; f = false; w = true; l = "destroyed"; if (typeof b === "function") { b("destroyed") } }, _updateModules: function (e) { var t = this.getCoreConfig(), n = this.getService("browser"), r = null, i = null; if (t && n && t.modules) { try { for (i in t.modules) { if (t.modules.hasOwnProperty(i)) { r = t.modules[i]; if (u.hasOwnProperty(i)) { if (r.enabled === false) { this.stop(i) } else { this.start(i) } if (r.events && n !== null) { this._registerModuleEvents(i, r.events, e) } } else { if (n.loadScript) { n.loadScript(t.moduleBase + i + ".js") } } } } } catch (s) { N.destroy(); return false } } else { return false } return true }, rebind: function (e) { N._updateModules(e) }, logCustomEvent: function (e, t) { var n = null, r = this.getService("queue"); if (!e || typeof e !== "string") { e = "CUSTOM" } t = t || {}; n = { type: 5, customEvent: { name: e, data: t} }; r.post("", n, "DEFAULT") }, logExceptionEvent: function (e, t, n) { var r = null, i = this.getService("queue"); if (!e || typeof e !== "string") { return } t = t || ""; n = n || ""; r = { type: 6, exception: { description: e, url: t, line: n} }; i.post("", r, "DEFAULT") }, logScreenviewLoad: function (e, t, n) { o("LOAD", e, t, n) }, logScreenviewUnload: function (e) { o("UNLOAD", e) }, _hasSameOrigin: function (e) { try { return e.document.location.host === document.location.host && e.document.location.protocol === document.location.protocol } catch (t) { } return false }, _registerModuleEvents: function (e, t, n) { n = n || p.document; this._registerModuleEventsOnScope(e, t, n); if (e !== "performance") { var r = null, i = n.getElementsByTagName("iframe"), s, o; for (s = 0, o = i.length; s < o; s += 1) { r = i[s]; if (this._hasSameOrigin(r.contentWindow)) { this._registerModuleEvents(e, t, r.contentWindow.document) } } } }, _registerModuleEventsOnScope: function (t, r, s) { var o = this.getService("browserBase"), u = this.getService("browser"), a = i(s), f = o.isIFrameDescendant(s); s = s || a; m.normalizeModuleEvents(t, r); n(r, function (r) { var i = r.target || a, l = ""; if (r.recurseFrames !== true && f) { return } if (typeof i === "string") { n(u.queryAll(i, s), function (n) { var i = o.ElementData.prototype.examineID(n); l = r.name + "|" + i.id + i.type; if (e(g[l], t) !== -1) { return } g[l] = g[l] || []; g[l].push(t); g[l].target = n; u.subscribe(r.name, n, N._publishEvent) }) } else { l = N._buildToken4bubbleTarget(r.name, i, typeof r.target === "undefined"); if (!g.hasOwnProperty(l)) { g[l] = [t]; u.subscribe(r.name, i, N._publishEvent) } else { if (e(g[l], t) === -1) { g[l].push(t) } } } if (l !== "") { if (typeof i !== "string") { g[l].target = i } } }) }, _buildToken4currentTarget: function (e) { var t = e.nativeEvent.currentTarget, n = this.getService("browserBase").ElementData.prototype.examineID(t); return e.type + "|" + n.id + n.type }, _buildToken4bubbleTarget: function (e, t, r) { var s = function (e) { var t = null; if (N._hasSameOrigin(p)) { n(p.window.document.getElementsByTagName("iframe"), function (n) { if (N._hasSameOrigin(n.contentWindow) && n.contentWindow.document === e) { t = n } }) } return t }, o = i(t), u = this.getService("browserBase"), a = null, f, l = e; if (t === window || t === window.window) { l += "|null-2|window" } else { if (r && N._hasSameOrigin(p) && typeof o !== "undefined" && p.window.document !== o) { a = s(o); if (a) { f = u.ElementData.prototype.examineID(a); l += "|" + f.xPath + "-2" } } else { l += "|null-2|document" } } return l }, _reinitConfig: function () { N._updateModules() }, _handleTouchStart: function (e) { var t, n; if (T) { return false } if (E === null) { E = e; return true } for (t = 0; t < E.nativeEvent.touches.length; t += 1) { for (n = 0; n < e.nativeEvent.touches.length; n += 1) { if (E.nativeEvent.touches[t] === e.nativeEvent.touches[n]) { return true } } } N._prepNonIosTouchEnd(); E = e; return true }, _handleTouchMove: function (e) { if (T) { return } E = e }, _handleTouchScroll: function (e) { if (T) { return false } if (E !== null && e.type === "scroll") { E.target.position.x = e.target.position.x; E.target.position.y = e.target.position.y; S = true } return true }, _prepNonIosTouchEnd: function () { var e = false; if (E !== null) { E.type = "touchend"; E.nativeEvent.type = "touchend"; N._publishEvent(E); if (S) { E.type = "scroll"; E.nativeEvent.type = "scroll"; x = true; N._publishEvent(E) } e = true } E = null; S = false; x = false; return e }, _publishEvent: function (e) { var t = null, i = null, s = e.type + "|" + e.target.id + e.target.idType, o = null, u, a, f, p = null, v = false, y = false, b = N.getService("browser"); if ((e.type === "load" || e.type === "pageshow") && !e.nativeEvent.customLoad) { return } if (T && (e.type === "touchstart" || e.type === "touchmove")) { return } else if (E !== null && e.type !== "touchstart" && e.type !== "touchmove" && e.type !== "scroll" && e.type !== "touchend") { N._prepNonIosTouchEnd() } else if (e.type === "touchstart") { N._handleTouchStart(e); return } else if (e.type === "touchmove") { N._handleTouchMove(e); return } else if (E !== null && e.type === "scroll" && !x) { N._handleTouchScroll(e); return } else if (S) { s = "scroll|null-2|window" } if (c > 0) { if (e.type === "click") { d = e.target.element } if (e.type === "beforeunload") { v = false; n(N.getCoreConfig().ieExcludedLinks, function (e) { var t, n, r = b.queryAll(e); for (t = 0, n = r ? r.length : 0; t < n; t += 1) { if (typeof r[t] !== undefined && r[t] === d) { v = true; return } } }); if (v) { return } } } if (m.isUnload(e)) { l = "unloading" } if (e.type === "change" && h && b.getServiceName() === "W3C" && (e.target.element.type === "checkbox" || e.target.element.type === "radio")) { return } if (e.type === "propertychange") { if (e.nativeEvent.propertyName === "checked" && (e.target.element.type === "checkbox" || e.target.element.type === "radio" && e.target.element.checked)) { e.type = e.target.type = "change" } else { return } } if (!g.hasOwnProperty(s) && e.nativeEvent && e.nativeEvent.currentTarget) { s = N._buildToken4currentTarget(e) } if (!g.hasOwnProperty(s)) { if (e.hasOwnProperty("nativeEvent")) { f = e.nativeEvent.currentTarget || e.nativeEvent.target } s = N._buildToken4bubbleTarget(e.type, f, true) } if (g.hasOwnProperty(s)) { o = g[s]; for (u = 0, a = o.length; u < a; u += 1) { t = o[u]; i = N.getModule(t); p = r({}, e); if (i && N.isStarted(t) && typeof i.onevent === "function") { y = m.canPublish(t, p); if (y) { i.onevent(p) } } } } if (p && p.type === "unload" && y) { TLT.destroy() } }, _getLocalTop: function () { return p }, addModule: function (e, t) { u[e] = { creator: t, instance: null, context: null, messages: [] }; if (this.isInitialized()) { this.start(e) } }, getModule: function (e) { if (u[e] && u[e].instance) { return u[e].instance } return null }, removeModule: function (e) { this.stop(e); delete u[e] }, isStarted: function (e) { return u.hasOwnProperty(e) && u[e].instance !== null }, start: function (e) { var t = u[e], n = null; if (t && t.instance === null) { t.context = new TLT.ModuleContext(e, this); n = t.instance = t.creator(t.context); if (typeof n.init === "function") { n.init() } } }, startAll: function () { var e = null; for (e in u) { if (u.hasOwnProperty(e)) { this.start(e) } } }, stop: function (e) { var t = u[e], n = null; if (t && t.instance !== null) { n = t.instance; if (typeof n.destroy === "function") { n.destroy() } t.instance = t.context = null } }, stopAll: function () { var e = null; for (e in u) { if (u.hasOwnProperty(e)) { this.stop(e) } } }, addService: function (e, t) { a[e] = { creator: t, instance: null} }, getService: function (e) { if (a.hasOwnProperty(e)) { if (!a[e].instance) { try { a[e].instance = a[e].creator(this) } catch (t) { N.destroy(true); return null } if (typeof a[e].instance.getServiceName !== "function") { a[e].instance.getServiceName = function () { return e } } } return a[e].instance } return null }, removeService: function (e) { delete a[e] }, broadcast: function (t) { var n = 0, r = 0, i = null, s = null; if (t && typeof t === "object") { for (i in u) { if (u.hasOwnProperty(i)) { s = u[i]; if (e(s.messages, t.type) > -1) { if (typeof s.instance.onmessage === "function") { s.instance.onmessage(t) } } } } } }, listen: function (t, n) { var r = null; if (this.isStarted(t)) { r = u[t]; if (e(r.messages, n) === -1) { r.messages.push(n) } } } }; y = function (e, t) { var n, r, i, s, o; if (f) { return } if (!document.readyState && document.addEventListener) { document.addEventListener("DOMContentLoaded", function () { document.readyState = "complete"; y(e, t) }, false) } if (document.readyState === "complete") { n = N.getService("config"); n.updateConfig(e); if (!N._updateModules()) { if (l !== "destroyed") { N.destroy() } return } if (n.subscribe) { n.subscribe("configupdated", N._reinitConfig) } f = true; l = "loaded"; r = { type: "load", target: window.window, srcElement: window.window, currentTarget: window.window, bubbles: true, cancelBubble: false, cancelable: true, timeStamp: +(new Date), customLoad: true }; s = N.getService("browserBase"); i = new s.WebEvent(r); N._publishEvent(i); if (typeof b === "function") { try { b("initialized") } catch (u) { } } } else { if (!document.readyState) { setTimeout(function () { document.readyState = "complete"; y(e, t) }, 1e4) } else { setTimeout(function () { y(e, t) }, 10) } } }; (function () { var e = null, t, n; for (e in v) { if (v.hasOwnProperty(e)) { for (t = 0, n = v[e].length; t < n; t += 1) { (function (e, t) { N[t] = function () { var n = this.getService(e); if (n) { return n[t].apply(n, arguments) } } })(e, v[e][t]) } } } })(); return N } (); (function () { "use strict"; TLT.EventTarget = function () { this._handlers = {} }; TLT.EventTarget.prototype = { constructor: TLT.EventTarget, publish: function (e, t) { var n = 0, r = 0, i = this._handlers[e], s = { type: e, data: t }; if (typeof i !== "undefined") { for (r = i.length; n < r; n += 1) { i[n](s) } } }, subscribe: function (e, t) { if (!this._handlers.hasOwnProperty(e)) { this._handlers[e] = [] } this._handlers[e].push(t) }, unsubscribe: function (e, t) { var n = 0, r = 0, i = this._handlers[e]; if (i) { for (r = i.length; n < r; n += 1) { if (i[n] === t) { i.splice(n, 1); return } } } } } })(); TLT.ModuleContext = function () { "use strict"; function t(e) { var t = 0, n = e.length, r = []; while (t < n) { r.push(e[t]); t += 1 } return r } var e = ["broadcast", "getConfig:getModuleConfig", "listen", "post"]; return function (n, r) { var i = {}, s = 0, o = e.length, u = null, a = null, f = null; for (s = 0; s < o; s += 1) { u = e[s].split(":"); if (u.length > 1) { f = u[0]; a = u[1] } else { f = u[0]; a = u[0] } i[f] = function (e) { return function () { var i = t(arguments); i.unshift(n); return r[e].apply(r, i) } } (a) } return i } } (); TLT.addService("config", function (e) { "use strict"; function t(e, n, r) { var i = ""; for (i in r) { if (Object.prototype.hasOwnProperty.call(r, i)) { if (e && Object.prototype.toString.call(r[i]) === "[Object object]") { if (typeof n[i] === "undefined") { n[i] = {} } t(e, n, r) } else { n[i] = r[i] } } } return n } function n(e, n) { t(true, e, n); s.publish("configupdated", s.getConfig()) } var r = { core: {}, modules: {}, services: {} }, i = function () { var e = null, t = null; if (typeof Object.create === "function") { e = Object.create } else { t = function () { }; e = function (e) { if (typeof e !== "object" && typeof e !== "function") { throw new TypeError("Object prototype need to be an object!") } t.prototype = e; return new t } } return e } (), s = t(false, i(new TLT.EventTarget), { getConfig: function () { return r }, updateConfig: function (e) { n(r, e) }, getCoreConfig: function () { return r.core }, updateCoreConfig: function (e) { n(r.core, e) }, getServiceConfig: function (e) { return r.services[e] || null }, updateServiceConfig: function (e, t) { if (typeof r.services[e] === "undefined") { r.services[e] = {} } n(r.services[e], t) }, getModuleConfig: function (e) { return r.modules[e] || null }, updateModuleConfig: function (e, t) { if (typeof r.modules[e] === "undefined") { r.modules[e] = {} } n(r.modules[e], t) }, destroy: function () { r = { core: {}, modules: {}, services: {}} } }); return s }); TLT.addService("queue", function (e) { "use strict"; function l() { } function c() { return window.location.pathname } function h(e, n) { var s = t.flush(e), u = s !== null ? s.length : 0, a = t.get(e), f = { "Content-Type": "application/json", "X-Tealeaf": "device (UIC) Lib/2.0.4.759_w3c_ps_prd", "X-TealeafType": "GUI", "X-TeaLeaf-Page-Url": c() }, h = a.serializer || "json"; s = o.wrapMessages(s); if (u) { r.sendRequest({ oncomplete: l, url: a.url, async: !n, headers: f, data: i.serialize(s, h) }) } } function p(e) { var t = null, r = 0; for (r = 0; r < n.length; r += 1) { t = n[r]; h(t.qid, e) } return true } function d(n, r) { var i = t.push(n, o.createMessage(r)); if (i >= t.get(n).threshold && f && e.getState() !== "unloading") { h(n) } } function v(e) { var t = null, r = "", i = 0, s = 0; for (i = 0; i < n.length; i += 1) { t = n[i]; if (t && t.modules) { for (s = 0; s < t.modules.length; s += 1) { r = t.modules[s]; if (r === e) { return t.qid } } } } return u.qid } function m(e, t) { a[e] = window.setTimeout(function n() { h(e); a[e] = window.setTimeout(n, t) }, t) } function g(e) { } var t = function () { function t(t) { return typeof e[t] !== "undefined" } function n(n, r) { if (!t(n)) { e[n] = { data: [], queueId: n, url: r.url, threshold: r.threshold, serializer: r.serializer} } return e[n] } function r(n) { if (t(n)) { delete e[n] } } function i(n) { if (t(n)) { return e[n] } return null } function s(e) { var t = i(e); if (t !== null) { t.data = [] } } function o(e) { var n = null; if (t(e)) { n = i(e).data; s(e) } return n } function u(e, n) { var r = null, s = null, o = window.tlBridge, u = window.iOSJSONShuttle; if (typeof o !== "undefined" && typeof o.addMessage === "function") { s = JSON.stringify(n); o.addMessage(s) } else if (typeof u !== "undefined" && typeof u === "function") { s = JSON.stringify(n); u(s) } else { if (t(e)) { r = i(e); return r.data.push(n) } } return 0 } var e = {}; return { SEND_HEADER_ONCE: -1, SEND_HEADER_ALWAYS: -2, exists: t, add: n, remove: r, get: i, clear: s, flush: o, push: u} } (), n = null, r = e.getService("browser"), i = e.getService("serializer"), s = e.getService("config"), o = e.getService("message"), u = null, a = {}, f = true; (function (r) { n = r; var i = null, o; for (o in n) { if (n.hasOwnProperty(o)) { i = n[o]; if (i.qid === "DEFAULT") { u = i } t.add(i.qid, { url: i.endpoint, threshold: i.maxEvents, serializer: i.serializer, timerInterval: i.timerInterval || 0 }); if (typeof i.timerInterval !== "undefined" && i.timerInterval > 0) { m(i.qid, i.timerInterval) } } } s.subscribe("configupdated", g) })(s.getServiceConfig("queue")); return { _getQueue: function (e) { return t.get(e).data }, setAutoFlush: function (e) { if (e === 1) { f = true } else { f = false } }, destroy: function () { if (f) { this.flushAll(true) } s.unsubscribe("configupdated", g) }, flush: function (e) { if (!t.exists(e)) { throw new Error("Queue: " + e + " does not exist!") } h(e) }, flushAll: function (e) { return p(!!e) }, post: function (e, n, r) { r = r || v(e); if (!t.exists(r)) { throw new Error("Queue: " + r + " does not exist!") } d(r, n) } } }); TLT.addService("browserBase", function (core) { "use strict"; function updateConfig() { config = core.getService("config").getServiceConfig("browser") || {}; blacklist = config.hasOwnProperty("blacklist") ? config.blacklist : []; customid = config.hasOwnProperty("customid") ? config.customid : [] } function indexOf(e, t) { var n, r; if (e) { for (n = 0, r = e.length; n < r; n += 1) { if (e[n] === t) { return n } } } return -1 } function isUndefOrNull(e) { return typeof e === "undefined" || e === null } function checkId(e) { var t, n, r; if (!e || !e.id || typeof e.id !== "string") { return false } for (t = 0, n = blacklist.length; t < n; t += 1) { if (typeof blacklist[t] === "string") { if (e.id === blacklist[t]) { return false } } else if (typeof blacklist[t] === "object") { r = new RegExp(blacklist[t].regex, blacklist[t].flags); if (r.test(e.id)) { return false } } } return true } function getDocument(e) { if (e.nodeType !== 9) { return !isUndefOrNull(e.ownerDocument) ? e.ownerDocument : e.document } return e } function getWindow(e) { if (e.self !== e) { var t = getDocument(e); return !isUndefOrNull(t.defaultView) ? t.defaultView : t.parentWindow } return e } function isIFrameDescendant(e) { return getWindow(e) != core._getLocalTop() } function getXPathArrayFromNode(e) { if (!isUndefOrNull(e)) { var t, n, r, i = false, s = null, o = null, u = null, a = [], f = { NOBR: true, P: true }; r = e; if (!isUndefOrNull(r.tagName)) { for (t in f) { if (f.hasOwnProperty(t) && r.tagName.toString() === t) { r = r.parentNode } } } for (i = checkId(r); r !== document && !i; i = checkId(r)) { u = r.parentNode; if (!u) { o = getWindow(r); u = o !== core._getLocalTop() ? o.frameElement : document } s = u.childNodes; if (!s) { return [] } for (t = 0, n = 0; t < s.length; t += 1) { if (s[t].nodeType === 1 && s[t].tagName === r.tagName) { if (s[t] === r) { a[a.length] = [r.tagName.toUpperCase(), n]; break } n += 1 } } r = u } if (i) { a[a.length] = [r.id]; if (isIFrameDescendant(r)) { a = a.concat(getXPathArrayFromNode(getWindow(r).frameElement)) } } return a } return [] } function getXPathFromNode(e) { var t = getXPathArrayFromNode(e), n = [], r; if (t.length > 0) { for (r = t.length - 1; r >= 0; r -= 1) { if (t[r].length > 1) { n[n.length] = '["' + t[r][0] + '",' + t[r][1] + "]" } else { n[n.length] = '["' + t[r][0].toString().replace(/\"/g, '\\"') + '"]' } } return "[" + n.join(",") + "]" } return "null" } function extractResponseHeaders(e) { e = e.split("\n"); var t = {}, n = 0, r = e.length, i = null; for (n = 0; n < r; n += 2) { i = e[n].split(": "); t[i[0]] = i[1] } return t } function getEventDetails(e) { if (!e) { return null } if (e.type && e.type.indexOf("touch") === 0) { if (typeof e.originalEvent !== "undefined" && typeof jQuery !== "undefined") { e = e.originalEvent } if (e.type === "touchstart") { e = e.touches[e.touches.length - 1] } else if (e.type === "touchend") { e = e.changedTouches[0] } } return e } function normalizeEvent(e) { var t = e || window.event, n = document.documentElement, r = document.body; if (typeof t.originalEvent !== "undefined" && typeof jQuery !== "undefined" && !t.isSimulated) { t = t.originalEvent } if (typeof e === "undefined" || typeof t.target === "undefined") { t.target = t.srcElement || window.window; t.timeStamp = Number(new Date); if (t.pageX === null || typeof t.pageX === "undefined") { t.pageX = t.clientX + (n && n.scrollLeft || r && r.scrollLeft || 0) - (n && n.clientLeft || r && r.clientLeft || 0); t.pageY = t.clientY + (n && n.scrollTop || r && r.scrollTop || 0) - (n && n.clientTop || r && r.clientTop || 0) } t.preventDefault = function () { this.returnValue = false }; t.stopPropagation = function () { this.cancelBubble = true } } return t } function normalizeTarget(e) { var t = null; if (!e) { return null } if (e.srcElement) { t = e.srcElement } else { t = e.target; if (!t) { t = e.explicitOriginalTarget } if (!t) { t = e.originalTarget } } if (!t && e.type.indexOf("touch") === 0) { t = getEventDetails(e).target } while (t && nonClickableTags[t.tagName]) { t = t.parentNode } if (!t && e.srcElement === null) { t = window.window } return t } function getEventPosition(e) { var t = 0, n = 0, r = document.documentElement, i = document.body; e = getEventDetails(e); if (e !== null) { if (e.pageX && e.pageY && e.pageX > 0 && e.pageY > 0) { t = e.pageX; n = e.pageY } else if (e.clientX && e.clientY) { t = e.clientX + (r && r.scrollLeft || i && i.scrollLeft || 0) - (r && r.clientLeft || i && i.clientLeft || 0); n = e.clientY + (r && r.scrollTop || i && i.scrollTop || 0) - (r && r.clientTop || i && i.clientTop || 0) } } return { x: t, y: n} } function Point(e, t) { this.x = e || 0; this.y = t || 0 } function Size(e, t) { this.width = e || 0; this.height = t || 0 } function ElementData(e, t) { var n, r, i; t = normalizeTarget(e); n = this.examineID(t); r = this.examineType(t, e); i = this.examinePosition(e, t); this.element = t; this.id = n.id; this.idType = n.type; this.type = r.type; this.subType = r.subType; this.state = this.examineState(t); this.position = new Point(i.x, i.y); this.size = new Size(i.width, i.height); this.xPath = n.xPath; this.name = n.name } function getOffset(e, t) { if (typeof e === "undefined" || e === null) { return } t.x += e.offsetLeft || 0; t.y += e.offsetTop || 0; if (typeof e.offsetParent !== "undefined") { getOffset(e.offsetParent, t) } } function getScrollValue(e, t) { if (typeof e === "undefined" || e === null) { return } t.x += e.scrollLeft || 0; t.y += e.scrollTop || 0; if (typeof e.tagName !== "undefined" && e.tagName.toLowerCase() !== "html" && typeof e.parentNode !== "undefined") { getScrollValue(e.parentNode, t) } } function getZoomValue() { var e = 1, t, n, r; if (document.body.getBoundingClientRect) { t = document.body.getBoundingClientRect(); n = t.right - t.left; r = document.body.offsetWidth; e = Math.round(n / r * 100) / 100 } return e } function getBoundingClientRectNormalized(e) { var t = {}, n, r, i = { x: 0, y: 0 }, s = { x: 0, y: 0 }; if (typeof e === "undefined" || e === null) { return } if (e.getBoundingClientRect) { n = e.getBoundingClientRect(); t.x = n.left; t.y = n.top; t.width = n.right - n.left; t.height = n.bottom - n.top; if (navigator.appName.toLowerCase() === "microsoft internet explorer") { t.x -= document.documentElement.clientLeft; t.y -= document.documentElement.clientTop; r = getZoomValue(); if (r !== 1) { t.x = Math.round(t.x / r); t.y = Math.round(t.y / r); t.width = Math.round(t.width / r); t.height = Math.round(t.height / r) } } } else { getOffset(e, i); if (typeof e.parentNode !== "undefined") { getScrollValue(e.parentNode, s) } t.x = i.x - s.x; t.y = i.y - s.y; t.width = e.offsetWidth; t.height = e.offsetHeight } return t } function WebEvent(e) { var t; e = normalizeEvent(e); t = getEventPosition(e); this.custom = false; this.nativeEvent = this.custom === true ? null : e; this.position = new Point(t.x, t.y); this.target = new ElementData(e, e.target); this.timestamp = (new Date).getTime(); this.type = e.type } function processDOMEvent(e) { core._publishEvent(new WebEvent(e)) } var nonClickableTags = { OPTGROUP: true, OPTION: true, NOBR: true }, queryDom = {}, config = core.getService("config").getServiceConfig("browser") || {}, blacklist = config.hasOwnProperty("blacklist") ? config.blacklist : [], customid = config.hasOwnProperty("customid") ? config.customid : []; core.getService("config").subscribe("configupdated", updateConfig); queryDom.xpath = function () { var __strToArr = typeof JSON === "object" && typeof JSON.parse === "function" ? function (e) { return JSON.parse(String(e)) } : function (xpathStr) { return eval(String(xpathStr)) }; return function (e, t) { var n = __strToArr(e), r, i = null, s, o, u, a, f; t = typeof t !== "undefined" ? t : document; r = t; if (!n) { return null } for (s = 0, a = n.length; s < a && r; s += 1) { i = n[s]; if (i.length === 1) { r = t.getElementById(i[0]) } else { for (o = 0, u = -1, f = r.childNodes.length; o < f; o += 1) { if (r.childNodes[o].nodeType === 1 && r.childNodes[o].tagName.toUpperCase() === i[0]) { u += 1; if (u === i[1]) { r = r.childNodes[o]; break } } } if (u === -1) { return null } } } return r === t || !r ? null : r } } (); ElementData.HTML_ID = -1; ElementData.XPATH_ID = -2; ElementData.ATTRIBUTE_ID = -3; ElementData.prototype.examineID = function (e) { var t, n, r, i, s, o = customid.length, u; try { r = getXPathFromNode(e) } catch (a) { } s = e.name; try { if (!isIFrameDescendant(e)) { if (checkId(e)) { t = e.id; n = ElementData.HTML_ID } else if (customid.length && e.attributes) { while (o--) { u = e.attributes[customid[o]]; if (typeof u !== "undefined") { t = customid[o] + "=" + (u.value || u); n = ElementData.ATTRIBUTE_ID } } } } } catch (a) { } if (!t) { t = r; n = ElementData.XPATH_ID } return { id: t, type: n, xPath: r, name: s} }; ElementData.prototype.examineType = function (e, t) { var n = ""; if (t.type === "change") { if (e.tagName === "TEXTAREA" || e.tagName === "INPUT" && e.type === "text") { n = "textChange" } else { n = "valueChange" } } else { n = t.type } return { type: t.type, subType: n} }; ElementData.prototype.examineState = function (e) { var t = { a: ["innerText", "href"], input: { range: ["maxValue:max", "value"], checkbox: ["value", "checked"], radio: ["value", "checked"], image: ["src"] }, select: ["value"], button: ["value", "innerText"], textarea: ["value"] }, n = typeof e.tagName !== "undefined" ? e.tagName.toLowerCase() : "", r = t[n] || null, i = null, s = null, o = 0, u = 0, a = null, f = ""; if (r !== null) { if (Object.prototype.toString.call(r) === "[object Object]") { r = r[e.type] || ["value"] } s = {}; for (f in r) { if (r.hasOwnProperty(f)) { if (r[f].indexOf(":") !== -1) { a = r[f].split(":"); s[a[0]] = e[a[1]] } else if (r[f] === "innerText") { s[r[f]] = e.innerText || e.textContent } else { s[r[f]] = e[r[f]] } } } } if (n === "select" && e.options && !isNaN(e.selectedIndex)) { s.index = e.selectedIndex; i = e.options[e.selectedIndex]; s.value = i.getAttribute("value") || i.getAttribute("label") || i.text || i.innerText; s.text = i.text || i.innerText } return s }; ElementData.prototype.examinePosition = function (e, t) { var n = getEventPosition(e), r = getBoundingClientRectNormalized(t); r.x = n.x !== 0 && n.y !== 0 ? Math.round(Math.abs(n.x - r.x)) : r.width / 2; r.y = n.x !== 0 && n.y !== 0 ? Math.round(Math.abs(n.y - r.y)) : r.height / 2; return r }; return { extractResponseHeaders: extractResponseHeaders, WebEvent: WebEvent, ElementData: ElementData, processDOMEvent: processDOMEvent, queryDom: queryDom, isIFrameDescendant: isIFrameDescendant} }); TLT.addService("browser", function (core) { "use strict"; function wrapWebEvent(e) { return function (t) { e(new base.WebEvent(t)) } } function loadScript(e) { var t = document.getElementsByTagName("script")[0], n = document.createElement("script"); n.src = e; t.parentNode.insertBefore(n, t) } function forEach(e, t) { var n = 0, r = e.length; for (n = 0; n < r; n += 1) { t(e[n], n, e) } } function convertHeaders(e) { var t = "", n = []; for (t in e) { if (e.hasOwnProperty(t)) { n.push([t, e[t]]) } } return n } function makeAjaxCall(e) { var t = getXHRObject(), n = [["X-Requested-With", "XMLHttpRequest"]], r = 0, i = typeof e.async !== "boolean" ? true : e.async, s = ""; if (e.headers) { n = n.concat(convertHeaders(e.headers)) } if (e.contentType) { n.push(["Content-Type", e.contentType]) } t.open(e.type.toUpperCase(), e.url, i); forEach(n, function (e) { if (e[0] && e[1]) { t.setRequestHeader(e[0], e[1]) } }); t.callbackFn = t.onreadystatechange = function () { if (this.readyState === 4) { if (e.timeout) { window.clearTimeout(r) } e.oncomplete({ headers: base.extractResponseHeaders(this.getAllResponseHeaders()), responseText: this.responseText || null, statusCode: this.status, success: this.status === 200 }); this.onreadystatechange = this.callbackFn = null } }; t.send(e.data || null); if (t.callbackFn !== null) { t.callbackFn() } if (e.timeout) { r = window.setTimeout(function () { t.callbackFn = t.onreadystatechange = null; t.abort() }, e.timeout) } } var queryDom = { list2Array: function (e) { var t = e.length, n = [], r; if (typeof e.length === "undefined") { return [e] } for (r = 0; r < t; r += 1) { n[r] = e[r] } return n }, find: function (e, t, n) { n = n || "css"; return this.list2Array(this[n](e, t)) }, css: function (query, scope) { var self = this, message = null, bodyEl = document.getElementsByTagName("body")[0], bConfig = core.getService("config").getServiceConfig("browser") || {}, sizzleURL = bConfig.sizzleURL || null; if (typeof document.querySelectorAll === "undefined") { self.css = function (e, t) { t = t || document; return self.Sizzle(e, t) }; if (typeof self.Sizzle === "undefined") { if (sizzleURL) { message = { type: "GET", url: sizzleURL, async: false, oncomplete: function (result) { function define(e) { self.Sizzle = e() } define.amd = true; eval(result.responseText) } }; makeAjaxCall(message) } else { try { if (bodyEl === window.jQuery(document).find("html > body").get()[0]) { self.Sizzle = function (e, t) { return window.jQuery(t).find(e).get() } } } catch (e) { try { if (bodyEl === window.Sizzle("html > body", document)[0]) { self.Sizzle = window.Sizzle } } catch (ex) { throw { message: "Sizzle was not found!", code: "NOQUERYSELECTOR"} } } } } } else { self.css = function (e, t) { t = t || document; return t.querySelectorAll(e) } } return self.css(query, scope) } }, handlerMappings = {}, getXHRObject = null, addEventListener = null, removeEventListener = null, base = core.getService("browserBase"); queryDom.xpath = base.queryDom.xpath; if (typeof window.XMLHttpRequest !== "undefined") { getXHRObject = function () { return new XMLHttpRequest } } else { getXHRObject = function () { return new ActiveXObject("Microsoft.XMLHTTP") } } if (typeof document.addEventListener === "function") { addEventListener = function (e, t, n) { e.addEventListener(t, n, false) }; removeEventListener = function (e, t, n) { e.removeEventListener(t, n, false) } } else if (typeof document.attachEvent !== "undefined") { addEventListener = function (e, t, n) { e.attachEvent("on" + t, n) }; removeEventListener = function (e, t, n) { e.detachEvent("on" + n) } } return { getServiceName: function () { return "W3C" }, query: function (e, t, n) { return queryDom.find(e, t, n)[0] || null }, queryAll: function (e, t, n) { return queryDom.find(e, t, n) }, loadScript: function (e) { loadScript(e) }, sendRequest: function (e) { e.type = e.type || "POST"; makeAjaxCall(e) }, subscribe: function (e, t, n) { var r = wrapWebEvent(n); handlerMappings[n] = r; addEventListener(t, e, r) }, unsubscribe: function (e, t, n) { var r = handlerMappings[n]; removeEventListener(t, e, r) } } }); TLT.addService("message", function (e) { "use strict"; function x(e) { var n = ""; this.type = e.type; this.offset = (new Date).getTime() - i.getTime(); if (e.type === 2 || t === null) { t = new Date } this.screenviewOffset = (new Date).getTime() - t.getTime(); this.count = r += 1; this.fromWeb = true; for (n in e) { if (e.hasOwnProperty(n)) { this[n] = e[n] } } } function T(e) { return !isNaN(e + 1 - 1) } function N(e) { return e === e.toUpperCase() && e !== e.toLowerCase() } function C(e) { return e === e.toLowerCase() && e !== e.toUpperCase() } function k(e, t) { var n = c.PVC_MASK_BASIC; if (e.maskType === c.PVC_MASK_EMPTY.maskType) { n = c.PVC_MASK_EMPTY } else if (e.maskType === c.PVC_MASK_BASIC.maskType) { n = c.PVC_MASK_BASIC } else if (e.maskType === c.PVC_MASK_TYPE.maskType) { n = c.PVC_MASK_TYPE } else if (e.maskType === c.PVC_MASK_CUSTOM.maskType) { n = e.maskFunction } if (typeof t.target.prevState !== "undefined" && t.target.prevState.hasOwnProperty("value")) { t.target.prevState.value = n(t.target.prevState.value) } if (typeof t.target.currState !== "undefined" && t.target.currState.hasOwnProperty("value")) { t.target.currState.value = n(t.target.currState.value) } } function L(t, n) { var r, i, s = e.getService("browserBase"), o, u, a, f, l, c; for (r = 0, l = t.length; r < l; r += 1) { c = t[r]; if (typeof c === "string") { o = e.getService("browser").queryAll(c); for (i = 0, u = o ? o.length : 0; i < u; i += 1) { if (o[i]) { a = s.ElementData.prototype.examineID(o[i]); if (a.type === n.idType && a.id === n.id) { return true } } } } else if (c.id && c.idType && n.idType.toString() === c.idType.toString()) { switch (typeof c.id) { case "string": if (c.id === n.id) { return true } break; case "object": f = new RegExp(c.id.regex, c.id.flags); if (f.test(n.id)) { return true } break } } } return false } function A(e) { var t, n, r; if (!e.hasOwnProperty("target")) { return e } for (t = 0, n = l.length; t < n; t += 1) { r = l[t]; if (L(r.targets, e.target)) { k(r, e) } } return e } function O() { o = e.getService("config").getServiceConfig("message") || {}; l = o.hasOwnProperty("privacy") ? o.privacy : [] } function M(e) { var t = "INVALID"; if (typeof e === "undefined") { return t } switch (e) { case 0: case 180: case 360: t = "PORTRAIT"; break; case 90: case -90: case 270: t = "LANDSCAPE"; break; default: t = "UNKNOWN"; break } return t } var t = null, n = 0, r = 0, i = new Date, s = new Date, o = e.getService("config").getServiceConfig("message") || {}, u = window.location.href, a = "TODO", f = "ID" + s.getHours() + "H" + s.getMinutes() + "M" + s.getSeconds() + "S" + s.getMilliseconds() + "R" + Math.random(), l = o.hasOwnProperty("privacy") ? o.privacy : [], c = {}, h = { lower: "x", upper: "X", numeric: "9", symbol: "@" }, p = navigator.userAgent.indexOf("iPhone") > -1 || navigator.userAgent.indexOf("iPod") > -1 || navigator.userAgent.indexOf("iPad") > -1, d = window.devicePixelRatio || 1, v = window.screen ? window.screen.width : 0, m = window.screen ? window.screen.height : 0, g = window.orientation || 0, y = p ? v : v <= 320 ? v : v / d, b = p ? m : v <= 320 ? m : m / d, w = window.screen === null ? 0 : window.screen.height - window.screen.availHeight, E = window.innerWidth || document.documentElement.clientWidth, S = window.innerHeight || document.documentElement.clientHeight; c.PVC_MASK_EMPTY = function (e) { return "" }; c.PVC_MASK_BASIC = function (e) { return "XXXXX" }; c.PVC_MASK_TYPE = function (e) { var t = (e || "").split(""), n = 0, r = 0, i = ""; for (n = 0, r = t.length; n < r; n += 1) { if (T(t[n])) { i += h.numeric } else if (N(t[n])) { i += h.upper } else if (C(t[n])) { i += h.lower } else { i += h.symbol } } return i }; c.PVC_MASK_EMPTY.maskType = 1; c.PVC_MASK_BASIC.maskType = 2; c.PVC_MASK_TYPE.maskType = 3; c.PVC_MASK_CUSTOM = { maskType: 4 }; if (e.getService("config").subscribe) { e.getService("config").subscribe("configupdated", O) } return { createMessage: function (e) { if (typeof e.type === "undefined") { throw new TypeError("Invalid queueEvent given!") } return A(new x(e)) }, wrapMessages: function (e) { var t = { messageVersion: "2.1.0.0", serialNumber: n += 1, sessions: [{ id: f, startTime: s.getTime(), timezoneOffset: s.getTimezoneOffset(), messages: e, clientEnvironment: { webEnvironment: { libVersion: "2.0.4.759_w3c_ps_prd", page: u, windowId: a, screen: { devicePixelRatio: d, deviceOriginalWidth: p ? v * d : v, deviceOriginalHeight: p ? m * d : m, deviceWidth: y, deviceHeight: b, deviceToolbarHeight: w, width: E, height: S, orientation: g}}}}] }, r = t.sessions[0].clientEnvironment.webEnvironment.screen; r.orientationMode = M(r.orientation); return t } } }); TLT.addService("serializer", function (core) { "use strict"; function serializeToJSON(e) { var t, n, r = 0; if (typeof e !== "object" || e === null) { switch (typeof e) { case "function": case "undefined": return "null"; case "string": return '"' + e.replace(/\"/g, '\\"') + '"'; default: return String(e) } } else if (Object.prototype.toString.call(e) === "[object Array]") { t = "["; for (n = 0, r = e.length; n < r; n += 1) { if (Object.prototype.hasOwnProperty.call(e, n)) { t += serializeToJSON(e[n]) + "," } } } else { t = "{"; for (n in e) { if (Object.prototype.hasOwnProperty.call(e, n)) { t = t.concat('"', n, '":', serializeToJSON(e[n]), ","); r += 1 } } } if (r > 0) { t = t.substring(0, t.length - 1) } t += String.fromCharCode(t.charCodeAt(0) + 2); return t } var serialize = { json: null }, parse = { json: null }; if (typeof window.JSON !== "undefined") { serialize.json = window.JSON.stringify; parse.json = window.JSON.parse } else { serialize.json = serializeToJSON; parse.json = function (data) { return eval("(" + data + ")") } } return { parse: function (e, t) { t = t || "json"; return parse[t](e) }, serialize: function (e, t) { t = t || "json"; return serialize[t](e) } } }); if (TLT && typeof TLT.addModule === "function") { TLT.addModule("performance", function (e) { "use strict"; function n(e, t) { if (typeof e !== "string") { return false } if (!t || typeof t !== "object") { return false } return t[e] === true } function r(e, t) { var r = 0, i = {}, s = "", o = 0; if (!e || typeof e !== "object" || !e.navigationStart) { return {} } r = e.navigationStart; for (s in e) { if (Object.prototype.hasOwnProperty.call(e, s) || typeof e[s] === "number") { if (!n(s, t)) { o = e[s]; if (typeof o === "number" && o) { i[s] = o - r } else { i[s] = o } } } } return i } function i(e) { var t = 0; if (e && e.loadEventStart && e.responseEnd) { t = e.loadEventStart - e.responseEnd } return t } function s(n) { var s = e.getConfig() || {}, o = "UNKNOWN", u = { type: 7, performance: {} }, a, f, l; if (!n || !n.performance || t.perfEventSent) { return } f = n.performance; l = f.timing; a = f.navigation; if (l) { u.performance.timing = r(l, s.filter); u.performance.timing.renderTime = i(l) } if (a) { switch (a.type) { case 0: o = "NAVIGATE"; break; case 1: o = "RELOAD"; break; case 2: o = "BACKFORWARD"; break; default: o = "UNKNOWN"; break } u.performance.navigation = { type: o, redirectCount: a.redirectCount} } e.post(u); t.perfEventSent = true } var t = { loadReceived: false, unloadReceived: false, perfEventSent: false }; return { init: function () { }, destroy: function () { }, onevent: function (e) { if (typeof e !== "object" || !e.type) { return } switch (e.type) { case "load": t.loadReceived = true; break; case "unload": t.unloadReceived = true; if (!t.perfEventSent) { s(window) } break; default: break } }, onmessage: function (e) { } } }) } else { } TLT.addModule("replay", function (e) { "use strict"; function A(e, t) { var n, r; if (!e || typeof e !== "object") { return null } r = t.split("."); for (n = 0; n < r.length; n += 1) { if (typeof e === "undefined" || e[r[n]] === null) { return null } e = e[r[n]] } return e } function O(e) { var t = []; e = e.parentNode; while (e) { t.push(e); e = e.parentNode } return t } function M(e, t) { var n, r, i = false; for (n = 0, r = e.length; n < r; n += 1) { i = t(e[n], n, e); if (i) { return i } } return i } function _(e) { return M(e, function (e) { if (e.tagName === "A" || e.tagName === "BUTTON") { return e } return null }) } function D(e) { var t = e.type; if (typeof t === "string") { t = t.toLowerCase() } else { t = "unknown" } if (t === "blur") { t = "focusout" } return t } function P(e) { var n, r = A(e, "webEvent.target.element.tagName"), i = r.toLowerCase() === "input" ? A(e, "webEvent.target.element.type") : "", s = t[r.toLowerCase() + ":" + i] || r, o = O(A(e, "webEvent.target.element")), u = null, a = A(e, "webEvent.target.position.relXY"), f = A(e, "webEvent.target.subtype"); n = { type: 4, target: { id: e.id || "", idType: A(e, "webEvent.target.idType"), name: A(e, "webEvent.target.name"), tlType: s, type: r, subType: i, position: { width: A(e, "webEvent.target.element.offsetWidth"), height: A(e, "webEvent.target.element.offsetHeight") }, currState: e.currState || null }, event: { tlEvent: D(A(e, "webEvent")), type: A(e, "webEvent.target.type")} }; if (a) { n.target.position.relXY = a } if (typeof e.dwell !== "undefined" || e.dwell === -1) { n.target.dwell = e.dwell } if (typeof e.visitedCount !== "undefined") { n.target.visitedCount = e.visitedCount } if (typeof e.prevState !== "undefined") { n.prevState = e.prevState } if (typeof f !== "undefined") { n.event.subType = f } n.target.name = A(e, "webEvent.target.name"); u = _(o); n.target.isParentLink = !!u; if (u) { if (u.href) { n.target.currState = n.target.currState || {}; n.target.currState.href = n.target.currState.href || u.href } if (u.value) { n.target.currState = n.target.currState || {}; n.target.currState.value = n.target.currState.value || u.value } if (u.innerText || u.textContent) { n.target.currState = n.target.currState || {}; n.target.currState.innerText = n.target.currState.innerText || u.innerText || u.textContent } } return n } function H(t) { e.post(t) } function B(t) { var n = 0, r, i = t.length, s, o, u, a = { mouseout: true, mouseover: true }, f = []; for (n = 0; n < i; n += 1) { s = t[n]; if (!s) { continue } if (a[s.event.type]) { f.push(s) } else { for (r = n + 1; r < i && t[r] && a[t[r].event.type]; r += 1) { } if (r < i) { o = t[r]; if (o && s.target.id === o.target.id && s.event.type !== o.event.type) { if (s.event.type === "click") { u = s; s = o; o = u } if (o.event.type === "click") { s.target.position = o.target.position; n += 1 } else if (o.event.type === "blur") { s.target.dwell = o.target.dwell; s.target.visitedCount = o.target.visitedCount; s.focusInOffset = o.focusInOffset; s.target.position = o.target.position; n += 1 } t[r] = null; t[n] = s } } f.push(t[n]) } } while (s = f.shift()) { e.post(s) } t.splice(0, t.length) } function j(e, t) { S = t; S.inFocus = true; if (typeof i[e] === "undefined") { i[e] = {} } i[e].focus = S.dwellStart = Number(new Date); i[e].focusInOffset = y ? S.dwellStart - Number(y) : -1; i[e].prevState = A(t, "target.state"); i[e].visitedCount = i[e].visitedCount + 1 || 1 } function F(e, t) { u.push(P({ webEvent: e, id: t, currState: A(e, "target.state") })) } function I(e) { var t = false, n = "|button|image|submit|reset|checkbox|radio|", r = null; if (typeof e !== "object" || !e.type) { return t } switch (e.type) { case "INPUT": r = "|" + (e.subType || "") + "|"; if (n.indexOf(r.toLowerCase()) === -1) { t = false } else { t = true } break; case "TEXTAREA": t = false; break; default: t = true; break } return t } function q(e, t) { var n; if (typeof e === "undefined" || e === null || typeof t === "undefined" || t === null) { return } S.inFocus = false; if (typeof i[e] !== "undefined" && i[e].hasOwnProperty("focus")) { i[e].dwell = Number(new Date) - i[e].focus } else { i[e] = {}; i[e].dwell = Number(new Date) } if (u.length === 0) { t.type = t.target.type = "blur"; F(t, e) } n = u[u.length - 1]; if (n) { n.target.dwell = i[e].dwell; n.focusInOffset = i[e].focusInOffset; n.target.visitedCount = i[e].visitedCount; if (n.event.type === "click" && !I(n.target)) { n.event.type = "blur"; n.event.tlEvent = "focusout" } } B(u) } function R(e, t) { var n = false; if (u[u.length - 1] && u[u.length - 1].target.id !== e && t.type !== "scroll" && t.type !== "resize" && t.type !== "mouseout" && t.type !== "mouseover" && u[u.length - 1].target.tlType !== "textBox" && u[u.length - 1].target.tlType !== "selectList") { q(u[u.length - 1].target.id, u[u.length - 1]); n = true } return n } function U(e, t) { if (typeof i[e] !== "undefined" && !i[e].hasOwnProperty("focus")) { j(e, t) } F(t, e); if (typeof i[e] !== "undefined" && typeof i[e].prevState !== "undefined") { if (u[u.length - 1].target.tlType === "textBox" || u[u.length - 1].target.tlType === "selectList") { u[u.length - 1].target.prevState = i[e].prevState } } } function z(e) { var t = e.target.position.x, n = e.target.position.y, r = e.target.size.width, i = e.target.size.height, s = Math.abs(t / r).toFixed(1), o = Math.abs(n / i).toFixed(1); s = s > 1 || s < 0 ? .5 : s; o = o > 1 || o < 0 ? .5 : o; return s + "," + o } function W(e, t) { var n, r = true, i = 0; if (t.target.element.tagName === "SELECT" && x && x.target.id === e) { x = null; return } if (!S.inFocus) { j(e, t) } i = u.length; if (i && A(u[i - 1], "event.type") !== "change") { U(e, t) } n = z(t); i = u.length; if (t.position.x === 0 && t.position.y === 0 && i && A(u[i - 1], "target.tlType") === "radioButton") { r = false } else { t.target.position.relXY = n } if (i && A(u[i - 1], "target.id") === e) { if (r) { u[i - 1].target.position.relXY = n } } else { F(t, e) } x = t } function X() { var e = window.orientation || 0; return e } function V(e) { var t = "INVALID"; if (typeof e !== "number") { return t } switch (e) { case 0: case 180: case 360: t = "PORTRAIT"; break; case 90: case -90: case 270: t = "LANDSCAPE"; break; default: t = "UNKNOWN"; break } return t } function $(e) { var t = X(), r = { type: 4, event: { type: "orientationchange" }, target: { prevState: { orientation: n, orientationMode: V(n) }, currState: { orientation: t, orientationMode: V(t)}} }; H(r); n = t } function J(e) { var t = false; if (!e) { return t } t = r.scale === e.scale && Math.abs((new Date).getTime() - r.timestamp) < 500; return t } function K(e) { r.scale = e.scale; r.rotation = e.rotation; r.timestamp = (new Date).getTime() } function Q(e) { var t, n = "INVALID"; if (typeof e === "undefined" || e === null) { return n } t = Number(e); if (isNaN(t)) { n = "INVALID" } else if (t < 1) { n = "CLOSE" } else if (t > 1) { n = "OPEN" } else { n = "NONE" } return n } function G(e) { var t = {}, n = A(e, "nativeEvent.rotation") || 0, i = A(e, "nativeEvent.scale") || 1, s = null, o = { type: 4, event: { type: "touchend" }, target: { id: A(e, "target.id"), idType: A(e, "target.idType")} }; if (T && (!i || i === 1) || !T && e.nativeEvent.touches.length <= 1) { return } s = { rotation: n ? n.toFixed(2) : 0, scale: i ? i.toFixed(2) : 1 }; s.pinch = Q(s.scale); if (J(s)) { return } if (r && r.timestamp) { t.rotation = r.rotation; t.scale = r.scale; t.pinch = Q(t.scale) } if (A(t, "scale")) { o.target.prevState = t } o.target.currState = s; H(o); K(s) } function Y(e) { var t, n; if (null === e || "object" !== typeof e) { return e } if (e instanceof Object) { t = {}; for (n in e) { if (Object.prototype.hasOwnProperty.call(e, n)) { t[n] = Y(e[n]) } } return t } } function Z(e) { var t = { type: 1, clientState: { pageWidth: document.width || (document.documentElement === null ? 0 : document.documentElement.offsetWidth), pageHeight: Math.max(typeof document.height === "undefined" ? 0 : document.height, typeof document.documentElement === "undefined" ? 0 : document.documentElement.offsetHeight, typeof document.documentElement === "undefined" ? 0 : document.documentElement.scrollHeight), viewPortWidth: window.innerWidth || document.documentElement.clientWidth, viewPortHeight: window.innerHeight || document.documentElement.clientHeight, viewPortX: window.pageXOffset || (document.body === null ? 0 : document.body.scrollLeft), viewPortY: window.pageYOffset || (document.body === null ? 0 : document.body.scrollTop), deviceOrientation: window.orientation || 0, event: A(e, "type")} }, n = 1, r = 1; if (Math.abs(t.clientState.deviceOrientation) === 90) { if (T) { n = k - L } else { n = C <= 320 ? k - L : k / N - L } } else { if (T) { n = C + L } else { n = C <= 320 ? C - L : C / N - L } } r = t.clientState.viewPortWidth === 0 ? 1 : n / t.clientState.viewPortWidth; t.clientState.deviceScale = r - .02; t.clientState.deviceScale = t.clientState.deviceScale.toFixed(3); t.clientState.viewTime = g === null ? 0 : (new Date).getTime() - g.getTime(); if (e.type === "scroll" && a <= 0) { b = l.clientState.viewPortX; w = l.clientState.viewPortY } if (e.type === "scroll") { t.clientState.viewPortXStart = b; t.clientState.viewPortYStart = w } f = Y(t); return t } function et() { if (f !== null && f.clientState.event !== "load") { if (f.clientState.event === "scroll") { delete f.clientState.viewPortXStart; delete f.clientState.viewPortYStart } f.clientState.event = "attention"; f.clientState.viewTime = y === null ? 0 : (new Date).getTime() - y.getTime(); H(f); y = new Date; return true } return false } function tt(e) { if (e.clientState.event === "scroll" && e.clientState.viewPortXStart === e.clientState.viewPortX && e.clientState.viewPortYStart === e.clientState.viewPortY) { return false } return true } function nt(e) { var t = E === null ? 0 : (new Date).getTime() - E.getTime(); if (f !== null && (e.type !== f.clientState.event || t >= 1e3)) { if (tt(f)) { H(f); if (f.clientState.event !== "touchend") { l = Y(f) } } f = null; g = null; a = 0; return true } if (f !== null && a === 1 && t >= 1e3 && (f.clientState.event === "resize" || f.clientState.event === "scroll" || f.clientState.event === "orientationchange" || e.type === "screenview_load")) { et() } return false } function rt(e, t) { var n = ["type", "target.id"], r = null, i, s, o = true, u = 10, a = 0, f = 0, l = 0; if (!e || !t || typeof e !== "object" || typeof t !== "object") { o = false } for (i = 0, s = n.length; o && i < s; i += 1) { r = n[i]; if (A(e, r) !== A(t, r)) { o = false; break } } if (o) { f = A(e, "timestamp"); l = A(t, "timestamp"); if (!(isNaN(f) && isNaN(l))) { a = Math.abs(A(e, "timestamp") - A(t, "timestamp")); if (isNaN(a) || a > u) { o = false } } } return o } function it() { var e = window.location.hash; if (e === s) { return } if (s) { TLT.logScreenviewUnload(s) } if (e) { TLT.logScreenviewLoad(e) } s = e } function st(e) { var t = { type: 4, event: { type: e.type }, target: { id: A(e, "target.id"), idType: A(e, "target.idType")} }; H(t) } var t = { "input:radio": "radioButton", "input:checkbox": "checkBox", "input:text": "textBox", "input:password": "textBox", "input:file": "fileInput", "input:button": "button", "input:submit": "submitButton", "input:reset": "resetButton", "input:image": "image", "input:color": "color", "input:date": "date", "input:datetime": "datetime", "input:datetime-local": "datetime-local", "input:number": "number", "input:email": "email", "input:tel": "tel", "input:search": "search", "input:url": "url", "input:time": "time", "input:week": "week", "textarea:": "textBox", "select:": "selectList", "button:": "button", "a:": "link" }, n = window.orientation || 0, r = { scale: 0, timestamp: 0 }, i = {}, s = window.location.hash, o = null, u = [], a = 0, f = null, l = null, c = 0, h = "", p = "", d = (new Date).getTime(), v = 0, m = null, g = null, y = null, b = 0, w = 0, E = null, S = { inFocus: false }, x = null, T = navigator.userAgent.indexOf("iPhone") > -1 || navigator.userAgent.indexOf("iPod") > -1 || navigator.userAgent.indexOf("iPad") > -1, N = window.devicePixelRatio || 1, C = window.screen === null ? 0 : window.screen.width, k = window.screen === null ? 0 : window.screen.height, L = window.screen === null ? 0 : window.screen.height - window.screen.availHeight; if (typeof window.onerror !== "function") { window.onerror = function (t, n, r) { var i = null; if (typeof t !== "string") { return } r = r || -1; i = { type: 6, exception: { description: t, url: n, line: r} }; c += 1; e.post(i) } } return { init: function () { }, destroy: function () { q(o) }, onevent: function (e) { var t = null, n = null; if (typeof e !== "object" || !e.type) { return } if (e.type != "keyup") if (rt(e, m)) { m = e; return } if (m != null) if (m.type != e.type && m.type == "keyup") { F(m, A(m, "target.id")) } m = e; t = A(e, "target.id"); if (Object.prototype.toString.call(i[t]) !== "[object Object]") { i[t] = {} } nt(e); R(t, e); E = new Date; switch (e.type) { case "keyup": break; case "hashchange": it(); break; case "focus": n = j(t, e); break; case "blur": n = q(t, e); break; case "click": n = W(t, e); break; case "change": n = U(t, e); break; case "orientationchange": n = $(e); break; case "touchend": n = G(e); n = Z(e); break; case "load": TLT.logScreenviewLoad("root"); n = Z(e); y = new Date; break; case "screenview_load": y = new Date; break; case "resize": case "scroll": if (g === null && a <= 0) { g = new Date } n = Z(e); if (tt(n)) { n = null } else { a += 1 } break; case "unload": if (u !== null) { B(u) } n = Z(e); et(); H(n); TLT.logScreenviewUnload("root"); break; default: st(e); break } o = t; return n }, onmessage: function () { } } }); (function () { var e; TLT.init({ services: { browser: {}, queue: [{ qid: "DEFAULT", endpoint: "/TealeafTarget.aspx", maxEvents: 25, timerinterval: 0}], message: { privacy: [{ targets: [{ id: { regex: ".*CardNumber" }, idType: -1 }, { id: { regex: ".*PinNumber" }, idType: -1 }, { id: { regex: ".*txt.*No" }, idType: -1}], maskType: 3}]} }, core: { modules: { performance: { enabled: true, events: [{ name: "load", target: window }, { name: "unload", target: window}] }, replay: { enabled: true, events: [{ name: "keyup", target: "input, textarea password", recurseFrames: true }, { name: "mousedown", recurseFrames: true }, { name: "load", target: window }, { name: "unload", target: window }, { name: "click", recurseFrames: true }, { name: "focus", target: "input, select, textarea, [contenteditable]", recurseFrames: true }, { name: "blur", target: "input, select, textarea, [contenteditable]", recurseFrames: true }, { name: "change", target: e, recurseFrames: true }, { name: "resize", target: window }, { name: "scroll", target: window }, { name: "hashchange", target: window }, { name: "orientationchange", target: window }, { name: "touchend"}]}} }, modules: { performance: { filter: { navigationStart: true, unloadEventStart: true, unloadEventEnd: true, redirectStart: true, redirectEnd: true, fetchStart: true, domainLookupStart: true, domainLookupEnd: true, connectStart: true, connectEnd: true, secureConnectionStart: true, requestStart: true, responseStart: true, responseEnd: true, domLoading: true, domInteractive: true, domContentLoadedEventStart: true, domContentLoadedEventEnd: true, domComplete: true, loadEventStart: true, loadEventEnd: true}}} }) })()