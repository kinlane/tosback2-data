/* file: js/lib/es5-shim.min.js 
----------------------------------------------------------------------------------*/
(function(definition){if(typeof define=="function"){define(definition)}else if(typeof YUI=="function"){YUI.add("es5",definition)}else{definition()}})(function(){function Empty(){}if(!Function.prototype.bind){Function.prototype.bind=function bind(that){var target=this;if(typeof target!="function"){throw new TypeError("Function.prototype.bind called on incompatible "+target)}var args=slice.call(arguments,1);var bound=function(){if(this instanceof bound){var result=target.apply(this,args.concat(slice.call(arguments)));if(Object(result)===result){return result}return this}else{return target.apply(that,args.concat(slice.call(arguments)))}};if(target.prototype){Empty.prototype=target.prototype;bound.prototype=new Empty;Empty.prototype=null}return bound}}var call=Function.prototype.call;var prototypeOfArray=Array.prototype;var prototypeOfObject=Object.prototype;var slice=prototypeOfArray.slice;var _toString=call.bind(prototypeOfObject.toString);var owns=call.bind(prototypeOfObject.hasOwnProperty);var defineGetter;var defineSetter;var lookupGetter;var lookupSetter;var supportsAccessors;if(supportsAccessors=owns(prototypeOfObject,"__defineGetter__")){defineGetter=call.bind(prototypeOfObject.__defineGetter__);defineSetter=call.bind(prototypeOfObject.__defineSetter__);lookupGetter=call.bind(prototypeOfObject.__lookupGetter__);lookupSetter=call.bind(prototypeOfObject.__lookupSetter__)}if([1,2].splice(0).length!=2){var array_splice=Array.prototype.splice;Array.prototype.splice=function(start,deleteCount){if(!arguments.length){return[]}else{return array_splice.apply(this,[start===void 0?0:start,deleteCount===void 0?this.length-start:deleteCount].concat(slice.call(arguments,2)))}}}if([].unshift(0)!=1){var array_unshift=Array.prototype.unshift;Array.prototype.unshift=function(){array_unshift.apply(this,arguments);return this.length}}if(!Array.isArray){Array.isArray=function isArray(obj){return _toString(obj)=="[object Array]"}}var boxedString=Object("a"),splitString=boxedString[0]!="a"||!(0 in boxedString);if(!Array.prototype.forEach){Array.prototype.forEach=function forEach(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,thisp=arguments[1],i=-1,length=self.length>>>0;if(_toString(fun)!="[object Function]"){throw new TypeError}while(++i<length){if(i in self){fun.call(thisp,self[i],i,object)}}}}if(!Array.prototype.map){Array.prototype.map=function map(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0,result=Array(length),thisp=arguments[1];if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}for(var i=0;i<length;i++){if(i in self)result[i]=fun.call(thisp,self[i],i,object)}return result}}if(!Array.prototype.filter){Array.prototype.filter=function filter(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0,result=[],value,thisp=arguments[1];if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}for(var i=0;i<length;i++){if(i in self){value=self[i];if(fun.call(thisp,value,i,object)){result.push(value)}}}return result}}if(!Array.prototype.every){Array.prototype.every=function every(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0,thisp=arguments[1];if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}for(var i=0;i<length;i++){if(i in self&&!fun.call(thisp,self[i],i,object)){return false}}return true}}if(!Array.prototype.some){Array.prototype.some=function some(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0,thisp=arguments[1];if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}for(var i=0;i<length;i++){if(i in self&&fun.call(thisp,self[i],i,object)){return true}}return false}}if(!Array.prototype.reduce){Array.prototype.reduce=function reduce(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0;if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}if(!length&&arguments.length==1){throw new TypeError("reduce of empty array with no initial value")}var i=0;var result;if(arguments.length>=2){result=arguments[1]}else{do{if(i in self){result=self[i++];break}if(++i>=length){throw new TypeError("reduce of empty array with no initial value")}}while(true)}for(;i<length;i++){if(i in self){result=fun.call(void 0,result,self[i],i,object)}}return result}}if(!Array.prototype.reduceRight){Array.prototype.reduceRight=function reduceRight(fun){var object=toObject(this),self=splitString&&_toString(this)=="[object String]"?this.split(""):object,length=self.length>>>0;if(_toString(fun)!="[object Function]"){throw new TypeError(fun+" is not a function")}if(!length&&arguments.length==1){throw new TypeError("reduceRight of empty array with no initial value")}var result,i=length-1;if(arguments.length>=2){result=arguments[1]}else{do{if(i in self){result=self[i--];break}if(--i<0){throw new TypeError("reduceRight of empty array with no initial value")}}while(true)}do{if(i in this){result=fun.call(void 0,result,self[i],i,object)}}while(i--);return result}}if(!Array.prototype.indexOf||[0,1].indexOf(1,2)!=-1){Array.prototype.indexOf=function indexOf(sought){var self=splitString&&_toString(this)=="[object String]"?this.split(""):toObject(this),length=self.length>>>0;if(!length){return-1}var i=0;if(arguments.length>1){i=toInteger(arguments[1])}i=i>=0?i:Math.max(0,length+i);for(;i<length;i++){if(i in self&&self[i]===sought){return i}}return-1}}if(!Array.prototype.lastIndexOf||[0,1].lastIndexOf(0,-3)!=-1){Array.prototype.lastIndexOf=function lastIndexOf(sought){var self=splitString&&_toString(this)=="[object String]"?this.split(""):toObject(this),length=self.length>>>0;if(!length){return-1}var i=length-1;if(arguments.length>1){i=Math.min(i,toInteger(arguments[1]))}i=i>=0?i:length-Math.abs(i);for(;i>=0;i--){if(i in self&&sought===self[i]){return i}}return-1}}if(!Object.keys){var hasDontEnumBug=true,dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],dontEnumsLength=dontEnums.length;for(var key in{toString:null}){hasDontEnumBug=false}Object.keys=function keys(object){if(typeof object!="object"&&typeof object!="function"||object===null){throw new TypeError("Object.keys called on a non-object")}var keys=[];for(var name in object){if(owns(object,name)){keys.push(name)}}if(hasDontEnumBug){for(var i=0,ii=dontEnumsLength;i<ii;i++){var dontEnum=dontEnums[i];if(owns(object,dontEnum)){keys.push(dontEnum)}}}return keys}}var negativeDate=-621987552e5,negativeYearString="-000001";if(!Date.prototype.toISOString||new Date(negativeDate).toISOString().indexOf(negativeYearString)===-1){Date.prototype.toISOString=function toISOString(){var result,length,value,year,month;if(!isFinite(this)){throw new RangeError("Date.prototype.toISOString called on non-finite value.")}year=this.getUTCFullYear();month=this.getUTCMonth();year+=Math.floor(month/12);month=(month%12+12)%12;result=[month+1,this.getUTCDate(),this.getUTCHours(),this.getUTCMinutes(),this.getUTCSeconds()];year=(year<0?"-":year>9999?"+":"")+("00000"+Math.abs(year)).slice(0<=year&&year<=9999?-4:-6);length=result.length;while(length--){value=result[length];if(value<10){result[length]="0"+value}}return year+"-"+result.slice(0,2).join("-")+"T"+result.slice(2).join(":")+"."+("000"+this.getUTCMilliseconds()).slice(-3)+"Z"}}var dateToJSONIsSupported=false;try{dateToJSONIsSupported=Date.prototype.toJSON&&new Date(NaN).toJSON()===null&&new Date(negativeDate).toJSON().indexOf(negativeYearString)!==-1&&Date.prototype.toJSON.call({toISOString:function(){return true}})}catch(e){}if(!dateToJSONIsSupported){Date.prototype.toJSON=function toJSON(key){var o=Object(this),tv=toPrimitive(o),toISO;if(typeof tv==="number"&&!isFinite(tv)){return null}toISO=o.toISOString;if(typeof toISO!="function"){throw new TypeError("toISOString property is not callable")}return toISO.call(o)}}if(!Date.parse||"Date.parse is buggy"){Date=function(NativeDate){function Date(Y,M,D,h,m,s,ms){var length=arguments.length;if(this instanceof NativeDate){var date=length==1&&String(Y)===Y?new NativeDate(Date.parse(Y)):length>=7?new NativeDate(Y,M,D,h,m,s,ms):length>=6?new NativeDate(Y,M,D,h,m,s):length>=5?new NativeDate(Y,M,D,h,m):length>=4?new NativeDate(Y,M,D,h):length>=3?new NativeDate(Y,M,D):length>=2?new NativeDate(Y,M):length>=1?new NativeDate(Y):new NativeDate;date.constructor=Date;return date}return NativeDate.apply(this,arguments)}var isoDateExpression=new RegExp("^"+"(\\d{4}|[+-]\\d{6})"+"(?:-(\\d{2})"+"(?:-(\\d{2})"+"(?:"+"T(\\d{2})"+":(\\d{2})"+"(?:"+":(\\d{2})"+"(?:\\.(\\d{3}))?"+")?"+"("+"Z|"+"(?:"+"([-+])"+"(\\d{2})"+":(\\d{2})"+")"+")?)?)?)?"+"$");var months=[0,31,59,90,120,151,181,212,243,273,304,334,365];function dayFromMonth(year,month){var t=month>1?1:0;return months[month]+Math.floor((year-1969+t)/4)-Math.floor((year-1901+t)/100)+Math.floor((year-1601+t)/400)+365*(year-1970)}for(var key in NativeDate){Date[key]=NativeDate[key]}Date.now=NativeDate.now;Date.UTC=NativeDate.UTC;Date.prototype=NativeDate.prototype;Date.prototype.constructor=Date;Date.parse=function parse(string){var match=isoDateExpression.exec(string);if(match){var year=Number(match[1]),month=Number(match[2]||1)-1,day=Number(match[3]||1)-1,hour=Number(match[4]||0),minute=Number(match[5]||0),second=Number(match[6]||0),millisecond=Number(match[7]||0),offset=!match[4]||match[8]?0:Number(new NativeDate(1970,0)),signOffset=match[9]==="-"?1:-1,hourOffset=Number(match[10]||0),minuteOffset=Number(match[11]||0),result;if(hour<(minute>0||second>0||millisecond>0?24:25)&&minute<60&&second<60&&millisecond<1e3&&month>-1&&month<12&&hourOffset<24&&minuteOffset<60&&day>-1&&day<dayFromMonth(year,month+1)-dayFromMonth(year,month)){result=((dayFromMonth(year,month)+day)*24+hour+hourOffset*signOffset)*60;result=((result+minute+minuteOffset*signOffset)*60+second)*1e3+millisecond+offset;if(-864e13<=result&&result<=864e13){return result}}return NaN}return NativeDate.parse.apply(this,arguments)};return Date}(Date)}if(!Date.now){Date.now=function now(){return(new Date).getTime()}}if("0".split(void 0,0).length){var string_split=String.prototype.split;String.prototype.split=function(separator,limit){if(separator===void 0&&limit===0)return[];return string_split.apply(this,arguments)}}if("".substr&&"0b".substr(-1)!=="b"){var string_substr=String.prototype.substr;String.prototype.substr=function(start,length){return string_substr.call(this,start<0?(start=this.length+start)<0?0:start:start,length)}}var ws="	\n\f\r   ᠎    "+"         　\u2028"+"\u2029﻿";if(!String.prototype.trim||ws.trim()){ws="["+ws+"]";var trimBeginRegexp=new RegExp("^"+ws+ws+"*"),trimEndRegexp=new RegExp(ws+ws+"*$");String.prototype.trim=function trim(){if(this===undefined||this===null){throw new TypeError("can't convert "+this+" to object")}return String(this).replace(trimBeginRegexp,"").replace(trimEndRegexp,"")}}function toInteger(n){n=+n;if(n!==n){n=0}else if(n!==0&&n!==1/0&&n!==-(1/0)){n=(n>0||-1)*Math.floor(Math.abs(n))}return n}function isPrimitive(input){var type=typeof input;return input===null||type==="undefined"||type==="boolean"||type==="number"||type==="string"}function toPrimitive(input){var val,valueOf,toString;if(isPrimitive(input)){return input}valueOf=input.valueOf;if(typeof valueOf==="function"){val=valueOf.call(input);if(isPrimitive(val)){return val}}toString=input.toString;if(typeof toString==="function"){val=toString.call(input);if(isPrimitive(val)){return val}}throw new TypeError}var toObject=function(o){if(o==null){throw new TypeError("can't convert "+o+" to object")}return Object(o)}});
/* file: js/lib/jquery-1.8.2.min.js 
----------------------------------------------------------------------------------*/
/*! jQuery v1.8.2 jquery.com | jquery.org/license */
(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return p})})(window);
/* file: js/lib/jquery-ui/jquery.ui.core.min.js 
----------------------------------------------------------------------------------*/
/*! jQuery UI - v1.8.24 - 2012-09-28
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){function c(b,c){var e=b.nodeName.toLowerCase();if("area"===e){var f=b.parentNode,g=f.name,h;return!b.href||!g||f.nodeName.toLowerCase()!=="map"?!1:(h=a("img[usemap=#"+g+"]")[0],!!h&&d(h))}return(/input|select|textarea|button|object/.test(e)?!b.disabled:"a"==e?b.href||c:c)&&d(b)}function d(b){return!a(b).parents().andSelf().filter(function(){return a.curCSS(this,"visibility")==="hidden"||a.expr.filters.hidden(this)}).length}a.ui=a.ui||{};if(a.ui.version)return;a.extend(a.ui,{version:"1.8.24",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}}),a.fn.extend({propAttr:a.fn.prop||a.fn.attr,_focus:a.fn.focus,focus:function(b,c){return typeof b=="number"?this.each(function(){var d=this;setTimeout(function(){a(d).focus(),c&&c.call(d)},b)}):this._focus.apply(this,arguments)},scrollParent:function(){var b;return a.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?b=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(a.curCSS(this,"position",1))&&/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0):b=this.parents().filter(function(){return/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0),/fixed/.test(this.css("position"))||!b.length?a(document):b},zIndex:function(c){if(c!==b)return this.css("zIndex",c);if(this.length){var d=a(this[0]),e,f;while(d.length&&d[0]!==document){e=d.css("position");if(e==="absolute"||e==="relative"||e==="fixed"){f=parseInt(d.css("zIndex"),10);if(!isNaN(f)&&f!==0)return f}d=d.parent()}}return 0},disableSelection:function(){return this.bind((a.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),a("<a>").outerWidth(1).jquery||a.each(["Width","Height"],function(c,d){function h(b,c,d,f){return a.each(e,function(){c-=parseFloat(a.curCSS(b,"padding"+this,!0))||0,d&&(c-=parseFloat(a.curCSS(b,"border"+this+"Width",!0))||0),f&&(c-=parseFloat(a.curCSS(b,"margin"+this,!0))||0)}),c}var e=d==="Width"?["Left","Right"]:["Top","Bottom"],f=d.toLowerCase(),g={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+d]=function(c){return c===b?g["inner"+d].call(this):this.each(function(){a(this).css(f,h(this,c)+"px")})},a.fn["outer"+d]=function(b,c){return typeof b!="number"?g["outer"+d].call(this,b):this.each(function(){a(this).css(f,h(this,b,!0,c)+"px")})}}),a.extend(a.expr[":"],{data:a.expr.createPseudo?a.expr.createPseudo(function(b){return function(c){return!!a.data(c,b)}}):function(b,c,d){return!!a.data(b,d[3])},focusable:function(b){return c(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var d=a.attr(b,"tabindex"),e=isNaN(d);return(e||d>=0)&&c(b,!e)}}),a(function(){var b=document.body,c=b.appendChild(c=document.createElement("div"));c.offsetHeight,a.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),a.support.minHeight=c.offsetHeight===100,a.support.selectstart="onselectstart"in c,b.removeChild(c).style.display="none"}),a.curCSS||(a.curCSS=a.css),a.extend(a.ui,{plugin:{add:function(b,c,d){var e=a.ui[b].prototype;for(var f in d)e.plugins[f]=e.plugins[f]||[],e.plugins[f].push([c,d[f]])},call:function(a,b,c){var d=a.plugins[b];if(!d||!a.element[0].parentNode)return;for(var e=0;e<d.length;e++)a.options[d[e][0]]&&d[e][1].apply(a.element,c)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(b,c){if(a(b).css("overflow")==="hidden")return!1;var d=c&&c==="left"?"scrollLeft":"scrollTop",e=!1;return b[d]>0?!0:(b[d]=1,e=b[d]>0,b[d]=0,e)},isOverAxis:function(a,b,c){return a>b&&a<b+c},isOver:function(b,c,d,e,f,g){return a.ui.isOverAxis(b,d,f)&&a.ui.isOverAxis(c,e,g)}})})(jQuery);
/* file: js/lib/jquery-ui/jquery.ui.widget.min.js 
----------------------------------------------------------------------------------*/
/*! jQuery UI - v1.8.24 - 2012-09-28
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.widget.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){if(a.cleanData){var c=a.cleanData;a.cleanData=function(b){for(var d=0,e;(e=b[d])!=null;d++)try{a(e).triggerHandler("remove")}catch(f){}c(b)}}else{var d=a.fn.remove;a.fn.remove=function(b,c){return this.each(function(){return c||(!b||a.filter(b,[this]).length)&&a("*",this).add([this]).each(function(){try{a(this).triggerHandler("remove")}catch(b){}}),d.call(a(this),b,c)})}}a.widget=function(b,c,d){var e=b.split(".")[0],f;b=b.split(".")[1],f=e+"-"+b,d||(d=c,c=a.Widget),a.expr[":"][f]=function(c){return!!a.data(c,b)},a[e]=a[e]||{},a[e][b]=function(a,b){arguments.length&&this._createWidget(a,b)};var g=new c;g.options=a.extend(!0,{},g.options),a[e][b].prototype=a.extend(!0,g,{namespace:e,widgetName:b,widgetEventPrefix:a[e][b].prototype.widgetEventPrefix||b,widgetBaseClass:f},d),a.widget.bridge(b,a[e][b])},a.widget.bridge=function(c,d){a.fn[c]=function(e){var f=typeof e=="string",g=Array.prototype.slice.call(arguments,1),h=this;return e=!f&&g.length?a.extend.apply(null,[!0,e].concat(g)):e,f&&e.charAt(0)==="_"?h:(f?this.each(function(){var d=a.data(this,c),f=d&&a.isFunction(d[e])?d[e].apply(d,g):d;if(f!==d&&f!==b)return h=f,!1}):this.each(function(){var b=a.data(this,c);b?b.option(e||{})._init():a.data(this,c,new d(e,this))}),h)}},a.Widget=function(a,b){arguments.length&&this._createWidget(a,b)},a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:!1},_createWidget:function(b,c){a.data(c,this.widgetName,this),this.element=a(c),this.options=a.extend(!0,{},this.options,this._getCreateOptions(),b);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()}),this._create(),this._trigger("create"),this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName),this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled "+"ui-state-disabled")},widget:function(){return this.element},option:function(c,d){var e=c;if(arguments.length===0)return a.extend({},this.options);if(typeof c=="string"){if(d===b)return this.options[c];e={},e[c]=d}return this._setOptions(e),this},_setOptions:function(b){var c=this;return a.each(b,function(a,b){c._setOption(a,b)}),this},_setOption:function(a,b){return this.options[a]=b,a==="disabled"&&this.widget()[b?"addClass":"removeClass"](this.widgetBaseClass+"-disabled"+" "+"ui-state-disabled").attr("aria-disabled",b),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_trigger:function(b,c,d){var e,f,g=this.options[b];d=d||{},c=a.Event(c),c.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase(),c.target=this.element[0],f=c.originalEvent;if(f)for(e in f)e in c||(c[e]=f[e]);return this.element.trigger(c,d),!(a.isFunction(g)&&g.call(this.element[0],c,d)===!1||c.isDefaultPrevented())}}})(jQuery);
/* file: js/core/console.js 
----------------------------------------------------------------------------------*/
/**
 * IE console object dummy functions
 */
(function(window) {
	'use strict';
	
	var methods = ['log', 'dir', 'warn', 'error', 'assert', 'count', 'info', 'time', 'timeEnd', 'debug'],
		noop = function() {};

	if (!window.console) {
		window.console = {};
	}

	for (var i = 0, method; i < methods.length; i++) {
		method = methods[i];

		if (!console[method]) {
			console[method] = noop;
		}
	}
})(this);
/* file: js/jquery/jquery.lj.basicWidget.js 
----------------------------------------------------------------------------------*/
/**
 * @author dmitry.petrov@sup.com (Dmitry Petrov)
 * @fileoverview Base widget for all livejournal widgets.
 */

/**
 * @name $
 */

/**
 * @name $.lj
 */

/**
 * @name $.lj.basicWidget
 * @requires $.ui.core, $.ui.widget
 * @class Base widget for all livejournal widgets.<br />
 * Basic widget adds pub/sub system to the widget hierarchy. By convention widgets add prefix equal
 * to the widget name of the most parent element who fires it. E.g. if someWidget and subSomeWidget
 * that extends someWidget do fire open event, it should be prefixed with someWidget - someWidget/open.
 *
 */
(function($) {
	'use strict';

	var __callbacks = {},

		//these events we set once and for all widget instances
		globalEvents = {
			documentClick: false
		};

	/** @lends $.lj.basicWidget.prototype */
	$.widget( 'lj.basicWidget', {

		/**
		 * Default options for widgets.
		 * @type Object
		 * @private
		 */
		options: {
			/**
			 * Object contains strings with class names that are used within widget.
			 */
			classNames: {},
			/**
			 * Object contains strings with selectors that are used to find nodes within widget.
			 */
			selectors: {},
			/**
			 * Object contains translation strings for a widget. Widget should not contain hardcoded strings.
			 */
			ml: {},
			/**
			 * Object contains strings with templates, that are used to build content within widget.
			 */
			tmpl: {}
		},

		_create: function() {
			/**
			 * Contains all events that should not trigger events on next fire for this widget.
			 * @type Object
			 */
			this.__suppressedEvents = {};
			this.__modules = {};
			this._locked = false;
		},

		/**
		 * Bind common events for the widget
		 */
		_bindControls: function() {
			var widget = this;

			/**
			 * documentClick
			 */
			if( !globalEvents.documentClick ) {
				$( document ).click( function( ev ) {
					widget._fire( 'documentClick', [], true );
				} );

				globalEvents.documentClick = true;
			}
		},

		_setOption: function(name, val) {
			switch (name) {
				case 'selectors':
				case 'classNames':
				case 'tmpl':
				case 'templates':
					this.options[name] = $.extend(this.options[name], val);
					return;
			}

			$.Widget.prototype._setOption.apply(this, arguments);
		},

		/**
		 * Subscribe to the event with the callback.
		 *
		 * @param {String} type Event type.
		 * @param {Function} callback Function that should be fired on the event.
		 */
		_on: function( type, callback ) {
			if (!__callbacks.hasOwnProperty(type)) {
				__callbacks[ type ] = [];
			}

			__callbacks[ type ].push( {
				fn: callback,
				owner: this,
				once: false
			} );
		},

		/**
		 * Subscribe to one selected event with the callback.
		 *
		 * @param {String} type Event type.
		 * @param {Function} callback Function that should be fired on the event.
		 */
		_one: function( type, callback ) {
			this._on( type, callback );
			__callbacks[ type ][ __callbacks[ type ].length - 1 ].once = true;
		},

		/**
		 * Remove subscription on the event.
		 *
		 * @param {String} type Event type.
		 * @param {Function=} callback Callback function. If parameter is omitted, function will remove all
		 *     callbacks of this instance from the subscription on this type of event.
		 */
		_off: function( type, callback ) {
			if (!__callbacks.hasOwnProperty(type)) {
				return;
			}

			var cbs = __callbacks[ type ];

			for (var i = 0; i < cbs.length; ++i) {
				if ((cbs[i].fn === callback) || (!callback && cbs[i].owner === this)) {
					cbs.splice(i--, 1);
				}
			}
		},

		/**
		 * Dispatch event.
		 *
		 * @param {String} type Event type.
		 * @param {Array|[]} args array with arguments that will be passed to the callback functions.
		 * @param {Boolean|False} includeOwner If false the message is not recieved by
		 *     the object that dispatched it.
		 */
		_fire: function( type, args, includeOwner ) {
			args = args || [];
			includeOwner = includeOwner || false;
			if( type in __callbacks ) {
				var cbs = __callbacks[ type ],
					i = -1;

				while( cbs[ ++i ] ) {
					if( !includeOwner && cbs[ i ].owner === this ) { continue; }
					if( type in cbs[ i ].owner.__suppressedEvents ) { continue; }
					cbs[ i ].fn.apply( null, args );
				}

				//we delete supressed event flag only after firing event because
				//widget can subscribe more than one callback
				while(cbs[ --i ]) {
					if( type in cbs[ i ].owner.__suppressedEvents ) {
						delete cbs[ i ].owner.__suppressedEvents[ type ];
					}

					//delete callbacks that should be fired only once
					if( cbs[ i ].once ) { cbs.splice(i, 1); }
				}
			}
		},

		/**
		 * Prevent event from being trigger on this widget instance on next fire.
		 *     An event after next will be processed as normal
		 */
		_suppressNextEvent: function( eventName ) {
			this.__suppressedEvents[ eventName ] = true;
		},

		/**
		 * Remove all subscriptions on widget distruction. If overriden, this method should be
		 *     also caled.
		 */
		_destroy: function() {
			var cbs, type, i;
			for (type in __callbacks) {
				if (__callbacks.hasOwnProperty(type)) {
					cbs = __callbacks[type];
					for (i = 0; i < cbs.length; ++i) {
						if (cbs[i].owner === this) {
							cbs.splice(i--, 1);
						}
					}
				}
			}
		},

		/**
		 * Find element inside the widget and return it. Note, that function caches the elements
		 * and assigns them ti the widget object with the name _{name}
		 *
		 * @param {string} name Name of the selector to search in this.options.selectors.
		 * @param {jQuery=} ctx Optionally we can say, where to find the node.
		 */
		_el: function(name, ctx) {
			var method = '_' + name;

			ctx = ctx || this.element;

			if (!this[method]) {
				this[method] = ctx.find(this.options.selectors[name]);
			}

			return this[method];
		},

		/**
		 * Fetch the class name from the options.
		 *
		 * @param {string} name Name of the class name to search in this.options.classNames.
		 */
		_cl: function(name) {
				return this.options.classNames[name];
		},

		/**
		 * Fetch the selector from the options.
		 *
		 * @param {string} name Name of the selector to search in this.options.selectors
		 */
		_s: function(name) {
				return this.options.selectors[name];
		},

		/**
		 * Apply template specified by name with data.
		 *
		 * @param {string} name The key name of the template in this.options.templates.
		 * @param {Object} data The data object which should be applied to the template.
		 *
		 * @return {jQuery} jQuery object with generated markup.
		 */
		_tmpl: function(name, data) {
			return LJ.UI.template(this.options.templates[name], data);
		},

		/**
		 * Fetch ml variable from the options and apply LJ.ml function to it
		 * @param  {String} name Options key for the ml variable
		 * @return {String}      ml-variable from server
		 */
		_ml: function (name) {
			if (this.options.ml && this.options.ml.hasOwnProperty(name)) {
				return LJ.ml( this.options.ml[name] );
			} else {
				LJ.console.log("Widget text variable ["+ name +"] hasn't been defined");
				return "["+ name +"]";
			}
		},

		/**
		 * Use a mixin with the widget instance.
		 *
		 * @param {string} name Mixin name. A Mixin should be registered with LJ.UI.mixin.
		 * @param {Object=} options Options to pass to the mixin.
		 */
		_use: function(name, options) {
			var module = LJ.UI.mixin(name);

			if (module) {
				if (this.__modules.hasOwnProperty(name)) {
					LJ.console.log('Warn: Module ', name, ' has already been registered for ', this.widgetName);
					return;
				}

				this.__modules[name] = module.call(this, jQuery, options);
			} else {
				LJ.console.log('Warn: Module ', name, ' has not been loaded yet');
			}
		},

		/**
		 * Return mixin object. Object should contain public api provided with this mixin.
		 *
		 * @param {string} name Mixin name.
		 */
		_: function(name) {
			if (this.__modules.hasOwnProperty(name)) {
				return this.__modules[name];
			} else {
				return null;
			}
		},

		/**
		 * Lock the widget. The method should be used to block widget UI during long operations, e.g. ajax requests.
		 */
		_lock: function() { this._locked = true; },

		/**
		 * Unlock the widget.
		 */
		_unlock: function() { this._locked = false; },

		/**
		 * Check whether widget is locked now.
		 *
		 * @return {boolean} The lock state
		 */
		locked: function() { return this._locked; }
	} );
}(jQuery));

/* file: js/basic.js 
----------------------------------------------------------------------------------*/
document.documentElement.id = 'js';

/* Cookie plugin. Copyright (c) 2006 Klaus Hartl (stilbuero.de) */
function Cookie(name, value, options)
{
	if (value !== undefined) { // name and value given, set/delete cookie
		options = options || {};
		if (value === null) {
			value = '';
			options.expires = -1;
		}
		var expires = '';
		if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
			var date;
			if (typeof options.expires == 'number') {
				date = new Date;
				date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
			} else {
				date = options.expires;
			}
			expires = '; expires=' + date.toUTCString(); // use expires attribute, max-age is not supported by IE
		}
		// CAUTION: Needed to parenthesize options.path and options.domain
		// in the following expressions, otherwise they evaluate to undefined
		// in the packed version for some reason...
		var path = options.path ? '; path=' + (options.path) : '',
			domain = options.domain ? '; domain=' + (options.domain) : '',
			secure = options.secure ? '; secure' : '';
		document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
	} else { // only name given, get cookie
		var cookieValue = null;
		if (document.cookie && document.cookie != '') {
			var cookies = document.cookie.split(';');
			for (var i = 0; i < cookies.length; i++) {
				var cookie = cookies[i].trim();
				// Does this cookie string begin with the name we want?
				if (cookie.substring(0, name.length + 1) == (name + '=')) {
					cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
					break;
				}
			}
		}
		return cookieValue;
	}
}

//core.js

/**
 * Utility method.
 * @param x <code>any</code> Any JavaScript value, including <code>undefined</code>.
 * @return boolean <code>true</code> if the value is not <code>null</code> and is not <code>undefined</code>.
 */
finite = function(x){
	return isFinite(x) ? x : 0;
};


finiteInt = function(x, base){
	return finite(parseInt(x, base));
};


finiteFloat = function(x){
	return finite(parseFloat(x));
};

/* unique id generator */
Unique = {
	length: 0,
	id: function(){
		return ++this.length;
	}
};

/* event methods */
var Event = Event||{};

Event.stop = function(e){
	// this set in Event.prep
	e = e || window.event || this;
	Event.stopPropagation(e);
	Event.preventDefault(e);
	return false;
};

Event.stopPropagation = function(e){
	if(e && e.stopPropagation)
		e.stopPropagation(); else
		window.event.cancelBubble = true;
};

Event.preventDefault = function(e){
	e = e || window.event;
	if(e.preventDefault)
		e.preventDefault();
	e.returnValue = false;
};

Event.prep = function(e){
	e = e || window.event;
	if(e.stop === undefined)
		e.stop = this.stop;
	if(e.target === undefined)
		e.target = e.srcElement;
	if(e.relatedTarget === undefined)
		e.relatedTarget = e.toElement;
	return e;
};

/**
 * @namespace LJ LiveJournal utility objects
 */
LJ = window.LJ || {};

/**
 * Define a namespace.
 *
 * @param {string} path The String with namespace to be created.
 * @param {Object=} top An optional object. If set then the namespace will be built relative to it. Defaults to the window.
 */
LJ.define = function(path, top) {
	var ns = path.split('.'),
		name;

	top = top || window;

	while (name = ns.shift()) {
		top[name] = top[name] || {};
		top = top[name];
	}

}

/**
 * Mark the namespace as a dependency. The function does nothing now.
 *
 * @param {string} path Namespace name.
 */
LJ.require = function(path) {
	//fillme
};

/**
 * Get a variable, defined especially for this page in the Site.page.
 *
 * @param {string} name Variable name.
 * @param {boolean} global A flag to check, whether the variable is local to page or not.
 *
 * @return {*} Returns a page variable or undefined if not found.
 */
LJ.pageVar = function(name, global) {
	var obj = global ? window.Site : window.Site.page;

	if (obj && obj.hasOwnProperty(name)) {
		return obj[name];
	} else {
		return void(0);
	}
};

/**
 * @class Class allows to call a function with  some delay and also prevent
 *     its execution if needed.
 * @constructor
 *
 * @param {Function} func Function to call.
 * @param {number} wait Time in ms to wait before function will be called.
 * @param {boolean=false} resetOnCall it true, the function will be executed only after last call + delay time
 */
LJ.DelayedCall = function(func, wait, resetOnCall) {
	this._func = func;
	this._wait = wait;
	this._resetOnCall = !!resetOnCall;
	this._timer = null;
	this._args = null;
};

LJ.DelayedCall.prototype._timerCallback = function() {
	this._timer = null;
	this._func.apply(null, this._args);
};

/**
 * Run function. All arguments that will be passed to this function will be
 *    passed to the function called.
 */
LJ.DelayedCall.prototype.run = function(/* arguments */) {
	this._args = [].slice.call(arguments, 0);
	if (this._timer) {
		if (this._resetOnCall) {
			clearTimeout(this._timer);
			this._timer = null;
		} else {
			return;
		}
	}

	this._timer = setTimeout(this._timerCallback.bind(this), this._wait);
};

/**
 * Prevent function execution.
 */
LJ.DelayedCall.prototype.stop = function() {
	clearTimeout(this._timer);
	this._timer = null;
};

/**
 * Format number according to locale. E.g. 1000000 becomes 1,000,000.
 *
 * @param {number} num Number to format.
 */
LJ.commafy = function(num) {
	num = "" + num;
	if (/^\d+$/.test(num)) {
		var delim = LiveJournal.getLocalizedStr('number.punctuation');
		if (delim === '[number.punctuation]') { delim = ','; }

		var hasMatches = true;
		while (hasMatches) {
			hasMatches = false;
			num = num.replace(/(\d)(\d{3})(?!\d)/g, function(str, first, group) {
				hasMatches = true;
				return first + delim + group;
			})
		}
	}

	return num;
};

/**
 * Create function that will call the target function
 * at most once per every delay seconds. The signature and tests
 * are taken from underscore project.
 *
 * @param {Function} func The function to call.
 * @param {number} Delay between the calls in ms.
 */
LJ.throttle = function(func, delay) {
	var ctx, args, timer, shouldBeCalled = false;

	return function() {
		ctx = this;
		args = arguments;

		var callFunc = function() {
			timer = null;
			if (!shouldBeCalled) { return; }
			shouldBeCalled = false;
			timer = setTimeout(callFunc, delay);
			var ret = func.apply(ctx, args);

			return ret;
		};

		shouldBeCalled = true;
		if (timer) { return; }

		return callFunc();
	};
};

/**
 * Create function that will call target function at most once
 * per every delay. Arguments are queued and when delay ends
 * function is called with last supplied arguments set. Optionally
 * arguments queue can be preserved on call, so all sheduled will be done.
 *
 * @param {Function} f The function to call.
 * @param {Number} delay Delay between the calls in ms.
 * @param {Boolean} preserve Run all queued sequentially
 */

LJ.threshold = function (f, delay, preserve) {
	var queue = [],
		batchSize, batch,
		lock = false,

		callback = function () {
			var caller = this;

			if (lock || !queue.length) {
				return;
			}

			while (queue.length) {
				lock = true;

				if (preserve) {
					f.apply(caller, queue.shift());
				} else {
					f.apply(caller, queue.pop());
					queue = [];
				}

				if (batch && --batch) {
					lock = false;
					continue;
				}

				setTimeout(function () {
					lock = false;
					batch = batchSize;
					callback.call(caller);
				}, delay);

				break;
			}
		},

		threshold = function () {
			queue.push([].slice.call(arguments));
			callback.call(this);
		};

	threshold.resetQueue = function () {
		queue = [];
	};

	threshold.batch = function (size) {
		if (size !== undefined) {
			batchSize = size >>> 0;
			if (!lock) {
				batch = batchSize;
			}
		}
	};

	return threshold;
};

if (typeof console !== 'undefined') {
	LJ.console = console;
}

LJ._const = {};

/**
 * Define a constant.
 *
 * @param {string} name name of the constant. All spaces will be replaced with underline.
 *     if constant was already defined, the function will throw the exception.
 * @param {*} value A value of the constant.
 */
LJ.defineConst = function(name, value) {
	name = name.toUpperCase().replace(/\s+/g, '_');

	if (LJ._const.hasOwnProperty(name)) {
		throw new Error('constant was already defined');
	} else {
		LJ._const[name] = value;
	}
};

/**
 * Get the value of the constant.
 *
 * @param {string} name The name of the constant.
 * @return {*} The value of the constant or undefined if constant was not defined.
 */
LJ.getConst = function(name) {
	name = name.toUpperCase().replace(/\s+/g, '_');

	return (LJ._const.hasOwnProperty(name) ? LJ._const[name] : void 0);
};

/**
 * @namespace LJ.Util.Journal Utility functions connected with journal
 */
LJ.define('LJ.Util.Journal');

(function() {
	var base = (LJ.pageVar('siteroot', true) || 'http://www.livejournal.com')
						.replace('http://www', ''),
		journalReg  = new RegExp('^http:\\/\\/([\\w-]+)' + base.replace(/\./, '\\.') + '(?:\\/(?:([\\w-]+)\\/)?(?:(\\d+)\\.html)?)?$');

	/**
	 * Parse journal link to retrieve information from it
	 *
	 * @param {string} url The string to parse.
	 * @return {Object} Return object will contain fields journal and ditemid(if availible) or null if the link cannot be parsed.
	 */
	LJ.Util.Journal.parseLink = function(url) {
		if (!url) {
			return null;
		}

		if (!url.match(/(\.html|\/)$/)) {
			url += '/';
		}

		var regRes = journalReg.exec(url),
			result = {};

		if (!regRes || !regRes[1]) { return null; }

		if (!regRes[1].match(/^(?:users|community)$/)) {
			result.journal = regRes[1];
		} else {
			if (!regRes[2]) { return null; }
			result.journal = regRes[2];
		}

			result.journal = result.journal.replace(/-/g, '_');

		if (regRes[3]) {
			result.ditemid = parseInt(regRes[3], 10);
		}

		return result;
	};

	/**
	 * Render journal link according to the standard scheme.
	 *
	 * @param {string} journal Journal name.
	 * @param {string|number}  ditemid Id of the post in the journal.
	 * @param {boolean} iscomm Whether to treat the journal as community.
	 *
	 * @return {string|null} Result is a link to the journal page or null if no journal was specified.
	 */
	LJ.Util.Journal.renderLink = function(journal, ditemid, iscomm) {
		if (!journal) {
			return null;
		}

		var url = 'http://';
		if (iscomm) {
			url += 'community' + base + '/' + journal;
		} else if (journal.match(/^_|_$/)) {
			url += 'users' + base + '/' + journal;
		} else {
			url += journal.replace(/_/g, '-') + base;
		}

		url += '/';

		if (ditemid) {
			url += ditemid + '.html';
		}

		return url;
	};

}());

/**
 * @namespace LJ.Util.Date The namespace contains utility functions connected with date.
 */
LJ.define('LJ.Util.Date');

(function() {

	var months = [ 'january', 'february', 'march', 'april',
					'may', 'june', 'july', 'august',
					'september', 'october', 'november', 'december' ],
		month_ml = 'date.month.{month}.long';

	function normalizeFormat(format) {
		if (!format || format === 'short') {
			format = LiveJournal.getLocalizedStr('date.format.short');
		} else if (format === 'long') {
			format = LiveJournal.getLocalizedStr('date.format.long');
		}

		return format;
	}

	function getMonth(idx) {
		var month = months[ idx % 12 ];
		return LiveJournal.getLocalizedStr(month_ml.supplant({month: month}));
	}

	/**
	 * Parse date from string.
	 *
	 * @param {string} datestr The string containing the date.
	 * @param {string} format Required date string format.
	 */
	LJ.Util.Date.parse = function(datestr, format) {
		format = normalizeFormat(format);

		//don't touch it if you can't use it
		if (!datestr) { return datestr; }

		var testStr = normalizeFormat(format),
			positions = [ null ],
			pos = 0, token,
			regs = {
				'%Y' : '(\\d{4})',
				'%M' : '(\\d{2})',
				'%D' : '(\\d{2})'
			};

		while( ( pos = testStr.indexOf( '%', pos ) ) !== -1 ) {
			token = testStr.substr( pos, 2 );
			if( token in regs ) {
				testStr = testStr.replace( token, regs[ token ] );
				positions.push( token );
			} else {
				pos += 2; //skip this token
				positions.push( null );
			}
		}

		var r = new RegExp( testStr ),
			arr = r.exec( datestr );

		if( !arr ) {
			return null;
		} else {
			var d = new Date();
			for( var i = 1; i < arr.length; ++i ) {
				if( positions[ i ] ) {
					switch( positions[ i ] ) {
						case '%D':
							d.setDate( arr[ i ] );
							break;
						case '%M':
							d.setMonth( parseInt( arr[ i ], 10 ) - 1 );
							break;
						case '%Y':
							d.setFullYear( arr[ i ] );
							break;
					}
				}
			}

			return d;
		}
	};

	/**
	 * Create string representation of object according to the format.
	 *
	 * @param {Date} date The date object to work with.
	 * @param {string=} format String format. Possible default formats are 'short' and 'long'.
	 */
	LJ.Util.Date.format = function(date, format) {
		format = normalizeFormat(format);

		return format.replace( /%([a-zA-Z]{1})/g, function(str, letter) {
			switch (letter) {
				case 'M' :
					return ('' + (date.getMonth() + 1)).pad(2, '0');
				case 'B' : //full month
					return getMonth(date.getMonth());
				case 'D' :
					return ('' + date.getDate()).pad(2, '0');
				case 'Y' :
					return date.getFullYear();
				case 'R' :
					return ('' + date.getHours()).pad(2, '0') + ':' + ('' + date.getMinutes()).pad(2, '0');
				case 'T' :
					return [
						('' + date.getHours()).pad(2, '0'),
						('' + date.getMinutes()).pad(2, '0'),
						('' + date.getSeconds()).pad(2, '0')
					].join(':');
				default:
					return str;
			}
		});
	};

	/**
	 * Get timezone from the date object in the canonical way.
	 *
	 * @return {string} A string representation of timezone, eg +0400
	 */
	LJ.Util.Date.timezone = function() {
		var offset = (-(new Date()).getTimezoneOffset() / 0.6),
			str = '';

		if (offset > 0) {
			str += '+';
		} else if (offset < 0) {
			str += '-';
			offset = -offset;
		}

		str += ('' + offset).pad(4, '0');

		return str;
	};

}());


LJ.DOM = LJ.DOM || {};

/**
 * Inject stylesheet into page.
 *
 * @param {string} Stylesheet filename to inject.
 * @param {global} Global object.
 */
LJ.DOM.injectStyle = function(fileName, _window) {
	var w = _window || window,
		head = w.document.getElementsByTagName("head")[0],
		cssNode = w.document.createElement('link');

	cssNode.type = 'text/css';
	cssNode.rel = 'stylesheet';
	cssNode.href = fileName;

	head.appendChild(cssNode);
};

/**
 * Get field's selection
 * @param  {jQuery/DOM} node jQuery or DOM node
 * @return {Object}      Object, contains { start, end } coordinates of selection
 */
LJ.DOM.getSelection = function (node) {
	var start = 0,
		end = 0,
		range,
		dup,
		regexp = null;

	if (!node.nodeName) {
		node = node.get(0);
	}

	if ( 'selectionStart' in node ) {
		return {
			start: node.selectionStart,
			end: node.selectionEnd
		};
	}

	if ( 'createTextRange' in node ) {
		range = document.selection.createRange();
		if ( range.parentElement() == node ) {
			dup = range.duplicate();
			if ( node.type === 'text' ) {
				node.focus();
				start = -dup.moveStart('character', -node.value.length);
				end = start + range.text.length;
			} else {
				// textarea
				regexp = /\r/g;
				dup.moveToElementText(node);
				dup.setEndPoint('EndToStart', range);
				start = dup.text.replace(regexp, '').length;
				dup.setEndPoint('EndToEnd', range);
				end = dup.text.replace(regexp, '').length;
				dup = document.selection.createRange();
				dup.moveToElementText(node);
				dup.moveStart('character', start);
				while (dup.move('character', -dup.compareEndPoints('StartToStart', range))) {
					start += 1;
				}
				dup.moveStart('character', end - start);
				while (dup.move('character', -dup.compareEndPoints('StartToEnd', range))) {
					end += 1;
				}
			}
		}
	}

	return {
		start: start,
		end: end
	};
};

/**
 * Set selection for node
 * @param {jQuery/DOM} node jQuery or native DOM node
 * @param {number} start Selection start position
 * @param {number} end   Selection end position
 */
LJ.DOM.setSelection = function (node, start, end) {
	var range;
	if (!node.nodeName) {
		node = node.get(0);
	}
	// see https://bugzilla.mozilla.org/show_bug.cgi?id=265159
	node.focus();
	if( node.setSelectionRange ){
		node.setSelectionRange(start, end);
	}
	// IE, "else" for opera 10
	else if (document.selection && document.selection.createRange){
		range = node.createTextRange();
		range.collapse(true);
		range.moveEnd('character', end);
		range.moveStart('character', start);
		range.select();
	}
};

/**
 * Set cursor position inside of input/textarea element
 * @param {jQuery/DOM} node     jQuery or DOM node
 * @param {[type]} position Cursor position
 */
LJ.DOM.setCursor = function (node, position) {
	var text, length, absPosition;
	if (!node.nodeName) {
		node = node.get(0);
	}

	text = ( 'value' in node ? node.value : node.text ).replace(/\r/, ''),
	length = text.length;

	// convenient positions
	if (position === 'end') {
		return LJ.DOM.setSelection(node, length, length);
	}
	if (position === 'start') {
		return LJ.DOM.setSelection(node, 0, 0);
	}
	// calculation of correct caret position
	if (position > 0) {
		if (position > length) {
			position = length;
		}
	} else if (position !== 0) {
		absPosition = Math.abs(position);
		position = absPosition > length ? 0 : length - absPosition;
	}
	LJ.DOM.setSelection(node, position, position);
};

/**
 * @namespace LJ.UI Namespace should contain utility functions that are connected with widgets.
 */
LJ.UI = LJ.UI || {};

LJ.UI._mixins = {};

/**
 * Register a mixin to allow to use it later in the jQuery UI widgets.
 *
 * @param {string} name Name of the widget.
 * @param {Function} module The function that will bootsrap widget. The Function will be applied
 *     to the widget instance and the return object will represent the public api for the mixin.
 */
LJ.UI.mixin = function(name, module) {
	if (arguments.length === 1) {
		if (LJ.UI._mixins.hasOwnProperty(name)) {
			return LJ.UI._mixins[name];
		} else {
			LJ.console.log('Warn: Mixin ', name, ' was called but is not defined yet.');
		}
	} else {
		LJ.UI._mixins[name] = module;
	}
};

(function() {

	var locale = (LJ.pageVar('locale', true) || 'en_LJ').substr(0, 2),
		//All handlers were directly copied from LJ::Lang code
		handlers = {
			be: plural_form_ru,
			en: plural_form_en,
			fr: plural_form_fr,
			hu: plural_form_singular,
			is: plural_form_is,
			ja: plural_form_singular,
			lt: plural_form_lt,
			lv: plural_form_lv,
			pl: plural_form_pl,
			pt: plural_form_fr,
			ru: plural_form_ru,
			tr: plural_form_singular,
			uk: plural_form_ru
		};

// English, Danish, German, Norwegian, Swedish, Estonian, Finnish, Greek,
// Hebrew, Italian, Spanish, Esperanto
function plural_form_en(count) {
	if (count == 1) {
		return 0;
	}

	return 1;
}

// French, Portugese, Brazilian Portuguese
function plural_form_fr(count) {
	if (count > 1) {
		return 1;
	}

	return 0;
}

// Croatian, Czech, Russian, Slovak, Ukrainian, Belarusian
function plural_form_ru(count) {
	if (typeof count === 'undefined') { return 0; }

	if (count % 10 == 1 && count % 100 != 11) {
		return 0;
	}

	if ((count % 10 >= 2 && count % 10 <= 4) &&
		(count % 100 < 10 || count % 100 >= 20)) {
		return 1;
	}

	return 2;
}

// Polish
function plural_form_pl(count) {
	if (count === 1) {
		return 0;
	}

	if ((count % 10 >= 2 && count % 10 <= 4) &&
		(count % 100 < 10 || count % 100 >= 20)) {
		return 1;
	}

	return 2;
}

// Lithuanian
function plural_form_lt(count) {
	if (count % 10 == 1 && count % 100 != 11) {
		return 0;
	}

	if ((count % 10 >= 2) &&
		(count % 100 < 10 || count % 100 >= 20)) {
		return 1;
	}

	return 2;
}

// Hungarian, Japanese, Korean (not supported), Turkish
function plural_form_singular(count) {
	return 0;
}

// Latvian
function plural_form_lv(count) {
	if (count % 10 === 1 && count % 100 !== 11) {
		return 0;
	}

	if (count != 0) {
		return 1;
	}

	return 2;
}

// Icelandic
function plural_form_is(count) {
	if (count % 10 === 1 && count % 100 !== 11) {
		return 0;
	}
	return 1;
}

	function pluralize(num, forms) {
		var handler = handlers.hasOwnProperty(locale) ? handlers[locale] : handlers['en'],
			form = handler(num);
		return forms[form] ? forms[form] : '';
	}

	/**
	 * Get localized string.
	 *
	 * @param {string} key A key to search.
	 * @param {Object} dict A hash to search values for substitution.
	 * @param {string=} def A default value to return if the string was not returned from the server.
	 *
	 * @return {string} Localized value for string.
	 */
	LJ.ml = function(key, dict, def) {
		var str = '', tmpl;
		dict = dict || {};

		if (Site.ml_text.hasOwnProperty(key)) {
			str = Site.ml_text[key];

			str = str.replace( /\[\[\?([\w-]+)\|(.*)\]\]/g, function(str, numstr, forms) {
				if (!dict.hasOwnProperty(numstr)) { return str; }

				var num = parseInt(dict[numstr], 10);
				return pluralize(num, forms.split('|'));
			});

			for (tmpl in dict) {
				if (dict.hasOwnProperty(tmpl)) {
					str = str.replace('%' + tmpl + '%', dict[tmpl]);
					str = str.replace('[[' + tmpl + ']]', dict[tmpl]);
				}
			}
		} else {
			str = def || '[' + key + ']';
			LJ.console.log("Text variable ["+ key +"] hasn't been defined.");
		}

		return str;
	};

}());

/**
 * @namespace LJ.Support The namespace should contain variables to check whether some funcionality is availible in the current browser.
 * If this part will become hige enough, we should switch to modernizr.
 * All fields should have the same names as in modernizr
 */
LJ.Support = LJ.Support || {};

LJ.Support.geoLocation = 'geolocation' in navigator;
//Incomplete implementation from modernizr
LJ.Support.touch = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;
LJ.Support.cors = window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest();
LJ.Support.history = !!window.history.pushState;


/* object extensions */
if (!Object.extend)
	Object.extend = function (d, s){
		if(d) for(var p in s) if(!d[p]) d[p] = s[p];
		return d;
	};

if (!Object.override)
	Object.override = function (d, s){
		if(d) for(var p in s) d[p] = s[p];
		return d;
	};

/* function extensions */
/**
 * Returns an array of all own enumerable properties found upon a given object,
 * in the same order as that provided by a for-in loop.
 *
 * @param {Object} The object whose enumerable own properties are to be returned.
 *
 * @return {Array} Array with properties names.
 */

Object.extend(Function.prototype, {
	bindEventListener: function(object) {
		var method = this; // Use double closure to work around IE 6 memory leak.
		return function(e) {
			e = Event.prep(e);
			return method.call(object, e);
		};
	}
});

// for back compatiblity with legacy code
// we can't rely on version === 9 because of browser/document mode
if (jQuery.browser.msie) {
	Function.prototype.bind = function(that) { // .length is 1
		var target = this,
			slice = [].slice;
		if (typeof target.apply != "function" || typeof target.call != "function")
			return new TypeError();

		var args = slice.call(arguments, 1); // for normal call
		var bound = function () {

			if (this instanceof bound) {

				var self = Object.create(target.prototype);
				var result = target.apply(
					self,
					args.concat(slice.call(arguments))
				);
				if (result !== null && Object(result) === result)
					return result;
				return self;

			} else {
				return target.apply(
					that,
					args.concat(slice.call(arguments))
				);

			}
		};

		return bound;
	}
}

Object.extend(Function, {
	defer: function(func, args/*, more than one*/) {
		args = Array.prototype.slice.call(arguments, 1);

		setTimeout(function() {
			func.apply(null, args);
		}, 0);
	},

	/**
	 * Create a function that will call a function func with arguments
	 * through setTimeout set to zero.
	 * @param {Function} func The function to wrap.
	 * @param {Object} args Any arguments to attach to function call.
	 *
	 * @return {Function} Return newly created delayed function.
	 */
	defered: function(func, args) {
		args = args || [];
		return function() {
			var args2 = args.concat([].slice.call(arguments, 0));

			Function.defer(func, args2);
		};
	}
});



/* class helpers */
indirectObjects = [];

Class = function(superClass){
	// Set the constructor:
	var constructor = function(){
		if(arguments.length)
			this.init.apply(this, arguments);
	};
	//   -- Accomplish static-inheritance:
	Object.override(constructor, Class);  // inherit static methods from Class

	superClass = superClass || function(){
	};
	superClassFunc = function(){
	};
	Object.extend(superClassFunc.prototype, superClass.prototype);
	Object.extend(superClassFunc.prototype, {
		init: function(){
		},
		destroy: function(){
		}
	});
	Object.override(constructor, superClass); // inherit static methods from the superClass
	constructor.superClass = superClassFunc.prototype;

	// Set the constructor's prototype (accomplish object-inheritance):
	constructor.prototype = new superClass();
	constructor.prototype.constructor = constructor; // rev. 0.7
	//   -- extend prototype with Class instance methods
	Object.extend(constructor.prototype, Class.prototype);
	//   -- override prototype with interface methods
	for(var i = 1; i < arguments.length; i++)
		Object.override(constructor.prototype, arguments[i]);

	return constructor;
};

Class.prototype = {
	destroy: function(){
		try{
			if(this.indirectIndex)
				indirectObjects[ this.indirectIndex ] = undefined;
			delete this.indirectIndex;
		} catch(e){
		}

		for(var property in this){
			try{
				delete this[ property ];
			} catch(e){
			}
		}
	}
};



/* string extensions */
Object.extend(String, {
	escapeJSChar: function( c ) {
		// try simple escaping
		switch( c ) {
			case "\\": return "\\\\";
			case "\"": return "\\\"";
			case "'":  return "\\'";
			case "\b": return "\\b";
			case "\f": return "\\f";
			case "\n": return "\\n";
			case "\r": return "\\r";
			case "\t": return "\\t";
		}

		// return raw bytes now ... should be UTF-8
		if( c >= " " )
			return c;

		// try \uXXXX escaping, but shouldn't make it for case 1, 2
		c = c.charCodeAt( 0 ).toString( 16 );
		switch( c.length ) {
			case 1: return "\\u000" + c;
			case 2: return "\\u00" + c;
			case 3: return "\\u0" + c;
			case 4: return "\\u" + c;
		}

		// should never make it here
		return "";
	},

	encodeEntity: function( c ) {
		switch( c ) {
			case "<": return "&lt;";
			case ">": return "&gt;";
			case "&": return "&amp;";
			case '"': return "&quot;";
			case "'": return "&apos;";
		}
		return c;
	},

	decodeEntity: function( c ) {
		switch( c ) {
			case "amp": return "&";
			case "quot": return '"';
			case "apos": return "'";
			case "gt": return ">";
			case "lt": return "<";
		}
		var m = c.match( /^#(\d+)$/ );
		if( m && defined( m[ 1 ] ) )
			return String.fromCharCode( m[ 1 ] );
		m = c.match( /^#x([0-9a-f]+)$/i );
		if(  m && defined( m[ 1 ] ) )
			return String.fromCharCode( parseInt( hex, m[ 1 ] ) );
		return c;
	}
});

Object.extend(String.prototype, {
	escapeJS: function()
	{
		return this.replace( /([^ -!#-\[\]-~])/g, function( m, c ) { return String.escapeJSChar( c ); } )
	},

	/**
	 * Encode a string to allow a secure insertion in html code.
	 */
	encodeHTML: function() {
		return this.replace( /([<>&\"\'])/g, function( m, c ) { return String.encodeEntity( c ) } ); /* fix syntax highlight: " */
	},

	decodeHTML: function() {
		return this.replace( /&(.*?);/g, function( m, c ) { return String.decodeEntity( c ) } );
	},

	/**
	 * Add chars in front of string until it gets the length required.
	 *
	 * @param {Number} length Required string length.
	 * @param {String} padChar A char to add in front of string.
	 *
	 * @return {String} A padded string.
	 */
	pad: function(length, padChar)
	{
		return ((new Array(length + 1))
			.join(padChar)
			+ this
		).slice(-length);
	},

	supplant: function(o)
	{
		return this.replace(/{([^{}]*)}/g,
			function (a, b) {
				var r = o[b];
				return typeof r === 'string' || typeof r === 'number' ? r : a;
			});
	}
});

// will be shimmed using es6-shim later
if (typeof String.prototype.startsWith !== 'function') {
	String.prototype.startsWith = function(start) {
		return this.slice(0, String(start).length) === start;
	}
}

/* extend array object */
Object.extend(Array.prototype, {
	/**
	 * Check if index fits in current array size and fix it otherwise.
	 *
	 * @param {Number} fromIndex Index to check.
	 * @param {Number} defaultIndex This value will be taken if fromIndex is not defined.
	 *
	 * @return {Number} Fixed index value.
	 */
	fitIndex: function(fromIndex, defaultIndex)
	{
		if (fromIndex !== undefined || fromIndex == null) {
			fromIndex = defaultIndex;
		} else if (fromIndex < 0) {
			fromIndex = this.length + fromIndex;
			if (fromIndex < 0) {
				fromIndex = 0;
			}
		} else if (fromIndex >= this.length) {
			fromIndex = this.length - 1;
		}
		return fromIndex;
	},

	/**
	 * The function takes its arguments and add the ones that are not already inside to the end.
	 *
	 * @return {Number} New length of the array.
	 */
	add: function(/* a1, a2, ... */)
	{
		for (var j, a = arguments, i = 0; i < a.length; i++ ) {
			j = this.indexOf(a[i]);
			if (j < 0) {
				this.push(arguments[i]);
			}
		}
		return this.length;
	},

	/*
	 * The function takes its arguments and removes them from the array, if they are inside
	 *
	 * @return {Number} New length of the array.
	 */
	remove: function(/* a1, a2, ... */)
	{
		for (var j, a = arguments, i = 0; i < a.length; i++ ) {
			j = this.indexOf(a[i]);
			if (j >= 0) {
				this.splice(j, 1);
			}
		}
		return this.length;
	}
});

/* ajax */
var XMLHttpRequest = XMLHttpRequest || window.ActiveXObject && function(){
	return new ActiveXObject('Msxml2.XMLHTTP');
};

//dom.js
/* DOM class */
DOM = {
	getElement: function(e){
		return (typeof e == "string" || typeof e == "number") ? document.getElementById(e) : e;
	},

	addEventListener: function(e, eventName, func, useCapture){
		if(e.addEventListener)
			e.addEventListener(eventName, func, useCapture); else if(e.attachEvent)
			e.attachEvent('on' + eventName, func); else
			e['on' + eventName] = func;
	},

	removeEventListener: function(e, eventName, func, useCapture){
		if(e.removeEventListener)
			e.removeEventListener(eventName, func, useCapture); else if(e.detachEvent)
			e.detachEvent('on' + eventName, func); else
			e['on' + eventName] = undefined;
	},

	/* style */
	getComputedStyle: function(node){
		if(node.currentStyle){
			return node.currentStyle;
		}
		var defaultView = node.ownerDocument.defaultView;
		if(defaultView && defaultView.getComputedStyle){
			return defaultView.getComputedStyle(node, null);
		}
	},

	// given a window (or defaulting to current window), returns
	// object with .x and .y of client's usable area
	getClientDimensions: function(w){
		if(!w)
			w = window;

		var d = {};

		// most browsers
		if(w.innerHeight){
			d.x = w.innerWidth;
			d.y = w.innerHeight;
			return d;
		}

		// IE6, strict
		var de = w.document.documentElement;
		if(de && de.clientHeight){
			d.x = de.clientWidth;
			d.y = de.clientHeight;
			return d;
		}

		// IE, misc
		if(document.body){
			d.x = document.body.clientWidth;
			d.y = document.body.clientHeight;
			return d;
		}

		return undefined;
	},

	getDimensions: function(e){
		if(!e)
			return undefined;

		var style = DOM.getComputedStyle(e);

		return {
			offsetLeft: e.offsetLeft,
			offsetTop: e.offsetTop,
			offsetWidth: e.offsetWidth,
			offsetHeight: e.offsetHeight,
			clientWidth: e.clientWidth,
			clientHeight: e.clientHeight,

			offsetRight: e.offsetLeft + e.offsetWidth,
			offsetBottom: e.offsetTop + e.offsetHeight,
			clientLeft: finiteInt(style.borderLeftWidth) + finiteInt(style.paddingLeft),
			clientTop: finiteInt(style.borderTopWidth) + finiteInt(style.paddingTop),
			clientRight: e.clientLeft + e.clientWidth,
			clientBottom: e.clientTop + e.clientHeight
		};
	},

	getAbsoluteDimensions: function(e){
		var d = DOM.getDimensions(e);
		if(!d)
			return d;
		d.absoluteLeft = d.offsetLeft;
		d.absoluteTop = d.offsetTop;
		d.absoluteRight = d.offsetRight;
		d.absoluteBottom = d.offsetBottom;
		var bork = 0;
		while(e){
			try{ // IE 6 sometimes gives an unwarranted error ("htmlfile: Unspecified error").
				e = e.offsetParent;
			} catch (err){
				if(++bork > 25)
					return null;
			}
			if(!e)
				return d;
			d.absoluteLeft += e.offsetLeft;
			d.absoluteTop += e.offsetTop;
			d.absoluteRight += e.offsetLeft;
			d.absoluteBottom += e.offsetTop;
		}
		return d;
	},


	setLeft: function(e, v){
		e.style.left = finiteInt(v) + "px";
	},
	setTop: function(e, v){
		e.style.top = finiteInt(v) + "px";
	},
	setWidth: function(e, v){
		e.style.width = Math.max(0, finiteInt(v)) + "px";
	},
	setHeight: function(e, v){
		e.style.height = Math.max(0, finiteInt(v)) + "px";
	},

	getWindowScroll: function(w){
		var s = {
			left: 0,
			top: 0
		};

		if(!w) w = window;
		var d = w.document;
		var de = d.documentElement;

		// most browsers
		if(w.pageXOffset !== undefined){
			s.left = w.pageXOffset;
			s.top = w.pageYOffset;
		}

		// ie
		else if(de && de.scrollLeft !== undefined){
			s.left = de.scrollLeft;
			s.top = de.scrollTop;
		}

		// safari
		else if(w.scrollX !== undefined){
			s.left = w.scrollX;
			s.top = w.scrollY;
		}

		// opera
		else if(d.body && d.body.scrollLeft !== undefined){
			s.left = d.body.scrollLeft;
			s.top = d.body.scrollTop;
		}

		return s;
	},

	getAbsoluteCursorPosition: function(event){
		event = event || window.event;
		var s = DOM.getWindowScroll(window);
		return {
			x: s.left + event.clientX,
			y: s.top + event.clientY
		};
	},

	/* dom methods */
	filterElementsByClassName: function(es, className){
		var filtered = [];
		for(var i = 0; i < es.length; i++){
			var e = es[ i ];
			if(DOM.hasClassName(e, className))
				filtered[ filtered.length ] = e;
		}
		return filtered;
	},

	filterElementsByAttribute: function(es, attr){
		if(!es)
			return [];
		if(!attr)
			return es;
		var filtered = [];
		for(var i = 0; i < es.length; i++){
			var element = es[ i ];
			if(!element)
				continue;
			if(element.getAttribute && ( element.getAttribute(attr) ))
				filtered[ filtered.length ] = element;
		}
		return filtered;
	},

	filterElementsByTagName: function(es, tagName){
		if(tagName == "*")
			return es;
		var filtered = [];
		tagName = tagName.toLowerCase();
		for(var i = 0; i < es.length; i++){
			var e = es[ i ];
			if(e.tagName && e.tagName.toLowerCase() == tagName)
				filtered[ filtered.length ] = e;
		}
		return filtered;
	},

	// private
	getElementsByTagAndAttribute: function(root, tagName, attr){
		if(!root)
			root = document;
		var es = root.getElementsByTagName(tagName);
		return DOM.filterElementsByAttribute(es, attr);
	},

	getElementsByAttributeAndValue: function(root, attr, value){
		var es = DOM.getElementsByTagAndAttribute(root, "*", attr);
		var filtered = [];
		for(var i = 0; i < es.length; i++)
			if(es[ i ].getAttribute(attr) == value)
				filtered.push(es[ i ]);
		return filtered;
	},

	getElementsByTagAndClassName: function(root, tagName, className){
		if(!root)
			root = document;
		var elements = root.getElementsByTagName(tagName);
		return DOM.filterElementsByClassName(elements, className);
	},

	getElementsByClassName: function(root, className){
		return DOM.getElementsByTagAndClassName(root, "*", className);
	},

	getAncestors: function(n, includeSelf){
		if(!n)
			return [];
		var as = includeSelf ? [ n ] : [];
		n = n.parentNode;
		while(n){
			as.push(n);
			n = n.parentNode;
		}
		return as;
	},

	getAncestorsByClassName: function(n, className, includeSelf){
		var es = DOM.getAncestors(n, includeSelf);
		return DOM.filterElementsByClassName(es, className);
	},

	getFirstAncestorByClassName: function(n, className, includeSelf){
		return DOM.getAncestorsByClassName(n, className, includeSelf)[ 0 ];
	},

	hasClassName: function(e, className){
		if(!e || !e.className)
			return false;
		var cs = e.className.split(/\s+/g);
		for(var i = 0; i < cs.length; i++){
			if(cs[ i ] == className)
				return true;
		}
		return false;
	},

	addClassName: function(e, className){
		if(!e || !className)
			return false;
		var cs = e.className.split(/\s+/g);
		for(var i = 0; i < cs.length; i++){
			if(cs[ i ] == className)
				return true;
		}
		cs.push(className);
		e.className = cs.join(" ");
		return false;
	},

	removeClassName: function(e, className){
		var r = false;
		if(!e || !e.className || !className)
			return r;
		var cs = (e.className && e.className.length) ? e.className.split(/\s+/g) : [];
		var ncs = [];
		for(var i = 0; i < cs.length; i++){
			if(cs[ i ] == className){
				r = true;
				continue;
			}
			ncs.push(cs[ i ]);
		}
		if(r)
			e.className = ncs.join(" ");
		return r;
	},

	// deprecated: use LJ.DOM.* instead
	getSelectedRange: LJ.DOM.getSelection,
	setSelectedRange: LJ.DOM.setSelection
};

$ = DOM.getElement;



//httpreq.js

// opts:
// url, onError, onData, method (GET or POST), data
// url: where to get/post to
// onError: callback on error
// onData: callback on data received
// method: HTTP method, GET by default
// data: what to send to the server (urlencoded)
HTTPReq = {
	getJSON: function(opts){
		var req = new XMLHttpRequest();

		var state_callback = function(){
			if(req.readyState != 4) return;

			if(req.status != 200){
				if(opts.onError) opts.onError(req.status ? "status: " + req.status : "no data");
				return;
			}

			var resObj;
			var e;
			try{
				eval("resObj = " + req.responseText + ";");
			} catch (e){
			}

			if(e || ! resObj){
				if(opts.onError)
					opts.onError("Error parsing response: \"" + req.responseText + "\"");

				return;
			}

			if(opts.onData)
				opts.onData(resObj);
		};

		req.onreadystatechange = state_callback;

		var method = opts.method || "GET";
		var data = opts.data || null;

		var url = opts.url;
		if(opts.method == "GET" && opts.data){
			url += url.match(/\?/) ? "&" : "?";
			url += opts.data
		}

		url += url.match(/\?/) ? "&" : "?";
		url += "_rand=" + Math.random();

		req.open(method, url, true);

		// we should send null unless we're in a POST
		var to_send = null;

		if(method.toUpperCase() == "POST"){
			req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
			to_send = data;
		}

		req.send(to_send);
	},

	formEncoded: function(vars){
		var enc = [];
		var e;
		for(var key in vars){
			enc.push(encodeURIComponent(key) + "=" + encodeURIComponent(vars[key]));
		}
		return enc.join("&");
	}
};

/**
 * Object responsible for statistic integration
 * @param  {jQuery} $ jQuery
 * @return {Object}   Methods for statistic interation
 */
LJ.Stat = (function ($) {
	var selector = '#hello-world',	// block for statistic addition
		el = null;					// cached jquery element

	/**
	 * Adds counter via inserting image on the page
	 * @param {String} img Image url
	 */
	function addCounter( url ) {
		var img = $('<img />', {
			src: url,
			alt: 'lj-counter'
		});
		// cache selector
		el = el || $(selector);
		el.append(img);
	}

	return {
		addCounter: addCounter
	};
}(jQuery));

LJ.siteMessage = (function ($) {
	'use strict';

	var scheme = LJ.pageVar('scheme'),
		messageSelector = '.appwidget-sitemessages',
		selectors = {
			lanzelot: { selector: '#main_body', method: 'before' },
			horizon: { selector: '#big-content-wrapper', method: 'prepend' },
			lynx: { selector: 'body', method: 'prepend' },

			// for journal pages
			journal: { selector: '#lj_controlstrip_new', method: 'after' }
		},
		// placeholder for methods to return
		methods = null;

	// we should run code only when document is ready and only for user
	// that is not currently logged in
	$(function () {
		if (!Site.remoteUser) {
			// wait for API initialization (inside of livejournal.js)
			setTimeout(methods.get.bind(methods), 0);
		}
	});

	methods = {
		/**
		 * Retrieve message from server and show it
		 */
		get: function () {
			var that = this;

			LJ.Api.call('sitemessage.get_message', {}, function (content) {
				that.show(content);
			});
		},

		/**
		 * Show content as message
		 * @param  {String} content Html representation of the message
		 */
		show: function (content) {
			var type = selectors[ scheme ? scheme : 'journal' ];

			// we should do nothing for this scheme yet
			if (scheme === 'schemius') {
				return;
			}

			// remove existed messages
			$(messageSelector).remove();

			// add message on the page
			$(type.selector)[type.method](content);
		}
	};

	return methods;
}(jQuery));

/* file: js/jquery_fn.js 
----------------------------------------------------------------------------------*/
jQuery.noConflict();

jQuery.ajaxSetup({
	cache: false
});

jQuery.fn.ljAddContextualPopup = function(){
	if(!window.ContextualPopup) return this;

	return this.each(function(){
		ContextualPopup.searchAndAdd(this);
	});
};

/**
 * jQuery plugin that works with caret (it uses LJ.DOM.* methods and added for convenience only)
 * - if two arguments have been provided: setting selection from startPos to endPos
 * - if one argument: set cursor to startPos
 * - if no arguments: get selection of field
 *
 * @param  {number} startPos Start caret position
 * @param  {number} endPos   End caret position.
 */
jQuery.fn.caret = function (startPos, endPos) {
	var $el = this.length > 1 ? this.first() : this,
		length;

	if (startPos === 'start') {
		length = $el.val().length;
		LJ.DOM.setSelection($el, 0, 0);
		return this;
	}
	if (startPos === 'end') {
		length = $el.val().length;
		LJ.DOM.setSelection($el, length, length);
		return this;
	}

	if (typeof startPos === 'number') {
		if (typeof endPos !== 'number') {
			LJ.DOM.setCursor($el, startPos);
		} else {
			LJ.DOM.setSelection($el, startPos, endPos);
		}
		return this;
	} else {
		return LJ.DOM.getSelection($el);
	}
};


jQuery.fn.isCollapsed = function() {
	var selection = LJ.DOM.getSelection(this.get(0));
	return selection.start === selection.end;
};

jQuery.fn.hourglass = function(xhr){
	var hourglasses = [];
	this.each(function(){
		// is complete or was aborted
		if(xhr && (xhr.readyState == 0 || xhr.readyState == 4)) return;

		if(this.nodeType){ // node

		} else { // position from event
			var e = jQuery.event.fix(this),
				hourglass = new Hourglass(),
				offset = {};

			// from keyboard
			if(!e.clientX || !e.clientY){
				offset = jQuery(e.target).offset();
			}

			hourglass.init();
			hourglass.hourglass_at(offset.left || e.pageX, offset.top || e.pageY);
		}

		hourglasses.push(hourglass);

		if(xhr){
			jQuery(hourglass.ele).bind('ajaxComplete', function(event, request){
				if(request == xhr){
					hourglass.hide();
					jQuery(hourglass.ele).unbind('ajaxComplete', arguments.callee);
				}
			});
		}
	});

	return hourglasses;
};

// not work for password
jQuery.fn.placeholder = (function()
{
	var check_focus = function() {
			if (this.value === this.getAttribute("placeholder")) {
				jQuery(this)
					.val("")
					.removeClass("placeholder");
			}
		},
		check_blur = function() {
			if (!this.value) {
				jQuery(this)
					.val(this.getAttribute("placeholder"))
					.addClass("placeholder");
			}
		},
		support;

	return function() {
		if (support === undefined) {
			support = "placeholder" in document.createElement("input");
		}
		if (support === true) {
			return this;
		} else {
			return this.each(function() {
				if (this.getAttribute("placeholder")) {
					var $this = jQuery(this);

					if (!$this.data('jQuery-has-placeholder')) {
						$this.focus(check_focus).blur(check_blur);

						jQuery(this.form)
							.submit(function() {
								$this.hasClass("placeholder") && $this.removeClass("placeholder").val("");
							});
					}

					this.value === this.getAttribute("placeholder") || !this.value
						? $this.val(this.getAttribute("placeholder")).addClass("placeholder")
						: $this.removeClass("placeholder");

					$this.data('jQuery-has-placeholder', true)
				}
			});
		}
	}
})();

//this one is fields type agnostic but creates additional label elements, which need to be styled
jQuery.fn.labeledPlaceholder = function(){
	function focus_action(input, label){
		label.hide();
	}

	function blur_action(input, label){
		if (input.val().length === 0) {
			label.show();
		}
	}

	return this.each(function(){

		if('placeholder' in document.createElement('input') && this.tagName.toLowerCase() === "input"){
			return;
		}
		if('placeholder' in document.createElement('textarea') && this.tagName.toLowerCase() === "textarea"){
			return;
		}

		var $this = jQuery(this),
			placeholder = $this.attr('placeholder');

		$this.wrap('<span class="placeholder-wrapper" />');

		if(!placeholder || placeholder.length === 0){
			return;
		}

		var label = jQuery("<label></label>").addClass('placeholder-label').mousedown(function(ev){
			setTimeout(function(){
				focus_action($this, label);
				$this.focus();
			}, 0);
		}).html(placeholder).insertBefore($this);
		$this.focus(function(){
			focus_action($this, label)
		}).blur(function(){
			blur_action($this, label)
		});

		blur_action($this, label);

	});
};

jQuery.fn.input = function(fn){
	return fn ? this.each(function(){
		var last_value = this.value;
		jQuery(this).bind("input keyup paste", function(e){
			// e.originalEvent use from trigger
			if(!e.originalEvent || this.value !== last_value){
				last_value = this.value;
				fn.apply(this, arguments);
			}
		})
	}) : this.trigger("input");
};

// ctrl+enter send form
jQuery.fn.disableEnterSubmit = function() {
	this.bind("keypress", function(e) {
		// keyCode == 10 in IE with ctrlKey
		if ((e.which === 13 || e.which === 10) && e.target && e.target.form) {
			if (e.ctrlKey && !jQuery(":submit", e.target.form).attr("disabled")
				&& (e.target.tagName === "TEXTAREA" || e.target.tagName === "INPUT")
			) {
				e.target.form.submit();
			}

			if (e.target.tagName === "INPUT") {
				e.preventDefault();
			}
		}
	});
	return this;
};

/* function based on markup:
	tab links: ul>li>a
	current tab: ul>li.current
	tab container: ul>li
	tab container current: ul>li.current
*/
(function ($) {
	var supportHistoryAPI = !!window.history.pushState;
	var dataHistory = {};

	function changeTab(containers, links, index) {
		links
			.parent()
			.removeClass('current')
			.eq(index)
			.addClass('current');

		containers.removeClass('current')
			.eq(index)
			.addClass('current');

		LiveJournal.run_hook('change_tab', index);
	}

	function onClick(evt) {
		var item = $(this).parent(),
			index = item.index(),
			data = evt.data;

		if (data.containers[index]) {
			changeTab(data.containers, data.links, index);

			if (supportHistoryAPI) {
				window.history.pushState(null, '', this.href);
			}

			evt.preventDefault();
		}
	}

	if (supportHistoryAPI) {
		$(window).bind('popstate', function () {
			var data = dataHistory[location.href];

			if (data && data.length) {
				var length = data.length;
				while (length) {
					var itemData = data[--length];
					changeTab(itemData.containers, itemData.links, itemData.index);
				}
			}
		});
	}

	$.fn.tabsChanger = function(container) {
		var links = this.children('li').children('a');

		if (container) {
			container = $(container);
		} else {
			// next sibling of links
			container = links.parent().parent().next();
		}

		container = container.children('li');

		if (supportHistoryAPI) {
			links.each(function (index) {
				var urlData = dataHistory[this.href];

				if (!urlData) {
					urlData = dataHistory[this.href] = [];
				}

				urlData.push({
					index: index,
					links: links,
					containers: container
				});
			});
		}

		links.bind('click', {
			containers: container,
			links: links
		}, onClick);

		return this;
	};

})(jQuery);

/** jQuery overlay plugin
 * After creation overlay visibility can be toggled with
 * $( '#selector' ).overlay( 'show' ) and $( '#selector' ).overlay( 'hide' )
 */
jQuery.fn.overlay = function(opts){
	var options = {
		hideOnInit: true,
		hideOnClick: true
	};

	function Overlay(layer, options){
		this.layer = jQuery(layer);
		this.options = options;
		this.updateState(this.options.hideOnInit);
		this.bindEvents();
	}

	Overlay.prototype.bindEvents = function(){
		var overlay = this;

		if(this.options.hideOnClick){
			overlay.layer.mousedown(function(ev){
				ev.stopPropagation();
			});

			jQuery(document).mousedown(function(ev){
				overlay.updateState(true);
				ev.stopPropagation();
			});
		}
	};

	Overlay.prototype.updateState = function(hide){
		this.layerVisible = !hide;
		if(this.layerVisible){
			this.layer.show();
		} else {
			this.layer.hide();
		}
	};

	Overlay.prototype.proccessCommand = function (cmd){
		switch(cmd){
			case 'show' :
				this.updateState(false);
				break;
			case 'hide' :
				this.updateState(true);
				break;
		}
	};

	var cmd;
	if(typeof opts === "string"){
		cmd = opts;
	}

	return this.each(function(){
		if(!this.overlay){
			var o = jQuery.extend({}, options, opts || {});
			this.overlay = new Overlay(this, o);
		}

		if(cmd.length > 0){
			this.overlay.proccessCommand(opts)
		}
	});
};

/**
 * Function assures that callback will run not faster then minDelay.
 *
 * @param {Function} callback A callback to run.
 * @param {Number} minDelay Minimum delay in ms.
 *
 * @return {Function} Callback wrapper to use as a collback in your code.
 */
jQuery.delayedCallback = function(callback, minDelay) {
	var callCount = 2,
		results,
		checkFinish = function() {
			callCount--;
			if (callCount === 0) {
				callback.apply(null, results);
			}
		}

	setTimeout(checkFinish, minDelay);
	return function() {
		results = [].slice.apply(arguments);
		checkFinish();
	};
};

/**
 * Fix behavior of select box: trigger change event on keyup
 */
jQuery.fn.selectFix = function () {
	'use strict';

	return this.filter('select').on('keyup', function (e) {
		var code = e.which;
		if (code >= 37 && code <= 40) {
			jQuery(this).trigger('change');
		}
	});
};

/**
 * Provide ability to check if element is on the screen
 * @author Valeriy Vasin (valeriy.vasin@sup.com)
 */
;(function ($) {
	'use strict';
	// cache window object
	var $win = $(window);
	$.expr[':'].screenable = function (element) {
		var win = {},
			el = {},
			$el = $(element);

			// window coordinates
			win.width = $win.width(),
			win.height = $win.height(),
			win.top = $win.scrollTop(),
			win.bottom = win.top + win.height,
			win.left = $win.scrollLeft(),
			win.right = win.left + win.width,

			// element coordinates
			el.width = $el.width();
			el.height = $el.height();
			el.top = $el.offset().top;
			el.bottom = el.top + el.height;
			el.left = $el.offset().left;
			el.right = el.left + el.width;

		return (el.bottom > win.top && el.top < win.bottom) && (el.right > win.left && el.left < win.right);
	};
}(jQuery));

/**
 * Parse lj-likes plugin
 * It parses all elements with class 'lj-like', uncomment their content
 * and parse with LiveJournal.parseLikeButtons()
 *
 * @todo Move plugin to separate file
 */
;(function ($) {
	'use strict';

	// empty collection that will contain not parsed lj-like elements
	// that are currently on the page
	var _likes = $();

	/**
	 * Remove comments inside node and parse likes
	 * @param  {Object} node jQuery node
	 * @return {Object}      jQuery node
	 */
	function parse(node) {
		var html = node.html(),
			// regexp for removing _tmplitem attribute
			tmplRegexp = /_tmplitem=['"]\d+['"]/mig;

		// uncomment like buttons
		html = $.trim( html.replace(/<!--([\s\S]*?)-->/mig, '$1') );

		/**
		 * Clean _tmplitem attributes
		 *
		 * It's a quirk for jquery templates possible bug with commented nodes
		 * and double applying jquery templates.
		 * _tmplitem attributes are not removed after compilation.
		 * Fix for #LJSUP-14149
		 */
		if ( tmplRegexp.test(html) ) {
			html = html.replace(tmplRegexp, '');
		}

		LiveJournal.parseLikeButtons( node.html(html) );

		return node;
	}

	/**
	 * handler for scroll event for lazy loading of likes
	 */
	function lazyLoad() {
		var screenableLikes = null;

		if ( _likes.length === 0 ) {
			return;
		}

		// find likes that are on the screen
		screenableLikes = _likes.filter(':screenable');

		if ( !screenableLikes.length ) {
			return;
		}

		screenableLikes.each(function () {
			var node = $(this);

			// move parsing to the end of the event loop
			setTimeout(function () {
				parse( node );
			}, 0);
		});

		// remove handled likes from the queue
		_likes = _likes.not(screenableLikes);
	}

	// after document ready, cuz LiveJournal namespace is not defined yet
	$(function () {
		// handle scroll event, for mobile devices we don't threshold lazyLoad
		// because it fires only at the end of scrolling (iOS)
		$(window).on('scroll', LJ.Support.touch ? lazyLoad : LJ.threshold(lazyLoad, 1000));
	});

	$.fn.ljLikes = function (opts) {
		var likes = null;

		if ( this.length === 0 ) {
			return this;
		}

		opts = $.extend({}, $.fn.ljLikes.defaults, opts || {});

		// find elements with lj-likes class
		likes = this.find('.lj-like')
			.add( this.filter('.lj-like') )
			// filter all previously used elements to prevent double parsing
			.filter(function () {
				return !this.used;
			});

		if (likes.length === 0) {
			return this;
		}

		// mark all items as used
		likes.each(function () {
			this.used = true;
		});

		if ( !opts.lazy ) {
			// not lazy: immediately parsing
			likes.each(function () {
				var node = $(this);

				// parse should be deferred
				setTimeout(function () {
					parse( node );
				}, 0);
			});
		} else {
			// add likes for further lazy loading
			_likes = _likes.add( likes );
			// parse all added screenable elements
			lazyLoad();
		}

		return this;
	};

	// default plugin options
	$.fn.ljLikes.defaults = {
		// lazy loading of likes - will be parsed when becomes screenable
		// if false - we will parse likes at the moment
		lazy: true
	};
}(jQuery));
/* file: js/livejournal.js 
----------------------------------------------------------------------------------*/
// This file contains general-purpose LJ code
LiveJournal = {
	hooks: {} // The hook mappings
};

LiveJournal.register_hook = function (hook, func) {
	if (! LiveJournal.hooks[hook]) {
		LiveJournal.hooks[hook] = [];
	}

	LiveJournal.hooks[hook].push(func);
};

// args: hook, params to pass to hook
LiveJournal.run_hook = function () {
	//console.log('run_hook', arguments);

	var hookfuncs = LiveJournal.hooks[arguments[0]];
	if (!hookfuncs || !hookfuncs.length) {
		return;
	}

	var hookargs = [].slice.call(arguments, 1);

	var rv = null;

	hookfuncs.forEach(function (hookfunc) {
		rv = hookfunc.apply(null, hookargs);
	});

	return rv;
};

LiveJournal.initPage = function () {
	//LJRU-3137: The code relies on the Site global variable
	//so it appears on all livejournal pages. If it's
	//not there than we are on the external site.
	if (!window.Site) {
		return;
	}

	if (LJ.Api) {
		LJ.Api.init({ auth_token: Site.auth_token });
	}

	LJ.UI.track();

	LJ.UI.bootstrap();

	//register system hooks
	LiveJournal.register_hook('update_wallet_balance', LiveJournal.updateWalletBalance);
	LiveJournal.register_hook('xdr/message', LiveJournal.processXdr);

	// set up various handlers for every page
	LiveJournal.initInboxUpdate();

	LiveJournal.initNotificationStream();
	LiveJournal.initSpoilers();
	LiveJournal.initResizeHelper();

	//ljuniq cookie is checked here now instead of PageStats/Omniture.pm
	LiveJournal.checkLjUniq();

	// run other hooks
	LiveJournal.run_hook('page_load');
};

jQuery(LiveJournal.initPage);

/**
 * Special helper class is added to the body if browser doesn't support media queries and
 * screen width is less then 1000px.
 */
LiveJournal.initResizeHelper = function() {
	var $window = jQuery(window),
		$body = jQuery('body'),
		hasClass = false,
		resizeFunc = LJ.throttle(function() {
			if ($window.width() <= 1000) {
				if (!hasClass) {
					$body.addClass('l-width1000');
					hasClass = true;
				}
			} else if (hasClass) {
				$body.removeClass('l-width1000');
				hasClass = false;
			}
		}, 500);

	//Only older ies need thes (caniuse.com)
	if (jQuery.browser.msie && Number(jQuery.browser.version) <= 8) {
		$window.on('resize', resizeFunc);
		resizeFunc();
	}
};

/**
 * Spoilers functionality - expand hidden text in posts when user clicks on corresponding link
 */
LiveJournal.initSpoilers = function() {
	jQuery(document).delegate('.lj-spoiler > .lj-spoiler-head a', 'click', function (evt) {
		evt.preventDefault();
		jQuery(this).closest('.lj-spoiler').toggleClass('lj-spoiler-opened');
	});
};

/**
 * Init long-polling connection to the server.
 * Now function can be used for testing purposes and
 * should be modified for any real use. E.g. it could be
 * used as an adapter to the Socket.IO
 */
LiveJournal.initNotificationStream = function(force) {
	force = force || false;
	var abortNotifications = false, seed = Site.notifySeed || 0;

	if (Site.notifyDisabled || (!Cookie('ljnotify') && !force && (Math.random() > seed))) {
		return;
	}

	if (!Cookie('ljnotify')) {
		Cookie('ljnotify', '1', {
			domain: Site.siteroot.replace(/^https?:\/\/www\./, ''),
			expires: 5000,
			path: '/'
		});
	}

	LiveJournal.register_hook('notification.stop', function() {
		abortNotifications = true;
	});

	function requestRound() {
		if (abortNotifications) {
			return;
		}

		jQuery.get(LiveJournal.getAjaxUrl('notifications'), 'json').success(
			function(data) {
				//if it's not a notification than it is a timeout answer
				if (data.type === 'notification') {
					LiveJournal.run_hook(data.name, data.params || []);
				}
				requestRound();
			}).error(function() {
				requestRound()
			});
	}

	requestRound();
};

/**
 * Translate message from xdreceiver. The function will eventually be run
 *		from xdreceiver.html helper frame to send messages between different domains.
 *
 * @param {Object} message Object with the message. Object should always contain type field with event name
 */
LiveJournal.processXdr = function(message) {
	if (message.type) {
		var type = decodeURIComponent(message.type);
	} else {
		return;
	}

	var messageCopy = {};
	for (var name in message) {
		if (message.hasOwnProperty(name) && name !== 'type') {
			messageCopy[name] = decodeURIComponent(message[name]);
		}
	}

	LiveJournal.run_hook(type, messageCopy);
};

// Set up a timer to keep the inbox count updated
LiveJournal.initInboxUpdate = function () {
	// Don't run if not logged in or this is disabled
	if (! Site || ! Site.has_remote || ! Site.inbox_update_poll) {
		return;
	}

	// Don't run if no inbox count
	if (!$('LJ_Inbox_Unread_Count')) {
		return;
	}

	// Update every five minutes
	window.setInterval(LiveJournal.updateInbox, 1000 * 60 * 5);
};

// Do AJAX request to find the number of unread items in the inbox
LiveJournal.updateInbox = function () {

	jQuery.post(LiveJournal.getAjaxUrl('esn_inbox'), {
		action: 'get_unread_items'
	}, function(resp) {
		if (! resp || resp.error) {
			return;
		}

		var unread = $('LJ_Inbox_Unread_Count');
		if (unread) {
			unread.innerHTML = resp.unread_count ? '  (' + resp.unread_count + ')' : '';
		} else {
			unread = $('LJ_Inbox_Unread_Count_Controlstrip');
			if (unread) {
				unread.innerHTML = resp.unread_count ? resp.unread_count : '0';
			}
		}
	}, 'json');
};

//refresh number of tokens in the header
LiveJournal.updateWalletBalance = function () {
	jQuery.get(LiveJournal.getAjaxUrl('get_balance'), function(resp) {
		if (! resp || resp.status != 'OK') {
			return;
		}
		var newBalance = resp.balance ? parseInt(resp.balance, 10) : 0;

		var balance = $('LJ_Wallet_Balance');
		if (balance) {
			if (resp.balance) {
				balance.innerHTML = balance.innerHTML.replace(/\d+/, newBalance);
			} else {
				balance.innerHTML = '';
			}
		} else {
			balance = $('LJ_Wallet_Balance_Controlstrip');
			if (balance) {
				balance.innerHTML = newBalance;
			}
		}

		LiveJournal.run_hook('balance_updated', resp.balance);
	}, 'json');
};

// handy utilities to create elements with just text in them
function _textSpan() {
	return _textElements('span', arguments);
}
function _textDiv() {
	return _textElements('div', arguments);
}

function _textElements(eleType, txts) {
	var ele = [];
	for (var i = 0; i < txts.length; i++) {
		var node = document.createElement(eleType);
		node.innerHTML = txts[i];
		ele.push(node);
	}

	return ele.length == 1 ? ele[0] : ele;
}

LiveJournal.pollAnswerClick = function(e, data) {
	if (!data.pollid || !data.pollqid) {
		return false;
	}

	var xhr = jQuery.post(LiveJournal.getAjaxUrl('poll'), {
		pollid	 : data.pollid,
		pollqid	 : data.pollqid,
		page		 : data.page,
		pagesize : data.pagesize,
		action	 : 'get_answers'
	}, function(data, status) {
		status == 'success' ? LiveJournal.pollAnswersReceived(data) : LiveJournal.ajaxError(data);
	}, 'json');

	jQuery(e).hourglass(xhr);

	return false;
};

LiveJournal.pollAnswersReceived = function(answers) {
	if (!answers || !answers.pollid || !answers.pollqid) {
		return;
	}

	if (answers.error) {
		return LiveJournal.ajaxError(answers.error);
	}

	var id = '#LJ_Poll_' + answers.pollid + '_' + answers.pollqid,
		to_remove = '.LJ_PollAnswerLink, .lj_pollanswer, .lj_pollanswer_paging',
		html = '<div class="lj_pollanswer">' + (answers.answer_html || '(No answers)') + '</div>';

	answers.paging_html && (html += '<div class="lj_pollanswer_paging">' + answers.paging_html + '</div>');

	jQuery(id)
		.find(to_remove)
		.remove()
		.end()
		.prepend(html)
		.find('.lj_pollanswer')
		.ljAddContextualPopup();
};

// gets a url for doing ajax requests
LiveJournal.getAjaxUrl = function(action, params) {
	// if we are on a journal subdomain then our url will be
	// /journalname/__rpc_action instead of /__rpc_action
	var uselang = LiveJournal.parseGetArgs(location.search).uselang;
	if (uselang) {
		action += '?uselang=' + uselang;
	}
	if (params) {
		action += (uselang ? '&' : '?') + jQuery.param(params);
	}

	return Site.currentJournal ? '/' + Site.currentJournal + '/__rpc_' + action : '/__rpc_' + action;
};

// generic handler for ajax errors
LiveJournal.ajaxError = function (err) {
	if (LJ_IPPU) {
		LJ_IPPU.showNote('Error: ' + err);
	} else {
		alert('Error: ' + err);
	}
};

// given a URL, parse out the GET args and return them in a hash
LiveJournal.parseGetArgs = function (url) {
	url = url || window.location.href;
	url = url.replace(/#.*$/, '');

	var getArgsHash = {};

	var urlParts = url.split('?');
	if (!urlParts[1]) {
		return getArgsHash;
	}
	var getArgs = urlParts[1].split('&');

	for (var arg = 0; arg < getArgs.length; arg++) {
		var pair = getArgs[arg].split('=');
		getArgsHash[pair[0]] = pair[1];

	}

	return getArgsHash;
};

/**
 * Construct an url from base string and params object.
 *
 * @param {String} base Base string.
 * @param {Object} args Object with arguments, that have to be passed with the url.
 * @return {String}
 */
LiveJournal.constructUrl = function(base, args, escapeArgs) {
	base = base.replace(/(\&|\?)+$/g, '');
	var queryStr = base,
		queryArr = [];

	if (args) {
		queryStr += ( base.indexOf('?') === -1 ? '?' : '&' );

		for (var i in args) {
			queryArr.push(i + '=' + ( ( escapeArgs ) ? encodeURIComponent(args[i]) : args[i] ));
		}
	}

	return queryStr + queryArr.join('&');
};

/**
 * Generate a string for ljuniq cookie
 *
 * @return {String}
 */
LiveJournal.generateLjUniq = function() {
	var alpha = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', result = '', i;

	var len = 15;
	for (i = 0; i < len; ++i) {
		result += alpha.charAt(Math.floor(Math.random() * ( alpha.length - 1 )));
	}

	result += ':' + Math.floor((new Date()) / 1000);
	result += ':pgstats' + ( ( Math.random() < 0.05 ) ? '1' : '0' );

	return result;
};

LiveJournal.checkLjUniq = function() {
	if (!Cookie('ljuniq')) {
		Cookie('ljuniq', LiveJournal.generateLjUniq(), {
				domain: Site.siteroot.replace(/^https?:\/\/www\./, ''),
				expires: 5000,
				path: '/'
			});
	}
};

LiveJournal.closeSiteMessage = function(node, e, id) {
	jQuery.post(LiveJournal.getAjaxUrl('close_site_message'), {
		messageid: id
	}, function(data, status) {
		if (status === 'success') {
			jQuery(node.parentNode.parentNode.parentNode).replaceWith(data.substitude);
		} else {
			LiveJournal.ajaxError(data);
		}
	}, 'json');
};

LiveJournal.parseLikeButtons = (function ($) {
	'use strict';

	var selectors = {
		facebook: '.lj-like-item-facebook',
		google: '.lj-like-item-google',
		twitter: '.lj-like-item-twitter',
		tumblr: '.lj-like-item-tumblr',
		surfingbird: '.lj-like-item-surfinbird',
		repost: '.lj-like-item-repost'
	};

	/**
	 * Parse lj-like buttons
	 * @param  {Object} $node jQuery .lj-like node
	 */
	function parse($node) {
		parseFacebook($node);
		parseGoogle($node);
		parseTwitter($node);
		parseTumblr($node);
		parseSurfingbird($node);
		parseRepost($node);
	}

	/**
	 * Create iframe node with default params and ability to redefine them (iframe factory)
	 * @param  {Object} params Params to substitute for iframe {src, width, height...}
	 * @return {Element}       Created iframe node
	 */
	function createIframe(params) {
		var iframe = document.createElement('iframe'),
			param;

		// defaults
		iframe.frameBorder = 0;
		iframe.scrolling = 'no';
		iframe.allowTransparency = 'true';
		iframe.width = 110;
		iframe.height = 20;

		// reassign params
		if (params) {
			for (param in params) {
				if (params.hasOwnProperty(param)) {
					iframe[param] = params[param];
				}
			}
		}

		return iframe;
	}

	/**
	 * Parse facebook likes
	 * Documentation: http://developers.facebook.com/docs/reference/javascript/FB.XFBML.parse/
	 * @param  {jQuery} $node jQuery collection
	 */
	function parseFacebook($node) {
		var item = $node.find( selectors.facebook );

		if (item.length === 0) {
			return;
		}

		try {
			window.FB.XFBML.parse( item.get(0) );
		} catch (e) {
			console.warn(e.message);
		}
	}

	/**
	 * Parse google +1 button
	 * Documentation: https://developers.google.com/+/plugins/+1button/#jsapi
	 * @param  {jQuery} $node jQuery node with likes in which we will search for google +1 button for parsing
	 */
	function parseGoogle($node) {
		var item = $node.find( selectors.google );

		if (item.length === 0) {
			return;
		}

		// gapi could
		try {
			window.gapi.plusone.go( item.get(0) );
		} catch (e) {
			console.warn(e.message);
		}
	}

	/**
	 * Parse and replace twitter button
	 * @param  {jQuery} $node jQuery node with .lj-like class
	 */
	function parseTwitter($node) {
		var params = null,
			iframe = null,
			// link to replace with iframe
			link = null,
			item = $node.find( selectors.twitter );

		if (item.length === 0) {
			return;
		}

		link = item.children().eq(0);

		params = {
			url: link.data('url'),
			text: link.data('text'),
			count: link.data('count'),
			lang: link.data('lang')
		};

		iframe = createIframe({
			src: LiveJournal.constructUrl('http://platform.twitter.com/widgets/tweet_button.html', params)
		});

		link.replaceWith(iframe);
	}

	/**
	 * Parse surfingbird share button
	 * @param  {jQuery} $node jQuery .lj-like node
	 */
	function parseSurfingbird($node) {
		var item = $node.find( selectors.surfingbird ),
			link = null,
			iframe = null,
			params = null;

		if (item.length === 0) {
			return;
		}

		link = item.find('.surfinbird__like_button');
		params = {
			url: link.data('url'),
			caption: link.data('text'),
			layout: 'common'
		};

		iframe = createIframe({
			src: LiveJournal.constructUrl('http://surfingbird.ru/button', params)
		});

		link.replaceWith(iframe);
	}

	/**
	 * Parse tumblr share button
	 * @param  {jQuery} $node jQuery .lj-like node
	 */
	function parseTumblr($node) {
		var item = $node.find( selectors.tumblr ),
			link = null,
			params = null,
			href;

		if (item.length === 0) {
			return;
		}

		link = item.find('.tumblr-share-button'),
		href = link.attr('href'),
		params = {
			url: link.data('url'),
			name: link.data('title')
		};

		link.attr('href', LiveJournal.constructUrl(href, params));
	}

	/**
	 * Parse repost button
	 * @param  {jQuery} $node jQuery .lj-like node
	 */
	function parseRepost($node) {
		var item = $node.find( selectors.repost ),
			link = null,
			url;

		if (item.length === 0) {
			return;
		}

		link = $node.find('.lj-like-item-repost').find('a'),
		url = link.data('url');

		LJ.Api.call('repost.get_status', { url: url }, function (data) {
			link.replaceWith(LiveJournal.renderRepostButton(url, data));
		});
	}

	return parse;
}(jQuery));

LiveJournal.renderRepostButton = function (url, data) {
	data = data || {};

	var meta = {
			paid: !!data.paid,
			url: url,
			cost: data.cost,
			budget: data.budget,
			count: Number(data.count || 0),
			reposted: !!data.reposted
		},
		template = 'templates-CleanHtml-Repost',
		options = {},
		node;

	if (meta.paid) {
		template = 'templates-CleanHtml-PaidRepost';
		meta.owner = meta.cost === '0';
		options.classNames = {
			active: 'paidrepost-button-active',
			inactive: 'paidrepost-button-inactive'
		};
	}

	return LJ.UI.template(template, meta).repostbutton(jQuery.extend(options, meta));
};

/**
 * Insert script in the document.
 *
 * @param {String} url Url of the script
 * @param {Object=} params Data to apply to the scipt node object, e.g. async, text.
 * @param {Node=} parent If exists, script tag will be inserted in this node or before the
 *		 first script tag otherwise.
 */
LiveJournal.injectScript = function(url, params, parent) {

	function loadScript() {
		var defaults = {
			async: true
		};

		params = params || {};
		params = jQuery.extend({}, defaults, params);

		var e = document.createElement('script');
		e.src = url;

		for (var i in params) {
			if (params.hasOwnProperty(i)) {
				e[i] = params[i];
			}
		}

		if (parent) {
			parent.appendChild(e);
		} else {
			s = document.getElementsByTagName('script')[0];
			s.parentNode.insertBefore(e, s);
		}
	}

	//opera doesn't support async attribute, so we load the scrips on onload event to display page faster
	if (jQuery.browser.opera) {
		jQuery(loadScript);
	} else {
		loadScript();
	}
};

LiveJournal.getLocalizedStr = LJ.ml;

LiveJournal.JSON = function() {
	/**
	 * Formats integers to 2 digits.
	 * @param {number} n
	 * @private
	 */
	function f(n) {
		return n < 10 ? '0' + n : n;
	}

	Date.prototype.toJSON = function() {
		return [this.getUTCFullYear(), '-',
			f(this.getUTCMonth() + 1), '-',
			f(this.getUTCDate()), 'T',
			f(this.getUTCHours()), ':',
			f(this.getUTCMinutes()), ':',
			f(this.getUTCSeconds()), 'Z'].join('');
	};

	// table of character substitutions
	/**
	 * @const
	 * @enum {string}
	 */
	var m = {
		'\b': '\\b',
		'\t': '\\t',
		'\n': '\\n',
		'\f': '\\f',
		'\r': '\\r',
		'"' : '\\"',
		'\\': '\\\\'
	};

	/**
	 * Converts a json object into a string.
	 * @param {*} value
	 * @return {string}
	 * @member gadgets.json
	 */
	function stringify(value) {
		var a, // The array holding the partial texts.
			i, // The loop counter.
			k, // The member key.
			l, // Length.
			r = /["\\\x00-\x1f\x7f-\x9f]/g, v;					// The member value.

		switch (typeof value) {
			case 'string':
				// If the string contains no control characters, no quote characters, and no
				// backslash characters, then we can safely slap some quotes around it.
				// Otherwise we must also replace the offending characters with safe ones.
				return r.test(value) ? '"' + value.replace(r, function(a) {
					var c = m[a];
					if (c) {
						return c;
					}
					c = a.charCodeAt();
					return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
				}) + '"' : '"' + value + '"';
			case 'number':
				// JSON numbers must be finite. Encode non-finite numbers as null.
				return isFinite(value) ? String(value) : 'null';
			case 'boolean':
			case 'null':
				return String(value);
			case 'object':
				// Due to a specification blunder in ECMAScript,
				// typeof null is 'object', so watch out for that case.
				if (!value) {
					return 'null';
				}
				// toJSON check removed; re-implement when it doesn't break other libs.
				a = [];
				if (typeof value.length === 'number' && !value.propertyIsEnumerable('length')) {
					// The object is an array. Stringify every element. Use null as a
					// placeholder for non-JSON values.
					l = value.length;
					for (i = 0; i < l; i += 1) {
						a.push(stringify(value[i]) || 'null');
					}
					// Join all of the elements together and wrap them in brackets.
					return '[' + a.join(',') + ']';
				}
				// Otherwise, iterate through all of the keys in the object.
				for (k in value) {
					if (k.match('___$')) {
						continue;
					}
					if (value.hasOwnProperty(k)) {
						if (typeof k === 'string') {
							v = stringify(value[k]);
							if (v) {
								a.push(stringify(k) + ':' + v);
							}
						}
					}
				}
				// Join all of the member texts together and wrap them in braces.
				return '{' + a.join(',') + '}';
		}
		return '';
	}

	return window.JSON || {
		'stringify': stringify,
		'parse': function(text) {
			// Parsing happens in three stages. In the first stage, we run the text against
			// regular expressions that look for non-JSON patterns. We are especially
			// concerned with '()' and 'new' because they can cause invocation, and '='
			// because it can cause mutation. But just to be safe, we want to reject all
			// unexpected forms.

			// We split the first stage into 4 regexp operations in order to work around
			// crippling inefficiencies in IE's and Safari's regexp engines. First we
			// replace all backslash pairs with '@' (a non-JSON character). Second, we
			// replace all simple value tokens with ']' characters. Third, we delete all
			// open brackets that follow a colon or comma or that begin the text. Finally,
			// we look to see that the remaining characters are only whitespace or ']' or
			// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

			if (/^[\],:{}\s]*$/.test(text.replace(/\\["\\\/b-u]/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {
				return eval('(' + text + ')');
			}
			// If the text is not JSON parseable, then return false.

			return false;
		}
	};
}();

/**
 * Check if site if browsed by mobile device
 *
 */
LiveJournal.isMobile = function() {
	var agent = navigator.userAgent || navigator.vendor || window.opera, isMobile = /android.+(mobile|transformer)|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|opera m(ob|in)i|opera tablet|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(agent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|e\-|e\/|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\-|2|g)|yas\-|your|zeto|zte\-/i.test(agent.substr(0, 4));

	var forceMobile = false, item;
	if (window.localStorage) {
		item = localStorage.getItem('forceMobile');
		forceMobile = item === '1';
	}
	return function() {
		return forceMobile || isMobile;
	}
}();

LiveJournal.getEmbed = function(url) {
	var text = url,
		videoid;

	if (text.match(/^(http:\/\/(www\.)?)?youtu\.be/)) {
		videoid = (text.split('?')[0]).replace(/\/+$/,'').split('/').pop();
		text = 'http://www.youtube.com/embed/' + videoid;
		text = '<iframe width="490" height="370" src="{text}" frameborder="0" allowfullscreen data-link="{url}"></iframe>'.supplant({ text: text, url: url });
	} else if (text.match(/^(http:\/\/(www\.)?)?youtube\.com/)) {
		text = 'http://www.youtube.com/embed/' + LiveJournal.parseGetArgs(text).v;
		text = '<iframe width="490" height="370" src="{text}" frameborder="0" allowfullscreen data-link="{url}"></iframe>'.supplant({ text: text, url: url });
	} else if (text.match(/^(http:\/\/(www\.)?)?rutube\.ru/)) {
		text = 'http://video.rutube.ru/' + LiveJournal.parseGetArgs(text).v;
		text = ('<lj-embed> <OBJECT width="470" height="353">' +
				'<PARAM name="movie" value="{text}"></PARAM>' +
				'<PARAM name="wmode" value="window"></PARAM><PARAM name="allowFullScreen" value="true"></PARAM>' +
				'<EMBED src="{text}" type="application/x-shockwave-flash"' +
				' wmode="window" width="470" height="353" allowFullScreen="true" ></EMBED></OBJECT></lj-embed>').supplant({ text: text });
	} else if (text.match(/^(http:\/\/(www\.)?)?vimeo\.com/)) {
		videoid = (text.split('?')[0]).replace(/\/+$/,'').split('/').pop();
		text = 'http://player.vimeo.com/video/' + videoid;
		text = ('<iframe src="{text}" width="400" height="225" frameborder="0"' +
			'webkitAllowFullScreen mozallowfullscreen allowFullScreen data-link="{url}"></iframe>').supplant({ text: text, url: url });
	}
	return text;
};

LiveJournal.parseMediaLink = function(input) {
	'use strict';

	var regexp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
	var match = input.match(regexp);

	if (match && match[7]) {
		var id = match[7];
		return {
			id: id,
			site: 'youtube',
			preview: 'http://img.youtube.com/vi/' + id + '/0.jpg'
		};
	}
	return null;
};

/* file: js/core/track.js 
----------------------------------------------------------------------------------*/
(function ($, window) {
	'use strict';

	var track= {},
		unique = 0,
		baseClass = 'lj-track',
		selector = '.' + baseClass;

	LJ.UI._track = track;

	/**
	 * Init tracked nodes
	 * @param {jQuery} context
	 */
	LJ.UI.track = function (context) {
		context = context || $(document);
		context.find(selector).each(init);
	};

	function init () {
		var node = $(this),
			category, action;

		if (node.attr('data-track-id')) {
			return;
		}

		category = node.attr('data-track-category') || 'Outbound Link';
		action = node.attr('data-track-action') || node.attr('href');

		track[++unique] = {
			node: node,
			category: category,
			action: action
		};

		node
			.attr('data-track-id', unique)
			.addClass(baseClass + '-' + unique)
			.on('click', function () {
				var gaq = window._gaq || [];

				try {
					gaq.push(['_trackEvent', category, action]);
				} catch (error) {
					LJ.console.log(error.message);
				}
			});
	}
}(jQuery, this));

/* file: js/core/widget.js 
----------------------------------------------------------------------------------*/
(function ($, window) {
	'use strict';

	var widgets = {},
		unique = 0,
		baseClass = 'lj-widget',
		selector = '.' + baseClass;

	LJ.UI._widgets = widgets;

	/**
	 * Init widget node
	 *
	 * @param {jQuery} node Node
	 * @param {String} widget Widget name
	 * @param {String} entryPoint Leave empty to init when page is ready
	 */
	LJ.UI.initWidgetNode = function (node, widget, entryPoint) {
		if (node.hasClass(baseClass)) {
			LJ.console.warn('Node already has class ' + baseClass);
			return;
		}

		node.addClass(baseClass);
		node.attr('data-widget', widget);

		if (entryPoint) {
			node.attr('data-bootstrap', entryPoint);
		}
	};

	/**
	 * Init widget on node
	 *
	 * @param {jQuery} node Node
	 */
	LJ.UI.initWidget = function (node, force) {
		var widget = node.data('widget'),
			options = node.data('widget-options'),
			bootstrap = node.data('bootstrap') || null;

		if (node.attr('data-widget-id')) {
			/* Widget already has unique id */
			return;
		}

		switch (typeof options) {
			case 'object':
				/* jQuery parsing was successfull */
				break;

			case 'string':
				/* Sometimes detection fails (when options string has line breaks) */
				try {
					options = LiveJournal.JSON.parse(options || '{}');
				} catch (error) {
					LJ.console.warn('Invalid options string: ' + options);
					options = {};
				}
				break;
		}

		if (force) {
			if (typeof $.fn[widget] === 'function') {
				$.fn[widget].apply(node, [options]);
			} else {
				LJ.console.warn('Widget ' + widget + ' was not loaded');
				return;
			}
		}

		widgets[++unique] = {
			ready: !!force,
			entryPoint: bootstrap,
			options: options,
			name: widget,
			node: node
		};

		node
			.attr('data-widget-id', unique)
			.addClass(baseClass)
			.addClass(baseClass + '-' + unique);
	};

	/**
	 * Cleanup widget by node
	 *
	 * @param {jQuery} node Node
	 */
	LJ.UI.removeWidget = function (node) {
		var id = node.data('widget-id');

		if (!node.is(baseClass)) {
			LJ.console.warn('Widget was not found on node');
			return;
		}

		if (widgets.hasOwnProperty(id)) {
			LJ.console.warn('Widget ' + id + ' was removed already or never created');
			return;
		}

		delete widgets[id];
	};

	/**
	 * Init widgets with specific entry point or all remaining
	 *
	 * @param {String} entryPoint Entry point name
	 */
	LJ.UI.bootstrap = function (entryPoint) {
		var widget, unique, fn;

		$(selector).each(function () {
			LJ.UI.initWidget($(this));
		});

		for (unique in widgets) {
			if (!widgets.hasOwnProperty(unique)) {
				continue;
			}

			widget = widgets[unique];

			if (widget.ready) {
				continue;
			}

			if (!entryPoint || widget.entryPoint === entryPoint) {
				fn = $.fn[widget.name];

				if (typeof fn === 'function') {
					fn.apply(widget.node, [widget.options]);
					widget.ready = true;
				} else {
					LJ.console.warn('Widget ' + widget.name + ' was not loaded');
					continue;
				}
			}
		}
	};
}(jQuery, this));

/* file: js/core/template.js 
----------------------------------------------------------------------------------*/
(function ($, window) {
	'use strict';

	/* On partner sites LJ and LJ.UI are not defined */
	window.LJ = window.LJ || {};
	LJ.UI = LJ.UI || {};

	/**
	 * Private namespace to hold information about templates.
	 */
	LJ.UI._templates = {};

	/**
	 * Register new template in system.
	 *
	 * @param {string} name The name of the template.
	 * @param {string} id Id of the script tag containing the templates or the template text.
	 * @param {string=jQuery} type Type of the template. Default is jquery templates.
	 */
	LJ.UI.registerTemplate = function (name, data, type) {
		var node, template;

		type = type || 'JQuery';

		switch (type) {
			case 'JQuery':
				node = $('#' + data);

				if (node.length) {
					$.template(name, node.html());
				} else {
					LJ.console.warn('Template node #' + data + ' was not found');
					return;
				}

				break;

			case 'JQuery.stat':
				$.template(name, data);
				type = 'JQuery';
				break;
		}

		LJ.UI._templates[name] = {
			type: type
		};
	};

	/**
	 * Render the template with the data. Current version returns jQuery object
	 *    but surely should be able to return rendered strings.
	 *
	 *  @param {string} name The name of the template. Template should be registered.
	 *  @param {Object} data Data object to inset into template
	 *
	 *  @return {jQuery} jQuery object containing new markup.
	 */
	LJ.UI.template = function(name, data) {
		var template = LJ.UI._templates[name],
			html;

		if (!template) {
			LJ.console.log('Warn: template ', name, ' was called but is not defined yet.');
			return $();
		}

		//switch (template.type) {
		//	default:
		html = $.tmpl(name, data);
		//}

		return html;
	};
}(jQuery, this));

/* file: js/jquery/jquery.storage.js 
----------------------------------------------------------------------------------*/
/*!
 * jQuery storage plugin.
 * @author Dmitry Petrov <Dmitry.Petrov@sup.com>, 2011
 *
 * Plugin uses local storage if availible and falls back to IE userData mechanism.
 *
 * @TODO: add cookie and simple ( non-persistent ) storage providers.
 *
 * Plugin supports IE5.5+, Firefox 3.5+, Opera 10.5+, Google Chrome, Apple Safari 4+
 */
( function( $ ) {

    var JSON = window.JSON || LiveJournal.JSON;

    function stringify(val) {
        return JSON.stringify(val);
    }

    function parse(val) {
        var ret;

        try {
            ret = JSON.parse(val);
        } catch(e) {
            ret = val;
        }

        return ret;
    }


    /**
     * @namespace $.storage
     */
    $.storage = function() {
        
        /**
         * Every provider should have the same interface and provide isSupported function to
         * test if it's applicable in current browser
         */
        var userDataProvider = function() {
            var storageId = 'jQueryStorageProvider',
                storageName = '__jQueryStorage__',
                node;

            function _create()  {
                node = $( '<link>' ).attr( 'id', storageId ).css( 'display', 'none' ).appendTo( $( 'head' ) ).get(0);
                node.addBehavior( '#default#userdata' );
                node.load( storageName );
            }

            //LJSUP-11805: IE does not allow special symbols as attribute names
            function _normalize(name) {
                return name.replace(/[^0-9a-z_-]/ig, '_');
            };


            _create();

            return {
                /**
                 * Set item in the storage
                 *
                 * @param {String} name
                 * @param {String} val
                 */
                setItem: function( name, val ) {
                    node.setAttribute(_normalize(name), stringify(val) );
                    node.save( storageName );
                },
                /**
                 * Get item from the storage.
                 *
                 * @param {String} Item name.
                 * @return {Object|String} Item value or null it it does not exist.
                 */
                getItem: function( name ) {
                    return parse(node.getAttribute(_normalize(name)));
                },
                /**
                 * Remove item from the storage
                 *
                 * @param @{String} Item name.
                 */
                removeItem: function( name ) {
                    node.removeAttribute( name );
                    node.save( storageName );
                }
            }
        };

        userDataProvider.isSupported = function() { return $.browser.msie && ( +$.browser.version ) > 5; };

        var localStorageProvider = function() {
            function _create()  {
            }

            _create();

            return {
                setItem: function(name, val) {
                    localStorage.setItem(name, stringify(val));
                },
                getItem: function(name) {
                    return parse(localStorage.getItem(name));
                },
                removeItem: function( name ) {
                    localStorage.removeItem(name);
                }
            }
        };

        localStorageProvider.isSupported = function() { return !!window.localStorage; };

        var simpleProvider = function() {
            var store;
            function _create()  {
                store = {};
            }

            _create();

            return {
                setItem: function( name, val ) {
                    store.name = val;
                },
                getItem: function( name ) {
                    return store.name || null;
                },
                removeItem: function( name ) {
                    delete store.name;
                }
            }
        };

        simpleProvider.isSupported = function() { return true; };

        //currently all transports should be implemented inside plugin.
        var providers = [ localStorageProvider, userDataProvider, simpleProvider ];

        for( var i = 0; i < providers.length; ++i ) {
            if( providers[ i ].isSupported() ) {
                return providers[ i ]();
            }
        }

        //We should never reach this point.
    }();

} ) ( jQuery );

/* file: js/jquery/jquery.tmpl.min.js 
----------------------------------------------------------------------------------*/
/*
 * jQuery Templates Plugin 1.0.0pre
 * http://github.com/jquery/jquery-tmpl
 * Requires jQuery 1.4.2
 *
 * Copyright 2011, Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
(function(a){var r=a.fn.domManip,d="_tmplitem",q=/^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,b={},f={},e,p={key:0,data:{}},i=0,c=0,l=[];function g(g,d,h,e){var c={data:e||(e===0||e===false)?e:d?d.data:{},_wrap:d?d._wrap:null,tmpl:null,parent:d||null,nodes:[],calls:u,nest:w,wrap:x,html:v,update:t};g&&a.extend(c,g,{nodes:[],parent:d});if(h){c.tmpl=h;c._ctnt=c._ctnt||c.tmpl(a,c);c.key=++i;(l.length?f:b)[i]=c}return c}a.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(f,d){a.fn[f]=function(n){var g=[],i=a(n),k,h,m,l,j=this.length===1&&this[0].parentNode;e=b||{};if(j&&j.nodeType===11&&j.childNodes.length===1&&i.length===1){i[d](this[0]);g=this}else{for(h=0,m=i.length;h<m;h++){c=h;k=(h>0?this.clone(true):this).get();a(i[h])[d](k);g=g.concat(k)}c=0;g=this.pushStack(g,f,i.selector)}l=e;e=null;a.tmpl.complete(l);return g}});a.fn.extend({tmpl:function(d,c,b){return a.tmpl(this[0],d,c,b)},tmplItem:function(){return a.tmplItem(this[0])},template:function(b){return a.template(b,this[0])},domManip:function(d,m,k){if(d[0]&&a.isArray(d[0])){var g=a.makeArray(arguments),h=d[0],j=h.length,i=0,f;while(i<j&&!(f=a.data(h[i++],"tmplItem")));if(f&&c)g[2]=function(b){a.tmpl.afterManip(this,b,k)};r.apply(this,g)}else r.apply(this,arguments);c=0;!e&&a.tmpl.complete(b);return this}});a.extend({tmpl:function(d,h,e,c){var i,k=!c;if(k){c=p;d=a.template[d]||a.template(null,d);f={}}else if(!d){d=c.tmpl;b[c.key]=c;c.nodes=[];c.wrapped&&n(c,c.wrapped);return a(j(c,null,c.tmpl(a,c)))}if(!d)return[];if(typeof h==="function")h=h.call(c||{});e&&e.wrapped&&n(e,e.wrapped);i=a.isArray(h)?a.map(h,function(a){return a?g(e,c,d,a):null}):[g(e,c,d,h)];return k?a(j(c,null,i)):i},tmplItem:function(b){var c;if(b instanceof a)b=b[0];while(b&&b.nodeType===1&&!(c=a.data(b,"tmplItem"))&&(b=b.parentNode));return c||p},template:function(c,b){if(b){if(typeof b==="string")b=o(b);else if(b instanceof a)b=b[0]||{};if(b.nodeType)b=a.data(b,"tmpl")||a.data(b,"tmpl",o(b.innerHTML));return typeof c==="string"?(a.template[c]=b):b}return c?typeof c!=="string"?a.template(null,c):a.template[c]||a.template(null,q.test(c)?c:a(c)):null},encode:function(a){return(""+a).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")}});a.extend(a.tmpl,{tag:{tmpl:{_default:{$2:"null"},open:"if($notnull_1){__=__.concat($item.nest($1,$2));}"},wrap:{_default:{$2:"null"},open:"$item.calls(__,$1,$2);__=[];",close:"call=$item.calls();__=call._.concat($item.wrap(call,__));"},each:{_default:{$2:"$index, $value"},open:"if($notnull_1){$.each($1a,function($2){with(this){",close:"}});}"},"if":{open:"if(($notnull_1) && $1a){",close:"}"},"else":{_default:{$1:"true"},open:"}else if(($notnull_1) && $1a){"},html:{open:"if($notnull_1){__.push($1a);}"},"=":{_default:{$1:"$data"},open:"if($notnull_1){__.push($.encode($1a));}"},"!":{open:""}},complete:function(){b={}},afterManip:function(f,b,d){var e=b.nodeType===11?a.makeArray(b.childNodes):b.nodeType===1?[b]:[];d.call(f,b);m(e);c++}});function j(e,g,f){var b,c=f?a.map(f,function(a){return typeof a==="string"?e.key?a.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g,"$1 "+d+'="'+e.key+'" $2'):a:j(a,e,a._ctnt)}):e;if(g)return c;c=c.join("");c.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/,function(f,c,e,d){b=a(e).get();m(b);if(c)b=k(c).concat(b);if(d)b=b.concat(k(d))});return b?b:k(c)}function k(c){var b=document.createElement("div");b.innerHTML=c;return a.makeArray(b.childNodes)}function o(b){return new Function("jQuery","$item","var $=jQuery,call,__=[],$data=$item.data;$value={};with($data){__.push('"+a.trim(b).replace(/([\\'])/g,"\\$1").replace(/[\r\t\n]/g," ").replace(/\$\{([^\}]*)\}/g,"{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,function(m,l,k,g,b,c,d){var j=a.tmpl.tag[k],i,e,f;if(!j)throw"Unknown template tag: "+k;i=j._default||[];if(c&&!/\w$/.test(b)){b+=c;c=""}if(b){b=h(b);d=d?","+h(d)+")":c?")":"";e=c?b.indexOf(".")>-1?b+h(c):"("+b+").call($item"+d:b;f=c?e:"(typeof("+b+")==='function'?("+b+").call($item):("+b+"))"}else f=e=i.$1||"null";g=h(g);return"');"+j[l?"close":"open"].split("$notnull_1").join(b?"typeof("+b+")!=='undefined' && ("+b+")!=null":"true").split("$1a").join(f).split("$1").join(e).split("$2").join(g||i.$2||"")+"__.push('"})+"');}return __;")}function n(c,b){c._wrap=j(c,true,a.isArray(b)?b:[q.test(b)?b:a(b).html()]).join("")}function h(a){return a?a.replace(/\\'/g,"'").replace(/\\\\/g,"\\"):null}function s(b){var a=document.createElement("div");a.appendChild(b.cloneNode(true));return a.innerHTML}function m(o){var n="_"+c,k,j,l={},e,p,h;for(e=0,p=o.length;e<p;e++){if((k=o[e]).nodeType!==1)continue;j=k.getElementsByTagName("*");for(h=j.length-1;h>=0;h--)m(j[h]);m(k)}function m(j){var p,h=j,k,e,m;if(m=j.getAttribute(d)){while(h.parentNode&&(h=h.parentNode).nodeType===1&&!(p=h.getAttribute(d)));if(p!==m){h=h.parentNode?h.nodeType===11?0:h.getAttribute(d)||0:0;if(!(e=b[m])){e=f[m];e=g(e,b[h]||f[h]);e.key=++i;b[i]=e}c&&o(m)}j.removeAttribute(d)}else if(c&&(e=a.data(j,"tmplItem"))){o(e.key);b[e.key]=e;h=a.data(j.parentNode,"tmplItem");h=h?h.key:0}if(e){k=e;while(k&&k.key!=h){k.nodes.push(j);k=k.parent}delete e._ctnt;delete e._wrap;a.data(j,"tmplItem",e)}function o(a){a=a+n;e=l[a]=l[a]||g(e,b[e.parent.key+n]||e.parent)}}}function u(a,d,c,b){if(!a)return l.pop();l.push({_:a,tmpl:d,item:this,data:c,options:b})}function w(d,c,b){return a.tmpl(a.template(d),c,b,this)}function x(b,d){var c=b.options||{};c.wrapped=d;return a.tmpl(a.template(b.tmpl),b.data,c,b.item)}function v(d,c){var b=this._wrap;return a.map(a(a.isArray(b)?b.join(""):b).filter(d||"*"),function(a){return c?a.innerText||a.textContent:a.outerHTML||s(a)})}function t(){var b=this.nodes;a.tmpl(null,null,null,this).insertBefore(b[0]);a(b).remove()}})(jQuery);

/* file: js/jquery/jquery.lj.bubble.js 
----------------------------------------------------------------------------------*/
/**
 * @name $.lj.bubble
 * @author sergey.zhirkov@sup.com (Sergey Zhirkov)
 * @author dmitry.petrov@sup.com (Dmitry Petrov)
 * @author artem.tyurin@sup.com (Artem Tyurin)
 * @author anazarov@sup.com (Alexander Nazarov)
 * @requires $.ui.core, $.ui.widget, $.lj.basicWidget
 * @class Wraps some content with pop-up "bubble", positioned relative to target or absolute (like modal window)
 * @extends $.lj.basicWidget
 */

/*
 * Usage:
 *	<script>
 *		$('div.with-bubble-content')
 *			.bubble()
 *			.bubble('publicMethod')
 *			.bubble({ many: options })
 *			.bubble('option', 'getOptionName')
 *			.bubble('option', 'setOptionName', 'setOptionValue')
 *			.bind('bubblehide', function( ev ){}); // bind some event
 *	</script>
 */
(function ($, window) {
	$.widget('lj.bubble', $.lj.basicWidget, {
		options: {
			target: null,
			currentTarget: null,
			
			hoverTimer: null,
			hoverDelay: 600,
			showDelay: 0,

			position: {
				x: 0,
				y: 0
			},

			/**
			 * offset object can contain directly fields x and y or fields l,r,t,b,tl,tr,bl,br
			 *    that contain offset object for the bubble in the exact position.
			 *  Priority order: x,y -> tl,bl,tr,br -> t,b -> l,r
			 */
			offset: {},

			// horizontal align relative to target elem
			// TODO "right" align
			align: 'center', // left || center || side
			
			// always show under target elem (even if bubble node does not fit screen height)
			alwaysShowUnderTarget: false,
			
			closeControl: true,
			closeOnContentClick: false,
			closeOnDocumentClick: true,
			closeOnEscape: true,
			
			// show on special event triggered by target (no action by default - "false")
			showOn: false, // 'click' || ('hover' || 'mouseover') || 'focus' || false
			showEffect: '', //can be fade

			preventDefaultTargetClick: true,

			modal: false,

			classNames: {
				containerAddClass: '', //if this value is set it will add this class to the top node
				positionPrefix: 'i-popup-arr',
				arrowDefault: 'i-popup-arr',
				withCloseControl: 'b-popup-withclosecontrol',
				noCloseControl: 'b-popup-noclosecontrol'
			},
			
			selectors: {
				bubbleNode: 'div.bubble-node',
				bubbleArrow: 'i.i-popup-arr',
				bubbleInner: 'div.b-popup-inner',
				closeControl: 'i.i-popup-close',
				fader: '.b-fader'
			},

			templates: {
				fader: '<div class="b-fader" style="display: none"></div>',
				node: 'templates-Widgets-bubble'
			}
		},


		// private methods
		_create: function () {
			var ljBubble = this,
				options = ljBubble.options,
				selectors = options.selectors;

			$.lj.basicWidget.prototype._create.apply(this);
			$.lj.basicWidget.prototype._bindControls.apply(this);

			//this flag is needed because we cannot simply top propogation
			//on content click - user won't be able to open links.
			this.blockDocumentClick = false;

			// wrap bubble content with bubble outer html
			this._base = ljBubble._makeNode();

			this._on('documentClick', function() {
				if (options.closeOnDocumentClick && !ljBubble.blockDocumentClick) {
					ljBubble.hide();
				} else {
					ljBubble.blockDocumentClick = false;
				}
			});
			
			/*
			 * If set to true will prevent bubble from hiding.
			 */
			this._preventHide = false;
			
			// set default options
			ljBubble._setOptions(options);
		},
		
		_setOption: function (option, value) {
			var ljBubble = this,
				options = ljBubble.options,
				classNames = options.classNames,
				eventNamespace = '.' + ljBubble.widgetName + '-' + option,
				currentShowOn = options.showOn,
				newValue;

			switch (option) {
				case 'target':
					newValue = $(value);
					if(options.target && options.target[0] === newValue[0]) {
						break;
					}

					//if target changes we should rebind all events from the old one.
					//we don't if the old one is a string or an ordinary node, because
					//it can happen only on init
					if (options.target && !(typeof options.target === "string") &&
						('length' in  options.target)) {
						this._setOption('showOn', false);
						options.target = newValue;
						this._setOption('showOn', currentShowOn);
					} else {
						options.target = $(value);
					}
					return; //return from the function, because we modified value
				break;
				case 'closeControl':
					if (value) {
						ljBubble.bubbleNode
							.delegate(options.selectors.closeControl, 'click' + eventNamespace, function (event) {
								ljBubble.hide();
							})
							.removeClass(classNames.noCloseControl)
							.addClass(classNames.withCloseControl);
					} else {
						ljBubble.bubbleNode
							.undelegate(options.selectors.closeControl, 'click' + eventNamespace)
							.removeClass(classNames.withCloseControl)
							.addClass(classNames.noCloseControl);
					}
				break;
				case 'position':
					ljBubble.bubbleNode.css({
						left: value.x,
						top: value.y
					});
				break;
				case 'showOn':
					value = (value == 'mouseover') ? 'hover' : value;
				
					if (value == 'click') {
						options.target.bind('click' + eventNamespace, function (event) {
							var target = $(this);
							
							event.preventDefault();
							ljBubble.blockDocumentClick = true;
							
							if (ljBubble.bubbleNode.is(':visible')) {
								ljBubble.hide();
							} else {
								ljBubble.show(target);
							}
						});
					} else {
						options.target.unbind('click' + eventNamespace);
					}
					
					if (value == 'hover') {
						options.target
							.add(ljBubble.bubbleNode)
								.bind('touchstart' + eventNamespace + ' mouseenter' + eventNamespace, function () {
									var target = this;
									clearTimeout(options.hoverTimer);
									options.hoverTimer = setTimeout(function () {
										ljBubble.show(target);
									}, options.showDelay);
								})
								.bind('mouseleave' + eventNamespace, function () {
									clearTimeout(options.hoverTimer);
									options.hoverTimer = setTimeout(function () {
										ljBubble.hide();
									}, options.hoverDelay);
								});
					} else {
						options.target
							.add(ljBubble.bubbleNode)
								.unbind('touchstart' + eventNamespace)
								.unbind('mouseenter' + eventNamespace)
								.unbind('mouseleave' + eventNamespace);
					}

					if (value == 'focus') {
						options.target
							.bind('focus' + eventNamespace, function (event) {
								var target = $(this);

								ljBubble.blockDocumentClick = true;
								event.preventDefault();
								event.stopPropagation();
								
								ljBubble.show(target);
							});
							// @BUG: this was commented out because click on the bubble
							//       content triggers blur event.
							// .bind('blur' + eventNamespace, function (event) {
							// 	ljBubble.hide();
							// });
					} else {
						options.target
							.unbind('focus' + eventNamespace)
							.unbind('blur' + eventNamespace);
					}			
				break;
				case 'preventDefaultTargetClick':
					if (value) {
						options.target.bind('click' + eventNamespace, function (event) {
							event.preventDefault();
						});
					} else {
						options.target.unbind('click' + eventNamespace);
					}
				break;
				case 'closeOnEscape':
					if (value) {
						$(document).bind('keydown' + eventNamespace, function (event) {
							// escape
							if (event.keyCode == 27) {
								if (ljBubble.bubbleNode.is(':visible')) {
									ljBubble.hide();
									//we're doing preventDefault, because Firefox drops ALL internet connection
									//on esc key, event xhr, sorry.
									event.preventDefault();
								}
							}
						});
					} else {
						$(document).unbind('keydown' + eventNamespace);
					}
				break;
				case 'closeOnContentClick':
					if (!value) {
						ljBubble.bubbleNode.bind('mousedown' + eventNamespace + ' click' + eventNamespace, function (event) {
							ljBubble.blockDocumentClick = true;
						});
					} else {
						ljBubble.bubbleNode.unbind('mousedown' + eventNamespace + ' click' + eventNamespace);
					}
				break;
			}

			options[option] = value;
		},

		_makeNode: function () {
			var bubbleNode = this._tmpl('node', this.options),
				bubbleArrow = bubbleNode.find(this.options.selectors.bubbleArrow),
				bubbleInner = bubbleNode.find(this.options.selectors.bubbleInner),
				body = $('body');

			// this.element - with bubble content
			this.element
				.css('display', 'block')
				.prependTo(bubbleInner);

			if (this.options.modal) {
				this._el('fader', body);
				if (!this._fader.length) {
					this._fader = $(this.options.templates.fader).prependTo(body);
				}
			}
			
			this.bubbleNode = bubbleNode.prependTo(body);
			this.bubbleArrow = bubbleArrow;
			
			// store arrow elem position
			bubbleNode.css({
				visibility: 'hidden',
				display: 'block'
			});

			var containerAddClass = this.options.classNames.containerAddClass,
				position;

			//additional class is needed to customize look and behavior of bubble if needed
			if (containerAddClass && containerAddClass.length > 0) {
				bubbleNode.addClass(containerAddClass);
			}

			position = bubbleArrow.position() || {};

			bubbleArrow.data({
				'left': position.left,
				'top': position.top
			});

			bubbleNode.css({
				visibility: 'visible',
				display: 'none'
			});

			return bubbleNode;
		},
		
		_getPosition: function (targetControl, offset) {
			targetControl = targetControl || this.options.currentTarget;
			
			// if there is image in target (like this: <a><img src="..."></a>) - bubble will be positioned relative to image
			if (targetControl.find('img').length) {
				targetControl = targetControl.find('img');
			}

			if (this.options.modal) {
				return {
					position: {
						x: '50%',
						y: '50%'
					}
				};
			}
			
			var ljBubble = this,
				options = ljBubble.options,
				align = options.align,
				alwaysShowUnderTarget = options.alwaysShowUnderTarget,
			
				viewport = $(window),
				viewportWidth = viewport.width(),
				viewportHeight = viewport.height(),
				body = $('body'),
				viewportScrollLeft = body.prop('scrollLeft'),
				
				elem = ljBubble.bubbleNode,
				elemWidth = elem.width(),
				elemHeight = elem.height(),
				
				popupArrow = ljBubble.bubbleArrow,
				popupArrowLeft = popupArrow.data('left'),
				popupArrowTop = popupArrow.data('top'),
				popupArrowWidth = 13, // popup arrow drawn with borders (6px at left and right side)
				
				targetOffset = targetControl.offset(),
				targetLeft = Math.round(targetOffset.left),
				targetTop = Math.round(targetOffset.top),
				targetWidth = targetControl.width(),
				outerWidth = targetControl.outerWidth(), 
				targetHeight = targetControl.height(),
				
				scrollOffset = viewport.scrollTop(),
				leftPositionX, rightPositionX, topPositionY, bottomPositionY,
				arrowPositionType, arrowPositionTypes, position, checkAngle;

				switch (align) {
					case 'center':
						topPositionY = targetTop - popupArrowTop + targetHeight;
						leftPositionX = Math.floor(
							targetLeft + (targetWidth / 2) - popupArrowLeft - (popupArrowWidth / 2)
						);
					break;

					case 'left':
						leftPositionX = targetLeft;
						topPositionY = targetTop - popupArrowTop + targetHeight;
					break;

					case 'side':
						leftPositionX = targetLeft + outerWidth - popupArrowTop;
						topPositionY = Math.round(targetTop - (targetHeight / 2));
					break;
				}

				rightPositionX = targetLeft + Math.floor( (targetWidth / 2) - (elemWidth - popupArrowLeft - popupArrowWidth / 2) );
				bottomPositionY = targetTop + popupArrowTop - elemHeight;
				
				arrowPositionType = {
					x: 'l', // left
					y: 't' // top
				};

				arrowPositionTypes = {
					'lt': { x: leftPositionX, y: topPositionY },
					'tl': { x: leftPositionX, y: topPositionY },
					'tr': { x: rightPositionX, y: topPositionY },
					'bl': { x: leftPositionX, y: bottomPositionY },
					'br': { x: rightPositionX, y: bottomPositionY }
				};
				
				checkAngle = {
					x: leftPositionX + elemWidth,
					y: topPositionY + elemHeight
				};
				
			if (checkAngle.x > viewportWidth + viewportScrollLeft) {
				arrowPositionType.x = 'r'; // right
			}
			
			if (!alwaysShowUnderTarget && checkAngle.y > viewportHeight + viewport.scrollTop() && bottomPositionY > 0) {
				arrowPositionType.y = 'b'; // bottom
			}
		
			if (align === 'side') {
				arrowPositionType = arrowPositionType.x + arrowPositionType.y;
			} else {
				arrowPositionType = arrowPositionType.y + arrowPositionType.x;
			}

			popupArrow
				.removeClass()
				.addClass(options.classNames.arrowDefault)
				.addClass(options.classNames.positionPrefix + arrowPositionType);
			
			position = arrowPositionTypes[arrowPositionType];
			if (this.tempOffset) {
				position.x += this.tempOffset.x;
				position.y += this.tempOffset.y;
				delete this.tempOffset;
			} else {
				position = this._applyOffset( position, arrowPositionType );
			}
			return { position: position, bubblePosition: arrowPositionType };
		},

		_updatePosition: function () {
			var newPosition = this._getPosition();
			this.option('position', newPosition.position);

			return newPosition;
		},

		_applyOffset: function( position, bubblePosition ) {
			var offset = this.options.offset,
				offsetObj;

			if( 'x' in offset ) {
				offsetObj = offset;
			} else {
				offsetObj = offset[ bubblePosition ] || offset[ bubblePosition.charAt( 0 ) ] || offset[ bubblePosition.charAt( 1 ) ];
			}

			if( offsetObj ) {
				position.x += offsetObj.x;
				position.y += offsetObj.y;
			}

			return position;
		},

		/*
		 * Show bubble
		 * @param {jQuery} target Bubble target 
		 * @param {object} tempOffset Temporary offset
		 */
		show: function (target, tempOffset) {
			var ljBubble = this,
				node = this.bubbleNode,
				options = ljBubble.options,
				position;
				
			this.tempOffset = tempOffset;

			//prevent delayed mouseout event
			clearTimeout(this.options.hoverTimer);

			target = (target) ? $(target) : options.target;
			
			$( ':lj-bubble' ).not( this.element ).bubble( "hide" );
			
			if (!node.is(':visible')) {
				this.option('currentTarget', target);
				position = this._updatePosition();

				if (this.options.modal) {
					this._fader.css({ display: 'block' });
					node.css({
						'margin-left': -node.width() / 2,
						'margin-top': -node.height() / 2,
						position: 'fixed'
					});
				}

				if (this.options.showEffect === 'fade') {
					node.fadeIn(200);
				} else {
					node.show();
				}
			}
			
			this._trigger('show', null, [{
				position: position
			}]);
			
			return this;
		},

		/**
		 * Hide bubble
		 */
		hide: function () {
			
			if ( this._preventHide ) {
				return this;
			}
			
			//prevent delayed mouseout event
			clearTimeout(this.options.hoverTimer);

			if (!this.bubbleNode.is(':visible')) { //do not fire events if bubble is already hidden
				return;
			}

			if (this.options.modal) {
				this._fader.css({ display: 'none' });
			}

			this.bubbleNode.hide();
			this._trigger('hide');

			return this;
		},

		/**
		 * Reposition bubble on the page. The method is needed to reposition bubble
		 * in case when it's content is changed and it remains visible at the same time.
		 */
		updatePosition: function() {
			this._updatePosition();
		},

		absolute: function(_x, _y) {
			this.option('position', {x: _x, y: _y});
		},

		move: function(_x, _y) {
			var p = this._getPosition();
			this.option('position', {x: _x, y: _y});
		},

		block: function(block) {
			this.blockDocumentClick = block;
		},

		base: function() {
			return this._base;
		},
		
		
		/**
		 * Determines whether bubble is currently visible
		 * @return {boolean} true if currently visible
		 */
		visible: function() {
			return this.bubbleNode.is(':visible');
		},
		
		
		/**
		 * Setter for _preventHide property
		 * @param {boolean} if set to true, will not hide bubble
		 */
		setPreventHide: function( val ) {
			this._preventHide = !!val;
		},
		
		
		/**
		 * Getter for _preventHide property
		 */
		isHidePrevented: function() {
			return this._preventHide;
		}
	});
})(jQuery, this);

/* file: js/esn.js 
----------------------------------------------------------------------------------*/
var ESN = new Object();

// When page loads, set up "check all" checkboxes
ESN.initCheckAllBtns = function () {
  var ntids  = $("ntypeids");
  var catids = $("catids");

  if (!ntids || !catids)
    return;

  ntidList  = ntids.value;
  catidList = catids.value;

  if (!ntidList || !catidList)
    return;

  ntids  = ntidList.split(",");
  catids = catidList.split(",");

  catids.forEach( function (catid) {
    ntids.forEach( function (ntypeid) {
      var className = "SubscribeCheckbox-" + catid + "-" + ntypeid;

      var cab = new CheckallButton();
      cab.init({
        "class": className,
          "button": $("CheckAll-" + catid + "-" + ntypeid),
          "parent": $("CategoryRow-" + catid)
          });
    });
  });
}

// attach event handlers to all track buttons
ESN.initTrackBtns = function (node) {
    // don't do anything if no remote
    if (!Site.has_remote) return;

    node = node || document;
    var trackBtns = DOM.getElementsByTagAndClassName(node, 'img', 'TrackButton');

    trackBtns.forEach(function (trackBtn) {
        if (!trackBtn || !trackBtn.getAttribute) return;

        if (!trackBtn.getAttribute("lj_subid") && !trackBtn.getAttribute("lj_journalid")) return;
        if (trackBtn.getAttribute("lj_dtalkid") && !Site.remote_can_track_threads) return;

        DOM.addEventListener(trackBtn, 'click', ESN.trackBtnClickHandler.bindEventListener(trackBtn));
    });
};

ESN.trackBtnClickHandler = function (evt) {
    var trackBtn = evt.target;
    if (! trackBtn || trackBtn.tagName.toLowerCase() != "img") return true;

    Event.stop(evt);

    var btnInfo = {};

    ['arg1', 'arg2', 'etypeid', 'newentry_etypeid', 'newentry_token', 'newentry_subid',
     'journalid', 'subid', 'auth_token'].forEach(function (arg) {
        btnInfo[arg] = trackBtn.getAttribute("lj_" + arg);
    });

    // pop up little dialog to either track by inbox/email or go to more options
    var dlg = document.createElement("div");
    var title = _textDiv("Email me when");
    DOM.addClassName(title, "track_title");
    dlg.appendChild(title);

    var TrackCheckbox = function (title, checked) {
        var checkContainer = document.createElement("div");

        var newCheckbox = document.createElement("input");
        newCheckbox.type = "checkbox";
        newCheckbox.id = "newentrytrack" + Unique.id();
        var newCheckboxLabel = document.createElement("label");
        newCheckboxLabel.setAttribute("for", newCheckbox.id);
        newCheckboxLabel.innerHTML = title;

        checkContainer.appendChild(newCheckbox);
        checkContainer.appendChild(newCheckboxLabel);
        dlg.appendChild(checkContainer);

        newCheckbox.checked = checked ? true : false;

        return newCheckbox;
    };

    // global trackPopup so we can only have one
    if (ESN.trackPopup) {
        ESN.trackPopup.hide();
        ESN.trackPopup = null;
    }

    var saveChangesBtn = document.createElement("input");
    saveChangesBtn.type = "button";
    saveChangesBtn.value = "Save Changes";
    DOM.addClassName(saveChangesBtn, "track_savechanges");

    var trackingNewEntries  = Number(btnInfo['newentry_subid']) ? 1 : 0;
    var trackingNewComments = Number(btnInfo['subid']) ? 1 : 0;

    var newEntryTrackBtn;
    var commentsTrackBtn;

    if (trackBtn.getAttribute("lj_dtalkid")) {
        // this is a thread tracking button
        // always checked: either because they're subscribed, or because
        // they're going to subscribe.
        commentsTrackBtn = TrackCheckbox("someone replies in this comment thread", 1);
    } else {
        // entry tracking button
		newEntryTrackBtn = TrackCheckbox(Site.currentJournal + ' posts a new entry', trackingNewEntries);
        commentsTrackBtn = TrackCheckbox("someone comments on this post", trackingNewComments);
    }

    DOM.addEventListener(saveChangesBtn, "click", function () {
        ESN.toggleSubscriptions(btnInfo, evt, trackBtn, {
            newEntry: newEntryTrackBtn ? newEntryTrackBtn.checked : false,
            newComments: commentsTrackBtn.checked
        });
        if (ESN.trackPopup) ESN.trackPopup.hide();
    });

    var btnsContainer = document.createElement("div");
    DOM.addClassName(btnsContainer, "track_btncontainer");
    dlg.appendChild(btnsContainer);

    btnsContainer.appendChild(saveChangesBtn);

    var custTrackLink = document.createElement("a");
    custTrackLink.href = trackBtn.parentNode.href;
    btnsContainer.appendChild(custTrackLink);
    custTrackLink.innerHTML = "More Options";
    DOM.addClassName(custTrackLink, "track_moreopts");

    ESN.trackPopup = new LJ_IPPU.showNoteElement(dlg, trackBtn, 0);

    DOM.addEventListener(custTrackLink, "click", function (evt) {
        Event.stop(evt);
        document.location.href = trackBtn.parentNode.href;
        if (ESN.trackPopup) ESN.trackPopup.hide();
        return false;
    });

    return false;
}

// toggles subscriptions
ESN.toggleSubscriptions = function (subInfo, evt, btn, subs) {
    subInfo["subid"] = Number(subInfo["subid"]);
    if ((subInfo["subid"] && ! subs["newComments"])
        || (! subInfo["subid"] && subs["newComments"])) {
        ESN.toggleSubscription(subInfo, evt, btn, "newComments");
    }

    subInfo["newentry_subid"] = Number(subInfo["newentry_subid"]);
    if ((subInfo["newentry_subid"] && ! subs["newEntry"])
        || (! subInfo["newentry_subid"] && subs["newEntry"])) {
            var newentrySubInfo = new Object(subInfo);
            newentrySubInfo["subid"] = Number(btn.getAttribute("lj_newentry_subid"));
            ESN.toggleSubscription(newentrySubInfo, evt, btn, "newEntry");
    }
};

// (Un)subscribes to an event
ESN.toggleSubscription = function (subInfo, evt, btn, sub) {
    var action = "";
    var params = {
        auth_token: sub == "newEntry" ? subInfo.newentry_token : subInfo.auth_token
    };

    if (Number(subInfo.subid)) {
        // subscription exists
        action = "delsub";
        params.subid = subInfo.subid;
    } else {
        // create a new subscription
        action = "addsub";

        var param_keys;
        if (sub == "newEntry") {
            params.etypeid = subInfo.newentry_etypeid;
            param_keys = ["journalid"];
        } else {
            param_keys = ["journalid", "arg1", "arg2", "etypeid"];
        }

        param_keys.forEach(function (param) {
            if (Number(subInfo[param]))
                params[param] = parseInt(subInfo[param]);
        });
    }

    params.action = action;

    var reqInfo = {
        "method": "POST",
        "url":    LiveJournal.getAjaxUrl('esn_subs'),
        "data":   HTTPReq.formEncoded(params)
    };

    var gotInfoCallback = function (info) {
        if (! info) return LJ_IPPU.showNote("Error changing subscription", btn);

        if (info.error) return LJ_IPPU.showNote(info.error, btn);

        if (info.success) {
            if (info.msg)
                LJ_IPPU.showNote(info.msg, btn);

            if (info.subscribed) {
                if (info.subid)
					btn.setAttribute('lj_subid', info.subid);
                if (info.newentry_subid)
					btn.setAttribute('lj_newentry_subid', info.newentry_subid);

				btn.setAttribute('title', 'Untrack This');

                // update subthread tracking icons
                var dtalkid = btn.getAttribute("lj_dtalkid");
                if (dtalkid)
                    ESN.updateThreadIcons(dtalkid, "on");
                else // not thread tracking button
                    btn.src = Site.imgprefix + "/btn_tracking.gif?v=17312";
            } else {
                if (info["event_class"] == "LJ::Event::JournalNewComment")
					btn.setAttribute('lj_subid', 0);
                else if (info["event_class"] == "LJ::Event::JournalNewEntry")
					btn.setAttribute('lj_newentry_subid', 0);

				btn.setAttribute('title', 'Track This');

                // update subthread tracking icons
                var dtalkid = btn.getAttribute("lj_dtalkid");
                if (dtalkid) {
                    // set state to "off" if no parents tracking this,
                    // otherwise set state to "parent"
                    var state = "off";
                    var parentBtn;
                    var parent_dtalkid = dtalkid;
                    while (parentBtn = ESN.getThreadParentBtn(parent_dtalkid)) {
                        parent_dtalkid = parentBtn.getAttribute("lj_dtalkid");
                        if (! parent_dtalkid) {
                            break;
                        }

                        if (! Number(parentBtn.getAttribute("lj_subid")))
                            continue;
                        state = "parent";
                        break;
                    }

                    ESN.updateThreadIcons(dtalkid, state);
                } else {
                    // not thread tracking button
                    btn.src = Site.imgprefix + "/btn_track.gif?v=17312";
                }
            }

            if (info.auth_token)
				btn.setAttribute('lj_auth_token', info.auth_token);
            if (info.newentry_token)
				btn.setAttribute('lj_newentry_token', info.newentry_token);
        }
    };

    reqInfo.onData = gotInfoCallback;
    reqInfo.onError = function (err) { LJ_IPPU.showNote("Error: " + err) };

    HTTPReq.getJSON(reqInfo);
};

// given a dtalkid, find the track button for its parent comment (if any)
ESN.getThreadParentBtn = function (dtalkid) {
    var cmtInfo = LJ_cmtinfo[dtalkid + ""];
    if (! cmtInfo) {
        return null;
    }

    var parent_dtalkid = cmtInfo.parent;
    if (! parent_dtalkid)
        return null;

    return $("lj_track_btn_" + parent_dtalkid);
};

// update all the tracking icons under a parent comment
ESN.updateThreadIcons = function (dtalkid, tracking) {
    var btn = $("lj_track_btn_" + dtalkid);
    if (! btn) {
        return;
    }

    var cmtInfo = LJ_cmtinfo[dtalkid + ""];
    if (! cmtInfo) {
        return;
    }

    if (Number(btn.getAttribute("lj_subid")) && tracking != "on") {
        // subscription already exists on this button, don't mess with it
        return;
    }

    if (cmtInfo.rc && cmtInfo.rc.length) {
        // update children
        cmtInfo.rc.forEach(function (child_dtalkid) {
            window.setTimeout(function () {
                var state;
                switch (tracking) {
                case "on":
                    state = "parent";
                    break;
                case "off":
                    state = "off";
                    break;
                case "parent":
                    state = "parent";
                    break;
                default:
                    alert("Unknown tracking state " + tracking);
                    break;
                }
                ESN.updateThreadIcons(child_dtalkid, state);
            }, 300);
        });
    }

    // update icon
    var uri;
    switch (tracking) {
        case "on":
            uri = "/btn_tracking.gif?v=17312";
            break;
        case "off":
            uri = "/btn_track.gif?v=17312";
            break;
        case "parent":
            uri = "/btn_tracking_thread.gif?v=17312";
            break;
        default:
            alert("Unknown tracking state " + tracking);
            break;
    }

    btn.src = Site.imgprefix + uri;
};

jQuery(function($)
{
	ESN.initCheckAllBtns();
	ESN.initTrackBtns();
	
	$('#settings_form').delegate('a.delete-group', 'click', function(e)
	{
		var group = this.href.match('&delete_group=(.*?)&')[1];
		$.post(location.href, {
			delete_group: group
		});
		
		$(this).parents('tr').eq(0).remove();
		
		e.preventDefault();
	});
});
/* file: js/journal.js 
----------------------------------------------------------------------------------*/
ILikeThis = {
	dialog: jQuery(),

	dialogRemove: function()
	{
		this.dialog.remove();
		jQuery(document).unbind('click', this.document_click);
	},

	// inline click
	rate: function(e, node, itemid, username)
	{
		var click = node.onclick;
		node.onclick = function(){ return false }
		// has undorate node
		var action = jQuery('.i_like_this_'+itemid+' .i_like_this_already').remove().length ? 'undorate' : 'rate';
		jQuery(node).parent().removeClass('i_dont_like_this');

		jQuery.ajax({
			url: LiveJournal.getAjaxUrl('eventrate'),
			data: {
				action: action,
				journal: username,
				itemid: itemid
			},
			type: 'POST',
			dataType: 'json',
			complete: function()
			{
				node.onclick = click;
			},
			success: function(data)
			{
				if (data.status === 'OK') {
					var append_node = jQuery('.we_like_this_'+itemid+' span>span>span');
					if (!append_node.length) { // s1
						append_node = jQuery('.we_like_this_'+itemid);
					}
					append_node.text(data.total);
					if (action == 'rate') {
						var context = jQuery('.i_like_this_'+itemid).addClass('i_dont_like_this'),
							append_node = context.find('span>span>span');
						if (!append_node.length) { // s1
							append_node = jQuery(context);
						}
						append_node.append('<i class="i_like_this_already">/</i>');
					}
				}
			}
		});
		return false;
	},

	// inline click
	showList: function(e, node, itemid, username)
	{
		this.ajax && this.ajax.abort();

		this.ajax = jQuery.ajax({
			url: LiveJournal.getAjaxUrl('eventrate'),
			data: {
				action: 'list',
				journal: username,
				itemid: itemid,
				limit: 10
			},
			type: 'POST',
			dataType: 'json',
			success: function(data)
			{
				$node = jQuery(node);
				if (data.status === 'OK') {
					ILikeThis.dialog.remove();
					ILikeThis.dialog = jQuery('<div/>', {
						'class': 'b-popup b-popup-messagebox b-popup-ilikethis',
						css: {top: 0, visibility: 'hidden'},
						html: '<div class="b-popup-head">'
									+'<h4>'+data.ml_users_who_like_it+' ('+data.total+')</h4><i class="i-popup-close" onclick="ILikeThis.dialogRemove()"></i>'
								+'</div>'
								+'<div class="b-popup-content">'
									+'<p class="b-popup-we_like_this">'
										+data.result
									+'</p>'
								+'</div>'
								+(data.total > 10 ? '<div class="b-popup-footer">'
									+'<p><a href="'+Site.siteroot+'/alleventrates.bml?journal='+username+'&itemid='+itemid+'">'
										+data.ml_view_all
									+'</a></p>' : ''
								+'</div>')
					}).ljAddContextualPopup();

					ILikeThis.dialog.appendTo(document.body);

					//calc with viewport
					var ele_offset = $node.offset(),
						left = ele_offset.left,
						top = ele_offset.top + $node.height() + 0, // TODO: 4 is fix markup height
						$window = jQuery(window);

					left = Math.min(left,  $window.width() + $window.scrollLeft() - ILikeThis.dialog.outerWidth(true));
					top = Math.min(top, $window.height() + $window.scrollTop() - ILikeThis.dialog.outerHeight(true));

					jQuery(document).click(ILikeThis.document_click);

					ILikeThis.dialog.css({
						left: left,
						top: top,
						visibility: 'visible'
					});

					var append_node = jQuery('.we_like_this_'+itemid+' span>span>span');
					if (!append_node.length) { // s1
						append_node = jQuery('.we_like_this_'+itemid);
					}

					append_node.text(data.total);
				}
			}
		});

		return false;
	},

	document_click: function(e)
	{
		if (!jQuery(e.target).parents('.b-popup-ilikethis').length) {
			ILikeThis.dialogRemove();
		}
	}
}

DonateButton = {
	buyMore: function(node, ml_message, event) {
		var bubble = jQuery(node).data("buyMoreCachedBubble");
		if (!bubble) {
			bubble = jQuery("<span>" + ml_message + "</span>").bubble({
				target: node
			});
			jQuery(node).data("buyMoreCachedBubble", bubble);
		}

		bubble.bubble("show");
		event.stopPropagation ? event.stopPropagation() : (event.cancelBubble=true);
		return false;
	},

	donate: function( link, url_data, event ) {
		var url = link.href,
			origin, h;

		var width = 639;
		var height = 230;

		LJ.rpc.bind( function( ev ) {
			if( ev.origin && ev.origin != Site.siteroot ) {
				return;
			}

			if( ev.data && ev.data.message === "updateWallet" ) {
				LiveJournal.run_hook( 'update_wallet_balance' );
				jQuery.getJSON( LiveJournal.getAjaxUrl( 'give_tokens' ) + "?" + url_data + "&mode=js",
					function( result ) {
						if( result.html ) {
							$node = jQuery( link ).closest( '.lj-button' );
							$node.replaceWith( result.html );
						}
					} );
			}
		} );

		var popupUrl = url + ( url.indexOf( "?" ) === -1 ? "?" : "&" ) + 'usescheme=nonavigation';
		h = window.open( 'about:blank', 'donate' , 'toolbar=0,status=0,width=' + width + ',height=' + height + ',scrollbars=yes,resizable=yes');
		h.name = location.href.replace( /#.*$/, '' );

		setTimeout( function() {
			LJ.rpc.initRecipient( h, popupUrl, location.href.replace( /#.*$/, '' ) );
		}, 0 );

		event.stopPropagation ? event.stopPropagation() : (event.cancelBubble=true);
		return false;
	}
};

// Share at some S2 styles
jQuery(document).click(function(e)
{
	'use strict';

	var a, href, args;

	// exit if sharing widget is on the page
	if (jQuery.fn.share) {
		return;
	}

	a = e.target;
	href = a.href;

	if (href && !a.shareClickIgnore) {
		if (href.indexOf('http://www.facebook.com/sharer.php') === 0) {
			LJShare.entry({url: decodeURIComponent(LiveJournal.parseGetArgs(href).u)})
				.attach(a, "facebook");
			a.shareClickIgnore = true;
			jQuery(a).click();
			e.preventDefault();
		} else if (href.indexOf("http://twitter.com/share") === 0) {
			args = LiveJournal.parseGetArgs(href);
			LJShare.entry({
				url: decodeURIComponent(args.url),
				title: decodeURIComponent(args.text)
			}).attach(a, "twitter");
			a.shareClickIgnore = true;
			jQuery(a).click();
			e.preventDefault();
		} else if (href.indexOf("http://api.addthis.com/oexchange/0.8/forward/email") === 0) {
			args = LiveJournal.parseGetArgs(href);
			LJShare.entry({
				url: decodeURIComponent(args.url),
				title: decodeURIComponent(args.title)
			}).attach(a, "email");
			a.shareClickIgnore = true;
			jQuery(a).click();
			e.preventDefault();
		}
	}
});

(function() {
	var options = {
		blockSelector: '.yota-contest'
	};

	function retrieveContestInfo( element ) {
		var journal = element.attr( 'data-user' );
		jQuery.getJSON( LiveJournal.getAjaxUrl( 'yota_widget_post' ),
						{ json: 1, journal: journal }, function( answer ) {
			if( 'collected' in answer ) {
				var collected = answer.collected;
				for( var i = 0; i < collected.length; i += 2 ) {
					element.find( "." + collected[ i ] ).html( collected[ i + 1 ] );
				}
			}

			if( 'rating' in answer ) {
				i = 5;
				var key;
				while( --i > 0) {
					key = "" + i;
					if( key in answer.rating ) {
						element.find( '.c' + i ).html( answer.rating[ key ] );
					}
				}
			}
		} );
	}

	function findElement() {
		var element = jQuery( options.blockSelector );

		if( element.length ) {
			element.each( function() {
				retrieveContestInfo( jQuery( this ) );
			} );
		}
	}

	jQuery( function() {
		findElement();
	} );
} )();

(function() {
	var storage = {
		init: function() {
			this._store = window.sessionStorage && sessionStorage.getItem('placeholders') || '';
		},

		makeHash: function(link) {
			return ' ' + encodeURIComponent(link) + ' ';
		},

		inStorage: function(link) {
			return this._store.indexOf(this.makeHash(link)) !== -1;
		},

		addUrl: function(link) {
			if (!window.sessionStorage) { return; }
			if (this.inStorage(link)) { return; }

			this._store += this.makeHash(link);
			sessionStorage.setItem('placeholders', this._store);
		}
	};

	storage.init();

	var placeholders = {
		image: {
			selector: '.b-mediaplaceholder-photo',
			loading: 'b-mediaplaceholder-processing',
			init: function() {
				var self = this;
				doc.on('click', this.selector, function(ev) {
					self.handler(this, ev);
				});
			},

			handler: function(el, html) {
				var im = new Image();

				im.onload = im.onerror = jQuery.delayedCallback(this.imgLoaded.bind(this, el, im), 500);
				im.src = el.href;
				el.className += ' ' + this.loading;

				storage.addUrl(el.href);
			},

			imgLoaded: function(el, image) {
				var img = jQuery('<img />').attr('src', image.src),
					$el = jQuery(el),
					href = $el.data('href'),
					imw = $el.data('width'),
					imh = $el.data('height');

				if (imw) { img.width(imw); }
				if (imh) { img.height(imh); }

				if (href && href.length > 0) {
					img = jQuery('<a>', { href: href }).append(img);
					$el.next('.b-mediaplaceholder-external').remove();
				}

				$el.replaceWith(img);
			}
		},

		video: {
			handler: function(link, html) {
				link.parentNode.replaceChild(jQuery(unescape(html))[0], link);
			}
		}
	};
	// use replaceChild for no blink scroll effect

	// Placeholder onclick event
	LiveJournal.placeholderClick = function(el, html) {
		var type = (html === 'image') ? html : 'video';

		placeholders[type].handler(el, html);
		return false;
	};

	LiveJournal.register_hook('page_load', function() {
		jQuery('.b-mediaplaceholder').each(function() {
			if(storage.inStorage(this.href)) {
				this.onclick.apply(this);
			}
		});
	});
})();

/**
 * this code initializes common properies for all widgets.
 * If it will become too large, it should be moved to the separate file
 */
(function() {
	widgets = [
		{
			type: 'collapsable',
			handler: function() {
				jQuery(document).on('click', '.appwidget-prop-collapsable', function(ev) {
					if (ev.target.className.indexOf('w-head-status-switch') !== -1) {
						var videoCollapes = ev.target.className.indexOf('collapse') !== -1,
							//widget will have class like appwidget-videoforhomepage where videoforhomepage is the widget id
							id = this.className.replace(/(?:.*?)appwidget-(\S+).*/, '$1-'),
							fullid = id + this.getAttribute('data-cid'),
							cookie = decodeURIComponent(Cookie('clpsd') || ''),
							cookie_ids = cookie ? cookie.split(':') : [];

						jQuery(this).toggleClass('appwidget-prop-collapsed', videoCollapes);

						var found = false;
						for (var i = 0; i < cookie_ids.length; ++i) {
							if (cookie_ids[i].indexOf(id) !== -1) {
								found = true;
								if (videoCollapes) {
									cookie_ids[i] = fullid;
								} else {
									cookie_ids.splice(i, 1);
								}
								break;
							}
						}

						if (!found && videoCollapes) {
							cookie_ids.push(fullid);
						}

						Cookie('clpsd', cookie_ids.length > 0 ? cookie_ids.join(':') : null, { domain: location.host, expires: 30 });
					}
				});
			}
		}
	];

	widgets.forEach(function(prop) { prop.handler(); });
})();


/**
 * Delayed like buttons loader
 */
LiveJournal.register_hook('page_load', function () {
	'use strict';

	jQuery(document.body).ljLikes();
});
/* file: js/hourglass.js 
----------------------------------------------------------------------------------*/
// LiveJournal javascript standard interface routines

// create a little animated hourglass at (x,y) with a unique-ish ID
// returns the element created
Hourglass = new Class( Object, {
  init: function(widget, classname) {
    this.ele = document.createElement("img");
    if (!this.ele) return;

    var imgprefix = Site ? Site.imgprefix : '';

    this.ele.src = imgprefix ? imgprefix + "/hourglass.gif?v=1674" : "/img/hourglass.gif?v=1674";
    this.ele.style.position = "absolute";

    DOM.addClassName(this.ele, classname);

    if (widget)
      this.hourglass_at_widget(widget);
  },

  hourglass_at: function (x, y) {
    this.ele.width = 17;
    this.ele.height = 17;
    this.ele.style.top = (y - 8) + "px";
    this.ele.style.left = (x - 8) + "px";

    // unique ID
    this.ele.id = "lj_hourglass" + x + "." + y;

    document.body.appendChild(this.ele);
  },

  add_class_name: function (classname) {
      if (this.ele)
      DOM.addClassName(this.ele, classname);
  },

  hourglass_at_widget: function (widget) {
    var dim = DOM.getAbsoluteDimensions(widget);
    var x = dim.absoluteLeft;
    var y = dim.absoluteTop;
    var w = dim.absoluteRight - x;
    var h = dim.absoluteBottom - y;
    if (w && h) {
      x += w/2;
      y += h/2;
    }
    this.hourglass_at(x, y);
  },

  hide: function () {
    if (this.ele) {
      try {
        document.body.removeChild(this.ele);
      } catch (e) {}
    }
  }

} );

/* file: js/livejournal-local.js 
----------------------------------------------------------------------------------*/
// ljtalk for ctxpopup
LiveJournal.register_hook("ctxpopup_extrainfo", function (userdata) {
	var content = '';
	if (userdata.is_person) {
		if (userdata.is_online !== null) {
			content = '<a href="' + Site.siteroot + '/chat/">' + userdata.ml_ljtalk + '</a>';
			if (userdata.is_online) {
				content += " " + userdata.ml_online;
			} else if (userdata.is_online == '0') {
				content += " " + userdata.ml_offline;
			}
		}
	}

	return content;
});

// for updating ljcom widgets from livejournal ones
LiveJournal.register_hook("update_other_widgets", function (from_widget) {
	if (from_widget == "LayoutChooser" && Customize.AdLayout) {
		Customize.AdLayout.updateContent();
	}
});

/* file: js/pagescroller.js 
----------------------------------------------------------------------------------*/
jQuery(function() {
	var entries = jQuery(".entry");
    
    function getCurrentEntry() {
        var scrollTop = jQuery(window).scrollTop();
        for (var i=0; i<entries.length; ++i) {
            // there is no exact equality between offset and scrollTop after call to scrollTo:
            // there may be offset=180.1, scrollTop=180
            // console.log("entry=" + i + ", entries.eq(i).offset().top=" + entries.eq(i).offset().top + ", scrollTop=" + scrollTop);
            if (entries.eq(i).offset().top-20 > scrollTop) {
                return i-1;
            }
        }
        return entries.length-1;
    }

	function keyCheck(e) {

    	if (!entries.length) {
            // console.log("No entries");
			return;
		}

        // do not mess with form inputs
        var activeElement = document.activeElement;
        if (activeElement) {
            var nodeName = activeElement.nodeName.toLowerCase();
            if (nodeName=="input" || nodeName=="textarea" || nodeName=="select") {
                // console.log("returning from form element: " + nodeName);
                return;
            }
        }
        // console.log("Key code = " + e.keyCode);

		var pos;
		if (e.keyCode === 78) {
			// next
            var anchor = getCurrentEntry()+1;
            // console.log("next, anchor=" + anchor + ", entries.length=" + entries.length);
			if (anchor >= entries.length) {
				return;
			}
			pos = entries.eq(anchor).offset();
			window.scrollTo(pos.left, pos.top-10);
		}
		if (e.keyCode === 80) {
			//previous
			var anchor = getCurrentEntry()-1;
            // console.log("prev, anchor=" + anchor + ", entries.length=" + entries.length);
			if (anchor < 0) {
                return; 
			}
			pos = entries.eq(anchor).offset();
			window.scrollTo(pos.left, pos.top-10);
		}
	}

    if (entries.length>1) {
        // console.log("Installing keyCheck");
	    jQuery(document).keyup(keyCheck);
    }
});

/* file: js/ippu.js 
----------------------------------------------------------------------------------*/
/*
  IPPU methods:
     init([innerHTML]) -- takes innerHTML as optional argument
     show() -- shows the popup
     hide() -- hides popup
     cancel() -- hides and calls cancel callback

  Content setters:
     setContent(innerHTML) -- set innerHTML
     setContentElement(element) -- adds element as a child of the popup

   Accessors:
     getElement() -- returns popup DIV element
     visible() -- returns whether the popup is visible or not

   Titlebar:
     setTitlebar(show) -- true: show titlebar / false: no titlebar
     setTitle(title) -- sets the titlebar text
     getTitlebarElement() -- returns the titlebar element
     setTitlebarClass(className) -- set the class of the titlebar

   Styling:
     setOverflow(overflow) -- sets ele.style.overflow to overflow
     addClass(className) -- adds class to popup
     removeClass(className) -- removes class to popup

   Browser Hacks:
     setAutoHideSelects(autohide) -- when the popup is shown should it find all the selects
                                on the page and hide them (and show them again) (for IE)

   Positioning/Sizing:
     setLocation(left, top) -- set popup location: will be pixels if units not specified
     setLeft(left) -- set left location
     setTop(top)   -- set top location
     setDimensions(width, height) -- set popup dimensions: will be pixels if units not specified
     setAutoCenter(x, y) -- what dimensions to auto-center
     center() -- centers popup on screen
     centerX() -- centers popup horizontally
     centerY() -- centers popup vertically
     setFixedPosition(fixed) -- should the popup stay fixed on the page when it scrolls?
     centerOnWidget(widget) -- center popup on this widget
     setAutoCenterCallback(callback) -- calls callback with this IPPU instance as a parameter
                                        for auto-centering. Some common built-in class methods
                                        you can use as callbacks are:
                                        IPPU.center
                                        IPPU.centerX
                                        IPPU.centerY

     moveForward(amount) -- increases the zIndex by one or amount if specified
     moveBackward(amount) -- decreases the zIndex by one or amount if specified

   Modality:
     setClickToClose(clickToClose) -- if clickToClose is true, clicking outside of the popup
                                      will close it
     setModal(modality) -- If modality is true, then popup will capture all mouse events
                     and optionally gray out the rest of the page. (overrides clickToClose)
     setOverlayVisible(visible) -- If visible is true, when this popup is on the page it
                                   will gray out the rest of the page if this is modal

   Callbacks:
     setCancelledCallback(callback) -- call this when the dialog is closed through clicking
                                       outside, titlebar close button, etc...
     setHiddenCallback(callback) -- called when the dialog is closed in any fashion

   Fading:
     setFadeIn(fadeIn) -- set whether or not to automatically fade the ippu in
     setFadeOut(fadeOut) -- set whether or not to automatically fade the ippu out
     setFadeSpeed(secs) -- sets fade speed

  Class Methods:
   Handy callbacks:
     IPPU.center
     IPPU.centerX
     IPPU.centerY
   Browser testing:
     IPPU.isIE() -- is the browser internet exploder?
     IPPU.ieSafari() -- is this safari?

////////////////////


ippu.setModalDenialCallback(IPPU.cssBorderFlash);


   private:
    Properties:
     ele -- DOM node of div
     shown -- boolean; if element is in DOM
     autoCenterX -- boolean; auto-center horiz
     autoCenterY -- boolean; auto-center vertical
     fixedPosition -- boolean; stay in fixed position when browser scrolls?
     titlebar -- titlebar element
     title -- string; text to go in titlebar
     showTitlebar -- boolean; whether or not to show titlebar
     content -- DIV containing user's specified content
     clickToClose -- boolean; clicking outside popup will close it
     clickHandlerSetup -- boolean; have we set up the click handlers?
     docOverlay -- DIV that overlays the document for capturing clicks
     modal -- boolean; capture all events and prevent user from doing anything
                       until dialog is dismissed
     visibleOverlay -- boolean; make overlay slightly opaque
     clickHandlerFunc -- function; function to handle document clicks
     resizeHandlerFunc -- function; function to handle document resizing
     autoCenterCallback -- function; what callback to call for auto-centering
     cancelledCallback -- function; called when dialog is cancelled
     setAutoHideSelects -- boolean; autohide all SELECT elements on the page when popup is visible
     hiddenSelects -- array; SELECT elements that have been hidden
     hiddenCallback -- funciton; called when dialog is hidden
     fadeIn, fadeOut, fadeSpeed -- fading settings
     fadeMode -- current fading mode (in, out) if there is fading going on

    Methods:
     updateTitlebar() -- create titlebar if it doesn't exist,
                         hide it if titlebar == false,
                         update titlebar text
     updateContent() -- makes sure all currently specified properties are applied
     setupClickCapture() -- if modal, create document-sized div overlay to capture click events
                            otherwise install document onclick handler
     removeClickHandlers() -- remove overlay, event handlers
     clickHandler() -- event handler for clicks
     updateOverlay() -- if we have an overlay, make sure it's where it should be and (in)visible
                        if it should be
     autoCenter() -- centers popup on screen according to autoCenterX and autoCenterY
     hideSelects() -- hide all select element on page
     showSelects() -- show all selects
     _hide () -- actually hides everything, called by hide(), which does fading if necessary
*/

// this belongs somewhere else:
function changeOpac(id, opacity) {
    var e =  $(id);
    if (e && e.style) {
        var object = e.style;
        if (object) {
            //reduce flicker
            if (IPPU.isSafari() && opacity >= 100)
                opacity = 99.99;

            // IE
            if (object.filters)
                object.filters.alpha.opacity = opacity * 100;

            object.opacity = opacity;
        }
    }
}

IPPU = new Class( Object, {
  setFixedPosition: function (fixed) {
    // no fixed position for IE
    if (IPPU.isIE())
      return;

    this.fixedPosition = fixed;
    this.updateContent();
  },

  clickHandler : function (evt) {
    if (!this.clickToClose) return;
    if (!this.visible()) return;

    evt = Event.prep(evt);
    var target = evt.target;
    // don't do anything if inside the popup
    if (DOM.getAncestorsByClassName(target, "ippu", true).length > 0) return;
    this.cancel();
  },

  setCancelledCallback : function (callback) {
    this.cancelledCallback = callback;
  },

  cancel : function () {
    if (this.cancelledCallback)
      this.cancelledCallback();
    this.hide();
  },

  setHiddenCallback: function (callback) {
    this.hiddenCallback = callback;
  },

  setupClickCapture : function () {
    if (!this.visible() || this.clickHandlerSetup){return;}
    if (!this.clickToClose && !this.modal) {return;}

    this.clickHandlerFunc = this.clickHandler.bindEventListener(this);

    if (this.modal) {
      // create document-sized div to capture events
      if (this.overlay) return; // wtf? shouldn't exist yet
      this.overlay = document.createElement("div");
      this.overlay.style.left = "0px";
      this.overlay.style.top = "0px";
      this.overlay.style.margin = "0px";
      this.overlay.style.padding = "0px";
      
      this.overlay.style.backgroundColor = "#000000";
      this.overlay.style.zIndex="900";
      if (IPPU.isIE()){
      		this.overlay.style.filter="progid:DXImageTransform.Microsoft.Alpha(opacity=50)";
		this.overlay.style.position="absolute";
		this.overlay.style.width=document.body.scrollWidth;
		this.overlay.style.height=document.body.scrollHeight;
      }
      else{
      	this.overlay.style.position = "fixed";
      }

      this.ele.parentNode.insertBefore(this.overlay, this.ele);
      this.updateOverlay();

      DOM.addEventListener(this.overlay, "click", this.clickHandlerFunc);
    } else {
      // simple document onclick handler
      DOM.addEventListener(document, "click", this.clickHandlerFunc);
    }

    this.clickHandlerSetup = true;
  },

  updateOverlay : function () {
    if (this.overlay) {
      var cd = DOM.getClientDimensions();
      this.overlay.style.width = (cd.x - 1) + "px";
      if(!IPPU.isIE()){
      	this.overlay.style.height = (cd.y - 1) + "px";
      }	
      if (this.visibleOverlay) {
        this.overlay.backgroundColor = "#000000";
        changeOpac(this.overlay, 0.50);
      } else {
        this.overlay.backgroundColor = "#FFFFFF";
        changeOpac(this.overlay, 0.0);
      }
    }
  },

  resizeHandler : function (evt) {
    this.updateContent();
  },

  removeClickHandlers : function () {
    if (!this.clickHandlerSetup) return;

    var myself = this;
    var handlerFunc = function (evt) {
      myself.clickHandler(evt);
    };

    DOM.removeEventListener(document, "click", this.clickHandlerFunc, false);

    if (this.overlay) {
      DOM.removeEventListener(this.overlay, "click", this.clickHandlerFunc, true);
      this.overlay.parentNode.removeChild(this.overlay);
      this.overlay = undefined;
    }

    this.clickHandlerFunc = undefined;
    this.clickHandlerSetup = false;
  },

  setClickToClose : function (clickToClose) {
    this.clickToClose = clickToClose;

    if (!this.clickHandlerSetup && clickToClose && this.visible()) {
      // popup is already visible, need to set up click handler
      var setupClickCaptureCallback = this.setupClickCapture.bind(this);
      window.setTimeout(setupClickCaptureCallback, 100);
    } else if (!clickToClose && this.clickHandlerSetup) {
      this.removeClickHandlers();
    }

    this.updateContent();
  },

  setModal : function (modal) {
    var changed = (this.modal == modal);

    // if it's modal, we don't want click-to-close
    if (modal)
      this.setClickToClose(false);

    this.modal = modal;
    if (changed) {
      this.removeClickHandlers();
      this.updateContent();
    }
  },

  setOverlayVisible : function (vis) {
    this.visibleOverlay = vis;
    this.updateContent();
  },

  updateContent : function () {
    this.autoCenter();
    this.updateTitlebar();
    this.updateOverlay();
    if (this.titlebar)
      this.setTitlebarClass(this.titlebar.className);

    var setupClickCaptureCallback = this.setupClickCapture.bind(this);
    window.setTimeout(setupClickCaptureCallback, 100);

    if (this.fixedPosition && this.ele.style.position != "fixed")
      this.ele.style.position = "fixed";
    else if (!this.fixedPosition && this.ele.style.position == "fixed")
      this.ele.style.position = "absolute";
  },

  getTitlebarElement : function () {
    return this.titlebar;
  },

  setTitlebarClass : function (className) {
    if (this.titlebar)
      this.titlebar.className = className;
  },

  setOverflow : function (overflow) {
    if (this.ele)
      this.ele.style.overflow = overflow;
  },

  visible : function () {
    return this.shown;
  },

  setTitlebar : function (show) {
    this.showTitlebar = show;

    if (show) {
      if (!this.titlebar) {
        // titlebar hasn't been created. Create it.
        var tbar = document.createElement("div");
        if (!tbar) return;
        tbar.style.width = "100%";

        if (this.title) tbar.innerHTML = this.title;
        this.ele.insertBefore(tbar, this.content);
        this.titlebar = tbar;

      }
    } else if (this.titlebar) {
      this.ele.removeChild(this.titlebar);
      this.titlebar = false;
    }
  },

  setTitle : function (title) {
    this.title = title;
    this.updateTitlebar();
  },

  updateTitlebar : function() {
    if (this.showTitlebar && this.titlebar && this.title != this.titlebar.innerHTML) {
      this.titlebar.innerHTML = this.title;
    }
  },

  addClass : function (className) {
    DOM.addClassName(this.ele, className);
  },

  removeClass : function (className) {
    DOM.removeClassName(this.ele, className);
  },

  setAutoCenterCallback : function (callback) {
    this.autoCenterCallback = callback;
  },

  autoCenter : function () {
    if (!this.visible || !this.visible()) return;

    if (this.autoCenterCallback) {
      this.autoCenterCallback(this);
      return;
    }

    if (this.autoCenterX)
      this.centerX();

    if (this.autoCenterY)
      this.centerY();
  },

  center : function () {
    this.centerX();
    this.centerY();
  },

  centerOnWidget : function (widget, offsetTop, offsetLeft) {
        offsetTop = offsetTop || 0;
        offsetLeft = offsetLeft || 0;
        this.setAutoCenter(false, false);
        this.setAutoCenterCallback(null);
  var wd = DOM.getAbsoluteDimensions(widget);
    var ed = DOM.getAbsoluteDimensions(this.ele);
    var newleft = (wd.absoluteRight - wd.offsetWidth / 2 - ed.offsetWidth / 2) + offsetLeft;
    var newtop = (wd.absoluteBottom - wd.offsetHeight / 2 - ed.offsetHeight / 2) + offsetTop;

        newleft = newleft < 0 ? 0 : newleft;
        newtop  = newtop  < 0 ? 0 : newtop;
    DOM.setLeft(this.ele, newleft);
    DOM.setTop(this.ele, newtop);
  },

  centerX : function () {
    if (!this.visible || !this.visible()) return;

    var cd = DOM.getClientDimensions();
    var newleft = cd.x / 2 - this.ele.offsetWidth / 2;

    // If not fixed position, center relative to the left of the page
    if (!this.fixedPosition) {
        var wd = DOM.getWindowScroll();
        newleft += wd.left;
    }

   DOM.setLeft(this.ele, newleft);
  },

  centerY : function () {
    if (!this.visible || !this.visible()) return;

    var cd = DOM.getClientDimensions();
    var newtop = cd.y / 2 - this.ele.offsetHeight / 2;

    // If not fixed position, center relative to the top of the page
    if (!this.fixedPosition) {
        var wd = DOM.getWindowScroll();
        newtop += wd.top;
    }

    DOM.setTop(this.ele, newtop);
  },

  setAutoCenter : function (autoCenterX, autoCenterY) {
    this.autoCenterX = autoCenterX || false;
    this.autoCenterY = autoCenterY || false;

    if (!autoCenterX && !autoCenterY) {
        this.setAutoCenterCallback(null);
        return;
    }

    this.autoCenter();
  },

  setDimensions : function (width, height) {
    width = width + "";
    height = height + "";
    if (width.match(/^\d+$/)) width += "px";
    if (height.match(/^\d+$/)) height += "px";

    this.ele.style.width  = width;
    this.ele.style.height = height;
  },

  moveForward : function (howMuch) {
      if (!howMuch) howMuch = 1;
      if (! this.ele) return;

      this.ele.style.zIndex += howMuch;
  },

  moveBackward : function (howMuch) {
      if (!howMuch) howMuch = 1;
      if (! this.ele) return;

      this.ele.style.zIndex -= howMuch;
  },

  setLocation : function (left, top) {
      this.setLeft(left);
      this.setTop(top);
  },

  setTop : function (top) {
   if (typeof top != 'string') top += 'px';
     this.ele.style.top = top;
  },

  setLeft : function (left) {
	if (typeof left != 'string') left += 'px';
    this.ele.style.left = left;
  },

  getElement : function () {
    return this.ele;
  },

  setContent : function (html) {
    this.content.innerHTML = html;
  },

  setContentElement : function (element) {
      // remove child nodes
      while (this.content.firstChild) {
          this.content.removeChild(this.content.firstChild);
      };

    this.content.appendChild(element);
  },

  setFadeIn : function (fadeIn) {
      this.fadeIn = fadeIn;
  },

  setFadeOut : function (fadeOut) {
      this.fadeOut = fadeOut;
  },

  setFadeSpeed : function (fadeSpeed) {
      this.fadeSpeed = fadeSpeed;
  },

  show : function () {
    this.shown = true;

    if (this.fadeIn) {
        var opp = 0.01;

        changeOpac(this.ele, opp);
    }

    document.body.appendChild(this.ele);
    this.ele.style.position = "absolute";
    if (this.autoCenterX || this.autoCenterY) this.center();

    this.updateContent();

    if (!this.resizeHandlerFunc) {
      this.resizeHandlerFunc = this.resizeHandler.bindEventListener(this);
      DOM.addEventListener(window, "resize", this.resizeHandlerFunc, false);
    }

    if (this.fadeIn)
        this.fade("in");

    this.hideSelects();
  },

  fade : function (mode, callback) {
      var opp;
      var delta;

      var steps = 10.0;

      if (mode == "in") {
          delta = 1 / steps;
          opp = 0.1;
      } else {
          if (this.ele.style.opacity)
          opp = finiteFloat(this.ele.style.opacity);
          else
          opp = 0.99;

          delta = -1 / steps;
      }

      var fadeSpeed = this.fadeSpeed;
      if (!fadeSpeed) fadeSpeed = 1;

      var fadeInterval = steps / fadeSpeed * 5;

      this.fadeMode = mode;

      var self = this;
      var fade = function () {
          opp += delta;

          // did someone start a fade in the other direction? if so,
          // cancel this fade
          if (self.fadeMode && self.fadeMode != mode) {
              if (callback)
                  callback.call(self, []);

              return;
          }

          if (opp <= 0.1) {
              if (callback)
                  callback.call(self, []);

              self.fadeMode = null;

              return;
          } else if (opp >= 1.0) {
              if (callback)
                  callback.call(self, []);

              self.fadeMode = null;

              return;
          } else {
              changeOpac(self.ele, opp);
              window.setTimeout(fade, fadeInterval);
          }
      };

      fade();
  },

  hide : function () {
    if (! this.visible()) return;

    if (this.fadeOut && this.ele) {
        this.fade("out", this._hide.bind(this));
    } else {
        this._hide();
    }
  },

  _hide : function () {
    if (this.hiddenCallback)
      this.hiddenCallback();

    this.shown = false;
    this.removeClickHandlers();

    if (this.ele)
    document.body.removeChild(this.ele);

    if (this.resizeHandlerFunc)
      DOM.removeEventListener(window, "resize", this.resizeHandlerFunc);

    this.showSelects();
  },

  // you probably want this for IE being dumb
  // (IE thinks select elements are cool and puts them in front of every element on the page)
  setAutoHideSelects : function (autohide) {
    this.autoHideSelects = autohide;
    this.updateContent();
  },

  hideSelects : function () {
    if (!this.autoHideSelects || !IPPU.isIE()) return;
    var sels = document.getElementsByTagName("select");
    var ele;
    for (var i = 0; i < sels.length; i++) {
      ele = sels[i];
      if (!ele) continue;

      // if this element is inside the ippu, skip it
      if (DOM.getAncestorsByClassName(ele, "ippu", true).length > 0) continue;

      if (ele.style.visibility != 'hidden') {
        ele.style.visibility = 'hidden';
        this.hiddenSelects.push(ele);
      }
    }
  },

  showSelects : function () {
    if (! this.autoHideSelects) return;
    var ele;
    while (ele = this.hiddenSelects.pop())
      ele.style.visibility = '';
  },

  init: function (html) {
    var ele = document.createElement("div");
    this.ele = ele;
    this.shown = false;
    this.autoCenterX = false;
    this.autoCenterY = false;
    this.titlebar = null;
    this.title = "";
    this.showTitlebar = false;
    this.clickToClose = false;
    this.modal = false;
    this.clickHandlerSetup = false;
    this.docOverlay = false;
    this.visibleOverlay = false;
    this.clickHandlerFunc = false;
    this.resizeHandlerFunc = false;
    this.fixedPosition = false;
    this.autoCenterCallback = null;
    this.cancelledCallback = null;
    this.autoHideSelects = false;
    this.hiddenCallback = null;
    this.fadeOut = false;
    this.fadeIn = false;
    this.hiddenSelects = [];
    this.fadeMode = null;

    ele.style.position = "absolute";
	ele.style.top = 0;
    ele.style.zIndex   = "1000";

    // plz don't remove thx
    DOM.addClassName(ele, "ippu");

    // create DIV to hold user's content
    this.content = document.createElement("div");

    this.content.innerHTML = html;

    this.ele.appendChild(this.content);
  }
});

// class methods
IPPU.center = function (obj) {
  obj.centerX();
  obj.centerY();
};

IPPU.centerX = function (obj) {
  obj.centerX();
};

IPPU.centerY = function (obj) {
  obj.centerY();
};

IPPU.isIE = function () {
    var UA = navigator.userAgent.toLowerCase();
    if (UA.indexOf('msie') != -1) return true;
    return false;
};

IPPU.isSafari = function () {
    var UA = navigator.userAgent.toLowerCase();
    if (UA.indexOf('safari') != -1) return true;
    return false;
};

/* file: js/lj_ippu.js 
----------------------------------------------------------------------------------*/
LJ_IPPU = new Class ( IPPU, {
  init: function(title) {
    if (!title)
      title = "";

    LJ_IPPU.superClass.init.apply(this, []);

    this.uniqId = this.generateUniqId();
    this.cancelThisFunc = this.cancel.bind(this);

    this.setTitle(title);
    this.setTitlebar(true);
    this.setTitlebarClass("lj_ippu_titlebar");

    this.addClass("lj_ippu");
    this.setAutoCenterCallback(IPPU.center);
    this.setDimensions(514, "auto");
    //this.setOverflow("hidden");

    this.setFixedPosition(true);
    this.setClickToClose(true);
    this.setAutoHideSelects(true);
 },

  setTitle: function (title) {
    var titlebarContent = "\
      <div style='float:right; padding-right: 8px'>" +
      "<img src='" + Site.imgprefix + "/CloseButton.gif?v=7618' width='15' height='15' id='" + this.uniqId + "_cancel' /></div>" + title;

    LJ_IPPU.superClass.setTitle.apply(this, [titlebarContent]);
  },

  generateUniqId: function() {
    var theDate = new Date();
    return "lj_ippu_" + theDate.getHours() + theDate.getMinutes() + theDate.getMilliseconds();
  },

  show: function() {
    LJ_IPPU.superClass.show.apply(this);
    var setupCallback = this.setup_lj_ippu.bind(this);
    this.timerSetup = window.setTimeout(setupCallback, 300);
  },

  setup_lj_ippu: function (evt) {
    var cancelCallback = this.cancelThisFunc;
   $(this.uniqId + "_cancel").onclick = function(){
	    cancelCallback();
    };
  },

  hide: function() {
    clearInterval(this.timerSetup);
    LJ_IPPU.superClass.hide.apply(this);
  }
} );

// Class method to show a popup to show a note to the user
// note = message to show
// underele = element to display the note underneath
LJ_IPPU.showNote = function (note, underele, timeout, style) {
    var noteElement = document.createElement("div");
    noteElement.innerHTML = note;

    return LJ_IPPU.showNoteElement(noteElement, underele, timeout, style);
};

LJ_IPPU.showErrorNote = function (note, underele, timeout) {
    return LJ_IPPU.showNote(note, underele, timeout, "ErrorNote");
};

LJ_IPPU.showNoteElement = function (noteEle, underele, timeout, style) {
    var notePopup = new IPPU();
    notePopup.init();

    var inner = document.createElement("div");
    DOM.addClassName(inner, "Inner");
    inner.appendChild(noteEle);
    notePopup.setContentElement(inner);

    notePopup.setTitlebar(false);
    notePopup.setFadeIn(true);
    notePopup.setFadeOut(true);
    notePopup.setFadeSpeed(4);
    notePopup.setDimensions("auto", "auto");
    if (!style) style = "Note";
    notePopup.addClass(style);

    var dim;
    if (underele) {
        // pop up the box right under the element
        dim = DOM.getAbsoluteDimensions(underele);
        if (!dim) return;
    }

    var bounds = DOM.getClientDimensions();
    if (!bounds) return;

    if (!dim) {
        // no element specified to pop up on, show in the middle
        // notePopup.setModal(true);
        // notePopup.setOverlayVisible(true);
        notePopup.setAutoCenter(true, true);
        notePopup.show();
    } else {
        // default is to auto-center, don't want that
        notePopup.setAutoCenter(false, false);
        notePopup.setLocation(dim.absoluteLeft, dim.absoluteBottom + 4);
        notePopup.show();

        var popupBounds = DOM.getAbsoluteDimensions(notePopup.getElement());
        if (popupBounds.absoluteRight > bounds.x) {
            notePopup.setLocation(bounds.x - popupBounds.offsetWidth - 30, dim.absoluteBottom + 4);
        }
    }

    notePopup.setClickToClose(true);
    notePopup.moveForward();

    if (timeout === undefined) {
        timeout = 5000;
    }

    if (timeout) {
        window.setTimeout(function () {
            if (notePopup)
                notePopup.hide();
        }, timeout);
    }

    return notePopup;
};

LJ_IPPU.textPrompt = function (title, prompt, callback, options) {
		options = options || {};

    title += '';
    var notePopup = new LJ_IPPU(title);

    var inner = document.createElement("div");
    DOM.addClassName(inner, "ljippu_textprompt");

    // label
    if (prompt)
        inner.appendChild(_textDiv(prompt));

    // text field
    var field = document.createElement("textarea");
    DOM.addClassName(field, "htmlfield");
    field.cols = 40;
    field.rows = 5;
    inner.appendChild(field);

    // submit btn
    var btncont = document.createElement("div");
    DOM.addClassName(btncont, "submitbtncontainer");
    var btn = document.createElement("input");
    DOM.addClassName(btn, "submitbtn");
    btn.type = "button";
    btn.value = "Insert";
    btncont.appendChild(btn);
    inner.appendChild(btncont);

    notePopup.setContentElement(inner);

    notePopup.setAutoCenter(true, true);
    notePopup.setDimensions(options.width || "60%", "auto");
    notePopup.show();
    field.focus();

    DOM.addEventListener(btn, "click", function (e) {
        notePopup.hide();
        if (callback)
            callback.apply(null, [field.value]);
    });
}

/* file: js/ljwidget.js 
----------------------------------------------------------------------------------*/
LJWidget = new Class(Object, {
    // replace the widget contents with an ajax call to render with params
    updateContent: function (params) {
        if (! params) params = {};
        this._show_frame = params["showFrame"];

        if ( params["method"] ) method = params["method"];
        params["_widget_update"] = 1;

        if (this.doAjaxRequest(params)) {
            // hilight the widget to show that its updating
            this.hilightFrame();
        }
    },

    // returns the widget element
    getWidget: function () {
        return $(this.widgetId);
    },

    // do a simple post to the widget
    doPost: function (params) {
        if (! params) params = {};
        this._show_frame = params["showFrame"];
        var postParams = {};

        var classPrefix = this.widgetClass;
        classPrefix = "Widget[" + classPrefix.replace(/::/g, "_") + "]_";

        for (var k in params) {
            var class_k = k;
            if (! k.match(/^Widget\[/) && k != 'lj_form_auth' && ! k.match(/^_widget/)) {
                class_k = classPrefix + k;
            }

            postParams[class_k] = params[k];
        }

        postParams["_widget_post"] = 1;

        this.doAjaxRequest(postParams);
    },

    doPostAndUpdateContent: function (params) {
        if (! params) params = {};

        params["_widget_update"] = 1;

        this.doPost(params);
    },

    // do an ajax post of the form passed in
    postForm: function (formElement) {
      if (! formElement) return false;

      var params = {};

      for (var i=0; i < formElement.elements.length; i++) {
        var element = formElement.elements[i];
        var name = element.name;
        var value = element.value;

        params[name] = value;
      }

      this.doPost(params);
    },

    ///////////////// PRIVATE METHODS ////////////////////

    init: function (id, widgetClass, authToken) {
        LJWidget.superClass.init.apply(this, arguments);
        this.widgetId = id;
        this.widgetClass = widgetClass;
        this.authToken = authToken;
    },

    hilightFrame: function () {
        if (this._show_frame != 1) return;
        if (this._frame) return;

        var widgetEle = this.getWidget();
        if (! widgetEle) return;

        var widgetParent = widgetEle.parentNode;
        if (! widgetParent) return;

        var enclosure = document.createElement("fieldset");
        enclosure.style.borderColor = "red";
        var title = document.createElement("legend");
        title.innerHTML = "Updating...";
        enclosure.appendChild(title);

        widgetParent.appendChild(enclosure);
        enclosure.appendChild(widgetEle);

        this._frame = enclosure;
    },

    removeHilightFrame: function () {
        if (this._show_frame != 1) return;

        var widgetEle = this.getWidget();
        if (! widgetEle) return;

        if (! this._frame) return;

        var par = this._frame.parentNode;
        if (! par) return;

        par.appendChild(widgetEle);
        par.removeChild(this._frame);

        this._frame = null;
    },

    method: "POST",
    endpoint: "widget",
    requestParams: {},

    doAjaxRequest: function (params) {
        if (! params) params = {};

        if (this._ajax_updating) return false;
        this._ajax_updating = true;

        params["_widget_id"]     = this.widgetId;
        params["_widget_class"]  = this.widgetClass;

        params["auth_token"]  = this.authToken;

        if ($('_widget_authas')) {
            params["authas"] = $('_widget_authas').value;
        }

        var reqOpts = {
            method:  this.method,
            data:    HTTPReq.formEncoded(params),
            url:     LiveJournal.getAjaxUrl(this.endpoint),
            onData:  this.ajaxDone.bind(this),
            onError: this.ajaxError.bind(this)
        };

        for (var k in params) {
            reqOpts[k] = params[k];
        }

        HTTPReq.getJSON(reqOpts);

        return true;
    },

    ajaxDone: function (data) {
        this._ajax_updating = false;
        this.removeHilightFrame();

		if (data["_widget_body"]) {
			if (data["_widget_body"].match(/ajax:.[^"]+/)) {
				this.authToken = data["_widget_body"].match(/ajax:.[^"]+/)[0];
			}
		}

        if (data.auth_token) {
            this.authToken = data.auth_token;
        }

        if (data.errors && data.errors != '') {
            return this.ajaxError(data.errors);
        }

        if (data.error) {
            return this.ajaxError(data.error);
        }

        // call callback if one exists
        if (this.onData) {
             this.onData(data);
        }

        if (data["_widget_body"]) {
            // did an update request, got the new body back
            var widgetEle = this.getWidget();
            if (! widgetEle) {
              // widget is gone, ignore
              return;
            }

            widgetEle.innerHTML = data["_widget_body"];

            if (this.onRefresh) {
                this.onRefresh();
            }
        }
    },

    ajaxError: function (err) {
        this._ajax_updating = false;

        if (this.onError) {
            // use class error handler
            this.onError(err);
        } else {
            // use generic error handler
            LiveJournal.ajaxError(err);
        }
    }
});

LJWidget.widgets = [];

/* file: js/ljwidget_ippu.js 
----------------------------------------------------------------------------------*/
LJWidgetIPPU = new Class(LJWidget, {
    init: function (opts, reqParams) {
        var title          = opts.title;
        var widgetClass    = opts.widgetClass;
        var authToken      = opts.authToken;
        var nearEle        = opts.nearElement;
        var not_view_close = opts.not_view_close;

        if (! reqParams) reqParams = {};
        this.reqParams = reqParams;

        // construct a container ippu for this widget
        var ippu = new LJ_IPPU(title, nearEle);
        this.ippu = ippu;
        var c = document.createElement("div");
        c.id = "LJWidgetIPPU_" + Unique.id();
        ippu.setContentElement(c);

        if (opts.width && opts.height)
          ippu.setDimensions(opts.width, opts.height);

        if (opts.overlay) {
            if (IPPU.isIE()) {
                this.ippu.setModal(true);
                this.ippu.setOverlayVisible(true);
                this.ippu.setClickToClose(false);
            } else {
                this.ippu.setModal(true);
                this.ippu.setOverlayVisible(true);
            }
        }

        if (opts.center) ippu.center();
        ippu.show();
        if (not_view_close) ippu.titlebar.getElementsByTagName('img')[0].style.display = 'none';

        var loadingText = document.createElement("div");
        loadingText.style.fontSize = '1.5em';
        loadingText.style.fontWeight = 'bold';
        loadingText.style.margin = '5px';
        loadingText.style.textAlign = 'center';

        loadingText.innerHTML = "Loading...";

        this.loadingText = loadingText;

        c.appendChild(loadingText);

        // id, widgetClass, authToken
        var widgetArgs = [c.id, widgetClass, authToken]
        LJWidgetIPPU.superClass.init.apply(this, widgetArgs);

        var self = this;
        ippu.setCancelledCallback( function() {
            if( self.cancel ) {
                self.cancel();
            }
        } );

        if (!widgetClass)
            return null;

        this.widgetClass = widgetClass;
        this.authToken   = authToken;
        this.title       = title;
        this.nearEle     = nearEle;

        window.setInterval(this.animateLoading.bind(this), 20);

        this.loaded = false;

        // start request for this widget now
        this.loadContent();
        return this;
    },

    animateCount: 0,

    animateLoading: function (i) {
      var ele = this.loadingText;

      if (this.loaded || ! ele) {
        window.clearInterval(i);
        return;
      }

      this.animateCount += 0.05;
      var intensity = ((Math.sin(this.animateCount) + 1) / 2) * 255;
      var hexColor = Math.round(intensity).toString(16);

      if (hexColor.length == 1) hexColor = "0" + hexColor;
      hexColor += hexColor + hexColor;

      ele.style.color = "#" + hexColor;
      this.ippu.center();
    },

    // override doAjaxRequest to add _widget_ippu = 1
    doAjaxRequest: function (params) {
      if (! params) params = {};
      params['_widget_ippu'] = 1;
     if(document.getElementById("LJ__Setting__InvisibilityGuests_invisibleguests_self")){
       params['Widget[IPPU_SettingProd]_LJ__Setting__InvisibilityGuests_invisibleguests']=
         (document.getElementById("LJ__Setting__InvisibilityGuests_invisibleguests_self").checked==true)?(1):((document.getElementById("LJ__Setting__InvisibilityGuests_invisibleguests_anon").checked==true)?(2):(0))
     }
      LJWidgetIPPU.superClass.doAjaxRequest.apply(this, [params]);
    },

    close: function () {
      this.ippu.hide();
    },

    loadContent: function () {
      var reqOpts = this.reqParams;
      this.updateContent(reqOpts);
    },

    method: "POST",

    // request finished
    onData: function (data) {
      this.loaded = true;
    },

    render: function (params) {

    }
});

/* file: js/contextualhover.js 
----------------------------------------------------------------------------------*/
/**
 * Contextual popup is displayed on mouse hover near
 * every userpic and userhead
 */

/**
 * Widget shows the dialog to edit current user note.
 */
LJWidgetIPPU_AddAlias = new Class(LJWidgetIPPU, {
	init: function (opts, params) {
		opts.widgetClass = "IPPU::AddAlias";
		this.width = opts.width; // Use for resizing later
		this.height = opts.height; // Use for resizing later
		this.alias = opts.alias;
		LJWidgetIPPU_AddAlias.superClass.init.apply(this, arguments);
	},

	changeAlias: function (evt, form) {
		this.doPost({
				alias: form["Widget[IPPU_AddAlias]_alias"].value + "",
				foruser: form["Widget[IPPU_AddAlias]_foruser"].value + ""
		});

		evt.preventDefault();
	},

	onData: function (data) {
		if (!data.res || !data.res.success) {
			return;
		}

		this.close();

		//Changing button. Only on profile page
		var edit_node = jQuery('.profile_addalias');
		if (edit_node.length) {
			if (data.res.alias) {
				edit_node[0].style.display = 'none';
				edit_node[1].style.display = 'block';
				edit_node[1].firstChild.alias = data.res.alias;
			} else {
				edit_node[0].style.display = 'block';
				edit_node[1].style.display = 'none';
			}
		}
		
		var username = data.res.username,
			alias = data.res.alias;
		if(ContextualPopup.cachedResults[username]) {
			ContextualPopup.cachedResults[username].alias_title = alias ? 'Edit Note' : 'Add Note';
			ContextualPopup.cachedResults[username].alias = alias;
		}

		if (ContextualPopup.currentId === username) {
			ContextualPopup.renderPopup(ContextualPopup.currentId);
		}
	},

	onError: function (msg) {
		LJ_IPPU.showErrorNote("Error: " + msg);
	},

	onRefresh: function () {
		var form = jQuery('#addalias_form').get(0),
			input = jQuery(form['Widget[IPPU_AddAlias]_alias']),
			delete_btn = jQuery(form['Widget[IPPU_AddAlias]_aliasdelete']),
			widget = this;
		input.focus();

		if (delete_btn.length) {
			delete_btn.click(function(){
				input.val('');
			});
			input.input(function() {
				// save button disabled
				form['Widget[IPPU_AddAlias]_aliaschange'].disabled = !this.value;
			});
		}

		jQuery(form).submit(function(e) { widget.changeAlias(e, form); });
	},

	cancel: function (e) {
		this.close();
	}
});


//this object contains only authToken
Aliases = {};
function addAlias(target, ptitle, ljusername, oldalias, callback) {
	if (! ptitle) { return true; }
	
	new LJWidgetIPPU_AddAlias({
		title: ptitle,
		width: 440,
		height: 180,
		authToken: Aliases.authToken,
		callback: callback
		}, {
			alias: target.alias||oldalias,
			foruser: ljusername
		});

	return false;
}


(function($) {

	"use strict";

	/**
	 * Object contains methods to build and display user popup.
	 */
	var popup = {
		popupDelay: 500,
		popupTimer: null,
		adriverImages : {
			anonymous: 'http://ad.adriver.ru/cgi-bin/rle.cgi?sid=1&ad=186396&bt=21&pid=482107&bid=893162&bn=893162&rnd={random}',
			guest: 'http://ad.adriver.ru/cgi-bin/rle.cgi?sid=1&ad=186396&bt=21&pid=482107&bid=893165&bn=893165&rnd={random}',
			self: 'http://ad.adriver.ru/cgi-bin/rle.cgi?sid=1&ad=186396&bt=21&pid=482107&bid=893167&bn=893167&rnd={random}'
		},

		classNames: {
			popup: 'b-popup-contextual'
		},
		selectors: {
			wrapper: '.b-contextualhover',
			bubble: '.b-popup',
			popup: '.contextualPopup'
		},
		templates: {
			wrapper: '<div class="b-contextualhover"></div>',
			content: 'templates-Widgets-contextualhover',
			loading: 'Loading...'
		},

		init: function() {
			var wrapper = jQuery(this.templates.wrapper),
				self = this;

			this._visible = false;

			this.element = jQuery(wrapper).bubble({
				alwaysShowUnderTarget: true,
				closeControl: false,
				show: function() {
					ContextualPopup._visible = true;
				},
				hide: function() {
					ContextualPopup.hideHourglass();
					ContextualPopup._visible = false;
				},
				classNames: {
					containerAddClass: this.classNames.popup
				}
			});

			this.bindShowHideEvents(this.element.closest(this.selectors.bubble));
		},

		bindShowHideEvents: function(el) {
			var self = this;
			el = jQuery(el);

			el.bind('mouseenter', function(ev) { self.show(); });
			el.bind('mouseleave', function(ev) { self.hide(); });
		},

		show: function(force) {
			this.setVisibile(true, force);
		},

		hide: function(force) {
			this.setVisibile(false, force);
		},

		setVisibile: function(isVisible, force) {
			var action = isVisible ? "show" : "hide",
				self = this;

			force = force || false;
			clearTimeout(this.popupTimer);

			if (force) {
				this.element.bubble(action);
			} else {
				this.popupTimer = setTimeout(function() {
					self.element.bubble(action);
				}, this.popupDelay);
			}
		},

		/**
		 * Constructs object, passes it to the template,
		 * inserts it in the bubble and binds events.
		 *
		 * @param {Object} data Object returned from the endpoint.
		 * @param {String} ctxPopupId The id of the user.
		 */
		render: function(data, ctxPopupId) {
			if (!data) {
				this.element.empty().append(this.templates.loading);
				return;
			} else if (!data.username || !data.success || data.noshow) {
				this.hide(true);
				return;
			}

			var buildObject = {
				headLinks: [],
				linkGroups: []
			};

			if (data.url_userpic && data.url_userpic !== ctxPopupId) {
				buildObject.userpic = {
					allpics: data.url_allpics,
					pic: data.url_userpic
				};
			}

			// relation
			var label, username = '<strong>' + data.display_username + ' </strong>';
			if (data.is_comm) {
				if (data.is_member) {
					label = data.ml_you_member.replace('[[username]]', username);
				} else if (data.is_friend) {
					label = data.ml_you_watching.replace('[[username]]', username);
				} else {
					label = username;
				}
			} else if (data.is_syndicated) {
				if (data.is_friend) {
					label = data.ml_you_subscribed.replace('[[username]]', username);
				} else {
					label = username;
				}
			} else {
				if (data.is_requester) {
					label = data.ml_this_is_you;
				} else {
					label = username;
					
					if (data.is_friend_of) {
						if (data.is_friend) {
							label += data.ml_mutual_friend;
						} else {
							label += data.ml_lists_as_friend;
						}
					} else if (data.is_friend) {
						label += data.ml_your_friend;
					}
				}
			}

			buildObject.title = {
				title: label
			};

			// aliases
			if (!data.is_requester && data.is_logged_in) {
				if (data.alias_enable) {
					if (data.alias) {
						buildObject.headLinks.push('<i>' + data.alias.encodeHTML() + '</i>');
					}
					
					buildObject.headLinks.push({
						url: Site.siteroot + '/manage/notes.bml',
						click: function(e)
						{
							e.preventDefault();
							addAlias(this, data.alias_title, data.username, data.alias || '');
						},
						text: data.alias_title
					});
				} else {
					buildObject.headLinks.push(
						'<span class="alias-unavailable">'+
							'<a href="'+Site.siteroot+'/manage/account">'+
								'<img src="'+Site.statprefix+'/horizon/upgrade-paid-icon.gif?v=2621" width="13" height="16" alt=""/>'+
							'</a> '+
							'<a href="'+Site.siteroot+'/support/faq/295.html">'+data.alias_title+'</a>'+
						'</span>');
				}
			}

			// add/remove friend link
			if (data.is_logged_in && !data.is_requester) {
				buildObject.headLinks.push({
					selector: 'a[href="{url}"]:first',
					url: data.url_addfriend,
					click: function(e)
					{
						e.preventDefault();
						e.stopPropagation();
						ContextualPopup.changeRelation(data, ctxPopupId, data.is_friend ? 'removeFriend' : 'addFriend', e);
					},
					text: (function()
					{
						if (data.is_comm) {
							return data.is_friend ? data.ml_stop_community : data.ml_watch_community;
						} else if (data.is_syndicated) {
							return data.is_friend ? data.ml_unsubscribe_feed : data.ml_subscribe_feed;
						} else {
							return data.is_friend ? data.ml_remove_friend : data.ml_add_friend;
						}
					}())
				});

				if (data.is_friend && !data.is_identity) {
					buildObject.headLinks.push({
						url: data.url_addfriend,
						text: data.ml_edit_friend_tags
					});
				}
			}

			var linkGroup = [];
			
			// member of community
			if (data.is_logged_in && data.is_comm) {
				linkGroup.push({
					selector: 'a[href="{url}"]',
					url: data.is_member ? data.url_leavecomm : data.url_joincomm,
					text: data.is_member ? data.ml_leave : data.ml_join_community,
					click: function(e)
					{
						e.preventDefault();
						ContextualPopup.changeRelation(data, ctxPopupId, data.is_member ? 'leave' : 'join', e);
					}
				});
			}

			//filter community
			if( ( !data.is_comm && Site.current_journal && ( "is_comm" in Site.current_journal ) &&
						Site.current_journal.is_comm === "1" ) || data.posted_in ) {
				linkGroup.push({
					url: ( ( data.posted_in ) ? data.posted_in : Site.current_journal.url_journal ) + '/?poster=' + data.username,
					text: ( Site.remoteUser === data.username && !data.posted_in ) ?
							( data.ml_filter_by_poster_me || 'Filter community by me' ) :
							( data.ml_filter_by_poster || 'Filter community by poster' )
				});
			}

			buildObject.linkGroups.push(linkGroup);
			linkGroup = [];

			// send message
			if (data.is_logged_in && data.is_person && ! data.is_requester && data.url_message) {
				linkGroup.push({
					url: data.url_message,
					text: data.ml_send_message
				});
			}

			// vgift
			if ((data.is_person || data.is_comm) && !data.is_requester && data.can_receive_vgifts) {
				linkGroup.push({
					url: Site.siteroot + '/shop/vgift.bml?to=' + data.username,
					text: data.ml_send_gift
				});
			}

			// wishlist
			// commented according to task LJSUP-11396
			//if ((data.is_person || data.is_comm) && !data.is_requester && data.wishlist_url) {
			//	linkGroup.push({
			//		url: data.wishlist_url,
			//		text: data.ml_view_wishlist
			//	});
			//}

			// buy the same userhead
			if (data.is_logged_in && data.is_person && ! data.is_requester && data.is_custom_userhead) {
				linkGroup.push((data.is_app_userhead) ?
						{ url: data.url_userhead_install, text: data.ml_userhead_install } :
						{ url: data.url_buy_userhead, text: data.ml_buy_same_userhead }
				);
			}

			// identity
			if (data.is_identity && data.is_requester) {
				linkGroup.push({
					url: Site.siteroot + '/identity/convert.bml',
					text: data.ml_upgrade_account
				});
			}

			// add site-specific content here
			var extraContent = LiveJournal.run_hook('ctxpopup_extrainfo', data);
			if (extraContent) {
				linkGroup.push(extraContent);
			}

			buildObject.linkGroups.push(linkGroup);

			if (data.is_logged_in && !data.is_requester && !data.is_comm && !data.is_syndicated) {
				buildObject.showBanOptions = true;
				buildObject.banUsersLink = {
					url: Site.siteroot + '/manage/banusers.bml',
					text: data.ml_ban
				};

				// ban/unban
				buildObject.banCheckboxes = [];
				buildObject.banCheckboxes.push({
					selector: '.ban_user',
					className: 'ban_user',
					label: data.ml_ban_in_my,
					checked: data.is_banned,
					change: function(e)
					{
						e.preventDefault();
						ContextualPopup.changeRelation(data, ctxPopupId, data.is_banned ? 'setUnban' : 'setBan', e);
					}
				});

				// report a bot
				if (!Site.remote_is_suspended) {
					buildObject.reportBot = {
						url: Site.siteroot + '/abuse/bots.bml?user=' + data.username,
						text: data.ml_report
					};
				}

				// ban user from all maintained communities
				if (!data.is_requester && !data.is_comm && !data.is_syndicated && data.have_communities) {
					buildObject.banCheckboxes.push({
						selector: '.ban_everywhere',
						className: 'ban_everywhere',
						label: data.ban_everywhere_title,
						checked: data.is_banned_everywhere,
						change: function(e)
						{
							e.preventDefault();
							var action = data.is_banned_everywhere ? 'unbanEverywhere' : 'banEverywhere';
							ContextualPopup.changeRelation(data, ctxPopupId, action, e);
						}
					});
				}
			}

			var userType = 'guest';
			if (!data.is_logged_in) { //  anonymous
				userType = 'anonymous';
			} else if (data.is_requester) { // self
				userType = 'self';
			}

			new Image().src = this.adriverImages[userType].supplant({ random: Math.random()});


			buildObject.socialCap = {
				first: !!data.first
			};

			buildObject.partner = !!data.partner;

			if (data.value) { buildObject.socialCap.value = data.value; }

			this.element
				.empty()
				.append(LJ.UI.template(this.templates.content, buildObject));

			if (this.element.is(':visible')) {
				//show method forces bubble to reposition with respect to the new content
				this.element.bubble('updatePosition');
			}

			this.setPopupEvents(buildObject);
		},

		/**
		 * Go through all build objects and find all callbacks that should be bound
		 * to the node events.
		 *
		 * @param {Object} buildObject Template object.
		 */
		setPopupEvents: function(buildObject) {
			var element = this.element;
			element.undelegate();

			function walkObject(obj) {
				$.each(obj, function(key, value) {
					var selector;

					if (value.click) {
						//default handler is by url
						selector = value.selector || '[href="' + value.url + '"]';
						selector = selector.supplant(value);
						element.delegate(selector, 'click', value.click);
					}

					if (value.change) {
						//for checkboxes selector should present anyway
						selector = value.selector;
						selector = selector.supplant(value);
						element.delegate(selector, 'change', value.change);
					}

					//maybe this object has children with events to be set
					if(typeof value === "object") {
						walkObject(value);
					}
				});
			}

			walkObject(buildObject);
		}
	};

	window.ContextualPopup = {
		cachedResults  : {},
		currentRequests: {},
		currentId      : null,
		currentElement : null,
		hourglass      : null,

		setup: function() {
			// don't do anything if no remote
			if (!Site.ctx_popup) { return; }

			popup.init();
			var body = jQuery(document.body);

			body
				.mouseover(ContextualPopup.mouseOver)
				.ljAddContextualPopup();

			if (LJ.Support.touch) {
				body.on('click', ContextualPopup.touchStart);
			}
		},

		/**
		 * Search child nodes and bind hover events on them if needed.
		 */
		searchAndAdd: function(node) {
			if (!Site.ctx_popup) { return; }

			// attach to all ljuser head icons
			var rex_userid = /\?userid=(\d+)/,
				rex_userpic = /(userpic\..+\/\d+\/\d+)|(\/userpic\/\d+\/\d+)/,
				class_nopopup = 'noctxpopup',
				ljusers = jQuery('span.ljuser:not(.' + class_nopopup + ')>a>img', node),
				i = -1, userid, ljuser, parent;

			// use while for speed
			while (ljusers[++i]) {
				ljuser = ljusers[i];
				parent = ljuser.parentNode;
				userid = parent.href.match(rex_userid);

				if (parent.href && userid) {
					ljuser.userid = userid[1];
				} else if (parent.parentNode.getAttribute('lj:user')) {
					ljuser.username = parent.parentNode.getAttribute('lj:user');
				} else {
					continue;
				}

				ljuser.posted_in = parent.parentNode.getAttribute('data-journal');
				ljuser.className += ' ContextualPopup';
			}
			
			ljusers = node.getElementsByTagName('img');
			i = -1;
			while (ljusers[++i]) {
				ljuser = ljusers[i];
				if (ljuser.src.match(rex_userpic) && ljuser.className.indexOf(class_nopopup) < 0) {
					ljuser.up_url = ljuser.src;
					if (ljuser.parentNode.getAttribute('data-journal')) {
						ljuser.posted_in = ljuser.parentNode.getAttribute('data-journal');
					}
					ljuser.className += ' ContextualPopup';
				}
			}
		},

		activate: function(e) {
			var target = e.target,
				ctxPopupId = target.username || target.userid || target.up_url,
				t = ContextualPopup;

			if (target.tagName === 'IMG' && ctxPopupId) {
				// if we don't have cached data background request it
				if (!t.cachedResults[ctxPopupId]) {
					t.getInfo(target, ctxPopupId);
				}

				// doesn't display alt as tooltip
				if (jQuery.browser.msie && target.title !== undefined) {
					target.title = '';
				}

				// show other popup
				if (t.currentElement !== target) {
					t.showPopup(ctxPopupId, target);
				} else {
					popup.show();
				}

				return true;
			}

			return false;
		},

		mouseOver: function(e) {
			ContextualPopup.activate(e);
		},

		touchStart: function(e) {
			var current = ContextualPopup.currentElement;

			//if popup is activated then currentElement property is rewriten somewhere inside the activate
			//function and this condition works;
			if (ContextualPopup.activate(e) && (!ContextualPopup._visible || current !== ContextualPopup.currentElement)) {
				e.preventDefault();
				e.stopPropagation();
			}
		},

		showPopup: function(ctxPopupId, ele) {
			var showNow = popup.element.is(':visible');
			jQuery(this.currentElement)
				.unbind('mouseenter mouseleave');

			this.currentId = ctxPopupId;
			var data = this.cachedResults[ctxPopupId];

			if (data && data.noshow) { return; }
			if (this.currentElement && this.currentElement !== ele) {
				popup.hide(true);
			}

			if (data && data.error) {
				popup.hide(true);
				ContextualPopup.showNote(data.error, ele);
				return;
			}

			popup.render(data, ctxPopupId);
			popup.element.bubble('option', 'target', jQuery(ele));
			popup.bindShowHideEvents(ele);
			popup.show(showNow);
			this.currentElement = ele;
		},

		renderPopup: function(ctxPopupId) {
			popup.render(this.cachedResults[ctxPopupId], ctxPopupId);
		},

		// ajax request to change relation
		changeRelation: function (info, ctxPopupId, action, e) {
			var changedRelation = function(data) {
				if (data.error) {
					return ContextualPopup.showNote(data.error);
				}
				
				if (ContextualPopup.cachedResults[ctxPopupId]) {
					jQuery.extend(ContextualPopup.cachedResults[ctxPopupId], data);
				}
				
				// if the popup is up, reload it
				ContextualPopup.renderPopup(ctxPopupId);
			};
			
			var xhr = jQuery.post(LiveJournal.getAjaxUrl('changerelation'),
						{
							target: info.username,
							action: action,
							auth_token: info[action + '_authtoken']
						},
						function(data)
						{
							ContextualPopup.hourglass = null;
							changedRelation(data);
						},
						'json'
					);
			
			ContextualPopup.hideHourglass();
			ContextualPopup.hourglass = jQuery(e).hourglass(xhr)[0];
			//entering mouse on the hourglass should no close popup
			jQuery(ContextualPopup.hourglass.ele).bind('mouseenter', function(ev) {
				popup.element.trigger('mouseenter');
			});
			// so mousing over hourglass doesn't make ctxpopup think mouse is outside
			ContextualPopup.hourglass.add_class_name('lj_hourglass');
			
			return false;
		},

		// create a little popup to notify the user of something
		showNote: function (note, ele) {
			ele = ele || popup.element[0];
			LJ_IPPU.showNote(note, ele);
		},

		cleanCache: function(keys) {
			var self = this;

			keys = keys || [];
			if (typeof keys === 'string') {
				keys = [ keys ];
			}

			keys.forEach(function(key) {
				if (self.cachedResults[key]) {
					delete self.cachedResults[key];
				}
			});
		},

		// do ajax request of user info
		getInfo: function(target, popup_id) {
			var t = this;
			if (t.currentRequests[popup_id]) {
				return;
			}
			t.currentRequests[popup_id] = 1;

			var reqParams = {
				user: target.username || ''
			};

			jQuery.ajax({
				url: LiveJournal.getAjaxUrl('ctxpopup'),
				data: Object.extend( reqParams, {
					userid: target.userid || 0,
					userpic_url: target.up_url || '',
					mode: 'getinfo'
				}),
				dataType: 'json',
				success: function(data)
				{
					if (data.error) {
						data.username = reqParams.user;
						t.cachedResults[data.username] = data;
						popup.hide(true);
						t.showNote(data.error, target);
						return;
					}

					if( target.posted_in ) {
						data.posted_in = target.posted_in;
					}
					
					t.cachedResults[String(data.userid)] =
					t.cachedResults[data.username] =
					t.cachedResults[data.url_userpic] = data;
					
					// non default userpic
					if (target.up_url) {
						t.cachedResults[target.up_url] = data;
					}
					
					t.currentRequests[popup_id] = null;
					
					if (t.currentId === popup_id) {
						t.renderPopup(popup_id);
					}
				},
				error: function()
				{
					t.currentRequests[popup_id] = null;
				}
			});
		},

		hideHourglass: function () {
			if (this.hourglass) {
				this.hourglass.hide();
				this.hourglass = null;
			}
		}
	};

}(jQuery));


// when page loads, set up contextual popups
jQuery(ContextualPopup.setup);
