
/* Comment Generated by Combres - Resource '~/js/jquery.carousel.js' (Mode: Static) */
/**
* jCarouselLite - jQuery plugin to navigate images/any content in a carousel style widget.
* @requires jQuery v1.2 or above
*
* http://gmarwaha.com/jquery/jcarousellite/
*
* Copyright (c) 2007 Ganeshji Marwaha (gmarwaha.com)
* Dual licensed under the MIT and GPL licenses:
* http://www.opensource.org/licenses/mit-license.php
* http://www.gnu.org/licenses/gpl.html
*
* Version: 1.0.1
* Note: Requires jquery 1.2 or above from version 1.0.1
*/

/**
* Creates a carousel-style navigation widget for images/any-content from a simple HTML markup.
*
* The HTML markup that is used to build the carousel can be as simple as...
*
*  <div class="carousel">
*      <ul>
*          <li><img src="image/1.jpg" alt="1"></li>
*          <li><img src="image/2.jpg" alt="2"></li>
*          <li><img src="image/3.jpg" alt="3"></li>
*      </ul>
*  </div>
*
* As you can see, this snippet is nothing but a simple div containing an unordered list of images.
* You don't need any special "class" attribute, or a special "css" file for this plugin.
* I am using a class attribute just for the sake of explanation here.
*
* To navigate the elements of the carousel, you need some kind of navigation buttons.
* For example, you will need a "previous" button to go backward, and a "next" button to go forward.
* This need not be part of the carousel "div" itself. It can be any element in your page.
* Lets assume that the following elements in your document can be used as next, and prev buttons...
*
* <button class="prev">&lt;&lt;</button>
* <button class="next">&gt;&gt;</button>
*
* Now, all you need to do is call the carousel component on the div element that represents it, and pass in the
* navigation buttons as options.
*
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev"
* });
*
* That's it, you would have now converted your raw div, into a magnificient carousel.
*
* There are quite a few other options that you can use to customize it though.
* Each will be explained with an example below.
*
* @param an options object - You can specify all the options shown below as an options object param.
*
* @option btnPrev, btnNext : string - no defaults
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev"
* });
* @desc Creates a basic carousel. Clicking "btnPrev" navigates backwards and "btnNext" navigates forward.
*
* @option btnGo - array - no defaults
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      btnGo: [".0", ".1", ".2"]
* });
* @desc If you don't want next and previous buttons for navigation, instead you prefer custom navigation based on
* the item number within the carousel, you can use this option. Just supply an array of selectors for each element
* in the carousel. The index of the array represents the index of the element. What i mean is, if the
* first element in the array is ".0", it means that when the element represented by ".0" is clicked, the carousel
* will slide to the first element and so on and so forth. This feature is very powerful. For example, i made a tabbed
* interface out of it by making my navigation elements styled like tabs in css. As the carousel is capable of holding
* any content, not just images, you can have a very simple tabbed navigation in minutes without using any other plugin.
* The best part is that, the tab will "slide" based on the provided effect. :-)
*
* @option mouseWheel : boolean - default is false
* @example
* $(".carousel").jCarouselLite({
*      mouseWheel: true
* });
* @desc The carousel can also be navigated using the mouse wheel interface of a scroll mouse instead of using buttons.
* To get this feature working, you have to do 2 things. First, you have to include the mouse-wheel plugin from brandon.
* Second, you will have to set the option "mouseWheel" to true. That's it, now you will be able to navigate your carousel
* using the mouse wheel. Using buttons and mouseWheel or not mutually exclusive. You can still have buttons for navigation
* as well. They complement each other. To use both together, just supply the options required for both as shown below.
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      mouseWheel: true
* });
*
* @option auto : number - default is null, meaning autoscroll is disabled by default
* @example
* $(".carousel").jCarouselLite({
*      auto: 800,
*      speed: 500
* });
* @desc You can make your carousel auto-navigate itself by specfying a millisecond value in this option.
* The value you specify is the amount of time between 2 slides. The default is null, and that disables auto scrolling.
* Specify this value and magically your carousel will start auto scrolling.
*
* @option speed : number - 200 is default
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      speed: 800
* });
* @desc Specifying a speed will slow-down or speed-up the sliding speed of your carousel. Try it out with
* different speeds like 800, 600, 1500 etc. Providing 0, will remove the slide effect.
*
* @option easing : string - no easing effects by default.
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      easing: "bounceout"
* });
* @desc You can specify any easing effect. Note: You need easing plugin for that. Once specified,
* the carousel will slide based on the provided easing effect.
*
* @option vertical : boolean - default is false
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      vertical: true
* });
* @desc Determines the direction of the carousel. true, means the carousel will display vertically. The next and
* prev buttons will slide the items vertically as well. The default is false, which means that the carousel will
* display horizontally. The next and prev items will slide the items from left-right in this case.
*
* @option circular : boolean - default is true
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      circular: false
* });
* @desc Setting it to true enables circular navigation. This means, if you click "next" after you reach the last
* element, you will automatically slide to the first element and vice versa. If you set circular to false, then
* if you click on the "next" button after you reach the last element, you will stay in the last element itself
* and similarly for "previous" button and first element.
*
* @option visible : number - default is 3
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      visible: 4
* });
* @desc This specifies the number of items visible at all times within the carousel. The default is 3.
* You are even free to experiment with real numbers. Eg: "3.5" will have 3 items fully visible and the
* last item half visible. This gives you the effect of showing the user that there are more images to the right.
*
* @option start : number - default is 0
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      start: 2
* });
* @desc You can specify from which item the carousel should start. Remember, the first item in the carousel
* has a start of 0, and so on.
*
* @option scrool : number - default is 1
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      scroll: 2
* });
* @desc The number of items that should scroll/slide when you click the next/prev navigation buttons. By
* default, only one item is scrolled, but you may set it to any number. Eg: setting it to "2" will scroll
* 2 items when you click the next or previous buttons.
*
* @option beforeStart, afterEnd : function - callbacks
* @example
* $(".carousel").jCarouselLite({
*      btnNext: ".next",
*      btnPrev: ".prev",
*      beforeStart: function(a) {
*          alert("Before animation starts:" + a);
*      },
*      afterEnd: function(a) {
*          alert("After animation ends:" + a);
*      }
* });
* @desc If you wanted to do some logic in your page before the slide starts and after the slide ends, you can
* register these 2 callbacks. The functions will be passed an argument that represents an array of elements that
* are visible at the time of callback.
*
*
* @cat Plugins/Image Gallery
* @author Ganeshji Marwaha/ganeshread@gmail.com
*/

(function ($) {                                          // Compliant with jquery.noConflict()
    $.fn.jCarouselLite = function (o) {
        o = $.extend({
            btnPrev: null,
            btnNext: null,
            btnGo: null,
            btnGoScroll: null,                          // Added btnGoScroll to sync btnGo with scroll values -shelby
            mouseWheel: false,
            auto: null,
            resetTimer: false,

            speed: 200,
            easing: null,

            vertical: false,
            circular: false,
            visible: 4,
            start: 0,
            scroll: 1,

            beforeStart: null,
            afterEnd: null,

            split: false // added to support side-scrolling multiple carousels 1/11/2011
        }, o || {});

        return this.each(function () {                           // Returns the element collection. Chainable.

            var running = false, animCss = o.vertical ? "top" : "left", sizeCss = o.vertical ? "height" : "width";
            var div = $(this), ul = $("ul", div), tLi = $("li", ul), tl = tLi.size(), v = o.visible;
            var autoHandle;

            if (o.circular) {
                ul.prepend(tLi.slice(tl - v - 1 + 1).clone())
              .append(tLi.slice(0, v).clone());
                o.start += v;
            }

            var li = (o.split) ? $("> li", ul.eq(0)) : $("> li", ul), itemLength = li.size(), curr = o.start;

            if (o.split) { // if split, use first carousel as anchor and show direct container
                if ($.browser.msie && $.browser.version.substr(0, 1) < 7) div.css({ position: "relative" });
                ul.parent().css({ visibility: "visible", position: "relative", "z-index": "2", left: "0px", overflow: "hidden" });
            }
            else {
                div.css({ visibility: "visible", position: "relative", "z-index": "2", left: "0px", overflow: "hidden" });
            }

            li.css({ overflow: "hidden", "float": o.vertical ? "none" : "left" });
            ul.css({ margin: "0", padding: "0", position: "relative", "list-style-type": "none", "z-index": "1" });

            var liSize = o.vertical ? height(li) : width(li);   // Full li size(incl margin)-Used for animation
            var ulSize = liSize * itemLength;                   // size of full ul(total length, not just for the visible items)
            var divSize = liSize * v;                           // size of entire div(total length for just the visible items)

            function max_height(el) {
                // Return height of the largest item. Required to fix bug where length of carousel is determined by first element.  11/28 HM
                var _height = 0;

                $.each(el, function () {
                    var _compHeight = $(this).height();
                    var marginTopStr = $(this).css('marginTop');
                    var marginTop = parseInt(marginTopStr.substr(0, marginTopStr.length - 2));
                    var marginBottomStr = $(this).css('marginBottom');
                    var marginBottom = parseInt(marginBottomStr.substr(0, marginBottomStr.length - 2));
                    _compHeight += (marginTop + marginBottom);
                    if (_compHeight > _height) {
                        _height = _compHeight;
                    }
                });

                return parseInt(_height);
            };

            //li.css({ width: li.width(), height: li.height() });
            li.css({ width: li.width(), height: max_height(li) });
            ul.css(sizeCss, ulSize + "px").css(animCss, -(curr * liSize));

            (o.split) ? ul.parent().css(sizeCss, divSize + "px") : div.css(sizeCss, divSize + "px");                     // Width of the DIV. length of visible images

            if (o.btnPrev)
                $(o.btnPrev).click(function () {
                    return go(curr - o.scroll);
                });

            if (o.btnNext)
                $(o.btnNext).click(function () {
                    return go(curr + o.scroll);
                });

            if (o.btnGo)
                $.each(o.btnGo, function (i, val) {
                    $(val).click(function () {
                        if (o.resetTimer && o.auto) {
                            clearInterval(autoHandle);
                            autoHandle = setInterval(function () {
                                go(curr + o.scroll);
                            }, o.auto + o.speed);
                        }
                        // added to check if btnGo should scroll more than 1 item.
                        if (o.btnGoScroll != null) {
                            return go(i * o.btnGoScroll);
                        } else {
                            return go(o.circular ? o.visible + i : i);
                        }

                    });
                });

            if (o.mouseWheel && div.mousewheel)
                div.mousewheel(function (e, d) {
                    return d > 0 ? go(curr - o.scroll) : go(curr + o.scroll);
                });

            if (o.auto) {
                autoHandle = setInterval(function () {
                    go(curr + o.scroll);
                }, o.auto + o.speed);
            }

            function vis() {
                return li.slice(curr).slice(0, v);
            };

            function go(to) {
                if (!running) {
                    if (o.beforeStart)
                        o.beforeStart.call(this, vis());

                    if (o.circular) {            // If circular we are in first or last, then goto the other end
                        if (to <= o.start - v - 1) {           // If first, then goto last
                            ul.css(animCss, -((itemLength - (v * 2)) * liSize) + "px");
                            // If "scroll" > 1, then the "to" might not be equal to the condition; it can be lesser depending on the number of elements.
                            curr = to == o.start - v - 1 ? itemLength - (v * 2) - 1 : itemLength - (v * 2) - o.scroll;
                        } else if (to >= itemLength - v + 1) { // If last, then goto first
                            ul.css(animCss, -((v) * liSize) + "px");
                            // If "scroll" > 1, then the "to" might not be equal to the condition; it can be greater depending on the number of elements.
                            curr = to == itemLength - v + 1 ? v + 1 : v + o.scroll;
                        } else curr = to;
                    } else {                    // If non-circular and to points to first or last, we just return.
                        if (to < 0 || to > itemLength - v) return;
                        else curr = to;
                    }                           // If neither overrides it, the curr will still be "to" and we can proceed.

                    running = true;

                    ul.animate(
                    animCss == "left" ? { left: -(curr * liSize)} : { top: -(curr * liSize) }, o.speed, o.easing,
                    function () {
                        if (o.afterEnd)
                            o.afterEnd.call(this, vis());
                        running = false;
                    }
                );
                    // Disable buttons when the carousel reaches the last/first, and enable when not
                    if (!o.circular) {
                        $(o.btnPrev + "," + o.btnNext).removeClass("btn-disabled");
                        $((curr - o.scroll < 0 && o.btnPrev)
                        ||
                       (curr + o.scroll > itemLength - v && o.btnNext)
                        ||
                       []
                     ).addClass("btn-disabled");
                    }

                }
                return false;
            };
        });
    };

    function css(el, prop) {
        return parseInt($.css(el[0], prop)) || 0;
    };
    function width(el) {
        return el[0].offsetWidth + css(el, 'marginLeft') + css(el, 'marginRight');
    };
    function height(el) {
        return el[0].offsetHeight + css(el, 'marginTop') + css(el, 'marginBottom');
    };

})(jQuery);;


/* Comment Generated by Combres - Resource '~/views/shared/controls/socialtoolbar/social-toolbar.js' (Mode: Static) */
/* Depends on KBB.cookies */
KBB.modules.socialToolbar = (function () {
    var _this,
        _help = KBB.helpers,
        tooltipSettings = {
            fixed: true,
            toolTipClass: 'aToolTip',
            xOffset: -115,
            yOffset: 0
        },
        jCarouselSettings = {
            btnNext: '#Toolbar-carousel .btn-cir-right',
            btnPrev: '#Toolbar-carousel .btn-cir-left',
            visible: 4,
            scroll: 1,
            start: 0,
            circular: false,
            vertical: false
        },
        selectors = {
            closePopups: '#Social-popup .close'
        },
        elements = {
            toggleToolbar: $('#Social-trigger, #Hide-toolbar-trigger'),
            errorContainer: $('#Toolbar-error'),
            saveVehicle: $('#Save-car-btn'),
            savedCount: $('#Saved-vehicle-count'),
            recentCount: $('#Recently-viewed-count')
        },
        errorMessages = {
            saveError: 'There was an error saving, please try again later.',
            compareTooMany: 'You may only compare up to 4 vehicles.',
            compareTooFew: 'Please select at least two vehicles to compare.'
        },
        eachPanel = function (cb) {
            var panels = KBB.modules.socialToolbar.panels;
            for (var p in panels) {
                if (cb(panels[p], p) === false) {
                    break;
                }
            }
        };

    var _togglePanel = function (p, e) {
        eachPanel(function (panel, name) {
            var isVisible = panel.element.is(':visible');
            if (!isVisible && panel === p) {
                if (panel.onShow(e) !== false) {
                    if (_this.isHidden) {
                        _this.toggleSocialToolbar();
                    }
                    panel.element.slideUp().show();
                    KBB.events.fire('KbbToolbar.{0}.OnShow'.format(name), e);
                    KBB.events.fire('KbbToolbar.OnShowPanel', e, name);
                }
            } else if (isVisible && panel !== p) {
                panel.element.stop(true, true).slideDown().hide();
                KBB.events.fire('KbbToolbar.{0}.OnHide'.format(name), e);
                KBB.events.fire('KbbToolbar.OnHidePanel', e, name);
            }
        });
    };

    var _closePanel = function (e) {
        var element = $(this).parent(),
            name = element.data('panel');

        KBB.events.fire('KbbToolbar.{0}.OnHide'.format(name), e);
        KBB.events.fire('KbbToolbar.OnHidePanel', e, name);
        element.slideToggle('fast');
    }

    return {
        panels: {},
        element: $('#Social-toolbar'),
        isHidden: KBB.cookies.get('ToolbarHidden') === 'true',
        jCarouselSettings: jCarouselSettings,
        init: function () {
            _this = this;

            $(selectors.closePopups).click(_closePanel);
            elements.saveVehicle.click(this.saveVehicleClicked);
            elements.toggleToolbar.click(this.toggleSocialToolbar);

            KBB.modules.myKbb.onSaveVehicleComplete(this.saveVehicleComplete);
            KBB.modules.myKbb.onGetPersonalizationDataComplete(this.personalizationDataReceived);
            KBB.modules.myKbb.onAuthenticationChange(this.authenticationChanged);


            KBB.events.on('MyKbb.OnRecentlyViewedAdded', function (data) { elements.recentCount.html('({0})'.format(data.count)); });

            eachPanel(this.initPanel);

            $('span.tip', $('#Social-toolbar, #Social-trigger')).aToolTip(tooltipSettings);
        },
        initPanel: function (p, name) {
            p.init();
            p.element.data('panel', name);
            p.Show = function (e) { _togglePanel(p, e); };
            p.trigger.click(p.Show);
        },
        hidePanels: function (e) {
            _togglePanel(null, e);
        },
        showError: function (message) {
            _this.hideError();
            elements.errorContainer.html(message).show().delay(5000).fadeOut(2000);
        },
        hideError: function () {
            elements.errorContainer.hide();
        },
        toggleSocialToolbar: function (e) {
            _this.isHidden = _this.element.is(':visible');

            if (_this.isHidden) {
                _this.hidePanels(e);
                $('.clickTip', '#Social-popup').hide();
            }

            _this.element.add(elements.toggleToolbar).fadeToggle('slow');

            KBB.cookies.set('ToolbarHidden', _this.isHidden, '365');

            KBB.events.fire('KbbToolbar.OnToggle', !_this.isHidden);
            KBB.events.fire('KbbToolbar.On' + (_this.isHidden ? 'Collapse' : 'Expand'));
        },
        saveVehicleClicked: function (e) {
            var me = $(this);
            if (me.hasClass('disabled')) return;
            if (!KBB.modules.myKbb.isAuthenticated) {
                KBB.modules.headerShare.signInPopUp.Show(e);
                return;
            }
            KBB.modules.myKbb.saveVehicle({
                vehicleid: me.data('vid'),
                vehicleclass: me.data('vclass'),
                mileage: me.data('mileage'),
                selectionhistory: me.data('options'),
                condition: me.data('condition'),
                intent: me.data('intent')
            });
        },
        saveVehicleComplete: function (data) {
            if (data.success) {
                $('span.saved-arrow', _this.element).fadeIn().fadeOut(2500);
                _this.hideError();
            } else {
                _this.showError(errorMessages.saveError);
            }
        },
        personalizationDataReceived: function (data) {
            if (data) {
                elements.savedCount.html('({0})'.format(data.SavedVehicleCount));
                elements.recentCount.html('({0})'.format(data.RecentlyViewedCount));
            }
        },
        authenticationChanged: function (data) {
            _this.hidePanels();

            elements.savedCount.toggle(data.IsAuthenticated);
            elements.recentCount.toggle(data.IsAuthenticated);

            if (data.IsAuthenticated) {
                var name = data.User.FirstName.length ? data.User.FirstName : data.User.DisplayName;
                $('.sign-in-message', _this.element).html('Welcome Back, {0}!'.format(name))
                                                    .show('fast').delay(2000).fadeOut(2000);
            } else {
                $('.sign-out-message', _this.element).show('fast').delay(2000).fadeOut(2000);
            }
        },
        createCompareVehiclesClickHandler: function (element) {
            return function (e) {
                e.preventDefault();
                _this.hideError();

                var list = [];

                $('.mod-compare-checkbox:checked', element).each(function () {
                    list.push($(this).val());
                });

                if (list.length > 4) {
                    _this.showError(errorMessages.compareTooMany);
                }
                else if (list.length < 2) {
                    _this.showError(errorMessages.compareTooFew);
                }
                else {
                    self.location.href = '{0}/{1}'.format($(this).attr('href'), list.join("-vs-"));
                }
            };
        },
        OnToggle: function (cb) {
            KBB.events.on('KbbToolbar.OnToggle', cb);
        },
        OnCollapse: function (cb) {
            KBB.events.on('KbbToolbar.OnCollapse', cb);
        },
        OnExpand: function (cb) {
            KBB.events.on('KbbToolbar.OnExpand', cb);
        },
        OnShowPanel: function (cb) {
            KBB.events.on('KbbToolbar.OnShowPanel', cb);
        },
        OnHidePanel: function (cb) {
            KBB.events.on('KbbToolbar.OnHidePanel', cb);
        }
    }
} ());

/* SAVED VEHICLES PANEL */
KBB.modules.socialToolbar.panels.savedVehicles = (function () {
    var _this,
        _toolbar = KBB.modules.socialToolbar,
        savedServiceUrl = $('#Saved-vehicle-service').val(),
        container = $('#Saved-vehicle-data'),
        elements = {
            removeConfirmOverlay: $('#Saved-vehicle-remove-overlay'),
            removeCancel: $('#Saved-vehicle-remove-overlay-cancel'),
            removeConfirm: $('#Saved-vehicle-remove-overlay-ok'),
            removeMessage: $('#Saved-vehicle-remove-message')
        },
        messages = {
            removeTooFew: 'Please select at least one vehicle to remove.',
            removeFailed: 'There was an error saving, please try again later.',
            confirmRemove: 'Are you sure you want to remove?',
            confirmRemoveAll: 'Are you sure you want to remove?'
        },
        isJqmCreated = false,
        checkedIdsList;

    return {
        element: $('#Saved-vehicles-panel'),
        trigger: $('#Saved-vehicles-link'),
        init: function () {
            _this = this;
            elements.removeCancel.click(this.removeVehiclesCancelClicked);
            elements.removeConfirm.click(this.removeVehiclesConfirmClicked);
        },
        initAjaxContent: function () {
            $('.compare-vehicles', _this.element).click(_toolbar.createCompareVehiclesClickHandler(_this.element));
            $('#Remove-vehicles').click(_this.removeVehiclesClicked);
            $('#Remove-all-vehicles').click(_this.removeAllVehiclesClicked);
        },
        onShow: function (e) {
            if (!KBB.modules.myKbb.isAuthenticated) {
                KBB.modules.headerShare.signInPopUp.Show(e);
                return false;
            }
            _this.loadSavedVehicles();
        },
        loadSavedVehicles: function () {
            container.html('<span class="loader"></span>');
            $.getJSON(KBB.helpers.appendUrlParameter(savedServiceUrl, 'r', KBB.helpers.randomString()), _this.onGetSavedVehiclesComplete);
        },
        onGetSavedVehiclesComplete: function (data) {
            if (!data) {
                return;
            }

            container.html(data.Html)
                     .find('#Toolbar-carousel .container')
                     .jCarouselLite(_toolbar.jCarouselSettings); ;

            _this.initAjaxContent();
        },
        removeVehiclesClicked: function (e) {
            var checked = $('.mod-compare-checkbox:checked', _this.element);

            if (!checked.length) {
                return _toolbar.showError(messages.removeTooFew);
            }

            checkedIdsList = [];
            checked.each(function () { checkedIdsList.push($(this).data('vid')); });

            elements.removeMessage.html(messages.confirmRemove);

            _this.showConfirmRemoveModal();

        },
        removeAllVehiclesClicked: function (e) {
            checkedIdsList = [];
            $('.mod-compare-checkbox', _this.element).each(function () { checkedIdsList.push($(this).data('vid')); });

            elements.removeMessage.html(messages.confirmRemoveAll);

            _this.showConfirmRemoveModal();
        },
        showConfirmRemoveModal: function () {
            if (!isJqmCreated) {
                elements.removeConfirmOverlay.jqm({ modal: false, overlay: 0, overlayClass: 'mod-modal-overlay', toTop: true });
                isJqmCreated = true;
            }

            elements.removeConfirmOverlay.css('top', $(document).scrollTop() + 170).jqmShow();
        },
        removeVehiclesCancelClicked: function (e) {
            elements.removeConfirmOverlay.jqmHide();
        },
        removeVehiclesConfirmClicked: function (e) {
            elements.removeConfirmOverlay.jqmHide();

            var cb = function (data) {
                if (!data || !data.success) {
                    _toolbar.showError(messages.removeFailed);
                } else {
                    _this.loadSavedVehicles();
                }
            };

            KBB.modules.myKbb.removeVehicles(checkedIdsList, cb);
        }
    }
} ());

/* RECENTLY VIEWED VEHICLES PANEL */
KBB.modules.socialToolbar.panels.recentlyViewed = (function () {
    var _this,
        _toolbar = KBB.modules.socialToolbar,
        errorMessages = {
            saveVehiclesError: 'Please select at least one vehicle.',
            compareTooMany: 'You may only compare up to 4 vehicles.',
            compareTooFew: 'Please select at least two vehicles to compare.'
        },
        serviceUrl = $('#Recently-viewed-service').val(),
        container = $('#Recently-viewed-data'),
        isRecentlyViewedCached = false;

    return {
        element: $('#Recently-viewed-panel'),
        trigger: $('#Recently-viewed-link'),
        init: function () {
            _this = this;
            KBB.events.on('MyKbb.OnRecentlyViewedAdded', function (data) { isRecentlyViewedCached = false });
        },
        initAjaxContent: function () {
            $('#Save-vehicles-btn').click(this.saveVehiclesClicked);
            $('.compare-vehicles', _this.element).click(_toolbar.createCompareVehiclesClickHandler(_this.element));
        },
        onShow: function (e) {
            if (!isRecentlyViewedCached) {
                _this.getRecentlyViewedVehicles(_this.onGetRecentlyViewedComplete);
            }
        },
        getRecentlyViewedVehicles: function (cb) {
            container.html('<span class="loader"></span>');
            $.getJSON(serviceUrl, cb);
        },
        onGetRecentlyViewedComplete: function (data) {
            if (!data) {
                return;
            }

            container.html(data.Html)
                     .find('#Toolbar-carousel .container')
                     .jCarouselLite(_toolbar.jCarouselSettings);

            _this.initAjaxContent();

            isRecentlyViewedCached = true;
        },
        saveVehiclesClicked: function (e) {
            _toolbar.hideError();

            if (!KBB.modules.myKbb.isAuthenticated) {
                KBB.modules.headerShare.signInPopUp.Show(e);
                return;
            }

            var list = [];
            $('.mod-compare-checkbox:checked', _this.element).each(function () {
                list.push('{0}-{1}'.format($(this).data('vid'), $(this).data('vclass')));
            });

            if (list.length > 0) {
                KBB.modules.myKbb.saveVehicles(list.join("|"));
            } else {
                _toolbar.showError(errorMessages.saveVehiclesError);
            }
        }
    }
} ());

;


/* Comment Generated by Combres - Resource '~/js/toolbaradcontent.js' (Mode: Static) */
var tbHeight = 550;
var tbWidth = 1012;
var toolbarContent = $('#ToolbarAd-Content');
var toolbarToggleDiv = $('#ToolbarAd-toggle div');

function showToolbarAdOverlay(dyn) {
    toolbarContent.show();
    toolbarToggleDiv.addClass('down').removeClass('up');
    $('#ToolbarAd-Content-Overlay').addClass('mod-modal-overlay').css({ height: '100%', width: '100%', position: 'fixed', left: 0, top: 0, 'z-index': toolbarContent.css('z-index') - 1, opacity: .5 }).fadeIn();
    toolbarContent.width(tbWidth);
    $('#ToolbarAd-Content .close').css({ 'top': '-40px', 'right': '45px' }).fadeIn('fast');
    $('#ToolbarAd-Content .content').stop(true, true).show().width(tbWidth).animate({ height: tbHeight }, 'fast');
    var src = $('#ToolbarAd-Content-src').val();
    if (dyn != undefined && src.indexOf("dyn=") < 0) {
        src = src + '&dyn=' + dyn;
    }
    $('#ToolbarAd-Content-iframe').attr('src', src);
}

function collapseToolbarAd() {
    $('#ToolbarAd-Content-Overlay').fadeOut();
    $('#ToolbarAd-Content .close').stop(true, true).fadeOut('fast', function () {
        $('#ToolbarAd-Content .content').stop(true, true).animate({ height: 0 }, 'fast', function () {
            $(this).hide();
            toolbarToggleDiv.removeClass('down').addClass('up');
        });
    });
    $('#ToolbarAd-Content-iframe').attr('src', '');
}

$('#ToolbarAd-Content .close').live('click', function () {
    collapseToolbarAd();
    toolbarToggleDiv.removeClass('down').addClass('up');
});

var dyn = "";

function ShowToolbarAdToggle(styles) {
    var styleArray = styles.split("|");
    var buttonStyle = styleArray[0];
    var barStyle = styleArray[1];
    var arrowColor = styleArray[2];
    dyn = styleArray[3];
    if (buttonStyle == undefined) buttonStyle = "background:#000";
    if (barStyle == undefined) barStyle = "background:#fff";
    if (arrowColor == undefined) arrowColor = "#fff";
    $('#ToolbarAd-toggle-container').show().attr('style', barStyle).find('#ToolbarAd-toggle').attr('style', buttonStyle).find('.arrow').css('border-top-color', arrowColor).css('border-bottom-color', arrowColor);
}

$('#ToolbarAd-toggle').live('click', function () {
    var arrowDiv = $(this).find('div');
    if (arrowDiv.hasClass('up')) {
        showToolbarAdOverlay(dyn);
        arrowDiv.removeClass('up').addClass('down');
    }
    else {
        collapseToolbarAd();
        arrowDiv.removeClass('down').addClass('up');
    }
});

$("#Social-toolbar .toggle-down").live('click', function () {
    $('#ToolbarAd-Collapsed-Content-iframe').attr('src', '');
});

$('#Social-trigger').live('click', function () {
    if ($('#ToolbarAd-Collapsed-Content-iframe').attr('src').length < 1) {
        var src = $('#ToolbarAd-Collapsed-Content-src').val();
        $('#ToolbarAd-Collapsed-Content-iframe').attr('src', src);
    }
});

$(document).ready(function () {
    $('#ToolbarAd-Content-iframe').load(function () {
        // set iframe dimensions to those of the embedded object
        var h = $(this).contents().find('object, embed').attr('height');
        if (h !== undefined && h !== $(this).attr('height')) {
            $(this).attr('height', h);
        }
        var w = $(this).contents().find('object, embed').attr('width');
        if (w !== undefined && w !== $(this).attr('width')) {
            $(this).attr('width', w);
        }
    });

    $('#ToolbarAd-Collapsed-Content-iframe').load(function () {
        // set iframe dimensions to those of the embedded object
        var h = $(this).contents().find('object, embed').attr('height');
        if (h !== undefined && h !== $(this).attr('height')) {
            $(this).attr('height', h);
        }
        var w = $(this).contents().find('object, embed').attr('width');
        if (w !== undefined && w !== $(this).attr('width')) {
            $(this).attr('width', w);
        }
    });
    
});

function toolbaronload() {
    //find the height of the internal page
    var the_height =
    document.getElementById('ToolbarAd-Content-iframe').contentWindow.
      document.body.scrollHeight;

    //change the height of the iframe
    document.getElementById('ToolbarAd-Content-iframe').height =
      the_height;
}

KBB.sockets.read(function (e) {
    try {
        var adMessage = JSON.parse(e.data);
        if (adMessage.dyn && (adMessage.type === 'OverlayAd'))
            showToolbarAdOverlay(adMessage.dyn);
    } catch(error) {
    }
}, 'http://ad.doubleclick.net');

KBB.sockets.read(function (e) {
    try {
        var adMessage = JSON.parse(e.data);
        if (adMessage.dyn && (adMessage.type === 'OverlayAd'))
            showToolbarAdOverlay(adMessage.dyn);
    } catch (error) {
    }
}, self.location.protocol + '//' + self.location.host);
;


/* Comment Generated by Combres - Resource '~/Views/Vehicle/ymmt/gallery/gallerymodal.js' (Mode: Static) */
$(document).ready(function () {
    $('.photos-modal').click(PhotosModalIconClick);
});
function PhotosModalIconClick(e) {

    var currentTarget = $(e.currentTarget);
    var vehicleTitle = currentTarget.data("vehicle-title");

    if ($.browser.msie) {
        $('#Photos-modal-overlay-confirm-cancel > .btn-center').html(vehicleTitle);
    } else {
        $("#Photos-modal-overlay-confirm-cancel").html(vehicleTitle);
    }

    var originalVehicle = $("#Vehicle-info .content-title").text();
    if (originalVehicle == "") {
        // accessed from none ymm / ymmt path pages, no vehicle text available
        originalVehicle = "Go Back to Original Page";
    }
    if (originalVehicle == "New Car Pricing") {
        // temp tix for left nav a/b test
        originalVehicle = $('#Vehicle-info h1').text();
    }
    if ($('#Model-year-select').length > 0) {
        if ($(this).parents('.model-year-container').find('.model-year-name').text().length > 0)
            originalVehicle = $(this).parents('.model-year-container').find('.model-year-name').text();
    }

    var url = currentTarget.attr("data-photos-modal-url");

    // modal div already exist, just change iframe src
    $("#Photos-modal-iframe").attr("src", url);
    $('#Photos-modal-overlay').jqm({
        modal: true, overlay: 50,
        overlayClass: 'mod-modal-overlay',
        closeClass: "close",
        overlayClass: 'mod-modal-overlay',
        toTop: true,
        onShow: function (hash) {
            hash.w.show().hvCenter();
            if (hash.w.offset().top < 14) {
                hash.w.css('top', '14px');
            }
        },
        onHide: function (hash) {
            // set iframe url to empty so the iframe doesn't try to load again
            $("#Photos-modal-iframe").attr("src", "");

            hash.w.fadeOut('2000', function () {
                hash.o.remove();
            });
        }
    });

    $("#Photos-modal-overlay").jqmShow();
    $("#GalleryModalDiv").show();

    $('#Photos-modal-overlay-confirm .close').click(function () {
        $('#Photos-modal-overlay-confirm').jqmHide();
        $("#Has-modal-vehicle-changed").val("true");
        $('div.mod-modal-overlay').css('z-index', $('#Photos-modal-overlay').css('z-index') - 11);
    });
    
    if (currentTarget.attr('data-modal-vehicle-year')) {
        $("#Modal-starting-year").val(currentTarget.data('modal-vehicle-year'));
    }
    if (currentTarget.attr('data-modal-vehicle-manufacturer')) {
        $("#Modal-starting-manufacturer").val(currentTarget.data('modal-vehicle-manufacturer'));
    }
    if (currentTarget.attr('data-modal-vehicle-model')) {
        $("#Modal-starting-model").val(currentTarget.data('modal-vehicle-model'));
    }
    
}
function ToFriendlyKBBURLValue(urlValue) {
    var nonAlphaNumericRegExp = /[^a-z0-9\-\s]*/ig;
    var whiteSpaceRegExp = /\s/g;
    urlValue = urlValue.replace(nonAlphaNumericRegExp, "").replace(whiteSpaceRegExp, "-");
    return urlValue;
}
function GalleryModalConfirm() {
    if ($("#Has-modal-vehicle-changed").val() == "true") {

        var startingYear = $("#Modal-starting-year").val();
        var startingManufacturer = $("#Modal-starting-manufacturer").val();
        var startingModel = $("#Modal-starting-model").val();
        var startingUrlModel = ToFriendlyKBBURLValue(startingModel);
        var startingUrl = "/" + startingManufacturer + "/" + startingUrlModel + "/" + startingYear + "-" + startingManufacturer + "-" + startingUrlModel + "/";
        var startingTitle = startingYear + " " + startingManufacturer + " " + startingModel;

        var year = $("#Modal-year").val();
        var manufacturer = $("#Modal-manufacturer").val();
        var model = $("#Modal-model").val();
        var friendlyKBBURLModel = ToFriendlyKBBURLValue(model);
        var url = "/" + manufacturer + "/" + friendlyKBBURLModel  + "/" + year + "-" + manufacturer + "-" + friendlyKBBURLModel + "/";
        var title = year + " " + manufacturer + " " + model;

        $('#Photos-modal-overlay-confirm').jqm({
            modal: true,
            overlay: 50,
            overlayClass: 'mod-modal-overlay',
            toTop: true,
            onShow: function (hash) {
                hash.w.hvCenter().show().ctaFix();
                if (hash.w.find('p').css('margin-bottom') == '0px') {
                    hash.w.find('p').css({ 'font-family': 'tahoma, arial', 'font-size': '12px', 'margin-bottom': '12px' });
                }
            }
        }).jqmShow();
        
        $('#Photos-modal-overlay-confirm-ok').attr("href", url);
        if ($('#Photos-modal-overlay-confirm-ok').hasClass('btn-cta-fix')) {
            $('#Photos-modal-overlay-confirm-ok .btn-center').html(title);
        } else {
            $('#Photos-modal-overlay-confirm-ok').html(title);
        }

        if (startingTitle != title && startingYear != "") {
            $('#Photos-modal-overlay-starting-confirm-ok').attr("href", startingUrl).show();
            if ($('#Photos-modal-overlay-starting-confirm-ok').hasClass('btn-cta-fix')) {
                $('#Photos-modal-overlay-starting-confirm-ok .btn-center').html(startingTitle);
            } else {
                $('#Photos-modal-overlay-starting-confirm-ok').html(startingTitle);
            }    
        }

        $('#Photos-modal-overlay').css('z-index', $('#Photos-modal-overlay').css('z-index') - 10);
        $('#mod-modal-overlay').css('z-index', $('#mod-modal-overlay').css('z-index') - 9);

        $("#Has-modal-vehicle-changed").val("false");
    } else {
        $("#Photos-modal-overlay").jqmHide();
    }
}

function GotoOriginal() {
    $("#Photos-modal-overlay").jqmHide();
    $('#Photos-modal-overlay-confirm').jqmHide();
    $("#Has-modal-vehicle-changed").val("false");
}