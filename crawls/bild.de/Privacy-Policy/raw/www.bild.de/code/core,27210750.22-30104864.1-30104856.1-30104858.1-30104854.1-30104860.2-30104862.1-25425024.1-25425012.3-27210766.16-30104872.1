
/*jquery:30104856.1*/

/*! jQuery v1.7.2 jquery.com | jquery.org/license */
(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'></div></div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'></td><td>t</td></tr></table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'></div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(
    a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k<e;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l<q.matches.length&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f
    .clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1></$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="<table>"&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,"opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&&(bA=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:"inline-block"},function(){return b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);
/*jquery.json:30104858.1*/

(function($){var escapeable=/["\\\x00-\x1f\x7f-\x9f]/g,meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'};$.toJSON=typeof JSON==='object'&&JSON.stringify?JSON.stringify:function(o){if(o===null){return'null';}
var type=typeof o;if(type==='undefined'){return undefined;}
if(type==='number'||type==='boolean'){return''+o;}
if(type==='string'){return $.quoteString(o);}
if(type==='object'){if(typeof o.toJSON==='function'){return $.toJSON(o.toJSON());}
if(o.constructor===Date){var month=o.getUTCMonth()+1,day=o.getUTCDate(),year=o.getUTCFullYear(),hours=o.getUTCHours(),minutes=o.getUTCMinutes(),seconds=o.getUTCSeconds(),milli=o.getUTCMilliseconds();if(month<10){month='0'+month;}
if(day<10){day='0'+day;}
if(hours<10){hours='0'+hours;}
if(minutes<10){minutes='0'+minutes;}
if(seconds<10){seconds='0'+seconds;}
if(milli<100){milli='0'+milli;}
if(milli<10){milli='0'+milli;}
return'"'+year+'-'+month+'-'+day+'T'+
hours+':'+minutes+':'+seconds+'.'+milli+'Z"';}
if(o.constructor===Array){var ret=[];for(var i=0;i<o.length;i++){ret.push($.toJSON(o[i])||'null');}
return'['+ret.join(',')+']';}
var name,val,pairs=[];for(var k in o){type=typeof k;if(type==='number'){name='"'+k+'"';}else if(type==='string'){name=$.quoteString(k);}else{continue;}
type=typeof o[k];if(type==='function'||type==='undefined'){continue;}
val=$.toJSON(o[k]);pairs.push(name+':'+val);}
return'{'+pairs.join(',')+'}';}};$.evalJSON=typeof JSON==='object'&&JSON.parse?JSON.parse:function(src){return eval('('+src+')');};$.secureEvalJSON=typeof JSON==='object'&&JSON.parse?JSON.parse:function(src){var filtered=src.replace(/\\["\\\/bfnrtu]/g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,'');if(/^[\],:{}\s]*$/.test(filtered)){return eval('('+src+')');}else{throw new SyntaxError('Error parsing JSON, source is not valid.');}};$.quoteString=function(string){if(string.match(escapeable)){return'"'+string.replace(escapeable,function(a){var c=meta[a];if(typeof c==='string'){return c;}
c=a.charCodeAt();return'\\u00'+Math.floor(c/16).toString(16)+(c%16).toString(16);})+'"';}
return'"'+string+'"';};})(jQuery);
/*jquery.cookie:30104854.1*/

/**
 * jQuery Cookie plugin
 *
 * Copyright (c) 2010 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
jQuery.cookie = function (key, value, options) {

    // key and at least value given, set cookie...
    if (arguments.length > 1 && String(value) !== "[object Object]") {
        options = jQuery.extend({}, options);

        if (value === null || value === undefined) {
            options.expires = -1;
        }

        if (typeof options.expires === 'number') {
            var days = options.expires, t = options.expires = new Date();
            t.setDate(t.getDate() + days);
        }

        value = String(value);

        return (document.cookie = [
            encodeURIComponent(key), '=',
            options.raw ? value : encodeURIComponent(value),
            options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
            options.path ? '; path=' + options.path : '',
            options.domain ? '; domain=' + options.domain : '',
            options.secure ? '; secure' : ''
        ].join(''));
    }

    // key and possibly options given, get cookie...
    options = value || {};
    var result, decode = options.raw ? function (s) { return s; } : decodeURIComponent;
    return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decode(result[1]) : null;
};

/*jquery.bildLightbox:30104860.2*/

(function($) {

    var supportsFixed = supportsPositionFixed(),
        isIOS = /(iPhone|iPod|iPad)/i.test(navigator.userAgent),
        isAndroid = /android/i.test(navigator.userAgent),
        android3plus = /android [3-9]/i.test(navigator.userAgent);

    /**
     * supportsPositionFixed - ob wir position:fixed oder :absolute verwenden sollten
     * @private
     * @return {Boolean}
     */
    function supportsPositionFixed(){

        if( isAndroid && !android3plus ) {
            return false;
        }
        return true;
    }

    var transformCSSRule = null;
    var $lbContentDimensions = {
        width: 0,
        height: 0
    };

    function getTransformCSSRule(){
        return de.bild.utils && de.bild.utils.getStyleWithVendorPrefix ? de.bild.utils.getStyleWithVendorPrefix('transform') : 'transform';
    }

    /**
     * insertHTML - fakes an innerHTML with replaceWith so script tags are executed
     * @private
     * @param $el {$object} where does the HTML go
     * @param content {string} HTML to be injected
     */
    function insertHTML($el,content){
        // html()/innerHTML will not execute scripts
        if (content.indexOf('</script>') != -1) {
            $el.html('<div id="lightbox-replaceme-div"/>');
            de.lib.replaceWith($('#lightbox-replaceme-div'),content);
        } else {
            $el.get(0).innerHTML = content;
        }
    }
    /**
     * getInnerDimensions - ob wir position:fixed oder :absolute verwenden sollten
     * @private
     * @return {Object} h:innerHeight, w:innerWidth
     */
    function getInnerDimensions(){

        if (isIOS) {
            return {
                h : window.innerHeight,
                w : window.innerWidth
            };
        }

        return {
            h :  (typeof document.documentElement != 'undefined' && typeof document.documentElement.clientHeight != 'undefined' && document.documentElement.clientHeight != 0) ? document.documentElement.clientHeight + ($(window).scrollTop()*2) : window.innerHeight,
            w : (typeof document.documentElement != 'undefined' && typeof document.documentElement.clientWidth != 'undefined' && document.documentElement.clientWidth != 0) ? document.documentElement.clientWidth : window.innerWidth
        };
    }

    /**
     * getContentPosition - berechnet den Mittelpunkt
     * @private
     * @param w {Num} Breite des Overlayinhaltcontainers
     * @param h {Num} Hoehe des Overlayinhaltcontainers
     * @return {object}
     */
    function getContentPosition(w,h){

        var wh, ww;

        if(isIOS || !supportsFixed) {
            var dimensions = getInnerDimensions();
            wh =  dimensions.h;
            ww = dimensions.w;
        } else if (supportsPositionFixed()) {
            wh = $(window).height();
            ww = $(window).width();

        }

        return {
            'y' : (wh - h) >> 1,
            'x' : (ww - w) >> 1
        }
    }


    /**
     * setContentPosition - gewaeherleistet, dass das Overlay im Mittelpunkt steht
     * @private
     * @param $el {$object} jQuery object
     */
    function setContentPosition($el) {

        resizeLightboxForScreenResolution($el);

        var pos = getContentPosition($lbContentDimensions.width, $lbContentDimensions.height);
        $el[0].style.left = pos.x - 10 +'px';
        $el[0].style.top = pos.y +'px';
    }


    function resizeLightboxForScreenResolution($el){

        var iD = getInnerDimensions();

        var wWidth = iD.w;
        var wHeight = iD.h;
        var factor = {w: 1, h: 1, min: 1};

        var lbWidth = $lbContentDimensions.width;
        var lbHeight = $lbContentDimensions.height;

        if(lbWidth > wWidth) {
            factor.w = wWidth / (lbWidth + 45);
        }

        if(lbHeight > wHeight) {
            factor.h = wHeight / (lbHeight + 45);
        }

        if(factor.w !== 1 || factor.h !== 1) {
            factor.min = Math.min(factor.w, factor.h);
            $el.css(transformCSSRule, 'scale('+factor.min+')');
        }
    }

    /**
     * bildLightbox erzeugt eine dynamische Lighbox. Der HTML-Code wird bei Schliessen vernichtet
     * @function
     * @name bildLightbox
     * @memberOf $.fn
     * @param  {object} options Parameter, um bildLightbox anzupassen
     * @param  {function} callback Funktion abzufeueren, nachdem das Overlay eingeblendet ist
     * @returns {obj[]} JQuery Objekt
     * @namespace Plugin bildLightbox
     * @author <a href="mailto:rdodd@bild.de">Ramon Dodd</a>
     */
    $.bildLightbox = function(element, options) {

        var defaults = {
            'closeOnEsc' : true,                    // Sollte ein Klick auf Esc das Overlay zumachen?
            'closeOnBodyClick' : true,
            'onClose' : function(){},
            'wrapperId'     : '',
            'wrapperClass' : 'overlayWrapper',      // Overlayklasse
            'contentClass' : 'innerBox',
            'loadingClass' : 'loading',              // Loadingsklasse
            'overlay' : true,                       //ob der Hintergrund da ist
            'showCloseButton' : true,      // close button anzeigen?  
            dominant:false,            //true/false if other open lightboxes are closed or if lb calls are queued
            overlayHTML: '<div id="bild-overlay" class="bild-overlay" style="height: 100%;left: 0;top: 0;position: fixed;width: 100%;opacity:0"></div>',
            //global variable to queue lightbox calls       
            bildLightboxQueue:[]
            //'overlayColor' : ''
            // X- und Y-Position (in Pixels), sonst wird sie in den Mittelpunkt gelegt
            //'left':'0px',
            //'top':'0px',
            // width : 640px,
            // height :480px,
            // Inhaltoptionen 
            //'ajax' : 'http://ajaxpath.overlayContentHTML/html/php',
            //'iframe' : 'http://iframepath.com/html/php',
            //'content' : 'html',
            //'callback' : function(){} // Scope = Lightbox und NICHT das Element, das die Funktion abfeuert
        };



        de.bild.events.subscribe('autoLoadFinished', repositioner);

        transformCSSRule = getTransformCSSRule();

        function repositioner(){
            repositionAfterImgLoad();
        }


        // this = plugin object
        var plugin = this;
        plugin.settings = {};

        // element = element to which plugin in attached
        var $element = $(element),
            element = element,
            overlay,
            $window = $(window),
            $doc = $(document),
            $body = $('body'),
            $overlayContent,
            $lightbox,
            isOpen = false,
            
            overlayContentHTML = [],
            onWindowResize,
            windowResizeTimeout = null;

        // automatically triggered
        plugin.init = function() {
            plugin.settings = $.extend({}, defaults, options);

            overlayContentHTML.push('<div class="');
            overlayContentHTML.push(plugin.settings.contentClass);
            overlayContentHTML.push(' ');
            overlayContentHTML.push(plugin.settings.loadingClass);
            overlayContentHTML.push('"></div>');
            if (plugin.settings.showCloseButton) overlayContentHTML.push('<a href="#" class="close" title="schließen"></a>');

            // Overlay einblenden
            plugin.open();

            // html()/innerHTML will not execute scripts
            insertHTML($overlayContent, plugin.settings.content);
            // set content width based on min-width or max-width
            if (plugin.settings.content.match(/\<\w+.*?class=\"(.*)\".*?\>/)) {
                var selector = "." + RegExp.$1.replace(/ /g, ".");
                var firstTag = jQuery(selector);
                if (firstTag.length) {
                    var minWidth = firstTag.eq(0).css("min-width");
                    if (typeof minWidth !== 'undefined' && minWidth != "0px") {
                        firstTag.eq(0).width(minWidth);
                    }
                    else {
                        var maxWidth = firstTag.eq(0).css("max-width");
                        if (typeof maxWidth !== 'undefined' && maxWidth != "0px") {
                            firstTag.eq(0).width(maxWidth);
                        }

                    }
                }
            }
            // callback
            finish();
        };


        /**
         * open - Position berechen, Ereignisse anbinden, Overlay anzeigen
         * @function
         * @name open
         * @memberOf $.fn.bildLightbox.Overlay
         * @returns {object} this
         */
        plugin.open = function(){

            if (isOpen) return false;
            // wir wollen direkten Zugriff aufs aktuelle Element
            // this.$lightbox ermoeglicht das
            $lightbox = $('<div id="'+plugin.settings.wrapperId+'" class="'+plugin.settings.wrapperClass+'" style="display:none;position:fixed; margin: 10px;"/>');

            $content = $(overlayContentHTML.join(''));

            $lightbox.append($content);

            // eingebaut aber versteckt
            $body.append($lightbox);

            // ob die Overlay-Ebene erforderlich ist
            plugin.settings.overlay && $body.append(plugin.settings.overlayHTML);

            var $overlay = $('#bild-overlay');
            if (plugin.settings.overlayColor) {
                $overlay.css({
                    'opacity' : 0.5,
                    'background-color' : plugin.settings.overlayColor
                });
            }

            //neue Elemente sammeln
            $overlayContent = $lightbox.find('div.'+plugin.settings.contentClass);

            // your lightbox needs a content class!
            if ($overlayContent.length === 0) return false;

            $lightbox.on('click', '.close, .close-lb', function(e){
                e.preventDefault();
                plugin.close();
            });

            if (plugin.settings.closeOnBodyClick) {
                // shaded bg onClick schliesst overlay
                $overlay.click(function(e){
                    if (e.target.id === 'bild-overlay')
                        plugin.close();
                });
            }

            // Tastatur::escape
            if (plugin.settings.closeOnEsc) {
                $doc.bind('keydown', function(e) {
                    if (e.keyCode == 27) {
                        plugin.close();
                    }
                });
            }

            isOpen = true;
        };

        /**
         * close - Ereignisse entbinden, Overlay loeschen
         * @function
         * @name close
         * @memberOf $.fn.bildLightbox.Overlay
         * @returns {object} this
         */
        plugin.close = function(){
            isOpen = false;
            $('#bild-overlay').remove();
            de.bild.events.unsubscribe('autoLoadFinished', repositioner);

            var $videos = $lightbox.find('.videoplayer');
            $.each($videos, function(){
                try{
                    com.xoz.videoplayer.removeInstance(this.id);
                } catch(err) {
                    console.warn('GlobalSandbox: Videoplayer teardown failed. ' + err);
                }
            });

            // unbind the keyboard / clicking actions
            if (onWindowResize) $window.off('resize.bildLightbox');
            $doc.unbind('keydown');
            clearTimeout(windowResizeTimeout);

            this.settings.onClose.apply(element);

            //check if there are more calls in the queue

            var $this = this;

            this.destroy(function(){
                if($this.settings.bildLightboxQueue.length>0){
                    var callElem = $this.settings.bildLightboxQueue.pop();
                    var nextLB = callElem[1];
                    var anchor = callElem[0];
                    //if next lb call has attribute dominant prefer it to other calls
                    nextLB.bildLightboxQueue =  $this.settings.bildLightboxQueue;
                    var plugin = new $.bildLightbox(anchor, nextLB);
                    anchor.data('bildLightbox', plugin);
                }
            });
        };

        /*reset position manually*/
        plugin.setPos = function(){
            setContentPosition($lightbox);
        };

        /*get middle point position*/
        plugin.getPos = function(w,h){
            return getContentPosition(w,h);
        };

        /*destroy*/
        plugin.destroy = function(cb){
            $element.removeData('bildLightbox');
            $lightbox.fadeOut(200, function(){
                $lightbox.remove();
                try{
                    de.bild.events.publish("domNodeRemoved");
                } catch(err){
                    console.warn('Lightbox: Failed to publish Event "domNodeRemoved"')
                }
                if(typeof(cb) == "function"){
                    cb();
                }
            });
        };


        /**
         * finish - Nachdem der Overlayinhalt reingeladen worden ist
         * @function
         * @name finish
         * @memberOf $.fn.bildLightbox.Overlay
         */
        function finish(){

            repositionAfterImgLoad();

            if (plugin.settings.width && plugin.settings.height) {
                $lightbox.css({
                    'width':plugin.settings.width,
                    'height':plugin.settings.height
                });
            }

            // Default: in mitten der Seite
            if (plugin.settings.left && plugin.settings.top) {
                $lightbox.css({
                    'left':plugin.settings.left,
                    'top':plugin.settings.top,
                    'position':'absolute'
                });
            } else {
                // Position setzen
                setContentPosition($lightbox);
                // Position beim window resize behalten
                $window.on('resize.bildLightbox', function(e) {
                    //clearTimeout(windowResizeTimeout);
                    //windowResizeTimeout = setTimeout(function(){
                    setContentPosition($lightbox);
                    //}, 100);
                });
                onWindowResize = true;
            }

            // die uebergegebene Funktion aufrufen

            $overlayContent.removeClass(plugin.settings.loadingClass);
            // die LB focus geben
            $overlayContent.attr('tabIndex',-1).focus();

            // show the lightbox
            // callback should done and ready
            $lightbox.show();

            // let's give the callback the scope of the original object plus lightbox param
            if (typeof plugin.settings.callback === 'function') plugin.settings.callback.apply(element);

        }

        function repositionAfterImgLoad(){

            $lightbox.find('img').each(function(){
                $(this).on('load', function(){
                    $lbContentDimensions.width = $lightbox.outerWidth();
                    $lbContentDimensions.height = $lightbox.outerHeight();
                    setContentPosition($lightbox);
                });
            });
            $lbContentDimensions.width = $lightbox.outerWidth();
            $lbContentDimensions.height = $lightbox.outerHeight();
        }

        //init plugin
        plugin.init();

    };

    $.fn.bildLightbox = function(options) {

        return this.each(function() {
            if (undefined == $(this).data('bildLightbox')) {
                var plugin = new $.bildLightbox(this, options);
                $(this).data('bildLightbox', plugin);
            }
            else if(options.dominant){
                var actLB =  $(this).data('bildLightbox');
                actLB.settings.bildLightboxQueue.push([$(this),options]);
                actLB.close();
            }
            else{
                var t = [$(this),options];
                $(this).data('bildLightbox').settings.bildLightboxQueue.push(t);
            }
        });
    };

    $.fn.closeBildLightbox = function(options) {

        return this.each(function() {
            if (undefined != $(this).data('bildLightbox')) {
                $(this).data('bildLightbox').close();
            }
        });
    };

})(jQuery);





/*jquery.bildProgressBar:30104862.1*/

(function($) {

    /**
     * Works out the percentage value and return a number
     * @function
     * @name getPercent
     * @param {Int} current
     * @param {Int} total
     * @returns {Int} 
     * @private
     */ 
    function getPercent(current,total){
        return ~~(100 * parseInt(current) / parseInt(total));
    };
	
	
	
    $.bildProgressBar = function(element, options) {

        var defaults = {
			'animateStep' : 750,
			// when 100% is reached
			'complete' : function(){},
			// after the plugin is initiated
			'callback' : function(){}
        };
        
		// this = plugin object
        var plugin = this;
        plugin.settings = {};


         plugin.$progressBarInner = $('<span style="width:0px"></span>');
         /*
         //one day we'll have html5...
         this.$progressBarHTML5 = $('<progress value="0" max="100"></progress>');
         */
         plugin.$percentText = $('<em>0%</em>');

        // element = element to which plugin in attached
        plugin.$element = $(element);
        plugin.element = element;
		plugin.elemWidth = plugin.$element.width();
			 
        // automatically triggered
        plugin.init = function() {
            plugin.settings = $.extend({}, defaults, options);
			plugin.$element.append(plugin.$progressBarInner).after(plugin.$percentText);
			plugin.settings.callback.call(plugin.element);
        };


        /*update*/
        plugin.update = function(current,total){
            var percent = getPercent(current,total),
            newWidth = ~~(percent*plugin.elemWidth)/100;	
			plugin.grow(newWidth,percent);
        };

        /*complete - forces complete*/
        plugin.complete = function(){ 
            plugin.grow(plugin.elemWidth,100);
        };

        /*grow*/
        plugin.grow = function(newWidth,percent) {
			// if we've reached 100%
			if (percent === 100 || plugin.$progressBarInner.width() >= plugin.elemWidth) {
				plugin.settings.complete.call(element);
				plugin.destroy();
			}
			plugin.$progressBarInner.animate({
			'width' : newWidth
			}, plugin.settings.animateStep, function() {
			     
			});
	        plugin.$percentText.text(percent+'%');
        };

        /*destroy*/
		plugin.destroy = function(){
            plugin.$progressBarInner.width(0);
			plugin.$percentText.remove();
			plugin.$element.removeData('bildProgressBar');
			plugin.$element.remove();
		};

        //init plugin
        plugin.init();

    };

    $.fn.bildProgressBar = function(options) {

        return this.each(function() {
            if (undefined == $(this).data('bildProgressBar')) {
                var plugin = new $.bildProgressBar(this, options);
                $(this).data('bildProgressBar', plugin);
            }
        });

    }
})(jQuery);





/*jquery.core:30104864.1*/


/*modernizr.custom.14937:25425024.1*/

/* Modernizr 2.5.3 (Custom Build) | MIT & BSD
 * Build: http://www.modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-flexbox_legacy-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-generatedcontent-cssgradients-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-svg-svgclippaths-touch-webgl-printshiv-mq-cssclasses-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes
 */
;window.Modernizr=function(a,b,c){function D(a){j.cssText=a}function E(a,b){return D(n.join(a+";")+(b||""))}function F(a,b){return typeof a===b}function G(a,b){return!!~(""+a).indexOf(b)}function H(a,b){for(var d in a)if(j[a[d]]!==c)return b=="pfx"?a[d]:!0;return!1}function I(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:F(f,"function")?f.bind(d||b):f}return!1}function J(a,b,c){var d=a.charAt(0).toUpperCase()+a.substr(1),e=(a+" "+p.join(d+" ")+d).split(" ");return F(b,"string")||F(b,"undefined")?H(e,b):(e=(a+" "+q.join(d+" ")+d).split(" "),I(e,b,c))}function L(){e.input=function(c){for(var d=0,e=c.length;d<e;d++)u[c[d]]=c[d]in k;return u.list&&(u.list=!!b.createElement("datalist")&&!!a.HTMLDataListElement),u}("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),e.inputtypes=function(a){for(var d=0,e,f,h,i=a.length;d<i;d++)k.setAttribute("type",f=a[d]),e=k.type!=="text",e&&(k.value=l,k.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(f)&&k.style.WebkitAppearance!==c?(g.appendChild(k),h=b.defaultView,e=h.getComputedStyle&&h.getComputedStyle(k,null).WebkitAppearance!=="textfield"&&k.offsetHeight!==0,g.removeChild(k)):/^(search|tel)$/.test(f)||(/^(url|email)$/.test(f)?e=k.checkValidity&&k.checkValidity()===!1:/^color$/.test(f)?(g.appendChild(k),g.offsetWidth,e=k.value!=l,g.removeChild(k)):e=k.value!=l)),t[a[d]]=!!e;return t}("search tel url email datetime date month week time datetime-local number range color".split(" "))}var d="2.5.3",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k=b.createElement("input"),l=":)",m={}.toString,n=" -webkit- -moz- -o- -ms- ".split(" "),o="Webkit Moz O ms",p=o.split(" "),q=o.toLowerCase().split(" "),r={svg:"http://www.w3.org/2000/svg"},s={},t={},u={},v=[],w=v.slice,x,y=function(a,c,d,e){var f,i,j,k=b.createElement("div"),l=b.body,m=l?l:b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:h+(d+1),k.appendChild(j);return f=["&#173;","<style>",a,"</style>"].join(""),k.id=h,m.innerHTML+=f,m.appendChild(k),l||(m.style.background="",g.appendChild(m)),i=c(k,a),l?k.parentNode.removeChild(k):m.parentNode.removeChild(m),!!i},z=function(b){var c=a.matchMedia||a.msMatchMedia;if(c)return c(b).matches;var d;return y("@media "+b+" { #"+h+" { position: absolute; } }",function(b){d=(a.getComputedStyle?getComputedStyle(b,null):b.currentStyle)["position"]=="absolute"}),d},A=function(){function d(d,e){e=e||b.createElement(a[d]||"div"),d="on"+d;var f=d in e;return f||(e.setAttribute||(e=b.createElement("div")),e.setAttribute&&e.removeAttribute&&(e.setAttribute(d,""),f=F(e[d],"function"),F(e[d],"undefined")||(e[d]=c),e.removeAttribute(d))),e=null,f}var a={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return d}(),B={}.hasOwnProperty,C;!F(B,"undefined")&&!F(B.call,"undefined")?C=function(a,b){return B.call(a,b)}:C=function(a,b){return b in a&&F(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=w.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(w.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(w.call(arguments)))};return e});var K=function(c,d){var f=c.join(""),g=d.length;y(f,function(c,d){var f=b.styleSheets[b.styleSheets.length-1],h=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"",i=c.childNodes,j={};while(g--)j[i[g].id]=i[g];e.touch="ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch||(j.touch&&j.touch.offsetTop)===9,e.csstransforms3d=(j.csstransforms3d&&j.csstransforms3d.offsetLeft)===9&&j.csstransforms3d.offsetHeight===3,e.generatedcontent=(j.generatedcontent&&j.generatedcontent.offsetHeight)>=1,e.fontface=/src/i.test(h)&&h.indexOf(d.split(" ")[0])===0},g,d)}(['@font-face {font-family:"font";src:url("https://")}',["@media (",n.join("touch-enabled),("),h,")","{#touch{top:9px;position:absolute}}"].join(""),["@media (",n.join("transform-3d),("),h,")","{#csstransforms3d{left:9px;position:absolute;height:3px;}}"].join(""),['#generatedcontent:after{content:"',l,'";visibility:hidden}'].join("")],["fontface","touch","csstransforms3d","generatedcontent"]);s.flexbox=function(){return J("flexOrder")},s["flexbox-legacy"]=function(){return J("boxDirection")},s.canvas=function(){var a=b.createElement("canvas");return!!a.getContext&&!!a.getContext("2d")},s.canvastext=function(){return!!e.canvas&&!!F(b.createElement("canvas").getContext("2d").fillText,"function")},s.webgl=function(){try{var d=b.createElement("canvas"),e;e=!(!a.WebGLRenderingContext||!d.getContext("experimental-webgl")&&!d.getContext("webgl")),d=c}catch(f){e=!1}return e},s.touch=function(){return e.touch},s.geolocation=function(){return!!navigator.geolocation},s.postmessage=function(){return!!a.postMessage},s.websqldatabase=function(){return!!a.openDatabase},s.indexedDB=function(){return!!J("indexedDB",a)},s.hashchange=function(){return A("hashchange",a)&&(b.documentMode===c||b.documentMode>7)},s.history=function(){return!!a.history&&!!history.pushState},s.websockets=function(){for(var b=-1,c=p.length;++b<c;)if(a[p[b]+"WebSocket"])return!0;return"WebSocket"in a},s.rgba=function(){return D("background-color:rgba(150,255,150,.5)"),G(j.backgroundColor,"rgba")},s.hsla=function(){return D("background-color:hsla(120,40%,100%,.5)"),G(j.backgroundColor,"rgba")||G(j.backgroundColor,"hsla")},s.multiplebgs=function(){return D("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(j.background)},s.backgroundsize=function(){return J("backgroundSize")},s.borderimage=function(){return J("borderImage")},s.borderradius=function(){return J("borderRadius")},s.boxshadow=function(){return J("boxShadow")},s.textshadow=function(){return b.createElement("div").style.textShadow===""},s.opacity=function(){return E("opacity:.55"),/^0.55$/.test(j.opacity)},s.cssanimations=function(){return J("animationName")},s.cssgradients=function(){var a="background-image:",b="gradient(linear,left top,right bottom,from(#9f9),to(white));",c="linear-gradient(left top,#9f9, white);";return D((a+"-webkit- ".split(" ").join(b+a)+n.join(c+a)).slice(0,-a.length)),G(j.backgroundImage,"gradient")},s.csstransforms=function(){return!!J("transform")},s.csstransforms3d=function(){var a=!!J("perspective");return a&&"webkitPerspective"in g.style&&(a=e.csstransforms3d),a},s.csstransitions=function(){return J("transition")},s.fontface=function(){return e.fontface},s.generatedcontent=function(){return e.generatedcontent},s.video=function(){var a=b.createElement("video"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,"")}catch(d){}return c},s.audio=function(){var a=b.createElement("audio"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,"")}catch(d){}return c},s.localstorage=function(){try{return localStorage.setItem(h,h),localStorage.removeItem(h),!0}catch(a){return!1}},s.sessionstorage=function(){try{return sessionStorage.setItem(h,h),sessionStorage.removeItem(h),!0}catch(a){return!1}},s.webworkers=function(){return!!a.Worker},s.applicationcache=function(){return!!a.applicationCache},s.svg=function(){return!!b.createElementNS&&!!b.createElementNS(r.svg,"svg").createSVGRect},s.inlinesvg=function(){var a=b.createElement("div");return a.innerHTML="<svg/>",(a.firstChild&&a.firstChild.namespaceURI)==r.svg},s.svgclippaths=function(){return!!b.createElementNS&&/SVGClipPath/.test(m.call(b.createElementNS(r.svg,"clipPath")))};for(var M in s)C(s,M)&&(x=M.toLowerCase(),e[x]=s[M](),v.push((e[x]?"":"no-")+x));return e.input||L(),D(""),i=k=null,e._version=d,e._prefixes=n,e._domPrefixes=q,e._cssomPrefixes=p,e.mq=z,e.hasEvent=A,e.testProp=function(a){return H([a])},e.testAllProps=J,e.testStyles=y,g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" js "+v.join(" "):""),e}(this,this.document),function(a,b){function g(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function h(){var a=k.elements;return typeof a=="string"?a.split(" "):a}function i(a){var b={},c=a.createElement,e=a.createDocumentFragment,f=e();a.createElement=function(a){var e=(b[a]||(b[a]=c(a))).cloneNode();return k.shivMethods&&e.canHaveChildren&&!d.test(a)?f.appendChild(e):e},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+h().join().replace(/\w+/g,function(a){return b[a]=c(a),f.createElement(a),'c("'+a+'")'})+");return n}")(k,f)}function j(a){var b;return a.documentShived?a:(k.shivCSS&&!e&&(b=!!g(a,"article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}")),f||(b=!i(a)),b&&(a.documentShived=b),a)}function o(a){var b,c=a.getElementsByTagName("*"),d=c.length,e=RegExp("^(?:"+h().join("|")+")$","i"),f=[];while(d--)b=c[d],e.test(b.nodeName)&&f.push(b.applyElement(p(b)));return f}function p(a){var b,c=a.attributes,d=c.length,e=a.ownerDocument.createElement(m+":"+a.nodeName);while(d--)b=c[d],b.specified&&e.setAttribute(b.nodeName,b.nodeValue);return e.style.cssText=a.style.cssText,e}function q(a){var b,c=a.split("{"),d=c.length,e=RegExp("(^|[\\s,>+~])("+h().join("|")+")(?=[[\\s,>+~#.:]|$)","gi"),f="$1"+m+"\\:$2";while(d--)b=c[d]=c[d].split("}"),b[b.length-1]=b[b.length-1].replace(e,f),c[d]=b.join("}");return c.join("{")}function r(a){var b=a.length;while(b--)a[b].removeNode()}function s(a){var b,c,d=a.namespaces,e=a.parentWindow;return!n||a.printShived?a:(typeof d[m]=="undefined"&&d.add(m),e.attachEvent("onbeforeprint",function(){var d,e,f,h=a.styleSheets,i=[],j=h.length,k=Array(j);while(j--)k[j]=h[j];while(f=k.pop())if(!f.disabled&&l.test(f.media)){for(d=f.imports,j=0,e=d.length;j<e;j++)k.push(d[j]);try{i.push(f.cssText)}catch(m){}}i=q(i.reverse().join("")),c=o(a),b=g(a,i)}),e.attachEvent("onafterprint",function(){r(c),b.removeNode(!0)}),a.printShived=!0,a)}var c=a.html5||{},d=/^<|^(?:button|form|map|select|textarea)$/i,e,f;(function(){var a=b.createElement("a");a.innerHTML="<xyz></xyz>",e="hidden"in a,f=a.childNodes.length==1||function(){try{b.createElement("a")}catch(a){return!0}var c=b.createDocumentFragment();return typeof c.cloneNode=="undefined"||typeof c.createDocumentFragment=="undefined"||typeof c.createElement=="undefined"}()})();var k={elements:c.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:c.shivCSS!==!1,shivMethods:c.shivMethods!==!1,type:"default",shivDocument:j};a.html5=k,j(b);var l=/^$|\b(?:all|print)\b/,m="html5shiv",n=!f&&function(){var c=b.documentElement;return typeof b.namespaces!="undefined"&&typeof b.parentWindow!="undefined"&&typeof c.applyElement!="undefined"&&typeof c.removeNode!="undefined"&&typeof a.attachEvent!="undefined"}();k.type+=" print",k.shivPrint=s,s(b)}(this,document);
/*de.bild.env:25425012.3*/

var de = de || {};
de.bild = de.bild || {};

de.bild.env = {

	// dev
	//'base' : document.location.protocol + '//www.ka.bild-und-partner.de',
	// qa
	//'base' : document.location.protocol + '//www.kaqa.bild-und-partner.de',
	// live
	'base' : document.location.protocol + '//www.bild.de',
                  

                  'domain' : 'bild.de',

	// dev
	//'sslbase' : 'https://ka-ssl-dev.bild-und-partner.de',
	// qa
	//'sslbase' : 'https://ka-ssl-qa.bild-und-partner.de',
	// live
	'sslbase' : 'https://ka-ssl.bild.de',


	// dev
	//'facebookAppId' : '144384252320756'
	// live
	'facebookAppId' : '78193590860'

};




/*de.bild.settings:27210766.16*/

var de = de || {};
de.bild = de.bild || {};

//CONSTANTS
de.bild.settings = (function() {

    // BILD GENERAL CONSTANTS
    var urls = {
        'base' : de.bild.env.base,
        'sslbase' : de.bild.env.sslbase,
        'ssoFullFrameLogin' : ''
    }, lang = {
        'more' : 'mehr...',
        'shut' : 'zuklappen'
    }, facebookAppId = de.bild.env.facebookAppId;

    // COMMUNITY CONSTANTS
    var community = {
        options : {
            'shrinkCommentLength' : 250,
            'shrinkCommentLengthForum' : 150,
            'startCheckCommentsDelay' : 3000,
            'fadeDelay' : 5000,
            'fadeSpeed' : 400,
            'layerDelay' : 750,
            'minCharacktersTyped' : 2,
            // classes
            'ajaxClass' : 'data-ajax',
            'ajaxClassReplace' : 'data-ajax-replace',
            'ajaxClassLightBox' : 'data-ajax-lb',
            'ajaxClassLoad' : 'data-ajax-load',
            //storage name for anon likes
            'anonLikes' : 'commAnonLikes',
            // this is a manual override for live Comments in case we need to switch it on/off fast!
            'allowLiveComments' : false,
            'comCenterElems' : 5,
            'comCenterSlideDelay' : 4000,

            'autoLoginDisabled' : 6
        },

        urls : {

            'home' : '/ka/p/community',

            // number of comments in ugc comment forms
            'getNumberOfComments' : '/ka/ajax/ugcelement/getNewComments/%UGCID%/',
            'showNewComments' : '#url=;/ka/ajax/ugcelement/getNewComments/%UGCID%/%NUMNEW%;',
            'getNewComments' : '#url=;/ka/p/ugcelement/getNewCommentsHTML/%UGCID%/%TIME%/%NUMBEROFCOMMENTS%;',

            // upload urls
            'uploadiframeTarget' : '/ka/cgi-bin/upload.cgi',
            'uploadiframePreload' : '/ka/p/ugcelement/upload_iframe_preload',
            'uploadProgressBar' : '/ka/p/ugcelement/upload_progress_bar/',

            //uploadurls 1414
            'uploadiframeTargetFF' : '/ka/cgi-bin/upload.cgi',
            'uploadiframePreloadFF' : '/ka/p/ugcelement/upload_iframe_preload',
            'uploadProgressBarFF' : '/ka/p/ugcelement/upload_progress_bar/',

            // teaser comments
            'commentsCSS' : '/ka/Konfig/css/ugcGroup.css',
            'articleComments' : '/ka/ajax/numcoms/',

            'getNotificationCounter' : '/ka/ajax/private/sb/counter',

            'loadNotifications' : '/ka/ajax/private/sb/content/%PAGE%',

            'getQODcomment' : '/ka/private/qodregconf',

            //Promotion Layer

            'promoLayer': '/CommunityAppageKA/promotionLayer.bild.html',
            'qotdPromoBox' : '/CommunityAppageKA/promotionLayerQotD.bild.html', 
            'promoLayerFollow' : '/CommunityAppageKA/promotionLayerFollow.bild.html',   

            // teaser comments
            'commentsCSS' : '/ka/Konfig/css/ugcGroup.css',
            'articleComments' : '/ka/ajax/numcoms/',

            //images
            'loadingIconBig' : '/ka/img/icons/loading-indicator-gross.gif',
            'loadingIconSmall' : '/ka/img/icons/loading-indicator.gif',
            'loadingIconSmallDark' : '/ka/img/icons/loading-indicator-ccc.gif',
            'fbConnect' : '/icons/fbconnect-ico.gif',
            'anonProfileImage' : 'http://www.bild.de/ka/img/icons/48X48.unisex.jpg',
            //sso
            'ssoLoginLightBox' : '/ka/p/user/login_lb',
            'ssoIsLoggedIn' : urls.base + '/ka/p/user/is_loggedin',
            'ssoRegister' : urls.base + '/ka/p/user/register',
            'ssoLogout' : urls.base + '/ka/p/user/logout',
            'ssoUserAttrib' : urls.base + '/ka/p/user/login/user_attributes',
            'ssoLoginGateway' : urls.base + '/ka/p/user/getSSOLoginGatewayURL',
            'ssoFBLogin' : '/ka/p/user/fblogin/facebook',
            'ssoFBAdd' : '/ka/p/user/fblogin/facebook/add',
            'ssoFBIframe' : urls.sslbase + '/ka/p/user/fbautologin',
            'ssoFullFrameLogin': 'https://test.mypass.de/sso/web-bde/login?service=https://ka-ssl-dev.bild-und-partner.de/ka/p/user/login_lb',
            

            'ssoLoginQOTD' : urls.base + '/ka/p/user/login_lb/0/qod',

            //user account
            'userSettings' : urls.base + '/ka/p/user/settings',
            'getuploadedprofilepicture' : '/ka/ajax/p/accountsettings/get_uploaded_profile_picture',
            'profilePage' : urls.base + '/ka/p/profile',
            'getUserInfo' : urls.sslbase + '/ka/p/private/userdata/jsonp/getUserDataJson/%USERID%/%TOKEN%',
            'getUserAbout' : urls.sslbase + '/ka/private/settings/about/view',
            //'getUserInfo' : 'https://ka-ssl-dev.bild-und-partner.de/ka/p/private/userdata/jsonp/getUserDataJson/%USERID%',

            // notifications for new features
            'newfeatureNotification' : '/ka/private/onnewfeature',

            // facebook API actions
            'fbPostCommentReply' : '/ka/p/fbtest/postcommenttofb',
            'fbPostPhoto' : '/ka/p/fbtest/postphoto',
            'fbPostVideo' : '/ka/p/fbtest/postvideo',

            // profile actions
            'deleteprofilephoto' : '/ka/ajax/p/user/delete_profile_photo',
            'removefb' : '/ka/ajax/p/accountsettings/removeFbId',

            // bcard
            'bcard' : '/ka/ajax/p/v2/bcard/',
            'topicCount' : '/ka/ajax/get_followers_count/',

            'topicState' : '/ka/ajax/p/follow_topic_status/',

            //follow Topic
            'followTopic' : '/ka/ajax/v2/private/follow_topic/add/%TOPICID%',
            'unFollowTopic' : '/ka/ajax/v2/private/follow_topic/remove/%TOPICID%'
        },

        /**
         * lang language strings used in community elements
         * @object
         * @name lang
         * @private
         */

        lang : {
            'closeall' : 'Alle Zuklappen',
            'openall' : 'Alle Aufklappen',
            'newComment' : '1 neuer Kommentar',
            'newComments' : '%COUNT% neue Kommentare',
            'thereAreNewComments' : 'Es gibt neue Kommentare',
            'thanksforComment' : 'Vielen Dank für Ihren Kommentar!',
            'commentsNo' : 'Kommentare (%COUNT%)',
            'more' : 'mehr',
            'showAllMessages' : 'Alle Mitteilungen anzeigen',
            'noNewMessages' : 'Sie haben keine neuen Nachrichten',
            'newMessages' : '%COUNT% neue Mitteilungen',
            'messages' : 'Mitteilungen',
            'newRequest' : '%COUNT% neue Anfragen',
            'requests' : 'Anfragen',
            'noNewRequests' : 'Derzeit liegen keine unbeantworteten Freundschafts-Anfragen vor',
            'register' : 'Neu registrieren',
            'login' : 'Login',
            'logout' : 'Logout',
            'loggedInFBC' : 'Eingeloggt mit Facebook Connect',
            'loggedInAs' : 'Eingeloggt als',
            'anonUser' : 'Anonymer user',
            'errorNotifications' : 'Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später noch einmal.',
            'error' : 'Es ist ein Fehler aufgetreten. Bitte laden Sie die Seite erneut.',
            'tryagain' : 'Bitte versuchen Sie es später noch einmal.',
            'years' : ' Jahre',
            'notprovided' : 'nicht eingegeben',
            'newWindow' : 'Link öffnet eine neue Seite',
            'following' : 'Folge ich',
            'followingNo' : 'Folge ich (%COUNT%)',
            'followersNo' : 'Folgen mir (%COUNT%)',
            'blockingNo' : 'Blockierte User (%COUNT%)',
            'defollow' : 'Entfolgen',
            'loading' : 'Wird geladen',
            'closeLightbox' : 'Schließen'

        },

        templates : {
            moreHTML : ' ... <a class="more" href="#">mehr</a>',
            threadedCommentItem : '<li class="threaded-comment-area">%CONTENT%</li>',
            loadingLayer : '<div id="loadingLayer"><img src="%IMG%"/></div>',
            message : '<p class="%CLASS%">%CONTENT%</p>',
            lbMessage : '<header><h2>%HEADING%</h2></header><section class="com-lightbox-body"><form class="com-form"><fieldset><p class="%CLASS%">%CONTENT%</p></fieldset></form></section>',
            lbMessageWithButton : '<header><h2>%HEADING%</h2></header><section class="com-lightbox-body"><form method="post" action="#" class="com-form security block"><fieldset><legend class="hidden"></legend> <p>%CONTENT% </p></fieldset><div class="com-buttons"> <input type="submit" value="%BUTTON%" class="btn-def"  onclick="de.bild.community.closeLightBox(); return false;"></div></form><section>',
            spanEl : '<span>%CONTENT%</span>',
            profileSeparator : ' • ',
            linkNewWindow : '<a href="%URL%" rel="external" target="_blank" title="' + lang.newWindow + '">%CONTENT%</a>',
            genericLink : '<a href="#" data-ajax-href="%URL%" class="%CLASS%">%CONTENT%</a>',
            bcard : '<div class="card" id="userProfileCard"></div>'
        }
    };

    // this will one day refer to a global set of variables across the site
    return {

        // community settings
        'community' : community,
        'facebookAppId' : facebookAppId,

        // general bild
        'lang' : lang,
        'urls' : urls
    }
})();

/*de.lib:30104872.1*/

var de = de || {};

/**
* Abtracts base library (jquery) functions
* @memberOf de
*/
de.lib = (function($){      
    
    // jquery is there? hallo!
    if (typeof $ === 'undefined'  || $ !== window.jQuery){
        throw(new Error({'name' : 'Fehlende Bibliothek', 'message':'jQuery nicht uebergeben oder vorhanden'}));
        return;
    }    

    /**
     * abstracts the jquery live function
     * @function
     * @name live
     * @memberOf de.lib
     * @param {$jQuery} $parentSelector 
     * @param {String|Object} events 
     * @param {String} selector 
     * @param {Function} handler 
     * @param {Object} data 
     * @private
     */
    /* de.lib.live($parentSelector, events, selector, handler, data);*/
    function live($parentSelector, selector, events, handler, data){
        // as of 1.7 change to 'on'
        if (typeof $parentSelector == 'string') {
            $parentSelector = $($parentSelector);
        }
        if ($parentSelector.length) {
            data = data || {};
            if (typeof events === 'string') {
                return $parentSelector.on(events, selector, data, handler);
            } else {
                return $parentSelector.on(events, selector);
            }
        }
        return false;
    }
    /**
     * replaceContent: extracts value from allowed object:attribute pairs
     * @param {$Object} $target - jQuery object which will be replaced
     * @param {String} response - HTML from the server
     * @name replaceContent
     * @function
     * @memberOf de.bild.httpFist
     * @private
     */
    function replaceWith($target,response) {
        if (arguments.length < 2) return false;      
       
        var $temp = $('<div/>'),
        temp = $temp.get(0);
        temp.innerHTML = response;
        $target.replaceWith(temp.innerHTML);        
    }

    
    return {
        'live' : function($parentSelector, selector, events, handler, data){
            live($parentSelector, selector, events, handler, data);
        },
        'replaceWith' : function($target,response) {
            replaceWith($target,response);
            return $target;
        }
    };

}(jQuery));
/*de.bild.utils:30407988.1*/

var de = de || {};
de.bild = de.bild || {};
/**
 * @function
 * de.bild.utils - General utility functions
 * @name utils
 * @memberOf de.bild
 * @param {object} $ jQuery Objekt
 * @dependencies ['jQuery','jQuery.cookie']
 */
de.bild.utils = (function($){

    var uA = navigator.userAgent.toLowerCase();

    /* check if window has loaded */
    var windowhasLoaded = false;
    $(window).load(function(){
        windowhasLoaded = true;
    });

    /* jQuery.noop Fallback, if window.console is not supported */
    if(!window.console) {
        window.console = { log: $.noop, info: $.noop, error: $.noop, warn: $.noop };
    }

    /* is local storage supported? */
    var supportsLocalStorage = function() {
            try {
                return !!localStorage.getItem;
            } catch(e) {
                return false;
            }
        },
    /* is session storage supported?*/
        supportsSessionStorage = function() {
            try {
                return !!sessionStorage.getItem;
            } catch(e){
                return false;
            }
        };
    /**
     * Abstraction for local- / session storage
     * @object
     * @name storage
     * @memberOf de.bild.utils
     * @private
     */
    var storage = {
        /**
         * sets value of storage
         * @function
         * @name set
         * @memberOf storage
         * @param {String} key name of data
         * @param {String} value data
         * @param {Bool} persist should we keep this data after the browser session?
         * @private
         */
        'set' : function(key, value, persist) {

            if (!key && !value) {
                return false;
            }

            if (persist) {
                if (supportsLocalStorage()) {
                    window.localStorage.setItem(key, value);
                }
            } else {
                if (supportsSessionStorage()) {
                    window.sessionStorage.setItem(key, value);
                }
            }
        },

        /**
         * gets value from storage
         * @function
         * @name get
         * @memberOf storage
         * @param {String} key name of data
         * @return {String} data value
         * @private
         */
        'get' : function(key) {

            if (!key) {
                return false;
            }

            if (supportsSessionStorage() && window.sessionStorage.getItem(key)) {
                return window.sessionStorage.getItem(key);
            } else if (supportsLocalStorage() && window.localStorage.getItem(key)) {
                return window.localStorage.getItem(key);
            }
            return false;
        },

        /**
         * remove a key/value pair from storage
         * @function
         * @name remove
         * @memberOf storage
         * @param {String} key name of data
         * @return {Boolean} success
         * @private
         */
        'remove' : function(key){

            if (!key) {
                return false;
            }

            if (supportsSessionStorage() && window.sessionStorage.getItem(key)) {
                window.sessionStorage.removeItem(key);
                return true;
            } else if (supportsLocalStorage() && window.localStorage.getItem(key)) {
                window.localStorage.removeItem(key);
                return true;
            }

            return false;
        }
    };

    /**
     * returns current date based on a formatted pattern
     * @param {String} pattern - for an explanation, see function comments
     * @object
     * @name getTime
     * @memberOf de.bild.utils
     * @private
     */
    function getTime(pattern){

        /*
         String patterns:
         getTime('$d.$m.$Y $h:$i Uhr') => 17.02.2012 13:30 Uhr
         getTime('$d/$m/$y | $h:$i Uhr') => 17/02/12 | 13:30 Uhr
         getTime('$D, $M $d, $Y @ $h:$i') => Freitag, Februar 17, 2012 @ 13:30
         getTime('Heute ist $D der $d $M. Das Jahr ist $Y.') => Heute ist Freitag der 17 Februar. Das Jahr ist 2012.
         */

        pattern = pattern || '';

        // if a pattern has been passed and we have at least something to change
        if (pattern !== '' && pattern.indexOf('$') !== -1) {

            var exp = /(\${1}[a-zA-Z]{1})/gi,
                dict = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag', 'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],
                d = new Date(),
                f = {

                    // day number with 0
                    '$d' : function(){
                        return (d.getDate() < 10) ? '0'+  d.getDate() : d.getDate()
                    },
                    // day number
                    '$j' : function(){
                        return d.getDay()
                    },
                    // day name
                    '$D' : function(){
                        return dict[f.$j()];
                    },
                    // month name
                    '$M' : function(){
                        return dict[6+d.getMonth()+1];
                    },
                    // month number with 0
                    '$m' : function(){
                        return (d.getMonth() < 10) ? '0' + (d.getMonth()+1) : (d.getMonth()+1)
                    },
                    // hour in 24hr format
                    '$h' : function(){
                        return (d.getHours() < 10) ? '0'+ d.getHours() : d.getHours()
                    },
                    // minutes
                    '$i' : function(){
                        return (d.getMinutes() < 10) ? '0' + d.getMinutes() : d.getMinutes()
                    },
                    // seconds
                    '$s' : function(){
                        return (d.getSeconds() < 10) ? '0' + d.getSeconds() : d.getSeconds()
                    },
                    // full year yyyy
                    '$Y' : function(){
                        return d.getFullYear()
                    },
                    // last two numbers of full year
                    '$y' : function(){
                        return d.getFullYear().toString().slice(2)
                    }
                };

            var formatted = pattern.replace(exp, function (t) {
                return f[t] ? f[t]() : '';
            });

            return formatted;
        }

        return pattern;

    };

    /**
     * jQuery Extension - Autogrow/shrink functionality for textareas
     * @param {Int} minHeight minimum shrink height of the textarea
     * @param {Int} maxHeight maximum growth height of the textarea
     * @function
     * @name $.fn.TextAreaExpander
     * @private
     * @return {Object} Object of plugin
     */
    $.fn.TextAreaExpander = function(minHeight, maxHeight){
        var hCheck = !($.browser.msie);
        // resize a textarea
        function ResizeTextarea(e){
            // event or initialize element?
            e = e.target || e;
            // find content length and box width
            var vlen = e.value.length, ewidth = e.offsetWidth;
            if (vlen != e.valLength || ewidth != e.boxWidth) {
                if (hCheck && (vlen < e.valLength || ewidth != e.boxWidth))
                    e.style.height = '0px';
                var h = Math.max(e.expandMin, Math.min(e.scrollHeight, e.expandMax));
                e.style.overflow = (e.scrollHeight > h ? 'auto' : 'hidden');
                e.style.height = h + 'px';
                e.valLength = vlen;
            }
            return true;
        };
        // initialize
        this.each(function(){
            // is a textarea?
            if (this.nodeName.toLowerCase() != 'textarea')
                return;
            // set height restrictions
            var p = this.className.match(/expand(\d+)\-*(\d+)*/i);
            this.expandMin = minHeight || (p ? parseInt('0' + p[1], 10) : 0);
            this.expandMax = maxHeight || (p ? parseInt('0' + p[2], 10) : 99999);
            // initial resize
            ResizeTextarea(this);
            //add events
            if (!this.Initialized) {
                this.Initialized = true;
                $(this).bind('keypress', ResizeTextarea).bind('keyup', ResizeTextarea).bind('focus', ResizeTextarea).bind('keydown', ResizeTextarea);
            }
        });
        return this;
    };

    /**
     * calculate the browser viewport
     * @function
     * @name getViewport
     * @memberOf de.bild.utils
     * @returns {object}
     * @private
     */
    function getViewport() {
        var win = $(window),
            top = win.scrollTop(),
            left = win.scrollLeft();

        return {
            top: top,
            left: left,
            bottom: top + win.height(),
            right: left + win.width()
        }
    }
    /**
     * is a jquery object in the vertical viewport?
     * @object
     * @name inViewport
     * @memberOf de.bild.utils
     * @param {$jQuery} $elem
     * @return {Number} visible 0 = not visible
     * @private
     */
    function inViewport($elem){
        if (!$elem || $elem.length === 0) return 0;
        var offset = $elem.offset(),
            viewport = getViewport();
        // invisible, if offset could not be calculated
        if (!offset) return 0;

        var visible = 0,
            top = offset.top;
        // chance for vertical visibility
        if (top < viewport.bottom) {
            var bottom = top + $elem.height();
            // flags
            //1 for top
            //4 for bottom
            if (top >= viewport.top) visible += 1;
            if (bottom < viewport.bottom && bottom >= viewport.top) visible += 4;
        }
        return visible;
    };

    /**
     * scroll the page to a given y-point
     * @object
     * @name scrollTo
     * @memberOf de.bild.utils
     * @param {number} targetOffset y-position to where the window should scroll
     * @param {bool} animate the scroll (true) or not (false)
     * @private
     */
    function scrollTo(ypos, anim){
        if(anim) {
            $(window.opera ? 'html' : 'html, body').animate({scrollTop: ypos}, 400);
        }
        else {
            $(window.opera ? 'html' : 'html, body').scrollTop(ypos);
        }
    };

    /**
     * ran - Zufallsgenerator - generiert eine Zufallszahl zwischen 0 und n. Standardwert = 101
     * @private
     * @param n {Number} Dachszahl
     * @return {Number}
     */
    function ran(n){
        // the random number will be less than n
        n = n || 10001;
        return ~~(Math.random()*n);
    };

    /**
     * Generate a random number from the given range
     *
     * @usage  randomNrFromTo(1, 10)
     * @param  {Integer} from
     * @param  {Integer} to
     * @return {Integer} random number
     *
     */
    function randomNrFromTo(from, to) {
        return Math.floor(Math.random() * (to - from + 1) + from);
    }


    /**
     * adds a stylesheet to the head elem
     * @object
     * @name addStyleSheet
     * @memberOf de.bild.utils
     * @param {String} url of the style sheet!
     * @param {String} id optional id for the link tag
     * @returns {Bool} whether the css tag is present on the page
     * @private
     */
    function addStyleSheet(url, id){
        var cssLoaded = false,
            id = id || 'newStyleSheet' + ran(7001),
            $link = $('<link id="' + id + '" href="' + url + '" rel="stylesheet" type="text/css" media="all" />').appendTo('head');

        // has to work in IE and opera so we do it the long way
        $link.attr({
            href : url,
            rel  : 'stylesheet',
            type : 'text/css',
            media : 'all'
        });

        if ($('link#'+id).length) cssLoaded = true;

        return cssLoaded;
    };


    /**
     * add vendor prefix for the given css style property
     * @param {String} prop css style property
     * @returns {String} fully qualified vendor css style property
     */
    function getStyleWithVendorPrefix(prop) {
        var prefixes = ['Moz','Webkit','Khtml','0','ms', ''],
            elem     = document.createElement('div'),
            upper      = prop.charAt(0).toUpperCase() + prop.slice(1),
            pref     = "";
        for(var len = prefixes.length; len--;){
            if((prefixes[len] + upper) in elem.style){
                pref = (prefixes[len]);
            }
        }
        if(prop in elem.style){
            return prop;
        }
        return '-' + pref.toLowerCase() + '-' + prop;
    }

    /**
     * remove double carriage returns and jquery trims string
     * @function
     * @name trim
     * @param {String} str form value
     * @returns {String} form value
     * @memberOf de.bild.utils
     * @private
     */
    function trim(str) {
        if (str.length) {
            str = $.trim(str)
            str = str.replace(/[\n\r]{2,}/g, function(newLine){
                if (newLine.length >= 2) {
                    return '\n\n'
                } else {
                    return '\n'
                }
            });
            return str;
        }
        return '';
    };

    /**
     * checks if the current page is bild.de
     * @function
     * @name isBild
     * @returns {Bool} true if it's bild.de
     * @memberOf de.bild.utils
     * @private
     */
    function isBild() {
        return window.location.host.indexOf('bild.de') != -1;
    };

    return {
        'scrollTo' : function(ypos, anim){
            if (ypos) {
                scrollTo(ypos, anim);
            }
            return ypos;
        },
        'inViewport' : function($elem){
            return inViewport($elem);
        },
        'addStyleSheet' : function(url, id){
            addStyleSheet(url, id);
            return id;
        },
        'ran' : function(n){
            return ran(n);
        },
        'trim' : function(str){
            str = str || '';
            return trim(str);
        },
        'isBild' : isBild,
        'getTime' : function(pattern){
            pattern = pattern || '';
            return getTime(pattern);
        },
        'storage' : storage,
        'windowhasLoaded' : function(){
            return windowhasLoaded;
        },
        'isIPad': function(){
            return uA.match(/ipad/i) != null
        },
        'isIPhone': function(){
            return (uA.match(/iphone/i) || uA.match(/ipod/i)) != null
        },
        'isMobile' : function(){
            return uA.match(/android|blackberry|iphone|ipad|ipod|windowsce|windowsphoneos7/i) != null;
        },
        'randomNrFromTo': function(from, to){
            return randomNrFromTo(from, to);
        },
        'getStyleWithVendorPrefix': function(property){
            return getStyleWithVendorPrefix(property);
        }
    }

}(jQuery));
/*de.bild.events:29329618.3*/




var de = de || {};
de.bild = de.bild || {};

de.bild.events = (function($) {

    /** Init */

    function init() {

        setEvents();
        setPubSubAsjQueryEvents();
    }

    /** Custom Events */

    var events = {};

    function setEvents () {

        var isMS = window.navigator.msPointerEnabled;
        var isTouch = 'Touch' in window;

        if(isTouch) {
            events = {
                'click': 'touchstart',
                'fastClick': 'mobileClick',
                'mousemove' : 'touchmove',
                'mousedown' : 'touchstart',
                'mouseup' : 'touchend'
            };
        } else if(isMS) {
            events = {
                'click': 'MSPointerDown',
                'fastClick': 'click',
                'mousemove' : 'MSPointerMove',
                'mousedown' : 'MSPointerDown',
                'mouseup' : 'MSPointerUp'
            };
        } else {
            events = {
                'click': 'click',
                'fastClick': 'click',
                'mousemove' : 'mousemove',
                'mousedown' : 'mousedown',
                'mouseup' : 'mouseup'
            };
        }
    }


    /** Namespaced Events */
    function getNameSpacedEvents( namespace ) {

        var nEvents = {};

        if(!namespace) {
            namespace = "jsModule";
        }
        $.each(events, function(key, val) {
            nEvents[key] = val+'.'+namespace;
        });

        return nEvents;
    }


    function EventManager() {

        this.observedTopics = {};
        this.recentPublished = {};
    }


    EventManager.prototype.publish = function(topic, args){

        if(!this.observedTopics[topic]) {
            if(!this.recentPublished[topic]){
                this.recentPublished[topic] = [];
            }
            this.recentPublished[topic].push(args);
            return false;
        }
        for(var i= 0, len = this.observedTopics[topic].length; i < len; i++) {
            this.observedTopics[topic][i].apply(this, args || []);
        }
    };



    EventManager.prototype.subscribe = function(topic, callback){

        if(!this.observedTopics[topic]){
            this.observedTopics[topic] = [];
        }
        this.observedTopics[topic].push(callback);
        return [topic, callback];
    };

    EventManager.prototype.unsubscribe = function(topic, callback){

        if(!this.observedTopics[topic]) {
            return false;
        }
        for(var i= 0, len = this.observedTopics[topic].length; i < len; i++) {
            if(this.observedTopics[topic][i] == callback){
                this.observedTopics[topic].splice(i, 1);
            }
        }
    };


    EventManager.prototype.getRecentPublished = function(topic){

        if(!this.recentPublished[topic]){
            return false;
        }
        return this.recentPublished[topic];
    };


    function setPubSubAsjQueryEvents() {

        if(!jQuery.publish || !jQuery.subscribe) {
            jQuery.publish = function(topic, args){
                return EManager.publish(topic, args);
            };
            jQuery.subscribe = function(topic, callback){
                return EManager.subscribe(topic, callback);
            };
            jQuery.unsubscribe = function(topic, callback){
                return EManager.unsubscribe(topic, callback);
            };
        }
    }


    var EManager = new EventManager();
    /** Auto Init */
    init();


    /** Public API */
    return {
        publish : function(topic, args){
            return EManager.publish(topic, args);
        },
        subscribe : function(topic, callback){
            return EManager.subscribe(topic, callback);
        },
        unsubscribe : function(topic, callback){
            return EManager.unsubscribe(topic, callback);
        },
        getNameSpacedEvents: function( namespace ){
            return getNameSpacedEvents( namespace );
        },
        getSubscribers: function() {
            return EManager.observedTopics;
        },
        getRecentPublished : function(topic){
            return EManager.getRecentPublished(topic);
        },
        createNewEventManager: function(){
            return new EventManager();
        }
    };

})(jQuery);


/*de.bild.mobileSwitch:30057742.20*/

var de = de || {};
de.bild = de.bild || {};
de.bild.moduleConfig = de.bild.moduleConfig || {};

de.bild.moduleConfig.mobileSwitch = {
    wapUrl : 'wap.bild.de',
    buttonHTML : '<div id="switchContainer"><span><a class="mobileSwitch" href="#" style="color:#555">Zur mobilen Ansicht wechseln</a></span> <div id="mobileClose"><a style="color:#999;" class="mClose">X</a></div></div>',
    buttonStyle : {
        'height' : '75px',
        'text-align' : 'center',
        'background' : '#efefef',
        'color' : '#555555',
        'font-size' : '45px',
        'line-height' : '75px',
        'font-family' : '"Swiss","Arial","Helvetica","Tahoma",sans-serif',
        'font-weight' : '400',
        'border-bottom' : '1px solid #b6b6b6',
        'border-top' : '1px solid #f9f9f9',
        'position' : 'absolute',
        'z-index' : '100000',
        'width' : '100%'
    },
    closeButtonStyle : {
        "width" : "84px",
        "position" : "absolute",
        "right" : "0px",
        "display" : "inline",
        "border-left" : "1px solid #d4d4d4"
    },
    cookieOption : {
        path : '/',
        domain : 'bild.de', //bdedev.de
        expires : 30
    },
    message : 'Wollen Sie zur mobilen Ansicht dieser Seite wechseln?',
    groups : [{
        maxWidth : 320,
        action : "wap"
    }, {
        maxWidth : 980,
        action : "ask"
    }, {
        maxWidth : Infinity,
        action : "web"
    }],
    debug : false
};

var de = de || {};
de.bild = de.bild || {};
de.bild.mobileSwitch = (function() {

    var konfig = de.bild.moduleConfig.mobileSwitch ? de.bild.moduleConfig.mobileSwitch : false;
    var storageName = "mobileSwitch";
    var regex = navigator.userAgent.match(/(iPhone|iPod|Android|BlackBerry|webOS|AU-MIC|AUDIOVOX-|Alcatel|Blazer|Danger hiptop|DoCoMo|Ericsson|Googlebot-Mobile|MSN Mobile Proxy|Handheld|IEMobile|Klondike|LG-|LGE-| LGE |MOT-|NetFront|Nokia|Opera Mini|PalmOS|PalmSource|Panasonic-|SAGEM-|SAMSUNG|SGH-|SHARP-|SIE-|Samsung-|Smartphone|Symbian OS|Windows CE|portalmmm|Profile\/MIDP-|UP.Link|UP.Browser|XV6875|htc|amoi|xda|avantgo|brew|OpenWave|Nintendo DSi)/i);
    var regexIpad = navigator.userAgent.match(/iPad/i);

    function init() {

        //Wenn User über backfrommobile.de kommt wird für alle mobilen Geräte ein Button angezeigt
        if (window.location.href.indexOf('backfrommobile.bild.de') != -1) {
            deleteValue(storageName);
            if (regex != null || regexIpad != null) {
                createButton(konfig.buttonHTML);
            }
            return false;
        }

        //Weiche läuft nur auf www.bild.de zum test auch auf stage
        if (window.location.href.indexOf('www.bild.de') == -1 && window.location.href.indexOf('.bdedev') == -1 && window.location.href.indexOf('backfrommobile.bild.de') == -1)
            return false;

        //Mobile Switch nur,wenn es sich um ein Mobiles Gerät handelt
        if (regex == null && regexIpad == null) {
            return false;

        }

        //Sessionstorage auslesen
        if (!konfig.debug) {
            var data = getValue(storageName);
            if (data != null) {
                try {
                    var action = data;
                    doSwitchAction(action);
                    return false;

                } catch(e) {
                    deleteValue(storageName);
                }
            }
        }

        if (konfig) {

            var width = screen.width < screen.height ? screen.width : screen.height;


            if (konfig.groups.length > 0) {
                for (var i = 0; i < konfig.groups.length; i++) {
                    //passende Aktion gefunden
                    if (konfig.groups[i].maxWidth > width) {
                        console.log(konfig.groups[i].action)
                        doSwitchAction(konfig.groups[i].action);
                        return false;
                    }
                }
            }
        }
        return false;
    }

    function doSwitchAction(action) {
        if (action) {
           //Ipad Ausnahmen 
           if (regexIpad) {
               if(action=='ask'){
                 action='button';  
               }                
           }
           
            switch (action) {
                case "ask":
                    askOption();
                    break;
                case "wap":
                    saveAction(action);
                    redirect();
                    break;
                case "button":
                    saveAction(action);
                    createButton(konfig.buttonHTML);
                    break;
                case "web":
                    saveAction(action);
                    createButton(konfig.buttonHTML);
                    break;
            }
        }
        return false;

    }

    function askOption() {
        setTimeout(function(){
            if (!confirm(konfig.message)) {
                saveAction("button");
                createButton(konfig.buttonHTML);
            } else {
                saveAction("wap");
                redirect();
            };
        },1000)
    }

    function redirect() {
        window.location.href = window.location.href.replace(window.location.hostname, konfig.wapUrl);
    }

    function createButton(html) {        
           //Ipad Ausnahmen 
           if (regexIpad) {
               if(window.devicePixelRatio>1){
                   return false;
               }                
           }
           
           
        //erzeuge HTML Objekt aus String
        var button = jQuery(konfig.buttonHTML).css(konfig.buttonStyle);
        button.find('#mobileClose').css(konfig.closeButtonStyle);

                jQuery('#fullBanner,#innerWrapper').css('top', '75px');
                jQuery('body').prepend(button);
                if (jQuery('#switchContainer').width() < jQuery('#outerWrapper').width()) {

                    var width = jQuery('#outerWrapper').width();
                    if (jQuery('#sky_left').size() > 0) {
                        width += 240;
                    }
                    jQuery('#switchContainer').css('width', width);
                }

                jQuery('body').on(de.bild.globalSandBox.getActionEvents('mobilSwitch').click, '.mobileSwitch', function(e) {
                    buttonClickHandler(e);
                })
                jQuery('body').on(de.bild.globalSandBox.getActionEvents('mobilSwitch').click, '#mobileClose', function(e) {
                    e.preventDefault();
                    jQuery('#switchContainer').remove();
                    jQuery('#fullBanner,#innerWrapper').css('top', '0');
                })


    }

    function saveAction(action) {
        setValue(storageName, action);
    }

    //onclick Action für "zurück zur Mobilen Seite"
    function buttonClickHandler(e) {
        e.preventDefault();
        //set default to wap
        saveAction('wap');
        var href = window.location.href.replace(window.location.hostname, konfig.wapUrl);
        window.location.href = href;

    }

    function webButtonHandler() {
        saveAction('web');
    }

    function getValue(storageName) {
        var data = jQuery.cookie(storageName);
        return data;

    }

    function setValue(storageName, data) {
        var date = new Date();
        date.setTime(date.getTime() + (konfig.cookieOption.expires * 24 * 60 * 60 * 1000));
        var expires = "expires=" + date.toGMTString() + ";";
        document.cookie = storageName + "=" + data + ";path=" + konfig.cookieOption.path + ";" + expires + "domain=" + konfig.cookieOption.domain + "";

    }

    function deleteValue(storageName) {
        //return jQuery.cookie(storageName,'',{path:/,expires: -1 });//sessionStorage.removeItem(storageName);
        var expires = "expires=Thu, 01 Jan 1970 00:00:01 GMT;";
        document.cookie = storageName + "=null;path=" + konfig.cookieOption.path + ";" + expires + "domain=" + konfig.cookieOption.domain + "";
    }



    if (de.bild.events) {
        //start on Navi ready
        de.bild.events.subscribe('Navigation ready', function() {
            init();
        })
    } 

})()
/*de.bild.mobile:30407986.1*/

var de = de || {};
de.bild = de.bild || {};
de.bild.mobile = (function($){

    function isIPad(){
        return (/iPad/i.test(navigator.userAgent) && navigator.platform === "iPad");
    }

    function isBildApp(){
        return (/BildIPad/i.test(navigator.userAgent));
    }

    function isIOS() {
        return ( navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false );
    }

    function isWebkit() {
        return (/WebKit/i.test(navigator.userAgent));
    }

    var mobileEvents = {
        'click' : 'touchstart',
        'fastclick' : 'mobileClick',
        'move' : 'touchmove',
        'mouseDown' : 'touchstart',
        'mouseUp' : 'touchend'
    };

    return {
        'isIOS' : function() {
            return isIOS();
        },
        'isIPad' : function() {
            return isIPad();
        },
        'isWebkit' : function() {
            return isWebkit();
        },
        'hasTouchSupport': function(){
            return 'ontouchstart' in document.documentElement;
        },
        'mobileEvents': function(event) {
            return mobileEvents[event];
        }
    }

})(jQuery);



/**
 * jQuery custom event for iOS Tap Events.
 *
 * @usage - Simply bind as any other event e.g. $('#foo').bind('mobileClick', function() { doSomething(); });
 *
 **/
(function($) {

    $.event.special.mobileClick = {

        $tapTarget : null,
        tapEventData: null,

        setup : function(data) {

            var _this = this;

            this.$tapTarget = $(this);
            this.tapEventData = {};

            this.$tapTarget.on('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
            });

            this.$tapTarget.on('touchstart', function(e) {

                if(e.originalEvent.touches.length > 1) {
                    _this.tapEventData.noTap = 1;
                    return;
                }

                _this.tapEventData = {
                    dateTime : new Date().getTime(),
                    startX : e.originalEvent.touches[0].pageX,
                    startY : e.originalEvent.touches[0].pageY,
                    xCoord : 0,
                    yCoord : 0,
                    touchMoved : 0
                };

                _this.$tapTarget.on('touchmove', function(e) {
                    _this.tapEventData.touchMoved = 1;
                    _this.tapEventData.xCoord = e.originalEvent.touches[0].pageX;
                    _this.tapEventData.yCoord = e.originalEvent.touches[0].pageY;
                });
            });

            this.$tapTarget.on('touchend', function(e) {

                var newDate = new Date().getTime();

                if(_this.tapEventData.noTap) {
                    _this.tapEventData.noTap = 0;
                    return;
                }
                _this.$tapTarget.off('touchmove');

                // yes, this is heavy! use a single boolean variable instead for the second part of condition
                if(
                    (newDate - _this.tapEventData.dateTime) < 250 &&                                // check if time between touchstart and touchend is < 250ms
                    (!_this.tapEventData.touchMoved ||                                          // did any movement take place?
                     (Math.abs(_this.tapEventData.xCoord - _this.tapEventData.startX) < 10       // movement occured, but less then 10px in the X-axis?
                         && Math.abs(_this.tapEventData.yCoord - _this.tapEventData.startY) < 10)    // same as above for the Y-Axis
                        )
                    ) {
                    _this.$tapTarget.trigger('mobileClick');
                }
                _this.tapEventData.touchMoved = 0;
            });

        },
        teardown : function() {
            $(this).off('touchstart');
            $(this).off('touchend');
            this.tapEventData = {};
        }
    };
})(jQuery);

/*de.bild.httpFist:25425028.2*/


/**
* @fileoverview Parses defined attributes of AJAX-enabled elements and creates HTTP GET request
* @author <a href="mailto:rdodd@bild.de">Ramon Dodd</a>
*/

/**
*
* .----.-----.-----.-----.
 /      \     \     \     \
|  \/    |     |   __L_____L__
|   |    |     |  (           \
|    \___/    /    \______/    |
|        \___/\___/\___/       |
 \      \     /               /
  |                        __/
   \_                   __/
    |        |         |
    |                  |
    | H T T P F I S T  |
   
  Fast Injection Snippet Templating 
*/

var de = de || {};
de.bild = de.bild || {};

/**
 * de.bild.httpFist
 * @param {$jQuery} jQuery - the jQuery namespace
 * @name httpFist
 * @function
 * @memberOf de.bild
 * @namespace Parses defined attributes of AJAX-enabled elements and creates HTTP GET request
 */
de.bild.httpFist = (function($){

        /* the separator character. used to split the variables*/
        var separator = ';',
        ajaxtimeout = 10000,
        contentparentClass = 'data-ajax-contentparent',
        badBrowser = $.browser.msie && $.browser.version.substr(0,1)<9,       
        /* will match the following pattern - abc=;abc123/_.&,-:;
         Example of expected string: #url=;friends-list001.snip;target=;pdemo1;contentparent=;true;data=;html;callback=;klasdasdflkjdf;*/
        regEx = /([a-zA-Z]+)?=\;([\w\d\_\-\.:%\/,=\&\?]+)\;/g;
        

    /**
     * jQuery Extension - queue for ajax requests It is a front-end for jQuery.ajax() and takes the same options/arguments as any standard ajax call, just makes sure that only one ajax call can be running at a time.
     * @function
     * @name $.fn.ajaxQueue
     * @private
     * @return {Object} Object of plugin
     */
        (function($) {
       
        /* jQuery on an empty object, we are going to use this as our Queue*/
        var ajaxQueue = $({});
       
        $.ajaxQueue = function( ajaxOpts ) {
            var jqXHR,
                dfd = $.Deferred(),
                promise = dfd.promise();
       
            /* queue our ajax request*/
            ajaxQueue.queue( doRequest );
       
            /* add the abort method*/
            promise.abort = function( statusText ) {
       
                /* proxy abort to the jqXHR if it is active*/
                if ( jqXHR ) {
                    return jqXHR.abort( statusText );
                }
       
                /* if there wasn't already a jqXHR we need to remove from queue*/
                var queue = ajaxQueue.queue(),
                    index = $.inArray( doRequest, queue );
       
                if ( index > -1 ) {
                    queue.splice( index, 1 );
                }
       
                /* and then reject the deferred*/
                dfd.rejectWith( ajaxOpts.context || ajaxOpts, [ promise, statusText, "" ] );
                return promise;
            };
       
            /* run the actual query*/
            function doRequest( next ) {
                jqXHR = $.ajax( ajaxOpts )
                    .then( next, next )
                    .done( dfd.resolve )
                    .fail( dfd.reject );
            }
       
            return promise;
        };
       
        })(jQuery);    

    /**
     * getValue: extracts value from allowed object:attribute pairs. Also checks for data attributes in HTML5 elements
     * @param {$Objekt} data - contains the object of the Event
     * @returns {String|Null}
     * @name getValue
     * @function
     * @memberOf de.bild.httpFist
     * @private
     */
      function getValue($obj){
        var nodeName = $obj[0].nodeName.toLowerCase(),
        value = null;

        switch (nodeName) {
            case ('a') : value = $obj.attr('href'); break;
            case ('select') : value = $obj.find('option:selected').val(); break;
            case ('option') : value = $obj.val(); break;
            case ('input') : value = $obj.val(); break;
        }
        return value;
      };
    /**
     * buildFunction: turns a string into a function if it's available in the window object
     * @param {String} funcName - name of function. can be global name or dot notation syntax, eg. de.bild.community.myFunction
     * @returns {Function}
     * @name getValue
     * @function
     * @memberOf de.bild.httpFist
     * @private
     */
      function buildFunction(funcName){
            if (!funcName) {
               return null; 
            }
            /* if the function is directly available in the window object*/
            if (typeof window[funcName] === 'function') {
                return window[funcName];
            }
           
            /* split between the dots if we're looking for a namespaced func*/
            var objNames = funcName.split('.');
            /* get the parent object first
            tempObj = window[objNames[0]];
           
            /*loop through the child objects and get the final entry*/
            for(var i=1,j=objNames.length;i<j;i++){
                if (tempObj[objNames[i]]) {
                    tempObj = tempObj[objNames[i]];
                }
            }  
           
            return tempObj;
      };     
    /**
     * replaceContent: extracts value from allowed object:attribute pairs
     * @param {$Object} $target - jQuery object which will be replaced
     * @param {String} response - HTML from the server
     * @name replaceContent
     * @function
     * @memberOf de.bild.httpFist
     * @private
     */
    function replaceContent($target,response) {
        if (badBrowser) {
                var $temp = $('<div/>'),
                temp = $temp.get(0);
                temp.innerHTML = response;
                $target.replaceWith(temp.innerHTML);
        } else {
            $target.replaceWith(response);
        }
    }; 
      
   
    /**
     * parse: reads the attribute value of an object, parses it and assembles an HTTP Request.
     * Allowed objects [and their attributes]: a[href], select[options.value]
     * Takes one argument <strong>obj</strong> which is an object:
     * <ul>
     * <li>@property {object} <strong>obj</strong> The object with which the Event is bound</li>
     * <li>@property {replace} <strong>str</strong> Should the target be replaced instead of filled?</li>
     * <li>@property {$object} <strong>$target</strong> (optional) jQuery Object which represents the target for injected Ajax content</li>
     * <li>@property {string} <strong>url</strong> (optional) pass a url manually</li>
     * <li>@method {function} <strong>callback</strong> (optional) Function to be executed after a successful Ajax operation. It gets the scope of the original Element on which the Event was bound</li>
     * </ul>
     * @param {Objekt} data - contains the object of the Event (mandatory), a target jQuery object (optional) and a callback function (optional)
     * @returns {Bool} false
     * @name parse
     * @function
     * @memberOf de.bild.httpFist
     * @private
     */
      function parse(data){
         
        var temp = {}, $ob, s, m, i, o, target, url, method, callback, hasTarget= false, dataType, jhxr, $target,$context;

        if (typeof data.obj === 'object') {
            $obj = data.obj.nodeName.toLowerCase()!='select'?$(data.obj):$(data.obj).find(':selected');
            //html5
            if ($obj.attr('data-ajax-href') && $obj.attr('data-ajax-href') !== '') { 
                temp.url = $obj.attr('data-ajax-href');
                temp.target = ($obj.attr('data-ajax-target') && $obj.attr('data-ajax-target') !== '') ? $obj.attr('data-ajax-target') : null;
                temp.callback = $obj.attr('data-ajax-callback') ? $obj.attr('data-ajax-callback') : null;
            } else {

                s = getValue($obj);

                if (s && !data.url) {
                    /* here we pull out everything after the hash 
                    match our params and then extract the keys and values and store them in temp*/

                    s = s.substring(s.indexOf('#')+1,s.length);
                    m = s.match(regEx);
                    if (!m) {
                       return false; 
                    }
                    for (i=0,j=m.length;i<j;i++) {
                        o = m[i].replace(regEx,'$1'+separator+'$2').split(separator);
                        temp[o[0]]=o[1];
                    } 
                }
            }
        }


        target = (temp.target) ? temp.target : null;
        url = (data.url) ? data.url : temp.url;
        method = data.method ? data.method : 'GET';
        callback = (data.callback) ? data.callback : buildFunction(temp.callback ? temp.callback : false);
        dataType = (data.dataType) ? data.dataType : 'html';


        if (!url) return false;
        
        /* we can add a loading class if we want      
        //if (target) {$('#'+target).find('form.listsort').addClass('loading');} else if (data.$target) {data.$target.addClass('loading');}*/

        jhxr = $.ajaxQueue({
            'url': url,
            'dataType': dataType,
            'cache' : true,
            'type' : method,
            'timeout' : ajaxtimeout, 
            'success': function(response){

                /* recheck for targets in success to avoid DOM manipulation on targets that no longer exists because this one has been sitting in the queue*/
                if (target) {
                  // let's jquery that id
                  $target = $('#'+target);
                  hasTarget = true;
                }
                /* manual override: here, if a jquery object was passed to the function as $target, we want that to be the place where we inject the HTML
                // we will still pass whatever target we find in the url string as a parameter*/
                if (data.$target) {
                  $target = data.$target;
                  hasTarget = true;
                }
                /* if we have the ok to insert content, then do it*/
                
                    if (hasTarget && $target.length) {
                        $target.empty();
                        if (data.replace) {
                            $context = $target.parent();
                            de.lib.replaceWith($target,response);
                        } else {
                            // html() will not execute scripts
                            if (response.indexOf('</script>') != -1) {
                                $target.html('<div id="httpfist-replaceme-div"/>');
                                de.lib.replaceWith($('#httpfist-replaceme-div'),response);  
                            } else {
                                $target[0].innerHTML = response;
                            }             
                            $context = $target;
                        }
                    }

                /* let's give the callback the scope of the original object */  
                (typeof callback === 'function') && callback.apply(data.obj,[response,$context]);
               
            },
            'error': function(xhr, textStatus, errorThrown){
                $target = (target) ? $('#'+target) : data.$target;
                (typeof data.error === 'function') && data.error.apply(data.obj,[xhr, textStatus, $target]);
            }
        }); 
       
        return jhxr;
      };    

   /* public Interface*/
    return {
       'load' : function(data){
            if (data) {
                return parse(data);
            }
           return false; 
        }

   
    };
   
}(jQuery));
/*de.bild.sso:27401092.9*/

/**
* de.bild.sso - main SSO functionality
* @name sso
* @memberOf de.bild
* @param {object} $ JQuery
* @function
* @returns {Function} init - initalises all sso functionality
* @namespace SSO
* @dependencies ['de.bild.settings','jquery.bildLightbox.js', 'jQuery.cookie']
*/
de.bild.sso = (function($){

    // cookie names
    var avKeepUsr = 'avKeepUsr',
    avComUsr = 'avComUsr',
    // should we redirect to comm homepage after login (only for header)
    redirectToCommunityHome = false,
    //cookie generated by KA
    loggedInCookie = 'loggedin',
    //iframe id - this is dynamically generated
    ssoIframeId = 'SSOavKeepUsrFrame',
   
    //login iframe id for in-page login forms
    loginIframe = 'login_popup_accountsettings',

    // userinfo
    userInfo = null,
   
    // lightbox dimensions
    lbWidth = 752,
    lbHeight = 554,
   
    // templates
    templates = {
        'userStrap' : '<img alt="%NAME%" src="%SRC%">&nbsp;%NAME%&nbsp;▼',
        //'userStrap' : '%NAME%&nbsp;▼',
        'loggedout' : '<a href="#" id="comNewUser" onclick="de.bild.sso.register()">'+de.bild.settings.community.lang.register+'</a><span>|</span><a href="#" id="comLoginout" onclick="de.bild.sso.login({\'goHome\':true,fullframe:false});return false;">' + de.bild.settings.community.lang.login + '</a>',
        'loggedinNoData' : '<a href="#" onclick="de.bild.sso.logout()">' + de.bild.settings.community.lang.logout + '</a>',
       // 'loggedin' : '<p class="%CLASS%" id="comUsername">' + de.bild.settings.community.lang.loggedInAs + ' <a href="%PROFILEURL%">%NAME%</a></p><span>|</span><a href="#" id="comLoginout" onclick="de.bild.sso.logout()">' + de.bild.settings.community.lang.logout + '</a>'
        'loggedin' : '<p class="%CLASS%" id="comUsername">' + de.bild.settings.community.lang.loggedInAs + ' <a href="'+de.bild.settings.community.urls.profilePage+'">%NAME%</a></p><span>|</span><a href="#" id="comLoginout" onclick="de.bild.sso.logout();return false;">' + de.bild.settings.community.lang.logout + '</a>'
    },
   
    // let's keep a record of what the header bar is doing
    // we need this to record whether the page (tab) thinks the user is logged in
    // since someone might log in/out in another tab
    isUserBarOn = false,

    // cache DOM elements
    $body,
    $contentWrapper,
    // login container selector and elem var
    comloginSelector = '#comlogin',
    $comlogin,

    //15 Spalten
    _15_spalten = false,
    $comloginLoggedInList,
    $comNewUser,
    $comLoginLink,
    $comUsername,
    $comUserList,
    $comUserListUl,
    $comLogoutLink;

    /* UTILS
    ///////////////////////////       */
    /**
     * launches a lightbox.
     * @function
     * @name lightBox
     * @param {String} content - content to be loaded in the lb
     * @param {Function} callback (optional) - Function called after the content has been loaded
     * @memberOf de.bild.community
     * @private
     */
    function lightBox(content,callback,dominant){
        if (!content) return false;
        var cb = (typeof callback === 'function') ? callback : function(){};
        var dominant = !dominant ? false:true;
        $body.bildLightbox({
            'closeOnEsc' : true,
            'closeOnBodyClick' : false,
            'wrapperClass' : 'com-lightbox layer lb1',
            'wrapperId'     : 'sso-lightbox',
            dominant: dominant,
            'content' : content,
            'width' : lbWidth,
            'height' : lbHeight,
            'callback' : cb,
            'onClose' : function(){
                redirectToCommunityHome = false;
            }
        });
    };
    /**
     * closes lightbox window
     * @function
     * @name logout
     * @memberOf de.bild.sso
     * @private
     */
    function close(){
        if ($body.data('bildLightbox')) $body.data('bildLightbox').close();
    };
    /* COOKIES
    ///////////////////////////       */
    function getUserInfo() {
        var userInfo = null,
        _c = $.cookie(avComUsr);
        if (_c) {
            try {
                userInfo = $.parseJSON(decodeURIComponent(_c));
            } catch(e) {}
        }
        return userInfo;
    };
    function setUserInfo(data, callback) {
        if (data) {
            data = encodeURIComponent(data);
            // keep cookies only for the session
            $.cookie(avComUsr, data, {
                path: '/',
                domain: de.bild.env.domain
            });
        }
        if (typeof callback === 'function') callback();
    };
    function deleteUserInfo(){
        if ($.cookie(avComUsr)) {
            $.cookie(avComUsr, null);
        }  
    };
    /* sets the redirect var: if someone logs in via the link in the header, they will be redirected to the community homepage (de.bild.settings.community.urls.home) */
    function setGoHome() {
        redirectToCommunityHome = true;
    };
    /* checks if we should redirect!*/
    function getGoHome() {
        if (redirectToCommunityHome === true) {
            close();
            if (window.location.href.indexOf(de.bild.settings.community.urls.home) !== 1) {
                window.location.href = de.bild.settings.community.urls.home;
            } else {
                window.location.reload();
            }
           
           
        } else {
            return false;
        }
       
    };
    function isFbUser() {
        var userInfo = getUserInfo();
        return userInfo.isFbUser || false;
    };
    function isLoggedIn() {
        var isLoggedIn = false;
        if ($.cookie(loggedInCookie) && parseInt($.cookie(loggedInCookie)) === 1) {
            isLoggedIn = true;
        }
        return isLoggedIn;
    };
    /* SETUP EVENTS
    ///////////////////////////       */
    /**
     * SSO events on BILD.de
     * @function
     * @name setupEvents
     * @memberOf de.bild.sso
     * @private
     */
    function setupEvents(){ 

        if (_15_spalten === true) {

            $comNewUser.on('click', function(e){
                e.preventDefault();
                register();
            });

            $comLoginLink.on('click', function(e){
                e.preventDefault();
                login({'goHome':true});
            });

            $comLogoutLink.on('click', function(e){
                e.preventDefault();
                logout();
            });

        }

        de.lib.live($body, 'a.login-lightbox, form.commentlogin input.btn-login, a.com-login', 'click', function(e){
            e.preventDefault();
            login();
            //login();
        });

        de.lib.live($contentWrapper, 'a.com-fb-login, a.com-fb-login-button', 'click', function(e){
            e.preventDefault();
            var fbLoginWindow = window.open(de.bild.settings.community.urls.ssoFBLogin, 'fbLoginWindow', 'width='+lbWidth+',height='+lbHeight+',resizable=yes');
        });
      
        de.lib.live($contentWrapper, 'a.com-fb-add', 'click', function(e){
            e.preventDefault();
            var fbLoginWindow = window.open(de.bild.settings.community.urls.ssoFBAdd, 'fbLoginWindow', 'width='+lbWidth+',height='+lbHeight+',resizable=yes');
        });

        de.lib.live($body, 'a.com-register', 'click', function(e){
            e.preventDefault();
            register();
        });
       
    };
   
   
    /* CALLBACKS
    ///////////////////////////       */
    /**
     * this function will be called after someones logs in.
     * @function
     * @name gatewayDefaultCallback
     * @memberOf de.bild.sso
     * @param {Object} data {'isLoggedIn' : true, 'userName' : '', 'isFbUser' : true}
     * @param {Bool} refresh
     * @private
     */
    function gatewayDefaultCallback(data, refresh) {
        if (data && data.isLoggedIn === true) {
                // set cookie here
                var jsonString = '{"isLoggedIn" : '+data.isLoggedIn+', "userName": "'+data.userName+'",  "isFbUser" :'+data.isFbUser+',  "userPicSrc" :"'+data.userPicSrc+'"}';
                // set the cookie
                var cb;
                if (!refresh) {
                    cb = function(){
                        renderUserBar(true);
                    }; 
                } else {
                    cb = function(){
                        window.location.reload();
                    };
                }  
                setUserInfo(jsonString, function(){
                    cb();
                });
        }
    }; 
    /**
     * this function will be called if someone lands on the page and been previously logged in. We have to check with the SSO if their session is still open
     * @function
     * @name gatewayAutoLoginCallback
     * @memberOf de.bild.sso
     * @param {Object} data
     * @private
     */
    function gatewayAutoLoginCallback(data) {
        $.ajax(de.bild.settings.community.urls.ssoIsLoggedIn, {
            dataType: 'json',
            cache : true
        }).done(function(data) {
             // remove iframe
            $('#'+ssoIframeId).remove();
            if(data.isLoggedIn === true){
                window.location.reload();
                //For Autologin check if on home then only do renderuserbar....
               
               
            } else {
                $.cookie(avKeepUsr, null);
                deleteUserInfo();
            }
        });
    };

    /* ACTIONS
    ///////////////////////////       */
     /**
     * always called on page refresh to check one's status with the SSO
     * @function
     * @name getStatus
     * @memberOf de.bild.sso
     * @private
     */
     function getStatus(){
        /* if the user wants to stay logged in , but the session isn't initiated yet ... */
        if ($.cookie(avKeepUsr) && $.cookie(avComUsr) == null) {
            $.ajax(de.bild.settings.community.urls.ssoLoginGateway, {
                dataType: 'json',
                cache : true,
                    data: {
                     gatewayCallback: 'de.bild.sso.gatewayAutoLoginCallback'
                    }          
            }).done(function(data) {
                    if(data && data.loginGatewayUrl && data.rememberCheck){
                        var url = data.loginGatewayUrl+encodeURIComponent(data.rememberCheck+window.location.href);
                        // dynamically generate iframe to check stay loggedin state so that we don't have to refresh the page twice
                        $body.append('<iframe id="'+ssoIframeId+'" src="'+url+'" style="position:absolute;height:0;width:0;border:0;" frameborder="0" onload="de.bild.sso.gatewayAutoLoginCallback()" />');
                    }  
              });
        }
    };  
    /**
     * modfies nav depending on logged in / logged out status
     * @function
     * @name renderUserBar
     * @memberOf de.bild.sso
     * @param {Bool} whether this function is called as a result of an server action
     * @private
     */
    function renderUserBar(calledByServer){
        if ($comlogin && $comlogin.length === 0) {
            $comlogin = $(comloginSelector);
        }
        calledByServer = calledByServer || false;
        if (isLoggedIn()) {
            renderUserBarLoggedIn(calledByServer);
        } else {
            renderUserBarLoggedOut(calledByServer);
        }
    };
    /**
     * modfies nav when logged in
     * @function
     * @name renderUserBarLoggedIn
     * @memberOf de.bild.sso
     * @param {Bool} whether this function is called as a result of an server action
     * @private
     */
    function renderUserBarLoggedIn(calledByServer) {
        var getCookieInfo = getUserInfo();

        if ($comlogin && $comlogin.length) {
            calledByServer = calledByServer || false;
           
            //Userdata auslesen
            if (getCookieInfo) {
                var userName = getCookieInfo.userName || de.bild.settings.community.lang.anonUser,
                userPicSrc = getCookieInfo.userPicSrc || de.bild.settings.community.urls.anonProfileImage,
                cssClass = isFbUser() ? 'fbConnect' : '';

                if (_15_spalten === true) {
                    $comlogin.addClass('logged-in')
                    $comloginLoggedInList.show();
                    $comUsername.html(templates.userStrap.replace('%SRC%',userPicSrc).replace(/%NAME%/g, userName));                  

                   
                } else {
                    var html = templates.loggedin.replace('%CLASS%',cssClass).replace('%NAME%', userName);
                    $comlogin.html(html);
                }

                // Hover auf die Login-Navi
                $comUserList.mouseenter(function() {
                    $comUserListUl.show();
                }).mouseleave(function() {
                    $comUserListUl.hide();
                });


                /* change on the profile page too but only if it is your page
                    this is generally used after an SSO gateway callback
                */
                
                 if ($('#aboutyou').length > 0 && calledByServer === true) {
                    $('div.combox-profile h3 > a').text(userName);
                 }
                
                
            ////Anonymer user    
            } else {

                if (_15_spalten === true) {
                    $comlogin.addClass('logged-in')
                    $comloginLoggedInList.show();
                    $comUsername.html(templates.userStrap.replace('%SRC%',de.bild.settings.community.urls.anonProfileImage).replace(/%NAME%/g, de.bild.settings.community.lang.anonUser));
                } else {
                    $comlogin.html(templates.loggedinNoData);
                }

            }
        }
       
        $.publish('notification.userLoggedIn');
       
        isUserBarOn = true;
    };
     
    /**
     * modfies nav when logged out
     * @function
     * @name renderUserBarLoggedOut
     * @memberOf de.bild.sso
     * @private
     */
    function renderUserBarLoggedOut() {
        if ($comlogin && $comlogin.length) {
         
                if (_15_spalten === true) {
                    $comloginLoggedInList.hide();
                    $comlogin.removeClass('logged-in');
                } else {
                    $comlogin.html(templates.loggedout);
                }

        }
        isUserBarOn = false;
    };
    /**
     * opens register window
     * @function
     * @name register
     * @memberOf de.bild.sso
     * @private
     */
    function register(){
        // are we already logged in for some reason?
        if ($.cookie(avComUsr) && isLoggedIn()) {
            window.location.reload();
            return;
        }
        $.ajax(de.bild.settings.community.urls.ssoRegister, {
            dataType: 'json',
            cache : true
        }).done(function(data) {
            if (data && data.html && !isLoggedIn()) {
                 lightBox(data.html,null,true);
            } else {
                window.location.reload();
            }
        });
    };
    /**
     * opens login window
     * @function
     * @name login
     * @memberOf de.bild.sso
     * @param {object} data this is a general and optional data object that we pass to the login function
     * @private
     */
    function login(data){
       

        data = data || {};

        /* are we already logged in for some reason?*/
        if ($.cookie(avComUsr) && isLoggedIn()) {
            window.location.reload();
            return;
        }

        if (data.fullframe) {
            window.location.href = de.bild.settings.community.urls.ssoFullFrameLogin         
        }
        //iframe
        else {
            var url = data.url ? data.url : de.bild.settings.community.urls.ssoLoginLightBox;

            $.ajax(url, {
                dataType : 'json',
                cache : true
            }).done(function(data) {
                if (data && data.html && !isLoggedIn()) {
                    lightBox(data.html, null, true);
                } else {
                    window.location.reload();
                }
            }).fail(function(xhr, textStatus) {
                if (xhr.status === 302) {
                    window.location.href = xhr.getResponseHeader('Location');
                }
            });

            /* here we set the session cookie to tell the appage iframe to redirect to community homepage from header */
            if (data.goHome) {
                setGoHome();
            }
        }

        return false;
    };
    /**
     * Log user in with FB
     * @function
     * @name login
     * @memberOf de.bild.sso
     * @private
     */
    function fblogin(){
        if (isLoggedIn()) {
            window.location.reload();
        }
       
        $.ajax(de.bild.settings.community.urls.ssoFBLogin, {
            dataType: 'json',
            cache : true
        }).done(function(data) {        
            if (data && data.html && !isLoggedIn()) {
                lightBox(data.html);
            } else {
                window.location.reload();
            }
        }).fail(function(xhr, textStatus) {
            if (xhr.status === 302) {
                window.location.href = xhr.getResponseHeader('Location')
            }
        });
        return false;
    };
    /**
     * logs out
     * @function
     * @name logout
     * @memberOf de.bild.sso
     * @private
     */
    function logout(){
        deleteUserInfo();
        setTimeout(function(){
            window.location.href = de.bild.settings.community.urls.ssoLogout;
        },500);
        return false;
    };
    /**
     *
     * @function
     * @name init
     * @memberOf de.bild.sso
     * @private
     */
    function init(){
       
        $body = $('body');
        $contentWrapper = $('#outerWrapper');
       
        // new header
        $comlogin = $(comloginSelector);

        //15 Spalten
        $comloginLoggedInList = $comlogin.children('ul');
        $comNotifactionList = $comloginLoggedInList.children('li').eq(1);

        if ($comloginLoggedInList.length) {
            _15_spalten = true;
            $comNewUser = $('#comNewUser');
            $comLoginLink = $('#comLoginLink');
            $comUsername = $('#comUsername');
            $comUsername.attr('href', de.bild.settings.community.urls.profilePage);
            $comLogoutLink = $('#comLogoutLink');
            $comUserList = $comloginLoggedInList.children('li').eq(0);
            $comUserListUl = $comUserList.children('ul').eq(0);
        }

        renderUserBar();

        getStatus();

        setupEvents();     


        return true;
    };

    //public methods
    return {
        'init' : function(){
            init();
            return this;
        },
        'login' : function(data){
            data = data || {};
            login(data);
            return this;
        },
        'logout' : function(){
            logout();
            return this;
        },
        'register' : function(){
            register();
            return this;
        },
        'close' : function(){
            close();
            return this;
        },
        'renderUserBar' : function(){
            renderUserBar();
            return this;
        },
        'isLoggedIn' : function(){
            return isLoggedIn();
        },
        'isUserBarOn' : function(){
            return isUserBarOn;
        },
        'gatewayDefaultCallback' : function(data, refresh){
            refresh = (refresh === false) ? false : true;
            gatewayDefaultCallback(data, refresh);
            return this;
        },
        'gatewayAutoLoginCallback' : function(data){
            gatewayAutoLoginCallback(data);
            return this;
        },
        'getUserInfo' : function(){
            return getUserInfo();
        },
        'isFBConnected':function(){
            var returnVal = false;
            if(getUserInfo()){
                returnVal=getUserInfo().isFbUser;
            }
            return returnVal;
        },
        'issetRedirect' : function(){
            return getGoHome();
        }
    }

})(jQuery);
/*de.bild.social:27524114.16*/

var de = de || {};
de.bild = de.bild || {};
/**
* @function
* de.bild.social - Facebookfunktionalitaeten und Variablen, SDK, Buttons
* @name social
* @memberOf de.bild
* @param {object} $ jQuery Objekt
* @namespace Facebook Funktionen und Objekte
* @author <a href="mailto:rdodd@bild.de">Ramon Dodd</a>
* @dependencies ['jQuery', 'de.bild.sso', de.bild.settings']
*/
de.bild.social = (function($){
    
    
    
    
    var storage = de.bild.utils.storage;
    
    var SOCIAL_PREFERENCES_STORAGE_KEY = 'de.bild.social';
    var PERSIST_DAYS = 30;
    var currentDateTime = new Date().getTime();
    
    var clientSMButtonPreferences = {
        'facebook' : false,
        'twitter' : false,
        'gplus' : false,
        'validTill': currentDateTime
    };
    
    var widgetsLoaded = {
        'facebook': false,
        'twitter' : false,
        'gplus' : false
    };
    
    
    var windowLoadFired = false;
    
    
    var socialButtonInfoText = "<h4>Jetzt soziale Netzwerke aktivieren!</h4><br /><p>Ihre Privatsphäre ist uns sehr wichtig – mit zwei Klicks haben Sie Ihre Daten im Griff!</p><p>Für eine komfortable Nutzung, wird Ihre Auswahl für vier Wochen gespeichert.</p><br /><a href='http://www.bild.de/bild-community/2012/community/2klick-loesung-27650500.bild.html' target='_blank'>Mehr erfahren</a>";

    var bodyTag = null,
    $body,
    insertScript = function(id,url){
        var d = document,
        s = 'script',
        js,
        fjs=d.getElementsByTagName(s)[0];

        if(!d.getElementById(id)) {
            js=d.createElement(s);
            js.id=id;
            js.src=url;
            fjs.parentNode.insertBefore(js,fjs);
        }
    },
    
    
    /******** Social Button Constructors  **********/
    
    
    facebook = {
        like: 'like',
        recommend: 'recommend',
        loadingSDK: false,
        lang: function(){
            return 'de_DE';
        },
        likeButtonClass: 'fb-like-small',
        /*
        fbButtonFrame : function(data){
            //{'url' : '', 'type' : '', 'layout' : ''}
            var url = data.url ? data.url : window.location.href,
            type = data.type ? data.type : 'like',
            layout = data.layout ?  data.layout :  'button_count';
            cssClass = data.cssClass ? data.cssClass : 'fb-like-small';
            return '<iframe  class="'+cssClass+'" src="' + document.location.protocol + '//www.facebook.com/plugins/like.php?href=' + url + '&amp;layout=' + layout + '&amp;show_faces=false&amp;width=450&amp;height=21&amp;action=' + type + '&amp;font&amp;colorscheme=light" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:450px; height:21px;" allowTransparency="true"></iframe>';
        },
        */
        buttonHTML: '<iframe class="%CLASS%" src="' + document.location.protocol + '//www.facebook.com/plugins/like.php?href=%URL%&amp;layout=%LAYOUT%&amp;show_faces=false&amp;width=%WIDTH%&amp;height=%HEIGHT%&amp;action=%ACTION%&amp;colorscheme=light&amp;font=arial&amp;locale=%LANG%" scrolling="no" frameborder="0" allowTransparency="true" seamless="seamless"></iframe>',
        buttonHTML_noniFrame: '<div class="fb-like" data-href="%URL%" data-send="false" data-height="%HEIGHT%" data-layout="%LAYOUT%" data-width="%WIDTH%" data-show-faces="false"></div>',
        likeXFBML: '',
        sendXFBML: '',
        loginXFBML : '<fb:login-button max-rows="1" width="%WIDTH%" show-faces="false"></fb:login-button>',
        isLoggedIn : false,
        publishStream : false,
        userPhotos : false,
        getLoginStatus : function(){
            return false;
        },
        getPublishStatus : function(){
            return false;
        },
        getUserPhotosStatus : function(){
           return false;
        },
        initLogin : function (cb,opts){},
        /**
     * getLikeButton
     * @function
     * @name getLikeButton
     * @memberOf facebook
     * @param {string} url optional url
     * @private
     * @return {string} HTML fuer Facebook Like button
     */
        getLikeButton: function(data){
            var url = data.url ? data.url : getEncodedURL(),
            w = data.width ? data.width : '150',
            h = data.height ? data.height : '21',
            layout = data.layout ? data.layout : 'button_count';
            return facebook.buttonHTML_noniFrame.replace('%ACTION%', facebook.like).replace('%URL%', url).replace('%CLASS%', facebook.likeButtonClass).replace('%HEIGHT%', h).replace('%WIDTH%', w).replace('%LAYOUT%', layout).replace('%LANG%', facebook.lang());
        },
         /**
         * getKlubUrlId - parses the doc id out of the url string (Expect: http://www.bild.de/sport/fussball/michael-rensing/fc-zahlt-200000-euro-an-leverkusen-25914172.bild.html)
         * @function
         * @memberOf facebook
         * @name getKlubUrlId
         * @private
         * @return {string} facebook club url + CMS doc id
         */
        getKlubUrlId : function(){
            var url = getEncodedURL(),
            results = url.match(/(\d+)(\.bild\.html){1,1}/g),
            arr = results[0].split('.');
            return 'https://facebook.meinklub.bild.de/news/article/' + arr[0];
        },
     /**
     * getRecommendButton
     * @function
     * @memberOf facebook
     * @name getRecommendButton
     * @param {string} url optional url
     * @private
     * @return {string} HTML fuer Facebook Recommend button
     */
        getRecommendButton: function(data){
            var url = data.url ? data.url : getEncodedURL(),
            w = data.width ? data.width : '250',
            h = data.height ? data.height : '21',
            layout = data.layout ? data.layout : 'button_count';
            return facebook.buttonHTML_noniFrame.replace('%ACTION%', facebook.recommend).replace('%URL%', url).replace('%CLASS%', facebook.likeButtonClass).replace('%HEIGHT%', h).replace('%WIDTH%', w).replace('%LAYOUT%', layout).replace('%LANG%', facebook.lang());
        },
     /**
     * getLoginButton
     * @function
     * @memberOf facebook
     * @name getLoginButton
     * @param {string} width optional width default = 200
     * @private
     * @return {string} HTML fuer Facebook Login button
     */
        getLoginButton: function(width){
            width = width || '200';
            return facebook.loginXFBML.replace('%WIDTH%', width);
        },
        /**
     * insertLoginButton
     * @function
     * @memberOf facebook
     * @name insertLoginButton
     * @param {string} id id of element in which login button goes
     * @private
     */
        insertLoginButton: function(id){
            var el = document.getElementById(id);
            if (el) {
               el.innerHTML = facebook.getLoginButton(); 
            }
        },

        /**
     * postCommentToFeed - tests permissions in order to post a comment to facebook
     * @function
     * @memberOf facebook
     * @name postCommentToFeed
     * @param {string} commenttext required the text of the comment to post
     * @private
     */
        postCommentToFeed: function(params){
            if(facebook.publishStream !== true){
                facebook.initLogin(function(){

                }, {
                    scope: 'publish_stream'
                } );
            } 
            return facebook.publishStream;
        },
        /**
     * postPhoto - post a photo to facebook
     * @function
     * @memberOf facebook
     * @name postPhoto
     * @param {string} params - the title of image, filepath, and ugcid
     * @private
     */
        postPhoto: function(params){
            $.ajax({
                'url': de.bild.settings.community.urls.fbPostPhoto,
                'data': params,
                'type': 'post',
                'timeout' : 10000
            })
            .fail(function(jqXHR, textStatus){
                if (textStatus === 'timeout') {
                /*de.bild.social.postingPhototoFB(params);*/
                }
            });
            return true;
        },
        /**
     * postVideo - post a video to facebook
     * @function
     * @memberOf facebook
     * @name postVideo
     * @param {string} params - the title of video, filepath, and ugcid
     * @private
     */
        postVideo: function(params){
            /* we checked perms when the box was checked
            logged in and added perms, do AJAX*/
            FB.getLoginStatus(function(response) {
                if (response.authResponse) {
                    $.ajax({
                        'url': de.bild.settings.community.urls.fbPostVideo,
                        'data': params,
                        'type': 'post'
                    });
                }else{
                /* no login, just skip the upload*/
                }
            });
            return true;
        },

        /**
     * loadSDK - Facebook JavascriptSDK anfuegen
     * @function
     * @memberOf de.bild.facebook
     * @name loadSDK
     * @private
     * @param {function} callback - Was zu tun, nachdem alles geladen ist
     */
        loadSDK : function(callback){
            
            facebook.loadingSDK = true;
            
            window.fbAsyncInit = function(){

                FB.init({
                    appId: de.bild.settings.facebookAppId,
                    /*status: true,*/
                    cookie: true,
                    xfbml: true,
                    oauth : true 
                });



                /*overwrite getLoginStatus*/
                facebook.getLoginStatus = function(){
                    FB.getLoginStatus(function(response){
                        if (!response.authResponse) {
                            facebook.isLoggedIn = false;
                        } else {
                            facebook.isLoggedIn = true;
                        }
                    });
                    return facebook.isLoggedIn;
                };



                /*check status right away*/
                FB.getLoginStatus(function(response){
                   
                    /*
                        auto login for when a user is logged into face book
                        if the user is not connected we do nothing
                    */
                    var fblogin;
                    if (response.status !== 'connected') {
                        fblogin = false;
                    }
         
                    if (fblogin !== false && de.bild.sso.isLoggedIn() === false && $.cookie('autoLoginTriggered')==null) {
                        var expires = new Date();
                        expires.setHours( expires.getHours() + de.bild.settings.autoLoginDisabled);
                        $.cookie('autoLoginTriggered',1,{path:'/',expires:expires})
                        var facebookLoginId = 'facebookAutoLogin';
                        // Auto Login disabled
                        $body.append('<iframe id="'+facebookLoginId+'" src="'+de.bild.settings.community.urls.ssoFBIframe+'" style="position:absolute;height:0;width:0;border:0;left:-9999px;" frameborder="0" />');
                    }
         

                    if (!response.authResponse) {

                    } else {
                        FB.api('/me/permissions', function(response) {
                            if(response.data && response.data[0]['publish_stream'] != 1){
                                facebook.publishStream = false;
                            }else{
                                facebook.publishStream = true;
                            }

                            if(response.data && response.data[0]['user_photos'] != 1){
                                facebook.userPhotos = false;
                            }else{
                                facebook.userPhotos = true;
                            }

                        });
                        /* we check if the user if logged into facebook
                        and then trigger an event attached to the body (in de.bild.social.init())*/
                        $body.trigger('facebookLoginStatus');
                    }

                });


                facebook.initLogin = function(cb,opts){
                    FB.login(cb,opts);
                };

                FB.Event.subscribe('auth.login', function(response) {
                    if (!response.authResponse) {
                        facebook.isLoggedIn = false;
                    } else {
                        facebook.isLoggedIn = true;
                    }
                });


            };

            /* FB Javaskript einbinden*/
            var container = document.createElement('div');
            container.setAttribute('id', 'fb-root');
            var e = document.createElement('script');
            e.async = true;
            e.src = document.location.protocol + '//connect.facebook.net/' + facebook.lang() + '/all.js';
            container.appendChild(e);
            if (bodyTag)  bodyTag.appendChild(container);
            if (typeof callback === 'function')  callback();

        }
    },

    google = {
         'widgetURL' : 'https://apis.google.com/js/plusone.js',
         'buttonHTML' : '<div class="g-plusone" data-size="%SIZE%" data-annotation="%ANNOTATION%"></div>',
         'badgeHTML' : '<div class="g-plus" data-height="%HEIGHT%" data-width="%WIDTH%" data-href="https://plus.google.com/%PROFILEID%?rel=publisher" data-theme="light"></div>',
         'shareButton' : '<div class="g-plus" data-action="share" data-annotation="%ANNOTATION%" data-href="%URL%" data-width="%WIDTH%"></div>',
         'gbuttonFrame' : '<iframe src="https://plusone.google.com/u/0/_/+1/fastbutton?url=%URL%&amp;size=%SIZE%&amp;count=true&amp;lang=de" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:20px;" align="left"></iframe>',
         
         loadGoogleScript : function(){  
            window.___gcfg = {lang: 'de'};
            insertScript('bild-google-plus-script',google.widgetURL);
         },
        /* 
           button attrs: 
           size: small, medium,standard,tall
           annotation: none, bubble, inline 
           href: URL to +1
        */
         getPlusOneButton : function(data){
            var url = data.url || getEncodedURL();
            var size = data.size ? data.size : 'medium';
            var annotation = data.annotation ? data.annotation : 'bubble';
            return google.buttonHTML.replace('%URL%', url).replace('%SIZE%', size).replace('%ANNOTATION%', annotation);

         },
         
         getShareButton: function(data){
             var url = data.url || getEncodedURL();
             var width = data.width || 180;
             var annotation = data.annotation ? data.annotation : 'bubble';
             return google.shareButton.replace('%URL%', url).replace('%WIDTH%', width).replace('%ANNOTATION%', annotation);
         }, 
         
         getbadgeHTML: function(data) {
             
             var profile_id = data.profile_id || '114953790992839012570';
             var height = data.height || 69;
             var width = data.width || 170;
             
             return google.badgeHTML.replace('%PROFILEID%', profile_id).replace('%HEIGHT%', height).replace('%WIDTH%', width);
         },
         reloadWidget : function(){
            gapi.plusone.go();
            gapi.plus.go();
        }
         
    },


    twitter = {
        'widgetURL' : 'https://platform.twitter.com/widgets.js',
        'buttonHTML' : '<a href="https://twitter.com/share" class="twitter-share-button" data-url="%URL%" data-count="%COUNTPOS%" data-show-count="true" data-lang="de">Twittern</a>',
        'iframe' : '<iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.html?url=%URL%&amp;count=%COUNTPOS%&amp;related=%RELATED%"></iframe>',
        'iframe_follow': '<iframe allowtransparency="true" frameborder="0" scrolling="no" src="//platform.twitter.com/widgets/follow_button.html?screen_name=twitterapi"></iframe>',
        'buttonFollowHTML' : '<a href="https://twitter.com/%USER%" class="twitter-follow-button" data-show-count="true" data-lang="de">@%USER% folgen</a>',

        'getTwitterFollowButton' : function(user){
            return twitter.buttonFollowHTML.replace(/%USER%/g, user);
        },
        'renderButton' : function(data){
            var url = data.url || "http://www.bild.de";
            var related = data.related || 'bild';
            var countpos = data.countpos || 'horizontal';
            return twitter.buttonHTML.replace('%URL%', url).replace('%RELATED%', related).replace('%COUNTPOS%', countpos);
        },
        reloadWidget : function(){
            twttr.widgets.load();
        }
    };




    /*************  Social Button Constructors END  ************/




    /**
     * Set up the Social Media Buttons
     * 
     * */
    function setupSMButtons(){
        
        
        var $socialBlock = $('.socialBlock');
        var $socialSharingBlock = $('.social-sharing');        
        var $channelBlock = $('#smbChannelBlock');
        var $recommendBlock = $('.recommend');
        
        /* Client Einstellung fuer die Sichtbarkeit von Social Buttons */
        clientSMButtonPreferences = loadClientSBVisiblity();
        
        
        /* Recommend FB-Link am Ende eines Artikels  */
        if($recommendBlock) {
            
            var $fb_shareArticle = $recommendBlock.find('.fb-share-article');
            $fb_shareArticle.on('click', function(event){
                event.preventDefault()
                window.open($(this).attr('href'),'','width=626,height=436');
            });
            
        }
        
        
        /* ChannelBlock auf Buehnen */
        if($channelBlock) {
           //modifyOldChannelBlock($channelBlock);
            setupChannelBlock();
        }
        
        
        if ($socialBlock.length) {
            $body.one('commentEventsSetup', function(e, data){
                if (data.ugcid) {                    
                    $socialBlock.find('a.add-comment').attr('href', '#' + data.ugcid).parent('li').removeClass('hidden');
                }
            });

        }
       
       
        /* Social Media Buttons inkl. Zwei-Click-Loesung */
       
        $(window).load( function() {
            
            if(windowLoadFired) {
                return false;
            }
            
            windowLoadFired = true;

            setTimeout(function(){

                initAndBindSocialMediaBlocks();                

            }, 500);
        });

    }
    
    
    
    /**
     * Triggers all three social media buttons. Markup is deprecated.
     * */
    var socialMediaButtons = {
        
        'channelHtmlTemplate': '<li>'
                            + '<em>%FB_CHANNELNAME%</em> auf Facebook<br />'
                            + '<div class="social-button fblike">'
                            + '    <span class="sb-info-popup" data-pos="bottom"></span>'
                            + '    <a href="#" class="sb-placeholder" data-sb-type="facebook" data-href="%FB_CHANNEL_URL%" data-action="like" data-layout="button_count">Bild</a>'
                            + '    <div class="sb-to-fill">'
                            + '    <button class="social-lever" data-target-sb="fblike"></button>'
                            + '</div>'
                        + '</li>'
                        + '<li class="tw-abo">'
                           + ' <em>%TWITTER_CHANNELNAME%</em> auf Twitter<br />'
                            + '<div class="social-button twitter">'
                            + '    <span class="sb-info-popup" data-pos="right"></span>'
                            + '    <a href="#" class="sb-placeholder" data-sb-type="twitter" data-href="%TWITTER_CHANNEL_URL%" data-class="twitter-follow-button" data-show-count="true">BILD</a>'
                            + '    <div class="sb-to-fill">'
                            + '   <button class="social-lever" data-target-sb="twitter"></button>'
                           + ' </div>'
                       + ' </li>'
                       + ' <li class="gp-abo">'
                         + '   <em>%GPLUS_CHANNELNAME%</em> auf Google+<br />'
                          + '  <div class="social-button gplus">'
                            + '     <span class="sb-info-popup" data-popup-pos="right"></span>'
                            + '    <a href="#" class="sb-placeholder" data-sb-type="gplus" data-href="%GPLUS_CHANNEL_URL%" data-class="g-plus" data-annotation="inline">Folgen</a>'
                            + '    <div class="sb-to-fill">'
                            + '    <button class="social-lever" data-target-sb="gplus"></button>'
                          + '  </div>'
                       + ' </li>'
                     + '   <li class="nl-abo"><em>BILD.de-Newsletter</em> abonnieren<br /><a href="http://email.bild.de/host/h.php?AID=34661">Abonnieren</a></li>',
          
        
        'getTemplate': function(fbData, twitterData, gplusData){
            var _html = socialMediaButtons.channelHtmlTemplate;
            _html = _html.replace('%FB_CHANNELNAME%', fbData.channelName).replace('%FB_CHANNEL_URL%', fbData.channelUrl);
            _html = _html.replace('%TWITTER_CHANNELNAME%', twitterData.channelName).replace('%TWITTER_CHANNEL_URL%', twitterData.channelUrl);
            _html = _html.replace('%GPLUS_CHANNELNAME%', gplusData.channelName).replace('%GPLUS_CHANNEL_URL%', gplusData.channelUrl);
            return _html;
        }
        
    }
    
    
    
    
    
    function setupChannelBlock() {
                
        var $fbc_a = $('#smbChannelFbCont a'),
        fbc_a_link = $fbc_a.attr('href');

        $fbc_a.replaceWith(facebook.getLikeButton({'url':fbc_a_link})); 
        
        var $twc_a = $('#smbChannelTwCont a');
        
        if($twc_a.length) {
            twc_a_link = $twc_a.attr('href').split('#!/')[1];
            $('#smbChannelTwCont a').replaceWith(twitter.getTwitterFollowButton(twc_a_link));
            if(!widgetsLoaded.twitter) {
                insertScript('twitter-wjs',twitter.widgetURL);
                widgetsLoaded.twitter = true;
            } else {
                twitter.reloadWidget();
            }
        }
                
    }
    
    
    
    
    /**
     * Replaces the inner html of old channel blocks with the new two-click-markup.
     * */
    function modifyOldChannelBlock($channelBlock) {
        
        var $fbBlock = $channelBlock.find('#smbChannelFbCont');
        var fbData = {
            channelName :  $fbBlock.find('em').html(),
            channelUrl :  $fbBlock.find('a').attr('href')
        }
        
        var $twitterBlock = $channelBlock.find('#smbChannelTwCont');
        var twitterData = {
            channelName :  $twitterBlock.find('em').html(),
            channelUrl :  $twitterBlock.find('a').attr('href')
        }
                        
        var $gplusBlock = $channelBlock.find('#smbChannelGpCont');
        var gplusData = {
            channelName :  $gplusBlock.find('em').html(),
            channelUrl :  $gplusBlock.find('a').attr('href')
        }
        
        $channelBlock.html(socialMediaButtons.getTemplate(fbData, twitterData, gplusData));
        
    }
    
    
  
  
    /**
     * Initializes the two-click-social media buttons.
     * */
    function initAndBindSocialMediaBlocks() {
        
        $(document).on('mouseenter', '.social-button', function(){
            
            var $socialBlock = $(this);
            var socialBlock = this;
            
            if(!socialBlock.lever) {
                socialBlock.lever = $socialBlock.find('.social-lever');
            }
            
            if(!socialBlock.popup) {
                socialBlock.popup = $socialBlock.find('.sb-info-popup');
            }
            
            if(!socialBlock.popupPos) {
                socialBlock.popupPos = socialBlock.popup.attr('data-popup-pos');
                if(socialBlock.popupPos === 'bottom') {
                    socialBlock.popup.css('left', '-50px');
                }
                else  if(socialBlock.popupPos === 'activity') {
                    socialBlock.popup.css('left', '150px');
                }
            }
            
            if(socialBlock.lever.hasClass('active')) {
                return false;    
            }
            socialBlock.popup.show();
            
        });
        
        
        $(document).on('mouseleave', '.social-button', function(){                        
            if(this.popup) {
                this.popup.hide();    
            }                
        });
        
        bindSBLeverEvents();
        
        triggerSocialMediaButtons($body);
        
        
    }
    
    
    
    
    
    
    /**
     * Binds social media lever events, to (de)-active a particular type of social buttons.
     * */
    function bindSBLeverEvents() {
        
        
        $(document).on('click', '.sb-placeholder', function(e){
            e.preventDefault();
            $(this).siblings('.social-lever').trigger('click');
        });
        
        
        $(document).on('click', '.social-lever', function(e){
                                
            e.preventDefault();
                        
            var $lever = $(this);
            var type = $lever.attr('data-target-sb');
            var visibility = false;            
            
            if($lever.hasClass('active')) {
                $('.social-button.'+type).find('.social-lever').removeClass('active');
            } else {
                $('.social-button.'+type).find('.social-lever').addClass('active');
                visibility = true;                    
            }  
                            
            if(type === "fblike") {
                clientSMButtonPreferences.facebook = visibility; 
                triggerFbButtons(clientSMButtonPreferences.facebook, $body);                                      
            }
            if(type === "twitter") {
                clientSMButtonPreferences.twitter = visibility; 
                triggerTwitterButtons(clientSMButtonPreferences.twitter, $body);
            }
            if(type === "gplus") {
                clientSMButtonPreferences.gplus = visibility; 
                triggerGPlusButtons(clientSMButtonPreferences.gplus, $body);
            }
            
            saveClientSBVisiblity();
            
        });
        
    }
    
    
    
    
    
    
    
    
    function initSocialButtons($context) {
        
        if(!$context) {
            $context = $body;
        }
        
        triggerSocialMediaButtons($context);
        
        
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * Triggers all three social media buttons.
     * */
    function triggerSocialMediaButtons($context) {  
        
        triggerFbButtons(clientSMButtonPreferences.facebook, $context);
        
        triggerTwitterButtons(clientSMButtonPreferences.twitter, $context);
        
        triggerGPlusButtons(clientSMButtonPreferences.gplus, $context);
    }
    
    
    
    
    /**
     * Triggers Goole+ social buttons. Either initializes the Goole+ buttons or removes them.
     * If Goole+ widget-script has already been loaded, only re-initialize the widgets.
     * @param {boolean} visible - flag for de-/activattion
     * */
    function triggerGPlusButtons(visible, $context) {        
        
        var deInit = false;
        
        var $buttonContainer = $context.find('.social-button.gplus');
        
        var insertingButton = false;                
        
        $buttonContainer.each(function() {

            var $this = $(this);
            
            if($this.data('visible') && $this.data('visible') === visible) {
                return true;
            }            
            $this.data('visible', visible); 
            
            var $placeHolder = $this.find('.sb-placeholder');

            if(!visible) {

                $this.find('iframe').remove();
                $this.find('.sb-to-fill').empty().hide();
                $placeHolder.show();
                $this.find('.social-lever').removeClass('active');
                return true;
            }

            $placeHolder.hide();
            $this.find('.social-lever').addClass('active');

            if($placeHolder.attr('data-class') === "g-share") {

                var gplusCode = google.getShareButton({
                    'url' : $placeHolder.attr('data-href')
                });

            } else {

                var gplusCode = google.getPlusOneButton({
                    'url' : getEncodedURL(),
                    'size' : $placeHolder.attr('data-size'),
                    'annotation' : $placeHolder.attr('data-annotation')
                });
            }
            $this.find('.sb-to-fill').append(gplusCode).show();
            insertingButton = true;
            
        });


        
                
        if(insertingButton && !widgetsLoaded.gplus) {            
            google.loadGoogleScript();
            widgetsLoaded.gplus = true;
        } else if(insertingButton) {
            google.reloadWidget();
        }
        
    }
    
    
    
    /**
     * Triggers Twitter social buttons. Either initializes the twitter buttons or removes them.
     * If twitter widget-script has already been loaded, only re-initialize the widgets.
     * @param {boolean} visible - flag for de-/activattion
     * */
    function triggerTwitterButtons(visible, $context) {
        
        var deInit = false;
        
        var $buttonContainer = $context.find('.social-button.twitter');
        
        var insertingButton = false;
                
        $buttonContainer.each(function(){
            
            var $this = $(this);
            
            if($this.data('visible') && $this.data('visible') === visible) {
                return true;
            }            
            $this.data('visible', visible);  
                     
            var $placeHolder = $this.find('.sb-placeholder');
            
            if(!visible) {
                
                $this.find('iframe').remove();
                $placeHolder.show();
                $this.find('.social-lever').removeClass('active');
                return true;
            }
            
            $placeHolder.hide();
            $this.find('.social-lever').addClass('active');                
            var layout = $placeHolder.attr('data-show-count');
            
            if($placeHolder.attr('data-class') === "twitter-follow-button") {                
                var twitterCode = twitter.getTwitterFollowButton( $placeHolder.attr('data-href') );                
            } else {
                var twitterCode = twitter.renderButton({
                    'url': $placeHolder.attr('data-href'),
                    'countpos': $placeHolder.attr('data-count')
                }); 
            }    
                       
            $this.find('.sb-to-fill').append(twitterCode).show();
            insertingButton = true;
            
        });
                
        if(insertingButton && !widgetsLoaded.twitter) {
            insertScript('twitter-wjs',twitter.widgetURL);
            widgetsLoaded.twitter = true;
        } else if(insertingButton) {
            twitter.reloadWidget();
        }
        
    }
    
    
    
    
    /**
     * Triggers Facebook social buttons. Either initializes the facebook buttons or removes them.
     * @param {boolean} visible - flag for de-/activattion
     * */
    function triggerFbButtons(visible,$context) {
 
        var $buttonContainer = $('.social-button.fblike',$context);                

        $buttonContainer.each(function() {

            var $this = $(this);
            
            if($this.data('visible') && $this.data('visible') === visible) {
                return true;
            }            
            $this.data('visible', visible); 
            
            var $placeHolder = $this.find('.sb-placeholder');

            if(visible) {

                $placeHolder.hide();
                $this.find('.social-lever').addClass('active');
                var layout = $placeHolder.attr('data-layout');

                if($placeHolder.attr('data-action') === "recommend") {
                    var fbCode = facebook.getRecommendButton({
                        'url' : $placeHolder.attr('data-href'),
                        //'width' : '145',
                        'layout' : layout
                    });
                } else {
                    var fbCode = facebook.getLikeButton({
                        'url' : $placeHolder.attr('data-href'),
                        //'width' : '145',
                        'layout' : layout
                    });
                }
                $this.find('.sb-to-fill').append(fbCode).show();

                if(window['FB']) {
                    FB.XFBML.parse($this.find('.sb-to-fill')[0]);
                } else if(!facebook.loadingSDK) {
                    facebook.loadSDK();
                }

            } else {

                $this.find('.sb-to-fill').empty().hide();
                $placeHolder.show();
                $this.find('.social-lever').removeClass('active');

            }
           
        });


        
        
    }
    
    
    
   
    
    
    
    /**
     * Loads client preferences for social buttons from localstorage. If these preferences do not exist or if they are older than {PERSIST_DAYS}, uses the default values from {clientSMButtonPreferences}.
     * 
     * */
    function loadClientSBVisiblity() {
        
        var clientPreferences = {};
               
        try {
            clientPreferences = JSON.parse(storage.get(SOCIAL_PREFERENCES_STORAGE_KEY));
        } catch(err) {
            console.warn('SocialJS: Could not read user preferences from localStorage.');
        }        
        
        if(clientPreferences && parseInt(clientPreferences.validTill) > currentDateTime) {
            clientPreferences = $.extend(clientSMButtonPreferences, clientPreferences);
        } else {
            clientPreferences = clientSMButtonPreferences;
            saveClientSBVisiblity();
        }        
        
        return clientPreferences;
        
    }
    
    
    
    /**
     * Saves client preferences for social buttons. The preferences are saved in the localstorage and are valid for the next {PERSIST_DAYS} days.
     * 
     * */
    function saveClientSBVisiblity() {
        
        clientSMButtonPreferences.validTill = new Date().setDate( new Date(currentDateTime).getDate() + PERSIST_DAYS );
                
        try {
            storage.set(SOCIAL_PREFERENCES_STORAGE_KEY, JSON.stringify(clientSMButtonPreferences), true);
        } catch(err) {
            console.warn('SocialJS: Could not save user preferences to localStorage.');
        }
        
        
    }
  


    


    
    function init(){
        bodyTag = document.getElementsByTagName('body')[0];
        $body = $(bodyTag);
        /* bind only once*/
        $body.one('facebookLoginStatus', function(){
            de.bild.sso.renderUserBar();
        });

        //laden der SDK nur, wenn der User eingeloggt ist! PRODBO-1740  
        if(de.bild.sso && de.bild.sso.isLoggedIn()){
		  facebook.loadSDK();
	   }
                
        setupSMButtons();
                
        return true;
    }
    
    
    
    /**
     * getEncodedURL
     * @function
     * @name getEncodedURL
     * @private
     * @return {string} aktuelle URL-Adresse
     * @memberOf de.bild.social
     */
    function getEncodedURL(){
        return encodeURIComponent(document.location.href);
    }
    
    
    

    /* oeffentliches Interface*/
    return {
        /* facebook*/
        'getLikeButton' : function(data){
            data = data || {};
            return facebook.getLikeButton(data);
        },
        'getRecommendButton' : function(data){
            data = data || {};
            return facebook.getRecommendButton(url, data);
        },
        'getLoginButton' : function(width){
            return facebook.getLoginButton(width);
        },
        'insertLoginButton' : function(id) {
            if (id) {
                facebook.insertLoginButton(id);
            }
        },
        'getActivityFeed' : function() {
            return facebook.getActivityFeed();
        },

        'loginToFB' : function(cb,opts){
            cb = cb || function(){};
            opts = opts || {};
            facebook.initLogin(cb,opts);
            return this;
        },
        'loggedIntoFB' : function(){
            return facebook.getLoginStatus();
        },
        'postingCommentToFeed' : function(commenttext){
            facebook.postCommentToFeed(commenttext);
            return this;
        },
        'postingPhototoFB' : function(params){
            facebook.postPhoto(params);
            return this;
        },
        'postingVideotoFB' : function(params){
            facebook.postVideo(params);
            return this;
        },
        'userPhotos' : function(){
            return facebook.userPhotos;
        },
        'publishStream' : function(){
            return facebook.publishStream;
        },

        /*  google */
        'getPlusOneButton' : function(data){
            data = data || {};
            return google.getPlusOneButton(data);
        },

        /*twitter*/
        'renderTwitterButton' : function(id, related){
            if (id) {
                related = related || '';
                twitter.renderButton(id, related);
            }
        },
        
        'initSocialButtons':function($context){
            return initSocialButtons($context);  
        },
        'getTwitterFollowButton' : function(user){
            if (user) {
               return twitter.getTwitterFollowButton(user);
            }
        },
        'init' : function(){
            return init();
        }
    };

}(jQuery));

/*de.bild.conf:30104874.2*/



//Sofortige Ausführung von Anpassungen

de.bild.getAdLevel = function(prefix, sep, postfix){

    if(!de.bild.adlevel) {
        console.error('No AdLevel defined.');
        return false;
    }

    if(de.bild.user && de.bild.user.userHasClub) {

        jQuery.each(de.bild.adlevel, function(i, n){
            if(de.bild.user.userHasClub(i)) {
                prefix = n;
            }
        });
    }
    return prefix + sep + postfix;
};


//Globale Ajax Konfiguration
jQuery.ajaxSetup({ cache: true });

//Anpassungen, die vorgenommen werden, nachdem das Dokument geladen ist.
jQuery(document).ready(function($) {
	
    //Last Child Workaround für IE7/8
    $('ul.lead').last().addClass('leadLast');

    //Z-Index fix for Shift module
    $('.ie7 .shift').on("mouseenter mouseleave", function() {
        $(this).closest('section').toggleClass('fixit');
        $(this).closest('li').toggleClass('fixit');
        $(this).closest('div.hentry').toggleClass('fixit');
    });

    //zus. css-klasse f. ie7/8 bei tabellen
    $('.element tbody tr:nth-child(odd)').addClass('odd');
    
});

/*de.bild.onDemand:27231426.3*/

var de = de || {};
de.bild = de.bild || {};

de.bild.onDemand = (function($) {
    var settings = {
        areaSize : 500, // Bilder in diesem Bereich werden in die gleiche "Schublade" gepackt
        margin : 500 // Wie weit unter- und oberhalb des Sichtbereichs soll geladen werden
    },
    $window = $(window),
    picCont = [],
    picCountLength = 0,
    countLoaded = 0,
    allLoad = false,
    $imgsToLoad;

    function init($context) {
        if ($context.length) {
            // Bilder mit der Klasse "ondemand"
            $imgsToLoad = $context.find('img.ondemand');
            if ($imgsToLoad.length) {
                $imgsToLoad.each(function(){
                    var $this = $(this),
                    top = $this.offset().top,
                    bottom = top + (this.offsetHeight),
                    indexFrom = ~~(top / settings.areaSize),
                    indexTo = ~~(bottom / settings.areaSize),
                    i = indexFrom;
                    for(; i <= indexTo; i++) {
                        if(typeof picCont[i] === 'undefined' || picCont[i] === null) {
                            picCont[i] = [];
                        }
                        picCont[i].push($this);
                    }
                    picCountLength = picCont.length;
                });
                
                // Alle Bilder am Seitenanfang laden, die im Sichtbereich liegen
                var index = Math.floor($window.height() / settings.areaSize),
                i=0;
                for(; i < index; i++) {
                    loadImgs(i);
                }
                
                // Namespace ".onDemand" um nicht andere handler von window zu löschen
                $window.on('scroll.onDemand touchend.onDemand', function() {
                    checkCurrent();
                });

                // do it
                checkCurrent();
            }
        }
        return picCont;
    };
    
    // Alle Schubladen im aktuellen Sichtbereich (+- margin) werden berechnet
    function checkCurrent() {
        var scrollTop = $window.scrollTop(),
        wHeight = $window.height(),
        topPos = scrollTop - settings.margin,
        bottomPos = scrollTop + wHeight + settings.margin,
        startInd = Math.floor(topPos / settings.areaSize),
        endInd = Math.floor(bottomPos / settings.areaSize);
        
        startInd = startInd < 0 ? 0 : startInd;
        endInd = endInd < 0 ? 0 : endInd;
        
        for(var i = startInd; i < endInd; i++) {
            if(typeof picCont[i] !== 'undefined' && picCont[i] !== null) {
                loadImgs(i);
            }
        }
    };
    
    // Alle Bilder in einer Schublade werden geladen
    function loadImgs(index) {
        if (typeof index === 'number') {
            var $imgs = $(picCont[index]),
            imgsLeng = $imgs.length;
            $imgs.each(function(_index){
                var $this = $(this),
                _imgSrc = $.trim($this.attr('data-img-src'));
                
                /* FALLBACK */
                if(typeof _imgSrc === 'undefined' || _imgSrc === null || _imgSrc === '') {
                    _imgSrc = $.trim($this.attr('longdesc'));
                }
                /* FALLBACK ENDE */
                
                if(typeof _imgSrc !== 'undefined' && _imgSrc !== null) {
                    $this.attr("src", _imgSrc); 
                }
                // we are doing to prevent race conditions
                if (_index >= imgsLeng-1) {
                    setTimeout(function(){
                        $imgs.attr('data-img-src','').attr('longdesc','');
                    },1500);
                }
            });
            delete picCont[index];
            countLoaded++;
            if(countLoaded >= picCountLength) {
                $window.off('scroll.onDemand touchend.onDemand');
                // aufraeumen
                picCont = [];
            }
            return $imgs;    
       } 
    };
    
    // document.ready => run!
    $(function(){
       init($('#innerWrapper'));
    });
    

    // Interface
    return {
        'init' : function($context){
            $context = $context || $('body');
            return init($context);
        }
    };
    
})(jQuery);
/*require:29329602.1*/

/*
 RequireJS 2.1.4 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 Available via the MIT or new BSD license.
 see: http://github.com/jrburke/requirejs for details
*/
var requirejs,require,define;
(function(Y){function I(b){return"[object Function]"===L.call(b)}function J(b){return"[object Array]"===L.call(b)}function x(b,c){if(b){var d;for(d=0;d<b.length&&(!b[d]||!c(b[d],d,b));d+=1);}}function M(b,c){if(b){var d;for(d=b.length-1;-1<d&&(!b[d]||!c(b[d],d,b));d-=1);}}function r(b,c){return da.call(b,c)}function i(b,c){return r(b,c)&&b[c]}function E(b,c){for(var d in b)if(r(b,d)&&c(b[d],d))break}function Q(b,c,d,i){c&&E(c,function(c,h){if(d||!r(b,h))i&&"string"!==typeof c?(b[h]||(b[h]={}),Q(b[h],
c,d,i)):b[h]=c});return b}function t(b,c){return function(){return c.apply(b,arguments)}}function Z(b){if(!b)return b;var c=Y;x(b.split("."),function(b){c=c[b]});return c}function F(b,c,d,i){c=Error(c+"\nhttp://requirejs.org/docs/errors.html#"+b);c.requireType=b;c.requireModules=i;d&&(c.originalError=d);return c}function ea(b){function c(a,f,v){var e,n,b,c,d,k,g,h=f&&f.split("/");e=h;var l=m.map,j=l&&l["*"];if(a&&"."===a.charAt(0))if(f){e=i(m.pkgs,f)?h=[f]:h.slice(0,h.length-1);f=a=e.concat(a.split("/"));
for(e=0;f[e];e+=1)if(n=f[e],"."===n)f.splice(e,1),e-=1;else if(".."===n)if(1===e&&(".."===f[2]||".."===f[0]))break;else 0<e&&(f.splice(e-1,2),e-=2);e=i(m.pkgs,f=a[0]);a=a.join("/");e&&a===f+"/"+e.main&&(a=f)}else 0===a.indexOf("./")&&(a=a.substring(2));if(v&&(h||j)&&l){f=a.split("/");for(e=f.length;0<e;e-=1){b=f.slice(0,e).join("/");if(h)for(n=h.length;0<n;n-=1)if(v=i(l,h.slice(0,n).join("/")))if(v=i(v,b)){c=v;d=e;break}if(c)break;!k&&(j&&i(j,b))&&(k=i(j,b),g=e)}!c&&k&&(c=k,d=g);c&&(f.splice(0,d,
c),a=f.join("/"))}return a}function d(a){z&&x(document.getElementsByTagName("script"),function(f){if(f.getAttribute("data-requiremodule")===a&&f.getAttribute("data-requirecontext")===k.contextName)return f.parentNode.removeChild(f),!0})}function y(a){var f=i(m.paths,a);if(f&&J(f)&&1<f.length)return d(a),f.shift(),k.require.undef(a),k.require([a]),!0}function g(a){var f,b=a?a.indexOf("!"):-1;-1<b&&(f=a.substring(0,b),a=a.substring(b+1,a.length));return[f,a]}function h(a,f,b,e){var n,u,d=null,h=f?f.name:
null,l=a,m=!0,j="";a||(m=!1,a="_@r"+(L+=1));a=g(a);d=a[0];a=a[1];d&&(d=c(d,h,e),u=i(p,d));a&&(d?j=u&&u.normalize?u.normalize(a,function(a){return c(a,h,e)}):c(a,h,e):(j=c(a,h,e),a=g(j),d=a[0],j=a[1],b=!0,n=k.nameToUrl(j)));b=d&&!u&&!b?"_unnormalized"+(M+=1):"";return{prefix:d,name:j,parentMap:f,unnormalized:!!b,url:n,originalName:l,isDefine:m,id:(d?d+"!"+j:j)+b}}function q(a){var f=a.id,b=i(j,f);b||(b=j[f]=new k.Module(a));return b}function s(a,f,b){var e=a.id,n=i(j,e);if(r(p,e)&&(!n||n.defineEmitComplete))"defined"===
f&&b(p[e]);else q(a).on(f,b)}function A(a,f){var b=a.requireModules,e=!1;if(f)f(a);else if(x(b,function(f){if(f=i(j,f))f.error=a,f.events.error&&(e=!0,f.emit("error",a))}),!e)l.onError(a)}function w(){R.length&&(fa.apply(G,[G.length-1,0].concat(R)),R=[])}function B(a,f,b){var e=a.map.id;a.error?a.emit("error",a.error):(f[e]=!0,x(a.depMaps,function(e,c){var d=e.id,h=i(j,d);h&&(!a.depMatched[c]&&!b[d])&&(i(f,d)?(a.defineDep(c,p[d]),a.check()):B(h,f,b))}),b[e]=!0)}function C(){var a,f,b,e,n=(b=1E3*m.waitSeconds)&&
k.startTime+b<(new Date).getTime(),c=[],h=[],g=!1,l=!0;if(!T){T=!0;E(j,function(b){a=b.map;f=a.id;if(b.enabled&&(a.isDefine||h.push(b),!b.error))if(!b.inited&&n)y(f)?g=e=!0:(c.push(f),d(f));else if(!b.inited&&(b.fetched&&a.isDefine)&&(g=!0,!a.prefix))return l=!1});if(n&&c.length)return b=F("timeout","Load timeout for modules: "+c,null,c),b.contextName=k.contextName,A(b);l&&x(h,function(a){B(a,{},{})});if((!n||e)&&g)if((z||$)&&!U)U=setTimeout(function(){U=0;C()},50);T=!1}}function D(a){r(p,a[0])||
q(h(a[0],null,!0)).init(a[1],a[2])}function H(a){var a=a.currentTarget||a.srcElement,b=k.onScriptLoad;a.detachEvent&&!V?a.detachEvent("onreadystatechange",b):a.removeEventListener("load",b,!1);b=k.onScriptError;(!a.detachEvent||V)&&a.removeEventListener("error",b,!1);return{node:a,id:a&&a.getAttribute("data-requiremodule")}}function K(){var a;for(w();G.length;){a=G.shift();if(null===a[0])return A(F("mismatch","Mismatched anonymous define() module: "+a[a.length-1]));D(a)}}var T,W,k,N,U,m={waitSeconds:7,
baseUrl:"./",paths:{},pkgs:{},shim:{},map:{},config:{}},j={},X={},G=[],p={},S={},L=1,M=1;N={require:function(a){return a.require?a.require:a.require=k.makeRequire(a.map)},exports:function(a){a.usingExports=!0;if(a.map.isDefine)return a.exports?a.exports:a.exports=p[a.map.id]={}},module:function(a){return a.module?a.module:a.module={id:a.map.id,uri:a.map.url,config:function(){return m.config&&i(m.config,a.map.id)||{}},exports:p[a.map.id]}}};W=function(a){this.events=i(X,a.id)||{};this.map=a;this.shim=
i(m.shim,a.id);this.depExports=[];this.depMaps=[];this.depMatched=[];this.pluginMaps={};this.depCount=0};W.prototype={init:function(a,b,c,e){e=e||{};if(!this.inited){this.factory=b;if(c)this.on("error",c);else this.events.error&&(c=t(this,function(a){this.emit("error",a)}));this.depMaps=a&&a.slice(0);this.errback=c;this.inited=!0;this.ignore=e.ignore;e.enabled||this.enabled?this.enable():this.check()}},defineDep:function(a,b){this.depMatched[a]||(this.depMatched[a]=!0,this.depCount-=1,this.depExports[a]=
b)},fetch:function(){if(!this.fetched){this.fetched=!0;k.startTime=(new Date).getTime();var a=this.map;if(this.shim)k.makeRequire(this.map,{enableBuildCallback:!0})(this.shim.deps||[],t(this,function(){return a.prefix?this.callPlugin():this.load()}));else return a.prefix?this.callPlugin():this.load()}},load:function(){var a=this.map.url;S[a]||(S[a]=!0,k.load(this.map.id,a))},check:function(){if(this.enabled&&!this.enabling){var a,b,c=this.map.id;b=this.depExports;var e=this.exports,n=this.factory;
if(this.inited)if(this.error)this.emit("error",this.error);else{if(!this.defining){this.defining=!0;if(1>this.depCount&&!this.defined){if(I(n)){if(this.events.error)try{e=k.execCb(c,n,b,e)}catch(d){a=d}else e=k.execCb(c,n,b,e);this.map.isDefine&&((b=this.module)&&void 0!==b.exports&&b.exports!==this.exports?e=b.exports:void 0===e&&this.usingExports&&(e=this.exports));if(a)return a.requireMap=this.map,a.requireModules=[this.map.id],a.requireType="define",A(this.error=a)}else e=n;this.exports=e;if(this.map.isDefine&&
!this.ignore&&(p[c]=e,l.onResourceLoad))l.onResourceLoad(k,this.map,this.depMaps);delete j[c];this.defined=!0}this.defining=!1;this.defined&&!this.defineEmitted&&(this.defineEmitted=!0,this.emit("defined",this.exports),this.defineEmitComplete=!0)}}else this.fetch()}},callPlugin:function(){var a=this.map,b=a.id,d=h(a.prefix);this.depMaps.push(d);s(d,"defined",t(this,function(e){var n,d;d=this.map.name;var v=this.map.parentMap?this.map.parentMap.name:null,g=k.makeRequire(a.parentMap,{enableBuildCallback:!0});
if(this.map.unnormalized){if(e.normalize&&(d=e.normalize(d,function(a){return c(a,v,!0)})||""),e=h(a.prefix+"!"+d,this.map.parentMap),s(e,"defined",t(this,function(a){this.init([],function(){return a},null,{enabled:!0,ignore:!0})})),d=i(j,e.id)){this.depMaps.push(e);if(this.events.error)d.on("error",t(this,function(a){this.emit("error",a)}));d.enable()}}else n=t(this,function(a){this.init([],function(){return a},null,{enabled:!0})}),n.error=t(this,function(a){this.inited=!0;this.error=a;a.requireModules=
[b];E(j,function(a){0===a.map.id.indexOf(b+"_unnormalized")&&delete j[a.map.id]});A(a)}),n.fromText=t(this,function(e,c){var d=a.name,u=h(d),v=O;c&&(e=c);v&&(O=!1);q(u);r(m.config,b)&&(m.config[d]=m.config[b]);try{l.exec(e)}catch(j){return A(F("fromtexteval","fromText eval for "+b+" failed: "+j,j,[b]))}v&&(O=!0);this.depMaps.push(u);k.completeLoad(d);g([d],n)}),e.load(a.name,g,n,m)}));k.enable(d,this);this.pluginMaps[d.id]=d},enable:function(){this.enabling=this.enabled=!0;x(this.depMaps,t(this,function(a,
b){var c,e;if("string"===typeof a){a=h(a,this.map.isDefine?this.map:this.map.parentMap,!1,!this.skipMap);this.depMaps[b]=a;if(c=i(N,a.id)){this.depExports[b]=c(this);return}this.depCount+=1;s(a,"defined",t(this,function(a){this.defineDep(b,a);this.check()}));this.errback&&s(a,"error",this.errback)}c=a.id;e=j[c];!r(N,c)&&(e&&!e.enabled)&&k.enable(a,this)}));E(this.pluginMaps,t(this,function(a){var b=i(j,a.id);b&&!b.enabled&&k.enable(a,this)}));this.enabling=!1;this.check()},on:function(a,b){var c=
this.events[a];c||(c=this.events[a]=[]);c.push(b)},emit:function(a,b){x(this.events[a],function(a){a(b)});"error"===a&&delete this.events[a]}};k={config:m,contextName:b,registry:j,defined:p,urlFetched:S,defQueue:G,Module:W,makeModuleMap:h,nextTick:l.nextTick,configure:function(a){a.baseUrl&&"/"!==a.baseUrl.charAt(a.baseUrl.length-1)&&(a.baseUrl+="/");var b=m.pkgs,c=m.shim,e={paths:!0,config:!0,map:!0};E(a,function(a,b){e[b]?"map"===b?Q(m[b],a,!0,!0):Q(m[b],a,!0):m[b]=a});a.shim&&(E(a.shim,function(a,
b){J(a)&&(a={deps:a});if((a.exports||a.init)&&!a.exportsFn)a.exportsFn=k.makeShimExports(a);c[b]=a}),m.shim=c);a.packages&&(x(a.packages,function(a){a="string"===typeof a?{name:a}:a;b[a.name]={name:a.name,location:a.location||a.name,main:(a.main||"main").replace(ga,"").replace(aa,"")}}),m.pkgs=b);E(j,function(a,b){!a.inited&&!a.map.unnormalized&&(a.map=h(b))});if(a.deps||a.callback)k.require(a.deps||[],a.callback)},makeShimExports:function(a){return function(){var b;a.init&&(b=a.init.apply(Y,arguments));
return b||a.exports&&Z(a.exports)}},makeRequire:function(a,d){function g(e,c,u){var i,m;d.enableBuildCallback&&(c&&I(c))&&(c.__requireJsBuild=!0);if("string"===typeof e){if(I(c))return A(F("requireargs","Invalid require call"),u);if(a&&r(N,e))return N[e](j[a.id]);if(l.get)return l.get(k,e,a);i=h(e,a,!1,!0);i=i.id;return!r(p,i)?A(F("notloaded",'Module name "'+i+'" has not been loaded yet for context: '+b+(a?"":". Use require([])"))):p[i]}K();k.nextTick(function(){K();m=q(h(null,a));m.skipMap=d.skipMap;
m.init(e,c,u,{enabled:!0});C()});return g}d=d||{};Q(g,{isBrowser:z,toUrl:function(b){var d,f=b.lastIndexOf("."),h=b.split("/")[0];if(-1!==f&&(!("."===h||".."===h)||1<f))d=b.substring(f,b.length),b=b.substring(0,f);b=k.nameToUrl(c(b,a&&a.id,!0),d||".fake");return d?b:b.substring(0,b.length-5)},defined:function(b){return r(p,h(b,a,!1,!0).id)},specified:function(b){b=h(b,a,!1,!0).id;return r(p,b)||r(j,b)}});a||(g.undef=function(b){w();var c=h(b,a,!0),d=i(j,b);delete p[b];delete S[c.url];delete X[b];
d&&(d.events.defined&&(X[b]=d.events),delete j[b])});return g},enable:function(a){i(j,a.id)&&q(a).enable()},completeLoad:function(a){var b,c,d=i(m.shim,a)||{},h=d.exports;for(w();G.length;){c=G.shift();if(null===c[0]){c[0]=a;if(b)break;b=!0}else c[0]===a&&(b=!0);D(c)}c=i(j,a);if(!b&&!r(p,a)&&c&&!c.inited){if(m.enforceDefine&&(!h||!Z(h)))return y(a)?void 0:A(F("nodefine","No define call for "+a,null,[a]));D([a,d.deps||[],d.exportsFn])}C()},nameToUrl:function(a,b){var c,d,h,g,k,j;if(l.jsExtRegExp.test(a))g=
a+(b||"");else{c=m.paths;d=m.pkgs;g=a.split("/");for(k=g.length;0<k;k-=1)if(j=g.slice(0,k).join("/"),h=i(d,j),j=i(c,j)){J(j)&&(j=j[0]);g.splice(0,k,j);break}else if(h){c=a===h.name?h.location+"/"+h.main:h.location;g.splice(0,k,c);break}g=g.join("/");g+=b||(/\?/.test(g)?"":".js");g=("/"===g.charAt(0)||g.match(/^[\w\+\.\-]+:/)?"":m.baseUrl)+g}return m.urlArgs?g+((-1===g.indexOf("?")?"?":"&")+m.urlArgs):g},load:function(a,b){l.load(k,a,b)},execCb:function(a,b,c,d){return b.apply(d,c)},onScriptLoad:function(a){if("load"===
a.type||ha.test((a.currentTarget||a.srcElement).readyState))P=null,a=H(a),k.completeLoad(a.id)},onScriptError:function(a){var b=H(a);if(!y(b.id))return A(F("scripterror","Script error",a,[b.id]))}};k.require=k.makeRequire();return k}var l,w,B,D,s,H,P,K,ba,ca,ia=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,ja=/[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,aa=/\.js$/,ga=/^\.\//;w=Object.prototype;var L=w.toString,da=w.hasOwnProperty,fa=Array.prototype.splice,z=!!("undefined"!==typeof window&&navigator&&
document),$=!z&&"undefined"!==typeof importScripts,ha=z&&"PLAYSTATION 3"===navigator.platform?/^complete$/:/^(complete|loaded)$/,V="undefined"!==typeof opera&&"[object Opera]"===opera.toString(),C={},q={},R=[],O=!1;if("undefined"===typeof define){if("undefined"!==typeof requirejs){if(I(requirejs))return;q=requirejs;requirejs=void 0}"undefined"!==typeof require&&!I(require)&&(q=require,require=void 0);l=requirejs=function(b,c,d,y){var g,h="_";!J(b)&&"string"!==typeof b&&(g=b,J(c)?(b=c,c=d,d=y):b=[]);
g&&g.context&&(h=g.context);(y=i(C,h))||(y=C[h]=l.s.newContext(h));g&&y.configure(g);return y.require(b,c,d)};l.config=function(b){return l(b)};l.nextTick="undefined"!==typeof setTimeout?function(b){setTimeout(b,4)}:function(b){b()};require||(require=l);l.version="2.1.4";l.jsExtRegExp=/^\/|:|\?|\.js$/;l.isBrowser=z;w=l.s={contexts:C,newContext:ea};l({});x(["toUrl","undef","defined","specified"],function(b){l[b]=function(){var c=C._;return c.require[b].apply(c,arguments)}});if(z&&(B=w.head=document.getElementsByTagName("head")[0],
D=document.getElementsByTagName("base")[0]))B=w.head=D.parentNode;l.onError=function(b){throw b;};l.load=function(b,c,d){var i=b&&b.config||{},g;if(z)return g=i.xhtml?document.createElementNS("http://www.w3.org/1999/xhtml","html:script"):document.createElement("script"),g.type=i.scriptType||"text/javascript",g.charset="utf-8",g.async=!0,g.setAttribute("data-requirecontext",b.contextName),g.setAttribute("data-requiremodule",c),g.attachEvent&&!(g.attachEvent.toString&&0>g.attachEvent.toString().indexOf("[native code"))&&
!V?(O=!0,g.attachEvent("onreadystatechange",b.onScriptLoad)):(g.addEventListener("load",b.onScriptLoad,!1),g.addEventListener("error",b.onScriptError,!1)),g.src=d,K=g,D?B.insertBefore(g,D):B.appendChild(g),K=null,g;$&&(importScripts(d),b.completeLoad(c))};z&&M(document.getElementsByTagName("script"),function(b){B||(B=b.parentNode);if(s=b.getAttribute("data-main"))return q.baseUrl||(H=s.split("/"),ba=H.pop(),ca=H.length?H.join("/")+"/":"./",q.baseUrl=ca,s=ba),s=s.replace(aa,""),q.deps=q.deps?q.deps.concat(s):
[s],!0});define=function(b,c,d){var i,g;"string"!==typeof b&&(d=c,c=b,b=null);J(c)||(d=c,c=[]);!c.length&&I(d)&&d.length&&(d.toString().replace(ia,"").replace(ja,function(b,d){c.push(d)}),c=(1===d.length?["require"]:["require","exports","module"]).concat(c));if(O){if(!(i=K))P&&"interactive"===P.readyState||M(document.getElementsByTagName("script"),function(b){if("interactive"===b.readyState)return P=b}),i=P;i&&(b||(b=i.getAttribute("data-requiremodule")),g=C[i.getAttribute("data-requirecontext")])}(g?
g.defQueue:R).push([b,c,d])};define.amd={jQuery:!0};l.exec=function(b){return eval(b)};l(q)}})(this);

/*de.bild.requireDefinitions:29329620.12*/


define('de.bild.accordion', ['/code/de-bild-accordion,27524136.4.bild.js'], function(){});

define('de.bild.articleGallery', ['/code/de-bild-articlegallery,27524122.1.bild.js'], function(){});

define('de.bild.bildLive', ['/code/de-bild-bildlive,29329632.6.bild.js'], function(){});

define('de.bild.coverflow', ['/code/de-bild-coverflow,30104868.2.bild.js'], function(){});

define('de.bild.galleryCenter', ['/code/de-bild-gallerycenter,30104870.2.bild.js'], function(){});

define('de.bild.homeButton', ['/code/de-bild-homebutton,30407984.4.bild.js'], function(){});

define('de.bild.liveArticle', ['/code/de-bild-livearticle,27524130.8.bild.js'], function(){});

define('de.bild.maps', ['/code/de-bild-maps,29329612.2.bild.js'], function(){});

define('de.bild.mediaGallery', ['/code/de-bild-mediagallery,29329608.8.bild.js'], function(){});

define('de.bild.newsticker', ['/code/de-bild-newsticker,29329606.2.bild.js'], function(){});

define('de.bild.newstickerOverview', ['/code/de-bild-newstickeroverview,29329616.1.bild.js'], function(){});

define('de.bild.purplePlayer', ['/code/de-bild-purpleplayer,30407998.1.bild.js'], function(){});

define('de.bild.qgtv', ['/code/qgtv,27490902.2.bild.js'], function(){});

define('de.bild.rotationTeaser', ['/code/de-bild-rotationteaser,25425036.5.bild.js'], function(){});

define('de.bild.slider', ['/code/de-bild-slider,30408012.2.bild.js'], function(){});

define('de.bild.socialBar', ['/code/de-bild-socialbar,27524120.12.bild.js'], function(){});

define('de.bild.videoTeaser', ['/code/de-bild-videoteaser,29329610.4.bild.js'], function(){});


/** External & 3rd Party Modules */

define('googleJsApi', ['http://www.google.com/jsapi'], function(){});

define('purplePlayer', ['/code/p_player,30408010.1.bild.js'], function(){});

define('twitter', ['http://platform.twitter.com/widgets.js'], function(){});
/*de.xoz.videoplayer:30408014.2*/

/*!
 * @ignore
 * 
 * !!!!!! Linked CMS-Content !!!!!!!
 */
//jQuery(document).ready(function() {
    window.com = window.com || {}, window.com.xoz = window.com.xoz || {}, window.com.xoz.config = {
        baseUrl: "",
        layouts: {
            bild: "xoz/videoplayer/modules/controls/Bild",
            bundesliga: "xoz/videoplayer/modules/controls/Bundesliga",
            welt: "xoz/videoplayer/modules/controls/Welt",
            widget: "xoz/videoplayer/modules/controls/Widget"
        },
        css_files: {
            widget: "/code/player_widget,30408020.1.bild.css",
            bild: "/code/player_bild,30408016.1.bild.css",
            bundesliga: "/code/player_bundesliga,30408022.1.bild.css",
            game_timeline: "css/player_game_timeline.css",
            endscreen: "/code/player_endscreen,30408018.1.bild.css",
            bundesliga_endscreen: "css/player_bundesliga_endscreen.css"
        },
        labels: {
            error: {
                top_line: "Ein Fehler ist aufgetreten.",
                bottom_line: "Bitte laden sie das Video neu."
,
                invalid_top_line: "Dieses Video ist nicht mehr g\u00fcltig.",
                invalid_bottom_line: "",
                flash_bottom_line: '<a href="http://get.adobe.com/de/flashplayer/" target="_blank">Zum Download</a>',
                flash_top_line: "Bitte installieren sie die neuste version des Flash Plugins.",
                geo_top_line: "DIESES VIDEO IST IN IHRER REGION NICHT VERF\u00dcGBAR.",
                geo_bottom_line: "THIS VIDEO CAN NOT BE STREAMED IN YOUR REGION."
            },
            bundesliga: {
                replay: "Video erneut abspielen"
            }
        },
        defaults: {
            flash_player: {
                url: "/media/videoplayer2013-30407302/Flash/4.bild.swf"
            },
            "default": {
                layout: "widget",
                log_level: 3,
                enable_social_module: !0
            },
            use_html5_player: {
                firefox: !1,
                chrome: !1,
                ie: !1,
                
ie10: !1,
                safari: !1
            },
            tracking: {
                timeupdate_intervall: 10
            },
            fallback: {
                preview_image: "http://placehold.it/1280x760&text=Fallback"
            },
            flash_detection: {
                enable: !0,
                version: "10.1"
            },
            game_timeline: {
                first_half_start_position: 0,
                first_half_end_position: 49,
                first_half_distance: 49,
                first_half_start_time: 0,
                second_half_start_position: 51,
                second_half_end_position: 100,
                second_half_distance: 49,
                second_half_start_time: 45,
                space_between_events: 4,
                max_events_on_half: 13
            }
        }
    };
    var de = de || {};
    de.xoz = de.xoz || {}, de.xoz.bdeResourceConfig = {
        videoplayerCore: window.com.xoz.config.baseUrl + "/code/de-xoz-videoplayer-core,30407994.1.bild.js"
,
        videoplayerBundesliga: window.com.xoz.config.baseUrl + "/code/de-xoz-videoplayer-bundesliga,30407996.1.bild.js"
    }, require.bdeHelper = {
        fixJsFilename: function(filepath) {
            return filepath.substr(0, filepath.length - 3);
        }
    }, require.config({
        baseUrl: window.com.xoz.config.baseUrl + "js/",
        paths: {
            xozVideoplayerCore: require.bdeHelper.fixJsFilename(de.xoz.bdeResourceConfig.videoplayerCore),
            xozVideoplayerBundesliga: require.bdeHelper.fixJsFilename(de.xoz.bdeResourceConfig.videoplayerBundesliga)
        }
    }), require([ "xozVideoplayerCore" ], function() {});
//});;
/*de.bild.moduleLoader:29329604.4*/

var de = de || {};
de.bild = de.bild || {};

de.bild.moduleLoader = ( function($) {


    var moduleList = {};


    function executeFromStack(type) {

        moduleList[type].executionStack.reverse();

        while(moduleList[type].executionStack.length) {
            (moduleList[type].executionStack.pop())();
        }

    }


    function loadGoogleMapsModule(callback) {

        moduleList.maps.executionStack.push(callback);

        if(moduleList.maps.loaded) {
            (moduleList.maps.executionStack.pop())();
            return;
        }

        if(!moduleList.maps.beingLoaded) {

            moduleList.maps.beingLoaded = true;
            var params = 'sensor=false&libraries=weather'
            if(de.bild.utils.isBild()) {
                params += '&key=' + de.bild.settings.gmaps.apiKey;
            }

            google.load("maps", "3", {
                other_params: params,
                callback: function(){
                    require(['de.bild.maps'], function(){
                        moduleList.maps.loaded = true;
                        executeFromStack('maps');
                    });
                }
            });

        }
    }



    function loadExternalModule(moduleName, callback){

        if(moduleName === "maps") {

            if((typeof google === 'undefined' || typeof google.load === 'undefined') && !moduleList[moduleName].beingLoaded) {
                require(['googleJsApi'], function(){
                    loadGoogleMapsModule(callback);
                });
            } else {
                loadGoogleMapsModule(callback);
            }

        }

        if(moduleName === "purplePlayer") {
            require(['purplePlayer'], function(){
                loadSimpleModule(moduleName, callback);
            });
        }

    }



    function loadSimpleModule(moduleName, callback){

        moduleList[moduleName].executionStack.push(callback);

        if(moduleList[moduleName].loaded) {
            (moduleList[moduleName].executionStack.pop())();
            return;
        }

        if(!moduleList[moduleName].beingLoaded) {

            moduleList[moduleName].beingLoaded = true;

            require([moduleName], function(){
                moduleList[moduleName].loaded = true;
                executeFromStack(moduleName);
            });

        }


    }


    function loadModule(isExternalModule, moduleName, callback){

        if(!moduleList[moduleName]) {
            moduleList[moduleName] = {
                beingLoaded : false,
                loaded: false,
                executionStack: []
            };
        }

        if(isExternalModule) {
            loadExternalModule(moduleName, callback);
        } else {
            loadSimpleModule(moduleName, callback);
        }

    }




    return {
        'loadModule': loadModule,
        'loadSimpleModule' : loadSimpleModule,
        'loadExternalModule': loadExternalModule
    };

}(jQuery));
/*jquery.insight:27524160.1*/

/**
 * User: l.bilharz@global-communication.de
 * Date: 18.10.11
 * Time: 14:28
 */
(function(){
    /**
     * @class inSightHandler
     * @param {Event} e
     * @param {int} visible bitmask of visible edges (1: top, 2: right, 4: bottom, 8: left)
     * @param {int} previousVisible bitmask of previously visible edges (1: top, 2: right, 4: bottom, 8: left)
     * @returns {Boolean} false if event should be cancelled
     */
    function inSightHandler(e, visible, previousVisible){return true}
})();
(function($) {
    "use strict";
    var FLAG_TOP = 1,
        FLAG_RIGHT = 2,
        FLAG_BOTTOM = 4,
        FLAG_LEFT = 8,
        EVENT_NAME = "inSight",
        CHECK_EVENT_NAME = "inSightCheck",
        LAZY_MILLIS = 2000, // ms interval while idling
        EAGER_MILLIS = 50, //  ms to wait before triggering windowEventHandlers, 0 = directly
        // store the timeout id (and serve as handler-is-setup-marker)
        _timeout = 0;
    $.fn.inSight = function() {
        return this.length ? getVisibility.call(this.get(0), getViewport()) : 0;
    };
    // we bind an additional event, which will be triggered globally, so it's up to jQuery to track references to DOM Elements
    $.event.special.inSight = {
        setup: function(){
            $(this).bind(CHECK_EVENT_NAME, {visible: 0}, checkInView);
            if (!_timeout) setupHandlers();
        },
        teardown: function(){
            $(this).unbind(CHECK_EVENT_NAME, checkInView);
        }
    };
    // bind to window's modification and additionally use an interval, i.e. if elements appear in viewport programmatically
    function setupHandlers(){
        $(window).bind("scroll resize click", windowEventHandler);
        _timeout = window.setTimeout(triggerCheckInView, LAZY_MILLIS);
    }
    function teardownHandlers(){
        $(window).unbind(false, windowEventHandler);
        window.clearTimeout(_timeout);
        _timeout = 0;
    }
    
    function windowEventHandler() {
        window.clearTimeout(_timeout);
        if (EAGER_MILLIS == 0) {
            triggerCheckInView();
        } else {
            _timeout = window.setTimeout(triggerCheckInView, EAGER_MILLIS);
        }
    }
    // trigger global event, which will call the element-local checks
    // if no handlers set e.hasHandlers to true, i.e. there are none left, teardown interval and window-event-handler
    function triggerCheckInView() {
        var e = $.Event(CHECK_EVENT_NAME);
        try {
            $.event.trigger(e);
        } finally {
            if (e.hasHandlers) {
                _timeout = window.setTimeout(triggerCheckInView, LAZY_MILLIS);
            } else {
                teardownHandlers();
            }
        }
    }
    /**
     * check one elements visibility and trigger handlers on change
     * @this {Element} DOM Element
     * @param {Event} e
     */
    function checkInView(e) {
        var viewport = e.viewport || (e.viewport = getViewport());
        e.hasHandlers = true;
        var visible = getVisibility.call(this, viewport);
        // trigger handlers if visibility changed
        if (e.data.visible != visible) {
            $(this).trigger(EVENT_NAME, [ visible, e.data.visible ]);
            e.data.visible = visible;
        }
    }
    function getVisibility(viewport) {
        var $$ = $(this);
        // invisible, if element is not in dom
        if (!$$.closest("html").length) return 0;
        var offset = $$.offset();
        // invisible, if offset could not be calculated
        if (!offset) return 0;
        var visible = 0, top = offset.top, left = offset.left;
        // chance for vertical visibility
        if (top < viewport.bottom) {
            var bottom = top + $$.height();
            if (top >= viewport.top) visible += FLAG_TOP;
            if (bottom < viewport.bottom && bottom >= viewport.top) visible += FLAG_BOTTOM;
        }
        // invisible, above or below viewport
        if (!visible) return 0;
        // vertical visible and chance for horizontal visibility
        if (left < viewport.right) {
            var right = left + $$.width();
            if (left >= viewport.left) visible += FLAG_LEFT;
            if (right < viewport.right && right >= viewport.left) visible += FLAG_RIGHT;
            // invisible, clear out vertical visibility if horizontal invisible
            if (!(visible & (FLAG_LEFT | FLAG_RIGHT))) return 0;
        }
        // jQuery-check visibility only if in viewport (might be cost-intensive)
        if (!visible || !$$.is(":visible")) return 0;
        return visible;
    }
    // calculate the browser viewport
    function getViewport() {
        var win = $(window),
            top = win.scrollTop(),
            left = win.scrollLeft();
        return {
            top: top,
            left: left,
            bottom: top + win.height(),
            right: left + win.width()
        }
    }
})(jQuery);
/*jquery.adloader:27524162.1*/

/**
 * User: l.bilharz@global-communication.de
 * Date: 18.10.11
 * Time: 13:12
 */
(function($){
    "use strict";
    var INSIGHT_CHECK_EVENT = "inSight",
        FLAG_TOP = 1,
        FLAG_RIGHT = 2,
        FLAG_BOTTOM = 4,
        FLAG_LEFT = 8,
        FLAG_ALL = 15;
    //on document ready: take given array of iframeData and bind handlers
    $(function() {
        if (!window.de || !window.de.bild) return;
        var data = window.de.bild.iframeData;
        if (!$.isArray(data)) return;
        
        var isOldIE = ($.browser.msie && parseInt($.browser.version) < 9);
        
        for (var i = 0, l = data.length; i < l; i++) {
            var o = data[i],
                $$ = $("#" + o.id + " iframe");
            $$.css("visibility", "hidden");
            // IE < 9 Transparenz setzen
            if(isOldIE) {
                $$.attr("allowtransparency", "true");
                var d = $$.contents().get(0);
                if(d){
                    d.open();
                    d.write('<html><body style="background:transparent;"></body></html>');
                    d.close();
                }
                //$$.css("visibility", "visible");
            }
            
            if ($$.inSight() != 0) {
                // element is already in viewport: load script
                loadJavaScript.call($$.get(0), o.url, o.arParams);
            } else {
                // bind handler triggered when element enters viewport
                $$.bind(INSIGHT_CHECK_EVENT, {url: o.url, arParams: o.arParams}, handleInSight);
            }
        }
    });
    /**
     * @extends inSightHandler
     * load javascript in iframe first time that at least one pixel enters browser viewport.
     */
    function handleInSight(e, visible) {
        if (visible != 0) {
            loadJavaScript.call(this, e.data.url, e.data.arParams);
            $(this).unbind(INSIGHT_CHECK_EVENT, handleInSight);
        }
        return false;
    }
    /**
     * load javascript in iframe
     * @this {Element} iframe
     * @param url
     */
    function loadJavaScript(url, arParams) {
        // add a random number to the ad request url
        //url = urlAppend(url, Math.round(Math.random() * new Date().getTime()));
      
        // iframe mit load belegen
        var iframe = $(this);
        iframe.load(function() {
            check();
        });
      
        function check() {
            if(iframe.data("isLoaded") != "true") {
                if(!checkNOAD()) {
                    // Klasse bei Id #ressortSuperBanner_ setzten
                    var $dv = iframe.parent();
                    var cls = $dv.attr("id");
                    if(cls.indexOf("ressortSuperBanner_") != -1) {
                        $dv.addClass("slh");
                        $("body, html").css("background", "#E2E2E2");
                    }
                    // Sichtbar machen
                    iframe.css("visibility", "visible");
                    iframe.unbind("load");
                    iframe.data("isLoaded", "true")
                }
                else if(arParams != undefined) {
                    de.bild.AdReplace.apply("", arParams);
                    iframe.unbind("load");
                    iframe.data("isLoaded", "true")
                }
            }
        }
      
        function checkNOAD() {
            if(iframe[0].contentWindow["sas_noad"] == true) {
                return true;
            }
            else {
                return false
            }
        }
      
        // find iframe document
        var doc = iframe.contents().get(0);
        doc.open();
        doc.write('<html><body style="background:transparent; margin:0;"><scr' + 'ipt type="text/javascr' + 'ipt" sr' + 'c="' + url + '"></scr' + 'ipt></body></html>');
        if (!($.browser.msie || $.browser.opera)) {
            doc.close();
        }
        else {
            setTimeout(function() {
                doc.close();
            }, 10000);
        }
    }
    /**
     * Appends suffix to url and separates with param delimeter ? or & as needed.
     * @param url {String} base url
     * @param toAppend {String} suffix to append to base URL
     */
    function urlAppend(url, toAppend) {
        var i = url.indexOf("?");
        if (i < 0) return url + "?" + toAppend;
        if (i == url.length - 1) return url + toAppend;
        var a = url.indexOf("&");
        return a == url.length - 1 ? url + toAppend : url + "&" + toAppend;
    }
})(jQuery);
/*adreplace:15400952.22*/

var de=de || {};
de.bild = de.bild || {};
 
de.bild.AdReplace=function(to){
    var adRand=Math.random()*100;
    var adSum=0;
 
    for (var i=1;i<arguments.length;i+=2){
        adSum+=(typeof arguments[i+1]=== 'number')?arguments[i+1]:100;
        if(adRand<adSum)
        {
            document.getElementById(to).className = "show";
            var http=(window.ActiveXObject)?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest();
            if(http.overrideMimeType){http.overrideMimeType('text/html');}
            http.onreadystatechange=function()
            {
                if(http.readyState=="complete"||http.readyState==4)
                {
var _text = http.responseText;
if (_text.indexOf('document.write') != -1) {
return;
}

                    jQuery("#"+to).replaceWith(_text);
                }
            };
            http.open("GET",arguments[i],true);
            http.send(null);
            return false;
        }
        else
        {
           document.getElementById(to).className = "hide";
        }
    }

};

/*epro:15400958.22*/

if (window.location.href.indexOf("src=epro") >= 0){  var expires = new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 30);  document.cookie = "epro=1; path=/; expires=" + expires.toGMTString() +";";}
/*timestamp-replace:15400962.22*/

var de = de || {};
de.bild = de.bild || {};
de.bild.timestampReplace = de.bild.timestampReplace || {};
de.bild.timestampReplace.replaceTimestamp = function(link){ 
 var href = jQuery(link);
    href.attr('href',href.attr('href').replace("[timestamp]", (Math.floor(Math.random() * 100000000000))));
}
/*google-csa:18304084.1*/

if (!window['google']) {window['google'] = {};}if (!window['google']['loader']) {window['google']['loader'] = {};google.loader.ServiceBase = 'http://www.google.com/uds';google.loader.GoogleApisBase = 'http://ajax.googleapis.com/ajax';google.loader.ApiKey = 'notsupplied';google.loader.KeyVerified = true;google.loader.LoadFailure = false;google.loader.Secure = false;google.loader.GoogleLocale = 'www.google.com';google.loader.ClientLocation = {"latitude":52.517,"longitude":13.4,"address":{"city":"Berlin","region":"Berlin","country":"Germany","country_code":"DE"}};google.loader.AdditionalParams = '';(function() {var d=void 0,g=null,h=encodeURIComponent,j=window,k=document;function l(a,b){return a.load=b}var m="push",o="replace",p="charAt",r="indexOf",s="ServiceBase",t="name",u="getTime",v="length",w="prototype",x="setTimeout",y="loader",z="substring",A="join",B="toLowerCase";function C(a){if(a in D)return D[a];return D[a]=navigator.userAgent[B]()[r](a)!=-1}var D={};function E(a,b){var c=function(){};c.prototype=b[w];a.S=b[w];a.prototype=new c}function F(a,b){var c=Array[w].slice.call(arguments,2)||[];return function(){var e=c.concat(Array[w].slice.call(arguments));return a.apply(b,e)}}function G(a){a=Error(a);a.toString=function(){return this.message};return a}function H(a,b){for(var c=a.split(/\./),e=j,f=0;f<c[v]-1;f++)e[c[f]]||(e[c[f]]={}),e=e[c[f]];e[c[c[v]-1]]=b}function I(a,b,c){a[b]=c}if(!J)var J=H;if(!K)var K=I;google[y].v={};J("google.loader.callbacks",google[y].v);var L={},M={};google[y].eval={};J("google.loader.eval",google[y].eval);l(google,function(a,b,c){function e(a){var b=a.split(".");if(b[v]>2)throw G("Module: '"+a+"' not found!");else if(typeof b[1]!="undefined")f=b[0],c.packages=c.packages||[],c.packages[m](b[1])}var f=a,c=c||{};if(a instanceof Array||a&&typeof a=="object"&&typeof a[A]=="function"&&typeof a.reverse=="function")for(var i=0;i<a[v];i++)e(a[i]);else e(a);if(a=L[":"+f]){c&&!c.language&&c.locale&&(c.language=c.locale);if(c&&typeof c.callback=="string"&&(i=c.callback,i.match(/^[[\]A-Za-z0-9._]+$/)))i=j.eval(i),c.callback=i;if((i=c&&c.callback!=g)&&!a.s(b))throw G("Module: '"+f+"' must be loaded before DOM onLoad!");else i?a.m(b,c)?j[x](c.callback,0):a.load(b,c):a.m(b,c)||a.load(b,c)}else throw G("Module: '"+f+"' not found!");});J("google.load",google.load);google.R=function(a,b){b?(N[v]==0&&(O(j,"load",P),!C("msie")&&!C("safari")&&!C("konqueror")&&C("mozilla")||j.opera?j.addEventListener("DOMContentLoaded",P,!1):C("msie")?k.write("<script defer onreadystatechange='google.loader.domReady()' src=//:><\/script>"):(C("safari")||C("konqueror"))&&j[x](R,10)),N[m](a)):O(j,"load",a)};J("google.setOnLoadCallback",google.R);function O(a,b,c){if(a.addEventListener)a.addEventListener(b,c,!1);else if(a.attachEvent)a.attachEvent("on"+b,c);else{var e=a["on"+b];a["on"+b]=e!=g?aa([c,e]):c}}function aa(a){return function(){for(var b=0;b<a[v];b++)a[b]()}}var N=[];google[y].N=function(){var a=j.event.srcElement;if(a.readyState=="complete")a.onreadystatechange=g,a.parentNode.removeChild(a),P()};J("google.loader.domReady",google[y].N);var ba={loaded:!0,complete:!0};function R(){ba[k.readyState]?P():N[v]>0&&j[x](R,10)}function P(){for(var a=0;a<N[v];a++)N[a]();N.length=0}google[y].d=function(a,b,c){if(c){var e;if(a=="script")e=k.createElement("script"),e.type="text/javascript",e.src=b;else if(a=="css")e=k.createElement("link"),e.type="text/css",e.href=b,e.rel="stylesheet";(a=k.getElementsByTagName("head")[0])||(a=k.body.parentNode.appendChild(k.createElement("head")));a.appendChild(e)}else a=="script"?k.write('<script src="'+b+'" type="text/javascript"><\/script>'):a=="css"&&k.write('<link href="'+b+'" type="text/css" rel="stylesheet"></link>')};J("google.loader.writeLoadTag",google[y].d);google[y].O=function(a){M=a};J("google.loader.rfm",google[y].O);google[y].Q=function(a){for(var b in a)typeof b=="string"&&b&&b[p](0)==":"&&!L[b]&&(L[b]=new S(b[z](1),a[b]))};J("google.loader.rpl",google[y].Q);google[y].P=function(a){if((a=a.specs)&&a[v])for(var b=0;b<a[v];++b){var c=a[b];typeof c=="string"?L[":"+c]=new T(c):(c=new U(c[t],c.baseSpec,c.customSpecs),L[":"+c[t]]=c)}};J("google.loader.rm",google[y].P);google[y].loaded=function(a){L[":"+a.module].l(a)};J("google.loader.loaded",google[y].loaded);google[y].M=function(){return"qid="+((new Date)[u]().toString(16)+Math.floor(Math.random()*1E7).toString(16))};J("google.loader.createGuidArg_",google[y].M);H("google_exportSymbol",H);H("google_exportProperty",I);google[y].b={};J("google.loader.themes",google[y].b);google[y].b.H="//www.google.com/cse/style/look/bubblegum.css";K(google[y].b,"BUBBLEGUM",google[y].b.H);google[y].b.J="//www.google.com/cse/style/look/greensky.css";K(google[y].b,"GREENSKY",google[y].b.J);google[y].b.I="//www.google.com/cse/style/look/espresso.css";K(google[y].b,"ESPRESSO",google[y].b.I);google[y].b.L="//www.google.com/cse/style/look/shiny.css";K(google[y].b,"SHINY",google[y].b.L);google[y].b.K="//www.google.com/cse/style/look/minimalist.css";K(google[y].b,"MINIMALIST",google[y].b.K);function T(a){this.a=a;this.o=[];this.n={};this.e={};this.f={};this.j=!0;this.c=-1}T[w].g=function(a,b){var c="";b!=d&&(b.language!=d&&(c+="&hl="+h(b.language)),b.nocss!=d&&(c+="&output="+h("nocss="+b.nocss)),b.nooldnames!=d&&(c+="&nooldnames="+h(b.nooldnames)),b.packages!=d&&(c+="&packages="+h(b.packages)),b.callback!=g&&(c+="&async=2"),b.style!=d&&(c+="&style="+h(b.style)),b.other_params!=d&&(c+="&"+b.other_params));if(!this.j){google[this.a]&&google[this.a].JSHash&&(c+="&sig="+h(google[this.a].JSHash));var e=[],f;for(f in this.n)f[p](0)==":"&&e[m](f[z](1));for(f in this.e)f[p](0)==":"&&this.e[f]&&e[m](f[z](1));c+="&have="+h(e[A](","))}return google[y][s]+"/?file="+this.a+"&v="+a+google[y].AdditionalParams+c};T[w].t=function(a){var b=g;a&&(b=a.packages);var c=g;if(b)if(typeof b=="string")c=[a.packages];else if(b[v]){c=[];for(a=0;a<b[v];a++)typeof b[a]=="string"&&c[m](b[a][o](/^\s*|\s*$/,"")[B]())}c||(c=["default"]);b=[];for(a=0;a<c[v];a++)this.n[":"+c[a]]||b[m](c[a]);return b};l(T[w],function(a,b){var c=this.t(b),e=b&&b.callback!=g;if(e)var f=new V(b.callback);for(var i=[],n=c[v]-1;n>=0;n--){var q=c[n];e&&f.A(q);if(this.e[":"+q])c.splice(n,1),e&&this.f[":"+q][m](f);else i[m](q)}if(c[v]){b&&b.packages&&(b.packages=c.sort()[A](","));for(n=0;n<i[v];n++)q=i[n],this.f[":"+q]=[],e&&this.f[":"+q][m](f);if(!b&&M[":"+this.a]!=g&&M[":"+this.a].versions[":"+a]!=g&&!google[y].AdditionalParams&&this.j){c=M[":"+this.a];google[this.a]=google[this.a]||{};for(var Q in c.properties)Q&&Q[p](0)==":"&&(google[this.a][Q[z](1)]=c.properties[Q]);google[y].d("script",google[y][s]+c.path+c.js,e);c.css&&google[y].d("css",google[y][s]+c.path+c.css,e)}else(!b||!b.autoloaded)&&google[y].d("script",this.g(a,b),e);if(this.j&&(this.j=!1,this.c=(new Date)[u](),this.c%100!=1))this.c=-1;for(n=0;n<i[v];n++)q=i[n],this.e[":"+q]=!0}});T[w].l=function(a){if(this.c!=-1)W("al_"+this.a,"jl."+((new Date)[u]()-this.c),!0),this.c=-1;this.o=this.o.concat(a.components);google[y][this.a]||(google[y][this.a]={});google[y][this.a].packages=this.o.slice(0);for(var b=0;b<a.components[v];b++){this.n[":"+a.components[b]]=!0;this.e[":"+a.components[b]]=!1;var c=this.f[":"+a.components[b]];if(c){for(var e=0;e<c[v];e++)c[e].B(a.components[b]);delete this.f[":"+a.components[b]]}}};T[w].m=function(a,b){return this.t(b)[v]==0};T[w].s=function(){return!0};function V(a){this.D=a;this.q={};this.r=0}V[w].A=function(a){this.r++;this.q[":"+a]=!0};V[w].B=function(a){this.q[":"+a]&&(this.q[":"+a]=!1,this.r--,this.r==0&&j[x](this.D,0))};function U(a,b,c){this.name=a;this.C=b;this.p=c;this.u=this.h=!1;this.k=[];google[y].v[this[t]]=F(this.l,this)}E(U,T);l(U[w],function(a,b){var c=b&&b.callback!=g;c?(this.k[m](b.callback),b.callback="google.loader.callbacks."+this[t]):this.h=!0;(!b||!b.autoloaded)&&google[y].d("script",this.g(a,b),c)});U[w].m=function(a,b){return b&&b.callback!=g?this.u:this.h};U[w].l=function(){this.u=!0;for(var a=0;a<this.k[v];a++)j[x](this.k[a],0);this.k=[]};var X=function(a,b){return a.string?h(a.string)+"="+h(b):a.regex?b[o](/(^.*$)/,a.regex):""};U[w].g=function(a,b){return this.F(this.w(a),a,b)};U[w].F=function(a,b,c){var e="";a.key&&(e+="&"+X(a.key,google[y].ApiKey));a.version&&(e+="&"+X(a.version,b));b=google[y].Secure&&a.ssl?a.ssl:a.uri;if(c!=g)for(var f in c)a.params[f]?e+="&"+X(a.params[f],c[f]):f=="other_params"?e+="&"+c[f]:f=="base_domain"&&(b="http://"+c[f]+a.uri[z](a.uri[r]("/",7)));google[this[t]]={};b[r]("?")==-1&&e&&(e="?"+e[z](1));return b+e};U[w].s=function(a){return this.w(a).deferred};U[w].w=function(a){if(this.p)for(var b=0;b<this.p[v];++b){var c=this.p[b];if(RegExp(c.pattern).test(a))return c}return this.C};function S(a,b){this.a=a;this.i=b;this.h=!1}E(S,T);l(S[w],function(a,b){this.h=!0;google[y].d("script",this.g(a,b),!1)});S[w].m=function(){return this.h};S[w].l=function(){};S[w].g=function(a,b){if(!this.i.versions[":"+a]){if(this.i.aliases){var c=this.i.aliases[":"+a];c&&(a=c)}if(!this.i.versions[":"+a])throw G("Module: '"+this.a+"' with version '"+a+"' not found!");}return google[y].GoogleApisBase+"/libs/"+this.a+"/"+a+"/"+this.i.versions[":"+a][b&&b.uncompressed?"uncompressed":"compressed"]};S[w].s=function(){return!1};var Y=!1,Z=[],ca=(new Date)[u](),W=function(a,b,c){Y||(O(j,"unload",da),Y=!0);if(c){if(!google[y].Secure&&(!google[y].Options||google[y].Options.csi===!1))a=a[B]()[o](/[^a-z0-9_.]+/g,"_"),b=b[B]()[o](/[^a-z0-9_.]+/g,"_"),j[x](F($,g,"//gg.google.com/csi?s=uds&v=2&action="+h(a)+"&it="+h(b)),1E4)}else Z[m]("r"+Z[v]+"="+h(a+(b?"|"+b:""))),j[x](da,Z[v]>5?0:15E3)},da=function(){if(Z[v]){var a=google[y][s];a[r]("http:")==0&&(a=a[o](/^http:/,"https:"));$(a+"/stats?"+Z[A]("&")+"&nc="+(new Date)[u]()+"_"+((new Date)[u]()-ca));Z.length=0}},$=function(a){var b=new Image,c=$.G++;$.z[c]=b;b.onload=b.onerror=function(){delete $.z[c]};b.src=a;b=g};$.z={};$.G=0;H("google.loader.recordStat",W);H("google.loader.createImageForLogging",$);}) ();google.loader.rm({"specs":["feeds","spreadsheets","gdata","visualization",{"name":"sharing","baseSpec":{"uri":"http://www.google.com/s2/sharing/js","ssl":null,"key":{"string":"key"},"version":{"string":"v"},"deferred":false,"params":{"language":{"string":"hl"}}}},"search","orkut","ads","elements",{"name":"books","baseSpec":{"uri":"http://books.google.com/books/api.js","ssl":null,"key":{"string":"key"},"version":{"string":"v"},"deferred":true,"params":{"callback":{"string":"callback"},"language":{"string":"hl"}}}},{"name":"friendconnect","baseSpec":{"uri":"http://www.google.com/friendconnect/script/friendconnect.js","ssl":null,"key":{"string":"key"},"version":{"string":"v"},"deferred":false,"params":{}}},"identitytoolkit",{"name":"maps","baseSpec":{"uri":"http://maps.google.com/maps?file\u003dgoogleapi","ssl":"https://maps-api-ssl.google.com/maps?file\u003dgoogleapi","key":{"string":"key"},"version":{"string":"v"},"deferred":true,"params":{"callback":{"regex":"callback\u003d$1\u0026async\u003d2"},"language":{"string":"hl"}}},"customSpecs":[{"uri":"http://maps.google.com/maps/api/js","ssl":"https://maps-api-ssl.google.com/maps/api/js","key":{"string":"key"},"version":{"string":"v"},"deferred":true,"params":{"callback":{"string":"callback"},"language":{"string":"hl"}},"pattern":"^(3|3..*)$"}]},"payments","wave","annotations_v2","earth","language",{"name":"annotations","baseSpec":{"uri":"http://www.google.com/reviews/scripts/annotations_bootstrap.js","ssl":null,"key":{"string":"key"},"version":{"string":"v"},"deferred":true,"params":{"callback":{"string":"callback"},"language":{"string":"hl"},"country":{"string":"gl"}}}}]});google.loader.rfm({":search":{"versions":{":1":"1",":1.0":"1"},"path":"/api/search/1.0/a19382024b10b17b3768f1ddbff9273a/","js":"default+de.I.js","css":"default+de.css","properties":{":JSHash":"a19382024b10b17b3768f1ddbff9273a",":NoOldNames":false,":Version":"1.0"}},":language":{"versions":{":1":"1",":1.0":"1"},"path":"/api/language/1.0/6740d6abfbd20a6a85bf7c0679800f75/","js":"default+de.I.js","properties":{":JSHash":"6740d6abfbd20a6a85bf7c0679800f75",":Version":"1.0"}},":feeds":{"versions":{":1":"1",":1.0":"1"},"path":"/api/feeds/1.0/9985b8868e3ae9a5aa2c2d37ab8ff230/","js":"default+de.I.js","css":"default+de.css","properties":{":JSHash":"9985b8868e3ae9a5aa2c2d37ab8ff230",":Version":"1.0"}},":spreadsheets":{"versions":{":0":"1",":0.4":"1"},"path":"/api/spreadsheets/0.4/87ff7219e9f8a8164006cbf28d5e911a/","js":"default.I.js","properties":{":JSHash":"87ff7219e9f8a8164006cbf28d5e911a",":Version":"0.4"}},":wave":{"versions":{":1":"1",":1.0":"1"},"path":"/api/wave/1.0/3b6f7573ff78da6602dda5e09c9025bf/","js":"default.I.js","properties":{":JSHash":"3b6f7573ff78da6602dda5e09c9025bf",":Version":"1.0"}},":annotations":{"versions":{":1":"1",":1.0":"1"},"path":"/api/annotations/1.0/e885a7c3bd3841744c9a4d7cde970cb5/","js":"default+de.I.js","properties":{":JSHash":"e885a7c3bd3841744c9a4d7cde970cb5",":Version":"1.0"}},":earth":{"versions":{":1":"1",":1.0":"1"},"path":"/api/earth/1.0/a53f4e87830de2a72937039b5507ebdc/","js":"default.I.js","properties":{":JSHash":"a53f4e87830de2a72937039b5507ebdc",":Version":"1.0"}},":picker":{"versions":{":1":"1",":1.0":"1"},"path":"/api/picker/1.0/77d23be1d9a7f6c7632cb056f3de7c8a/","js":"default.I.js","css":"default.css","properties":{":JSHash":"77d23be1d9a7f6c7632cb056f3de7c8a",":Version":"1.0"}}});google.loader.rpl({":scriptaculous":{"versions":{":1.8.3":{"uncompressed":"scriptaculous.js","compressed":"scriptaculous.js"},":1.8.2":{"uncompressed":"scriptaculous.js","compressed":"scriptaculous.js"},":1.8.1":{"uncompressed":"scriptaculous.js","compressed":"scriptaculous.js"}},"aliases":{":1.8":"1.8.3",":1":"1.8.3"}},":yui":{"versions":{":2.6.0":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":2.9.0":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":2.7.0":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":2.8.0r4":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":2.8.2r1":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":2.8.1":{"uncompressed":"build/yuiloader/yuiloader.js","compressed":"build/yuiloader/yuiloader-min.js"},":3.3.0":{"uncompressed":"build/yui/yui.js","compressed":"build/yui/yui-min.js"}},"aliases":{":3":"3.3.0",":2":"2.9.0",":2.7":"2.7.0",":2.8.2":"2.8.2r1",":2.6":"2.6.0",":2.9":"2.9.0",":2.8":"2.8.2r1",":2.8.0":"2.8.0r4",":3.3":"3.3.0"}},":swfobject":{"versions":{":2.1":{"uncompressed":"swfobject_src.js","compressed":"swfobject.js"},":2.2":{"uncompressed":"swfobject_src.js","compressed":"swfobject.js"}},"aliases":{":2":"2.2"}},":webfont":{"versions":{":1.0.2":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.1":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.0":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.6":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.19":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.5":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.18":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.17":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.4":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.16":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.3":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.9":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.12":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.13":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.14":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.15":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.10":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"},":1.0.11":{"uncompressed":"webfont_debug.js","compressed":"webfont.js"}},"aliases":{":1":"1.0.19",":1.0":"1.0.19"}},":ext-core":{"versions":{":3.1.0":{"uncompressed":"ext-core-debug.js","compressed":"ext-core.js"},":3.0.0":{"uncompressed":"ext-core-debug.js","compressed":"ext-core.js"}},"aliases":{":3":"3.1.0",":3.0":"3.0.0",":3.1":"3.1.0"}},":mootools":{"versions":{":1.2.3":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.3.1":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.1.1":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.2.4":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.3.0":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.2.1":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.2.2":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.3.2":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.2.5":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"},":1.1.2":{"uncompressed":"mootools.js","compressed":"mootools-yui-compressed.js"}},"aliases":{":1":"1.1.2",":1.11":"1.1.1",":1.3":"1.3.2",":1.2":"1.2.5",":1.1":"1.1.2"}},":jqueryui":{"versions":{":1.6.0":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.0":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.2":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.1":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.9":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.7":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.13":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.8":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.12":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.5":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.11":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.7.2":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.7.3":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.10":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.6":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.7.0":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.7.1":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.8.4":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.5.3":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"},":1.5.2":{"uncompressed":"jquery-ui.js","compressed":"jquery-ui.min.js"}},"aliases":{":1.8":"1.8.13",":1.7":"1.7.3",":1.6":"1.6.0",":1":"1.8.13",":1.5":"1.5.3",":1.8.3":"1.8.4"}},":chrome-frame":{"versions":{":1.0.2":{"uncompressed":"CFInstall.js","compressed":"CFInstall.min.js"},":1.0.1":{"uncompressed":"CFInstall.js","compressed":"CFInstall.min.js"},":1.0.0":{"uncompressed":"CFInstall.js","compressed":"CFInstall.min.js"}},"aliases":{":1":"1.0.2",":1.0":"1.0.2"}},":jquery":{"versions":{":1.3.1":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.3.0":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.6.1":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.3.2":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.6.0":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.2.3":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.2.6":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.4.3":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.4.4":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.5.1":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.5.0":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.4.0":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.5.2":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.4.1":{"uncompressed":"jquery.js","compressed":"jquery.min.js"},":1.4.2":{"uncompressed":"jquery.js","compressed":"jquery.min.js"}},"aliases":{":1":"1.6.1",":1.6":"1.6.1",":1.5":"1.5.2",":1.4":"1.4.4",":1.3":"1.3.2",":1.2":"1.2.6"}},":prototype":{"versions":{":1.7.0.0":{"uncompressed":"prototype.js","compressed":"prototype.js"},":1.6.0.2":{"uncompressed":"prototype.js","compressed":"prototype.js"},":1.6.1.0":{"uncompressed":"prototype.js","compressed":"prototype.js"},":1.6.0.3":{"uncompressed":"prototype.js","compressed":"prototype.js"}},"aliases":{":1.7":"1.7.0.0",":1.6.1":"1.6.1.0",":1":"1.7.0.0",":1.6":"1.6.1.0",":1.7.0":"1.7.0.0",":1.6.0":"1.6.0.3"}},":dojo":{"versions":{":1.2.3":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.3.1":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.1.1":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.3.0":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.3.2":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.6.0":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.4.3":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.5.1":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.5.0":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.2.0":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.4.0":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"},":1.4.1":{"uncompressed":"dojo/dojo.xd.js.uncompressed.js","compressed":"dojo/dojo.xd.js"}},"aliases":{":1":"1.6.0",":1.6":"1.6.0",":1.5":"1.5.1",":1.4":"1.4.3",":1.3":"1.3.2",":1.2":"1.2.3",":1.1":"1.1.1"}}});}

google.load('ads.search', '2');

/*adcode.core:26045252.1*/


/*de.bild.init:27524116.20*/

/**
 * de.bild.init
 * Elternobjekt
 * Hier wird seitweite Initialisierungen gemacht
 * CSS Klassen:
 * keine
 */
jQuery.noConflict();
var de = de || {};
de.bild = de.bild || {};
de.bild.init = ( function($) {

    var siteInitalised = false;
    var mandatoryModulesInitalised = false;


    var moduleController = {

        moduleNamespace : 'de.bild.',

        modules: {

            autoLoad: {
                identifier: 'common',
                init: function($context){
                    de.bild.common.autoLoadModule( $context );
                }
            },

            vp: {
                identifier: 'videoTeaser',
                init: function($context){
                    de.bild.videoTeaser.init( $context );
                }
            },

            mediacenter: {
                identifier: 'galleryCenter',
                init: function($context){
                    de.bild.galleryCenter.init( $context );
                }
            },

            gallery: {
                identifier: 'mediaGallery',
                init: function($context){
                    de.bild.mediaGallery.init( $context );
                }
            },

            bildLive: {
                identifier: 'bildLive',
                init: function($context){
                    de.bild.bildLive.init( $context );
                }
            },

            ntoverview: {
                identifier: 'newstickerOverview',
                init: function($context){
                    de.bild.newstickerOverview.init( $context );
                }
            },

            maps: {
                identifier: 'maps',
                init: function($context){
                    de.bild.maps.init( $context );
                }
            },

            rotatingTeaser: {
                identifier: 'rotationTeaser',
                init: function($context){
                    de.bild.rotationTeaser.init($context);
                }
            },

            slider: {
                identifier: 'slider',
                init: function($context){
                    de.bild.slider.init($context);
                }
            },

            articleGallery: {
                identifier: 'articleGallery',
                init: function($context){
                    de.bild.articleGallery.init($context);
                }
            },

            accordion: {
                identifier: 'accordion',
                init: function($context){
                    de.bild.accordion.init($context);
                }
            },

            liveArticle: {
                identifier: 'liveArticle',
                init: function($context){
                    de.bild.liveArticle.init($context);
                }
            },

            socialBar: {
                identifier: 'socialBar',
                init: function($context){
                    de.bild.socialBar.init($context);
                }
            },

            coverflow: {
                identifier: 'coverflow',
                init: function($context){
                    de.bild.coverflow.init($context);
                }
            },

            homeButton: {
                identifier: 'homeButton',
                init: function($context){
                    de.bild.homeButton.init($context);
                }
            },

            nticker: {
                identifier: 'newsTicker',
                init: function($context){
                    de.bild.newsTicker.init($context);
                }
            },

            purplePlayer: {
                identifier: 'purplePlayer',
                init: function($context){
                    de.bild.purplePlayer.init($context);
                }
            },

            qgtv: {
                identifier: 'qgtv',
                init: function(){
                    QGTV.initialize();
                    //de.bild.qgtv.zoom.Events();
                }
            }

        },

        externalModules: {
            maps: true,
            purplePlayer: true
        },

        isLoaded: function(module){
            return de.bild[ module.identifier ];
        },


        load: function(moduleName, $context){

            var module = this.modules[moduleName];

            if(!module) {
                console.warn('INIT: Unknown module - ' + moduleName);
                return false;
            }

            if(this.isLoaded(module)) {
                module.init($context);
            } else {
                var filename = this.moduleNamespace + module.identifier;
                de.bild.moduleLoader.loadModule(false, filename, function(){
                    module.init($context);
                });
            }
        }

    };


    de.bild.events.subscribe('initModule', function(moduleName, selector){

        if(!mandatoryModulesInitalised) {
            mandatoryModulesInitalisation();
        }

        if(moduleController.externalModules[moduleName]) {
            de.bild.moduleLoader.loadModule(true, moduleName, function(){
                moduleController.load(moduleName, $(selector).last());
            });
        } else {
            moduleController.load(moduleName, $(selector).last());
        }

    });


    $(document).on("xoz/videoplayer/ready", function() {
        com.xoz.videoplayer.registerAll();
    });

    de.bild.events.subscribe('showLightbox', function(lbStyle, lbUrl){
        de.bild.common.showLightbox(lbStyle, lbUrl);
    });



    function mandatoryModulesInitalisation() {

        mandatoryModulesInitalised = true;

        if(de.bild.globalSandBox) {
            de.bild.globalSandBox.init();
        }

    }



    function initializeOnce() {

        var $context = $('body');

        if(!mandatoryModulesInitalised) {
            mandatoryModulesInitalisation();
        }

        // Live event binding for simple functions
        if(de.bild.common) {

            de.bild.common.initLightboxes($context);
            de.bild.common.initTabModules($context);
            de.bild.common.initPagination($context);
            de.bild.common.initCommentsAndColumns($context);

        }

        /* social */
        if(de.bild.social) {
            de.bild.social.init();
        }

        /* community */
        if(de.bild.community) {
            de.bild.community.init();
        }


        if(de.bild.onDemand) {
            de.bild.onDemand.init($context);
        }

        /* Sliding Social Bar */
        if(de.bild.socialBar) {
            var $socialBarLeftAndMiddle = $context.find('.social-sharing');
            if($socialBarLeftAndMiddle.length && $socialBarLeftAndMiddle.length > 1) {
                de.bild.socialBar.init( $socialBarLeftAndMiddle );
            }
        }

        /* Live Article */
        if(de.bild.liveArticle) {
            var $liveArticle = $context.find('.liveticker');
            if($liveArticle.length) {
                de.bild.liveArticle.init( $liveArticle );
            }
        }

    }




    function init($context) {

        if( typeof $context === 'undefined' || $context.length === 0) {
            return false;
        }

        // sso.init : see navi.js

        // run once
        if(siteInitalised === false) {
            initializeOnce();
            siteInitalised = true;
        }

        //Breaking news
        if(de.bild.breakingNews) {
            var $breaking = $context.find('#breaking');
            if($breaking.length) {
                de.bild.breakingNews.init();
            }
        }

        // Jalousie
        if(de.bild.jalousie) {
            var $jalousieCollection = $context.find('.jalousie');
            if($jalousieCollection.length) {
                de.bild.jalousie.init($jalousieCollection);
            }
        }


        // Top Nachrichten, Bilder, Videos des Tages
        if(de.bild.topNews) {
            var $tnCollection = $context.find('.ateaser');
            if($tnCollection.length) {
                de.bild.topNews.init($tnCollection);
            }
        }

        // Accordion module
        if(de.bild.accordion) {
            var $accCollection = $context.find('.accordion, .ktgacc');
            if($accCollection.length) {
                de.bild.accordion.init($accCollection);
            }
        }

        // Bildlaufleiste
        if(de.bild.slider) {
            var $collection = $context.find('.slideshow');
            if($collection.length) {
                de.bild.slider.init($collection);
            }
        }

        if(de.bild.rssRotationTeaser){
            var $rssRotationTeaser = $context.find('#rssBRotate');
            if($rssRotationTeaser.length) {
                de.bild.rssRotationTeaser.init();
            }
        }

        if(de.bild.user && de.bild.user.isLoggedIn()) {
            de.bild.common.removeLoginButtons($context);
        }

        if(de.bild.social) {
            var $socialMediaButtons = $context.find('.social-button');
            if($socialMediaButtons.length) {
                de.bild.social.initSocialButtons($context);
            }
        }

        if(de.bild.community && de.bild.community.teaserComments){
            if($context.prop('nodeName') && $context.prop('nodeName').toLowerCase() != "body"){
                de.bild.community.teaserComments.checkForTeaserComments($context);
            }
        }

        if(de.bild.common.showPremiumMarkers) {
            de.bild.common.showPremiumMarkers($context);
        }

        // Videos
        if(window.com && com.xoz) {
            var $videos = $context.find('.videoplayer');
            if($videos.length && com.xoz.videoplayer) {
                com.xoz.videoplayer.registerForContext($context);
            }
            var $oldVideos = $context.find('.video_js_proxy');
            if($oldVideos.length && com.xoz.videoplayer) {
                registerAllVideoObjectsForContext($context);
            }
        }

        var $qgtv = $context.find('.qgtv');
        if($qgtv.length) {

            if(!window.QGTV) {
                moduleController.load('qgtv', $qgtv);
            } else {
                moduleController.modules.qgtv.init();
            }
        }

        return siteInitalised;

    }

    //document.ready
    $(function() {

        init($('body'));

    });

    return init;

}(jQuery));

/*de.bild.globalSandBox:29369344.4*/


var de = de || {};
de.bild = de.bild || {};

de.bild.globalSandBox = (function($) {

    var MODULES = getModuleReferences();
    var dummyModuleListForRemoval = [];

    function getModuleReferences() {

        return {
            SETTINGS_MODULE : de.bild.settings,
            FIST : de.bild.httpFist,
            UTIL_MODULE : de.bild.utils,
            MOBILE : de.bild.mobile,
            $COOKIE : $.cookie,
            $LIGHTBOX : $.fn.bildLightbox,
            LIB_MODULE : de.lib,
            SSO_MODULE : de.bild.sso,
            //SOCIAL_MODULE : de.bild.social,
            $PROGRESS_BAR : $.fn.bildProgressBar,
            VIDEO_MODULE : de.bild.video,
            INIT_MODULE : de.bild.init,
            USER : de.bild.user,
            EVENTS: de.bild.events
        };
    }

    function validateModules() {
        for (var key in MODULES) {
            if (MODULES.hasOwnProperty(key) !== true || typeof MODULES[key] === 'undefined') {
                throw new Error(key + ' is not loaded');
            }
        }
    }

    /********** Consider returning a single object with all relevant data? ***********/

    function mobileInfo() {

        return  {
            'isMobile' : MODULES.UTIL_MODULE.isMobile(),
            'isIPad' : MODULES.MOBILE.isIPad(),
            'isIPhone' : MODULES.UTIL_MODULE.isIPhone(),
            'isIOS': MODULES.MOBILE.isIOS(),
            'isWebkit' : MODULES.MOBILE.isWebkit(),
            'isTouch': MODULES.MOBILE.hasTouchSupport()
        };
    }


    /********** Yet again a single object instead of implementing each sub-query ***********/

    function globalSettings() {
        return {
            'urls' : MODULES.SETTINGS_MODULE.urls,
            'lang' : MODULES.SETTINGS_MODULE.lang,
            'community' : MODULES.SETTINGS_MODULE.community,
            'facebookAppId' : MODULES.SETTINGS_MODULE.facebookAppId
        };
    }


    /********** TEMP: list of community funcs ***********/
    /*

     jquery.bildProgressBar
     de.bild.social.postingPhototoFB
     de.bild.social.postingVideotoFB
     de.bild.utils.addStyleSheet
     jquery.TextAreaExpander
     de.bild.utils.scrollTo
     de.bild.utils.inViewport
     de.bild.utils.trim
     de.bild.social.userPhotos
     de.bild.social.publishStream

     */

    /* is logged into sso ? */
    function isLoggedIn(){
        if(!MODULES.SSO_MODULE) {
            throw new Error('SSO Module missing!');
        }
        return MODULES.SSO_MODULE.isLoggedIn();
    }

    /* open login lightbox */
    function triggerLogIn(){
        if(!MODULES.SSO_MODULE) {
            throw new Error('SSO Module missing!');
        }
        return MODULES.SSO_MODULE.login();
    }



    /************* MISC ********************/

    /**
     * removeDeletedElements: removes elements, which aren't in DOM anymore
     * @param moduleList - {Array} containing initialized modules
     * @name removeDeletedElements
     * @function
     * @private
     */
    function removeDeletedElements( moduleList ) {

        dummyModuleListForRemoval = [];

        for(var i = 0, j = moduleList.length; i < j; i++){
            if( elementIsInDom( moduleList[i].$container ) ) {
                dummyModuleListForRemoval.push(moduleList[i]);
            } else {
                shutDownModule(moduleList[i]);
            }
        }
        return dummyModuleListForRemoval;
    }

    /**
     * shutDownModule: stops a module if it has a tear down method
     * @param module - {Object} Module
     * @name shutDownModule
     * @function
     * @private
     */
    function shutDownModule(module) {

        if(module.tearDown) {
            module.tearDown();
        }
        module = null;
    }


    function elementIsInDom( $elem ) {
        return $elem.closest('body').length > 0;
    }


    function tearDownModulesIn($node) {

        var $videos = $node.find('.videoplayer');
        $.each($videos, function(){
            try{
                com.xoz.videoplayer.removeInstance(this.id);
            } catch(err) {
                console.warn('GlobalSandbox: Videoplayer teardown failed. ' + err);
            }
        });
    }



    function getActionEventsMap(namespace) {

        if(MODULES.EVENTS) {
            return MODULES.EVENTS.getNameSpacedEvents( namespace );
        }
        /* Fallback */
        return {'click' : 'click.' + namespace };
    }


    return {

        'logError' : function(errorDesc, callee) {
            throw new Error(errorDesc+' -- '+callee.name);
        },
        'trim': function(str) {
            return MODULES.UTIL_MODULE.trim(str);
        },
        'randomNr': function(max) {
            return MODULES.UTIL_MODULE.ran(max);
        },
        /*'randomNumberFromRange' : function(from, to) {
         return UTIL_MODULE.getRandomNrFromRange(from, to);
         },*/
        'mobileInfo' : function() {
            return mobileInfo();
        },

        'getActionEvents': function(namespace) {
            return getActionEventsMap(namespace);
        },

        'xozVideoController': function() {
            return MODULES.VIDEO_MODULE.getVideoStateManager();
        },
        'globalSettings': function() {
            return globalSettings();
        },
        'inViewport': function($elem) {
            return MODULES.UTIL_MODULE.inViewport($elem);
        },

        'moduleIsInitialized': function($elem) {
            if(!$elem.data('moduleInitialized')) {
                return false;
            }
            return true;
        },
        'setModuleInitialized': function($elem) {
            $elem.addClass('jsModule');
            return $elem.data('moduleInitialized', true);
        },

        'publish': function( eventName ){
            if(!jQuery.publish) {
                console.warn('Could not Publish Event ' + eventName);
                return false;
            }
            $.publish( eventName );
        },

        'initModules': function($context, noNodeRemoval) {

            if(!noNodeRemoval && MODULES.EVENTS) {
                MODULES.EVENTS.publish("domNodeRemoved");
            }

            if($context) {
                return MODULES.INIT_MODULE($context);
            }

            return MODULES.INIT_MODULE();
        },

        'elementIsInDom': function( $elem ) {
            return elementIsInDom($elem);
        },

        'removeDeletedElements': function( moduleList ) {
            return removeDeletedElements(moduleList);
        },

        /* plugins abstract */
        'lightbox' : function($elem, params){
            return $elem.$LIGHTBOX(params);
        },
        'cookie' : function(name, value, params){
            return $COOKIE(name, value, params);
        },

        'get': function(url, successCallback, errorCallback) {

            if(MODULES.FIST) {
                MODULES.FIST.load({
                    url: url,
                    callback: successCallback,
                    error: errorCallback
                });
            } else {

                $.ajax({
                    dataType: 'html',
                    url: url
                })
                    .done(function(response) {
                        successCallback.call(this, response);
                    })
                    .fail(function() {
                        errorCallback.call(this, response);
                    });
            }
        },

        'getJson' : function(url, callback) {

            MODULES.FIST.load({
                url: url,
                dataType: "json",
                callback: callback
            });
        },

        'getStorage':  function() {
            return MODULES.UTIL_MODULE.storage;

        },

        'getEventManager': function(){
            return MODULES.EVENTS;
        },

        'getUserData': function(){
            return MODULES.USER;
        },

        /* jquery abstract */
        'load' : function(data){
            return MODULES.FIST.load(data);
        },

        'live' : function($parentSelector, selector, events, handler, data){
            handler = handler || function(){};
            data = data || {};
            return MODULES.LIB_MODULE.live($parentSelector, selector, events, handler, data);
        },
        /* community */

        'isLoggedIn': function() {
            return isLoggedIn();
        },
        'login' : function(){
            return triggerLogIn();
        },

        'init': function() {
            MODULES = getModuleReferences();
            return MODULES;
        },

        'tearDownModulesIn': function($node){
            tearDownModulesIn($node);
        }

    };


})(jQuery);



/*de.bild.community:27210474.15*/

var de = de || {}; 
de.bild = de.bild || {};
de.bild.community = (function($, SandBox) {
    var initialised = false, settings, templates, variables, lang, urls,notificationCookie = 'new_notification',online=true;
    
    function setVars() {
        settings = de.bild.settings.community.options;
        templates = de.bild.settings.community.templates;
        lang = de.bild.settings.community.lang;
        urls = de.bild.settings.community.urls;
        //setable via de.bild.community.update
        if(!variables) {
            variables = {
                'totalComments' : 0,
                'checkForNewCommentsDelay' : 10000,
                'commentRequestMaximum' : 10,
                'liveCommentsOn' : false,
                'oldestCommentCommitTimeSeenInBrowser' : 0,
                'ugcid' : '',
                'maxCommentLength' : 1000,
                'uploadProgressSid' : '',
                'profileOwnerEncryptedUserId' : '',
                'profileViewToken' : '',
                'defollow' : 'entfolgen',
                'follow' : 'folge ich'
            }
        }
    }
    var submitAjaxRequest = null;
    /* AJAX LINKS FOR THE FIST
    ///////////////////////////       */
    /**
     * sets up events by which GET requests are fired
     * @function
     * @name setAjaxLinks
     * @memberOf de.bild.community
     * @private
     */
    function setAjaxLinks() {
        /* Initialise the load elements
         Loading passes a url direct from the href attribute*/
        $contentWrapper.find('a.' + settings.ajaxClassLoad).each(function() {
            
            var obj = this, $target = $(this);  
            
            SandBox.load({
                'obj' : obj,
                'replace' : true,
                '$target' : $target,
                'ajaxType':$.ajax,
                'callback' : function(response, $target) {                   
                    //global init since p2r4 BILD-Markuped elements are rendered by KIT
                    
                    //jalousie init
                    if(de.bild.jalousie) {
                        var $jalousieCollection = $target.find('.jalousie');
                        if($jalousieCollection.length) {
                            de.bild.jalousie.init($jalousieCollection);
                        }
                    }
                    
                                        
                    //normal Comunity Init
                    init($target);
                    /* set up only when needed onload*/
                    if($('div.comments').length) {
                        setTimeout(function() {
                            init();
                        }, settings.startCheckCommentsDelay);
                        /* tell the world about it and pass the ugc id of the article*/
                        $body.trigger('commentEventsSetup', {
                            ugcid : 'ugc-' + variables.ugcid
                        });
                    }
                },
                'error' : function(xhr, textStatus, $target) {
                    if($target.length) {
                        //Ersatzcontent
                        if($target.attr('data-ajax-error') != null) {
                            var errorUrl = $target.attr('data-ajax-error');
                            $target.attr('data-ajax-error', null);
                            SandBox.load({
                                'url' : errorUrl,
                                'replace' : true,
                                '$target' : $target,
                                'error' : function(xhr, textStatus, $target) {
                                    if(de.bild.env.domain !== 'bild.de') {
                                        $target.replaceWith(templates.message.replace('%CLASS%', 'hint').replace('%CONTENT%', xhr.status + ' : ' + textStatus));
                                    }
                                    /* if  live don't show the returned error show a message*/
                                    else {
                                        $target.replaceWith(templates.message.replace('%CLASS%', 'hint').replace('%CONTENT%', xhr.status + ' : ' +lang.error));
                                    }
                                }
                            })
                        }
                        /* if not live show the returned error */
                        else if(de.bild.env.domain !== 'bild.de') {
                            $target.replaceWith(templates.message.replace('%CLASS%', 'hint').replace('%CONTENT%', xhr.status + ' : ' + textStatus));
                        }
                        /* if  live don't show the returned error show a message*/
                        else {
                            $target.replaceWith(templates.message.replace('%CLASS%', 'hint').replace('%CONTENT%',xhr.status + ' : ' + lang.error));
                        }
                    }
                }
            });
        });
        /* Content will be loaded into the specified target via innerHTML
         global so that it works in lightboxes */
        de.lib.live($body, 'a.' + settings.ajaxClass, 'click', function(e) {
            e.preventDefault();
            var obj = this;
            SandBox.load({
                'obj' : obj,
                'callback' : function(response, $target) {
                    init($target);
                }
            });
        });
        
        
        /* Content will replace the specified target via replaceWith
         global so that it works in lightboxes */
        de.lib.live($body, 'a.' + settings.ajaxClassReplace + ', input.' + settings.ajaxClassReplace, 'click', function(e) {
            e.preventDefault();
            var obj = this;
            SandBox.load({
                'obj' : obj,
                'replace' : true,
                'callback' : function(response, $target) {
                    init($target);
                    if($(this).parents('div.pag').length) {
                        var targetOffset = ~~($target.offset().top);
                        de.bild.utils.scrollTo(targetOffset);
                    }
                }
            });
        });
        /* Onchange event for select boxes */
        de.lib.live($contentWrapper, 'select.' + settings.ajaxClassReplace, 'change', function(e) {
            e.preventDefault();
            var obj = this, 
            $form = $(this).parents('form').eq(0);
            $form.addClass('loading');
            SandBox.load({
                'obj' : obj,
                'replace' : true,
                'callback' : function(response, $target) {
                    init($target);
                    $form.removeClass('loading');
                }
            });
        });
        /* Report Lightbox trigger  */
        de.lib.live($contentWrapper, 'a.report', 'click', function(e) {
            e.preventDefault();
            if(de.bild.sso && de.bild.sso.isLoggedIn() === false) {
                de.bild.sso.login();
            } else {
                SandBox.load({
                    'obj' : this,
                    'callback' : function(response, $target) {
                        showLightBox({
                            'content' : response
                        });
                    }
                });
            }
        });
        //prevent default for .drop class
        de.lib.live($contentWrapper, '.btn-def.drop','click', function(e){
            e.preventDefault();
            
            //Hide all other open elements
            $('.btn-def.drop').siblings('ul').hide();
            $doc.unbind('click.fnc');
            
            
            $this = $(this);
            var $elem = $this.siblings('ul');
            $elem.show();
            
            docClickHandler = function(e) {            
                    var $target = $(e.target);
                    /* don't catch clicks on the fnc */
                    if($target.parents('.fnc').length === 0) {
                        $doc.off('click.fnc');
                        $elem.hide();
                    }
            };
             
            $doc.on('click.fnc', docClickHandler);            
        });        
        
        /* Extra close button in lightbox form
         reset button in light box form - even though it's a reset button :) */
        de.lib.live($body, 'div.com-lightbox input.btn-close,div.com-lightbox a.btn-close, div.com-lightbox input.btn-reset','click', function(e){
            closeLightBox();
        });
        
                /* Report Lightbox trigger  */
        de.lib.live($contentWrapper, 'div.topcomments-list a.prev, div.topcomments-list a.next', 'click', function(e) {
            e.preventDefault();
            var elemSelector = 'div.topcomments-list';
            var hideClass = 'hide';
            var clearfix = 'clearfix'; 
            var $this = $(this).parents(elemSelector).first();            
            var section = $this.parents('section').first();
            
            //prev
            if($(this).hasClass('next')){
                var next = $this.next(elemSelector).first();
                $this.addClass(hideClass).removeClass(clearfix);
                if(next.length!=0){                   
                    next.removeClass(hideClass).addClass(clearfix);
                }
                else{
                    section.find(elemSelector).first().removeClass(hideClass).addClass(clearfix);
                }
            }            
            else{
                var prev = $this.prev(elemSelector).first();
                $this.addClass(hideClass).removeClass(clearfix);
                if(prev.length!=0){                   
                    prev.removeClass(hideClass).addClass(clearfix);
                }
                else{
                    section.find(elemSelector).last().removeClass(hideClass).addClass(clearfix);
                } 
                
            }
            //next
            
        });
        
        
    };
    /**
     * handles the communication between server and form elements
     * @function
     * @name
     * @memberOf de.bild.community
     * @param {$Object} $elem jQuery Element over which the loading layer should be superimposed
     * @param {string} data.url URL where to load the snippet from
     * @param {obj} data.params an Array on Parameters posted to the server
     * @param {func} data.callback function called after content received
     * @param {string} data.dataType html or json
     * @param {string} data.method POST or GET
     * @private
     */
    function submitForm($elem, data) {
        if(data.url) {
            if(submitAjaxRequest) {
                submitAjaxRequest.abort();
            }
            /* defaults */
            var datatype = data.dataType ? data.dataType : 'html', 
            method = data.method ? data.method : 'POST', 
            timeout = data.timeout ? data.timeout : '15000', 
            params = (data.params && method.toLowerCase() === 'post') ? data.params : false;
            
            submitAjaxRequest = $.ajax({
                'url' : data.url,
                'dataType' : datatype,
                'data' : params,
                'type' : method,
                'timeout' : timeout,
                'beforeSend' : function() {
                    if($elem) {
                        if($elem.get(0).nodeName.toLowerCase()!='form')
                            $elem = $elem.parents('form');
                        
                        loadingLayer($elem, 'loading');
                    }
                }
            }).done(function(response) {
                ( typeof data.callback === 'function') && data.callback(response, 'success');
            }).fail(
                function() {
                    ( typeof data.callback === 'function') && data.callback(null, 'error');
            }).always(function() {
                if($elem) {
                    loadingLayer($elem, 'loading');
                }
            });
        }
    };
    function loadingLayer($elem, cl) {
        if(!cl)
            $elem.toggleClass('active');
        else
            $elem.toggleClass(cl);
    }
    /**
     * update a static count in an element on the page (beitrag counts etc)
     * @function
     * @name updateCount
     * @memberOf de.bild.community
     * @param {$object} $elem - url
     * @param {Num} inc - the number which should be added (can be negative)
     * @private
     */
    function updateCount($elem, inc) {
        if($elem.length === 0) {
            return null;
        }
        var count = parseInt($.trim($elem.text())), newCount;
        if( typeof count === 'number') {
            newCount = count + inc;
            if(newCount < 0) {
                newCount = 0;
            }
            $elem.text(newCount);
            return newCount;
        }
        return null;
    };
    /**
     * helper function to launch lightbox
     * @function
     * @name showLightBox
     * @param {Object} params normal lightbox params (see jquery.lightbox.js)
     * @memberOf de.bild.community
     * @private
     */
    function showLightBox(params) {
        if(params) {
            params.wrapperClass = params.wrapperClass?params.wrapperClass:'com-lightbox sso';
            return $('body').bildLightbox(params);
        }
    };
    /**
     * closes window
     * @function
     * @name close
     * @param {objeckt} data delay:{number} ms callback:{function}
     * @memberOf de.bild.community
     * @private
     */
    function closeLightBox(data) {
        var params = data || {}, delay = params.delay ? params.delay : 0;
        setTimeout(function() {
            if($('body').data('bildLightbox')) {
                $('body').data('bildLightbox').close();
            }
            if( typeof params.callback == 'function')
                params.callback();
        }, delay);
    };
    /**
     * from R2 onwards: checks requests for the presence of a json object and failure param
     * @function
     * @name screenForResponseErrors
     * @param {string} resp Response from an ajax call
     * @returns {Bool}
     * @memberOf de.bild.community
     * @private
     */
    function screenForResponseErrors(response) {
        /*
         for this piece of code, i am sorry. we receive various responses (html and json) and the headers are not correctly set
         so we have to attempt to parse the response as json -r.dodd
         */
        var respObj;
        try {
            // normal json?
            if(response.status.length) {
                respObj = response;
            } else {
                respObj = $.parseJSON(response);
            }
        } catch(e) {
            respObj = null;
        }
        if(respObj !== null && respObj.status && (respObj.status === 'failure' || respObj.status === 'error')) {
            var message = respObj.message?respObj.message:'';
            var title = respObj.title?respObj.title:'Fehler';
            
            var html = templates.lbMessageWithButton.replace('%CONTENT%', message).replace('%HEADING%', title).replace('%BUTTON%', lang.closeLightbox);
            closeLightBox({
                'callback' : function() {
                    showLightBox({
                        'content' : html
                    });
                }
            });
            return true;
        } else {
            return false;
        }
    };
    /**
     * public function to update editable values in the variables object
     * the variables must already exist and be of the same type as the incoming data
     * @function
     * @name updateSettings
     * @memberOf de.bild.community
     * @private
     * @param {Object} $elem jQuery Object
     * @returns {Object} variables
     */
    function updateVars(data) {
        if(!variables) {
            setVars();
        }
        if(data) {
            // intialise runtime functions
            for(var key in data) {
                // the variable must already exist and be of the same type
                if(variables.hasOwnProperty(key) && typeof variables[key] === typeof data[key]) {
                    variables[key] = data[key];
                }
            }
        }
        return variables;
    };
    function setupReportFormEvents(){
        
    }
    /**
     * this function returns logged in values stored in a cookie. it's used for webtrek tracking and called in the head of the page onload
     * @function
     * @name getCustomSessionParam
     * @memberOf de.bild.community
     * @private
     */
    function getCustomSessionParam() {
        var result = '', lastStatusCheckTime, loginStatus = $.cookie('avLoginStatus');
        if(loginStatus && loginStatus !== 'false') {
            var loginStatusParams = loginStatus.split('#'), nowTime = new Date();
            if(loginStatusParams.length > 3) {
                lastStatusCheckTime = loginStatusParams[3];
            } else {
                //status wird zum Ersten mal hier gelesen deswegen liefern wir ihn fuer Webtrekk zurueck
                result = 'logged_in';
                if(loginStatusParams.length < 3) {
                    //FacebookID ist auch nicht gesetzt deswegen ein leeres 3. Param
                    loginStatusParams.push('');
                }
                //lastStatusCheckTime an der 4. Position setzen
                loginStatusParams.push(escape(nowTime.toGMTString()));
            }
            if(lastStatusCheckTime && new Date(unescape(lastStatusCheckTime)).getTime() + (1000 * 60 * 20) < nowTime.getTime()) {
                //da lastStatusCheckTime > 20 minuten ist liefern wir den status fuer Webtrekk zurueck
                result = 'logged_in';
                //lastStatusCheckTime ersetzen
                loginStatusParams.splice(3, 1, escape(nowTime.toGMTString()))
            }
            var newloginStatus = '';
            for(var i = 0, j = loginStatusParams.length; i < j; i++) {
                newloginStatus = newloginStatus + loginStatusParams[i];
                if(i < loginStatusParams.length - 1) {
                    newloginStatus = newloginStatus + '#';
                }
            }
            $.cookie('avLoginStatus', newloginStatus, {
                path : '/'
            });
        }
        return result;
    };
    /**
     * updates the contentId of the page for webtracking
     * @function
     * @name updateContentId
     * @param {String} contentId
     * @param {String} docType
     * @memberOf de.bild.community
     * @private
     */
    function updateContentId(contentId, docType) {
        if(contentId) {
            docType = docType || '';
            var cp = contentId.split('/');
            if(cp[1] == 'projektor') {
                var dtp = docType.split('/');
                if(dtp.length == 2) {
                    cp[2] = dtp[1];
                } else {
                    cp[2] = docType;
                }
            } else {
                cp[1] = docType;
            }
            return cp.join('/');
        }
        return false;
    };
    /**
     * will loop through all elements with a class of .required
     * null values trigger the error
     * @function
     * @name validateForm
     * @param {$Object} $formElem Form element as a jquery object
     * @returns {Bool}
     * @memberOf de.bild.community
     * @private
     */
    function validateForm($formElem) {
        var okToSubmit = true;
        if($formElem.length) {
            $formElem.find('div.error').removeClass('error');
            var $requiredEls = $formElem.find('.required');
            $requiredEls.each(function() {
                var $this = $(this), thisVal = $this.val();
                if($.trim(thisVal) == '' || thisVal == $this.attr('title') || ($this.attr('type') == 'checkbox' && !$this.attr('checked')) || (this.nodeName.toLowerCase() == 'input' && encodeURIComponent(thisVal).length>128)) {                    
                    $this.parents('div').first().addClass('error');
                    okToSubmit = false;
                }
            });
        }
        return okToSubmit;
    };
    /**
     * Setup lightbox trigger for security questions, eg: Profilephoto Lightbox trigger "do you want to delete this photo?"  OR "Do you want to delete this comment"
     * @function
     * @name setupSecurityQuestions
     * @memberOf de.bild.community
     * @private
     */
    function setupSecurityQuestions(){
        
        de.lib.live($contentWrapper, 'a.secquestion', 'click', function(e){
            e.preventDefault();
            SandBox.load({
                'obj': this,
                'callback': function(response, $target){
                    showLightBox({
                        'content': response,
                        'onClose' : function(){                       
                            /* if success window has class of refresh...refresh! */
                            if($body.find('div.com-lightbox #success').length) {                           
                                /* refresh on success so we can see result of change */
                                window.location.reload();
                            }
                             else if($body.find('div.com-lightbox #com-logout').length) {                           
                                /* refresh on success so we can see result of change */
                                de.bild.sso.logout();
                            }
                            
                            
                        }                       
                    });
                },
                'error' : function(){
                    closeLightBox({
                        'callback' : function(){
                            showLightBox({
                                'content' : Community.templates().lbMessage.replace('%CONTENT%', response.message).replace('%CLASS%', 'error').replace('%HEADING%', Community.lang().error)
                            });
                        }
                    });
                }
            });
        });
    };
/* ================================================================================================================ START NOTIFICATION POPUP */
   
   
    /**
     * checks for cookie to see if new notification is there and triggers lightbox
     * @function
     * @name setupNotificationPopup
     * @memberOf de.bild.community
     * @private
     */
    function setupNotificationPopup() {
        if($.cookie(notificationCookie) && parseInt($.cookie(notificationCookie)) === 1) {
            var url = de.bild.settings.community.urls.newfeatureNotification;            
            SandBox.load({
                'url' : url,
                'callback' : function(response) {
                    showLightBox({
                        'content' : response,
                        'callback' : function() {
                            $.cookie(notificationCookie, null);
                        },
                        'onClose' : function() {
                        }
                    });
                }
            })
        }
    }
/* ================================================================================================================ END NOTIFICATION POPUP */
    function init($target) {
        //set only once
        if(!initialised) {
            //settings variables templates, in function on dom ready because of dependencies to sandbox
            setVars(); $contentWrapper = $('#innerWrapper'), $body = $('body'), $doc = $(document);
            //set up all the live events
            setAjaxLinks();            
            setupSecurityQuestions();
            setupNotificationPopup();
            
            
           initialised = true; 
           
        }
        if(de.bild.community.comments) {
            de.bild.community.comments.init();
        }
        if(de.bild.community.lightboxForms) {
            de.bild.community.lightboxForms.init();
        }
        if(de.bild.community.likeBtn) {
            de.bild.community.likeBtn.init();
        }
        if(de.bild.community.businessCards) {
            de.bild.community.businessCards.init();
        }
        if(de.bild.community.follow) {
            de.bild.community.follow.init();
        }
        if(de.bild.community.profile) {
            de.bild.community.profile.init();
        }         
        if(de.bild.community.comCenter) {
            de.bild.community.comCenter.init();
        }
        if(de.bild.community.qotd) {
            de.bild.community.qotd.init();
        }      
        
        if(de.bild.community.teaserComments && $target) {
            de.bild.community.teaserComments.checkForTeaserComments($target);
        } 
        
         
        
          
        /* Notifications initialises itsself
        if(de.bild.community.notification) {
            de.bild.community.notification.init();
        } */          
    }
    return {
        'init' : function() {
            init();
        },
        'loadingLayer' : loadingLayer,
        'updateCount' : updateCount,
        'submitForm' : submitForm,
        'settings' : function() {
            return de.bild.settings.community.options
        },
        'lang' : function() {
            return lang
        },
        'variables' : function() {
            return variables
        },
        'templates' : function() {
            return templates
        },
        'urls' : function() {
            return urls
        },
        'load' : function(data) {
            return SandBox.load(data);
        },
        'showLightBox' : showLightBox,
        'closeLightBox' : closeLightBox,
        'upload' : function(id, type) {
            /* redirect for calls to the old community interface*/
            type = type || '';
            de.bild.community.lightboxForms.showUploadResults(id, type);
        },
        'screenForResponseErrors' : screenForResponseErrors,
        'update' : function(data) {
            return updateVars(data);
        },
        'getCustomSessionParam1' : function() {
            return getCustomSessionParam();
        },
        'updateContentId' : function(contentId, docType) {
            return updateContentId(contentId, docType)
        },
        'loadTeaserComments':function(data){
            if(de.bild.community.teaserComments) {
                de.bild.community.teaserComments.init(data);
            }        
        },
        'updateCount' : updateCount,
        'validateForm' : validateForm,
        'online': function(){ return online},
        'setCommunityStatus':function(v){online = v; return online;},
        'storage':de.bild.utils.storage
    }
})(jQuery, de.bild.globalSandBox)
/*de.bild.community.comments:27210484.5*/

var de = de || {}; 
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
/**
 * de.bild.community.comments
 * @name comments
 * @memberOf de.bild.community
 * @param {object} $ JQuery
 * @function
 * @returns {Function} init - initalises all community functionality
 * @returns {Object} user - user info
 * @returns {Object} vars - public variables
 * @namespace contains and initates all comments and forum related functions
 * @dependencies ['de.bild.community']
 */
de.bild.community.comments = (function($,Community) {   
    
    var initialised=false;
    var userCommentCount = 0;
    
/* ================================================================================================================ START COMMENTS */
    /**
     * Sets up all the live functionality of buttons and forms for UGC comment fields
     * @function
     * @name setupCommentEvents
     * @memberOf de.bild.community
     * @private
     */
    function setupCommentEvents() {
        /* General function for textareas. Default text is deleted and the colour of the text changes to black. When the doc is clicked, everything will be reset. It used to be onBlur.  */
        de.lib.live($body, 'form.com-form textarea:not(#post-text-threaded), form.com-form input[type="text"], form.com-form input[type="email"], form.com-form input[type="tel"], div.comments input[type="text"]', {
            focus : function() {
                var $this = $(this);
                setFormFieldState($this, true);
                docClickHandler = function(e) {
                    var $target = $(e.target);
                    /* don't catch clicks on the form area */
                    if($target.parents('form.com-form').length === 0) {
                        setFormFieldState($this, false);
                        $doc.off('click', docClickHandler);
                    }
                };
                $doc.on('click', docClickHandler);
            },
            keyup : function(){
                checkMaxCommentLength(this)
                }
        });
        /* Bei Klick auf Kommentieren Kommentarformular einblenden */
        de.lib.live($contentWrapper, 'ol.comment-list li a.comment-on', 'click', function(e) {
            //nicht auf Linkspages
            if($(this).parents('#linkspage-comment').size()!=0)return true;
            e.preventDefault();
            getCommentbox(this);
        });
        
        /* captcha events */
        de.lib.live($contentWrapper, '.captcha a.reload', 'click', function(e) {
            e.preventDefault();
            //check reload checkbox
            $('#captcha-reload').attr('checked', true);
            $(this).closest('form').trigger('submit');
        });
        
        /* Click on the send button in comments */
        de.lib.live($body, 'form.new-comment', 'submit', function(e) {
            
            //qotd done in lightboxforms
            if($(this).parents(".com-lightbox").hasClass('qotd')){
                return false;
            }
            
            e.preventDefault();                     
            sendComment(this);                            
            return false;
        });
       
        /* Loading new comments for real-time comments and sub-comments*/
        de.lib.live($contentWrapper, '.js-load', 'click', function(e) {           
            var $this = $(this);                    
            e.preventDefault();                        
            //adding the new comments or loading the comment answers            
            var $parent = $this.parent();
            var subComments = $this.parents('.sub-comment-list');
            var userList = $this.parents('ul.usrlist,ol').first();
 
 
             //if no data-ajax-href is defined content is allready inside the list
            if(!$this.attr('data-ajax-href')){                
                showSimilarEvents($this);
                return false;
            }
            /*add Loadinglayer */
            Community.loadingLayer($this);
            
            Community.load({
                'obj' : this,
                'callback' : function(response) {
                    
                    
                    //you never no if JSON is returned :(
                    var isJSON = true;
                    try {
                        response = $.parseJSON(response);
                    }
                    catch(e){
                        isJSON = false;
                    }    
                    
                    if(!isJSON){                    
                        var $newComs = $(response);
                        $newComs.hide();
                        var $this = $(this),$elem;
                        /* Replace for new comments, append for children -- LIVE Commenting*/ 
                        if(subComments.length>0) {
                            //remove all comment except the last and append the new loaded
                            $elem = subComments;
                            $elem.children('li:gt(0)').remove();
                            $elem.append($newComs);                     
    
                        } 
                        /* Exception for follower list*/
                        else if(userList.length>0){
                            $elem = userList;
                            $elem.append($newComs);
                            $this.parent('li').remove();
                            
                            //init social Buttons
                            de.bild.social.initSocialButtons($elem);
                            
                        }
                        else {
    
                            $elem = $('ol.comment-list', $parent).eq(0);
                            $elem.html($newComs);
    
                            /* here we are setting the value of total comments loaded AFTER click*/
                            if($this.data('newComments') > Community.variables().totalComments) {
                                Community.variables().totalComments = $this.data('newComments');
                            }
                            
                            $this.hide();
                            /* reset the usercomment count after the new comment alert has been click*/
                            userCommentCount = 0;
                        }
    
                        /*fading new comments*/
                        Community.loadingLayer($this);
                        $('li:hidden', $elem).fadeIn(Community.settings().fadeSpeed);
                        //reinit Stuff
                        Community.init();
                    }
                    else{       
                        //server returns JSON (contact follower/following List)             
                        userList.append(response.html);
                        userList.find('.js-load').first().parents('li:eq(0)').remove();
                    } 
                    
                    //Bind autoload to more button
                    bindAutoLoad();
                                      
                },
                'error' : function() {
                    Community.loadingLayer($this);
                }
            });
        });
    };
function  showSimilarEvents($load){    
   var friends = $load.siblings('.friends').length>0;   
   var $elems = $($load.data('hiddenContent'));     
    if(friends){
        var userList = $load.siblings('.friends');
        userList.append($elems);        
    }
    else{
        $load.parents('.activity').before($elems);
    }        
    $elems.css('opacity',0).removeClass('hide').animate({'opacity':1});    
    if(friends){
        $load.remove();
    }
    else{
        $load.parents('.activity').remove();
    }     
}
   /**
     * Called when the send button in the comment field is clicked. If the comment field is empty, it will be closed and lose focus. A loading layer is positioned over the textfield after a click
     * upon submission the update comments timeout will be reset.
     * @function
     * @name
     * @memberOf de.bild.community
     * @param {Object} elem - submitted form
     * @private
     */
    function sendComment(elem){
        var $elem = $(elem);        
        
        // get comment field threaded or non-threaded
        var $commentField = $elem.find('textarea');        
       
        // if we have a valid message send it off
        // trim the contents
        var commentFieldVal = de.bild.utils.trim($commentField.val());
        if (commentFieldVal !== '' && commentFieldVal !== $commentField.attr('placeholder')) {
            
            var subComment = $commentField.parents('.sub-comment-list,.threaded-comment-area').length>0?true:false;
            
            // insert trimmed content in form
            $commentField.val(commentFieldVal);
            var dataType= 'json',
            callback;
            /*
                post moderation goes straight into the list unless liveComments are on
            */
            if ($elem.attr('data-moderation')=='postmoderation') {
                
                callback = function(response, type){                    
                    if (response) {
                        var $fieldset = $elem.find('fieldset, .com-buttons, .calltoaction');
                        if (response.form) {
                            $fieldset.remove();
                            $elem.append($(response.form));
                        }
                        if (response.status === 'error') {
                            if (response.message) {
                                showLightBox({
                                    'content' : Community.templates().lbMessage.replace('%CONTENT%',response.message).replace('%CLASS%', 'hint').replace('%HEADING%', Community.lang().error)
                                });
                            }
                            return;
                        }
                        //Question of the day
                        if (response.status === 'login_required') { 
                            de.bild.community.qotd.handleLoginRequired(respnose);
                        }                        
                        
                        //QOD success
                         if (response.status=="success" && response.message) {
                                $fieldset.hide();
                                var message = $(Community.templates().message.replace('%CLASS%','hint').replace('%CONTENT%',response.message));
                                $elem.append(message.show());                                
                                delayToFade(message, Community.settings().delayToFade, function(){
                                    //textarea leeren
                                    $fieldset.find('textarea').val('');
                                       $fieldset.show();
                                    });
                                
                         }
                        //Bei Threaderstellung gibt es bei Erfolg keine Textarea, nur eine Meldung
                        var $textArea = $elem.find('textarea').length>0?$elem.find('textarea'):$elem.find('.message');                        
                        
                        // successful message
                        if (response.status === 'success' && response.comments) {
                            // is box checked? if so, send to FB
                            var $newComs = $(response.comments);
                            $newComs.hide();                        
                            // first comment?
                            
                            var $comments = $elem.parents('.threaded-comment-area').length>0?$elem.parents('ol.sub-comment-list, .threaded-comment-area').eq(0):$elem.parents('.comment').find('ol.comment-list').eq(0);
                            
                            // if this is the first comment, so it cant be a threaded then generate the <ul> and add the classes
                            if ($comments.length === 0) {
                                //replace the add first comment message with an empty ol
                                $elem.parent().find('div.show-all').replaceWith('<ol></ol>');
                                $comments = $elem.parent().find('ol').eq(0).addClass('comment-list');
                            }                            
                            
                            if(!subComment){
                                $comments.prepend($newComs);
                            }
                            else{
                                $elem.parents('.threaded-comment-area').replaceWith($newComs.fadeIn());                             
                                //$comments.append($newComs);
                            }
                            
                            //fading new comment
                            $('li.comment:hidden', $comments).fadeIn(Community.settings().fadeSpeed);                            
                            userCommentCount++;
                           
                            // update the tab number
                            var commentTab = $elem.parents('section').find('.com-tabs .active a');
                            if(response.commentCount){
                                commentTab.text(response.commentCount);
                            }
                            
                            //Community.updateCount($('#ugc-comment-count'), 1);
                            
                            
                            // we check for new comments
                            checkforNewComments(true);
                       
                        // error
                        } else {
                           setFormFieldState($textArea,true);
                        }
                   
                        if (response.form) {                           
                            /* success? */       
                            if (response.status === 'success') {
                                var $success = $elem.find('div.show-all');
                                if ($success.length) {
                                    delayToFade($success, Community.settings().delayToFade, function(){
                                        $elem.find('fieldset').show();
                                    });
                                }
                                /* reset form */
                                $elem.find('input[type!=submit][type!=hidden]').val('');
                                setFormFieldState($textArea, false);
                                checkforNewComments(true);
                               
                             /* no success :( */
                            } else {
                                 /* all fields should be be active*/
                                $elem.find('input[type!=submit]').addClass('active');
                                 /* adjust the height of the textarea to its content*/
                                setFormFieldState($textArea,true);
                            }
                        }
                    }
                    
                    Community.init();    
                   
                };
            /* premoderation, just show success message  */
            } else {
                callback = function(response, type){                    
                    if (response) {
                        var $fieldset = $elem.find('fieldset, .com-buttons');
                        if (response.form) {
                            $fieldset.remove();
                            $elem.append($(response.form));
                        }
                        if (response.status === 'error') {
                            if (response.message) {
                                showLightBox({
                                    'content' : Community.templates().lbMessage.replace('%CONTENT%', response.message).replace('%CLASS%', 'hint').replace('%HEADING%', Community.lang().error)
                                });
                            }
                            return;
                        }
                        //Question of the day
                        if (response.status === 'login_required') {                            
                            de.bild.community.qotd.handleLoginRequired(response);                            
                        }                        
                        
                        //QOD success
                         if (response.status=="success" && response.message) {
                                $fieldset.hide();
                                var message = $(Community.templates().message.replace('%CLASS%','hint').replace('%CONTENT%',response.message));
                                $elem.append(message.show());                                
                                delayToFade(message, Community.settings().delayToFade, function(){
                                    //textarea leeren
                                    $fieldset.find('textarea').val('');
                                       $fieldset.show();
                                    });
                                
                         }
                        
                        
                       
                        if (response.form) {
                            var $textArea = $elem.find('textarea');
                            /* success?  */       
                            if (response.status === 'success') {
                                var $success = $elem.find('div.show-all, .message');
                                if ($success.length) {
                                    //submit verstecken
                                    $success.siblings('.btn-emp').hide();
                                    delayToFade($success, Community.settings().fadeDelay, function(){
                                        if($elem.parents('.threaded-comment-area').length>0){
                                            $elem.parents('.threaded-comment-area').remove();
                                        }else{
                                          $elem.removeClass('active').find('fieldset, .btn-emp,').show();  
                                        }
                                        
                                    });
                                }
                                /* reset form  */
                            $elem.find('input[type!=submit][type!=hidden]').val('');
                            setFormFieldState($textArea, false);
                            checkforNewComments(true);
                            
                               
                            /* no success :(  */
                            } else {
                                /* all fields should be be active  */
                                $elem.find('input[type!=submit]').addClass('active');
                                /* adjust the height of the textarea to its content  */
                               setFormFieldState($textArea,true);
                            }
                        } 
                    /* no response? network fail */   
                    } else {
                        /*PROCO-994*/
                       var errorCode = xhr?xhr.status:'';
                       var errorMsg = $(Community.templates().message.replace('%CONTENT%', errorCode+': '+Community.lang().error + '. ' + Community.lang().tryagain).replace('%CLASS%', 'hint')).show();
                       var comButtons = $elem.find('.com-buttons');
                       
                        $elem.find('fieldset').hide();
                        comButtons.children().hide();                            
                        comButtons.append(errorMsg);
                            
                        setTimeout(function(){
                              errorMsg.fadeOut(500,function(){
                                  comButtons.children().add($elem.find('fieldset')).show();
                                  $(this).remove();
                              });
                               
                         },3000);
                    }
                };
                
                Community.init();
            }
            /* check to see if the user is logged into facebook if box ticked*/
            if ($elem.find('input#fb-cmt-post:checked').length || 
                $elem.find('input#fb-threaded:checked').length || 
                $elem.find('input#sn-fb-threaded:checked').length)
                {
                    de.bild.social.postingCommentToFeed();
                }
            Community.submitForm($elem, {
                'url' : $elem.attr('action'),
                'params' : $elem.serialize(),
                'callback' : callback,
                'dataType' : dataType,
                'method' : 'POST'
            });
            
            //notificationTimer hochsetzen
            $.publish('notification.increaseInterval');
            
            
        /*Wenn Kommentarfeld leer ist, klappt das Kommentarfeld zu*/
        } else {
            setFormFieldState($commentField, true);
        }
        return false;
    };
function getCommentbox(elem){
        var $elem = $(elem);
   
        /* stop click if disallowed */
        if ($elem.data('clickOff')) {
            //if the facebook check button is out of screen, jump to element */
            var $fbcheckbox = $('#sn-fb-threaded');
            if ($fbcheckbox.length && de.bild.utils.inViewport($fbcheckbox) === 0) {
                var targetOffset = ($fbcheckbox.offset().top - $(window).height() + 50);
                de.bild.utils.scrollTo(targetOffset);
            };
            return;
        } 
        /* no more clicky click until we say so */
        $elem.data('clickOff', true);
       
        /* get the parent */
        var $post = $elem.parents('li.comment');
       var form  = $post.find('ol.sub-comment-list form');
       
        /* if a form is already there */
        if (form.length === 0) {
           Community.load({
                'obj': elem,
                'callback': function(html, $target){
                   
                   var form = Community.templates().threadedCommentItem.replace('%CONTENT%', $(html).html());
                   
                    /* if threaded */
                    if ($post.find('ol').length) {
                        var $module = $post.find('ol:eq(0)').append(form);
                    /* this condition for profile pages*/   
                    }                    
                    else {
                        var $newForm = $('<ol class="sub-comment-list">'+form+'</ol>');
                        
                            if($post.find('.comment-actions').length==0){
                                $post.append($newForm);
                            }
                            else{
                                $post.find('.comment-actions').first().after($newForm);
                            }
                        }
                        
                        
                    
                    /* Scroll to comment field and focus */
                    var $threadField =  $post.find('#post-text-threaded'); 
                
                    /* if the facebook check button is out of screen, jump to element */
                    var $fbcheckbox = $post.find('#sn-fb-threaded');
                    if ($fbcheckbox.length && de.bild.utils.inViewport($fbcheckbox) === 0) {
                        var targetOffset = ($fbcheckbox.offset().top - $(window).height() + 85);
                        de.bild.utils.scrollTo(targetOffset);
                    };
                    
                    $threadField.val('').focus();
                    /* Close socialbar popups when clicked somewhere on the page */
                    docClickHandler = function(e){
                        var $target = $(e.target);
                        /* don't catch clicks on the form area or on the reply button that opened it */
                        if ($target.parents('li.threaded-comment-area').length === 0) {
                            var $thread = $('#post-text-threaded'),
                            $firstOl = $thread.parents('ol:eq(0)');
                            /* already some comments or the default text in there? */
                            var threadVal = $thread.val();
                            if ($.trim(threadVal) !== '' && threadVal !== $thread.attr('placeholder')) return false;
                            if ($firstOl.find('li').length < 2) {
                                $firstOl.remove();
                            } else {
                                $thread.parents('li:eq(0)').remove();
                            }
                            $doc.off('click', docClickHandler);
                            
                            /* form is closed for the handler's object */
                            $target.data('clickOff', false);
                            
                            //check max length
                            $threadField.unbind('keyup',checkMaxCommentLength);
                            
                        }
                    };
                    
                    //check max length
                    $threadField.bind('keyup',function(){
                        checkMaxCommentLength($threadField)});
                    
                    setFormFieldState($threadField,true);
                    $doc.on('click', docClickHandler);
                    /* clicky click back on */
                    $elem.data('clickOff', false);
                }  
            });
           
        // just focus the exisiting form   
        } else {  
          form.find('textarea').focus();
        }
       
        return false;
    };
    /**
     * reduce length of comments to  250 characters
     * @function
     * @name shrinkComments
     * @memberOf de.bild.community
     * @private
     * @param {Object} $elem jQuery Object
     */
    function shrinkComments($elem) {
        var $comments = ($elem) ? $elem.find('p.comment-content, p.thread-description'):$contentWrapper.find('p.comment-content, p.thread-description');
        
        //Kommentare die nicht gekürzt werden sollen
        //$comments = $comments.not('.com-topcomments. p.comment-content');
        
        //if there are no comments or comments should be expanded -> return
        if(!$comments || $('ol.comment-list').hasClass('expanded')) {
            return;
        }
        $comments.each(function(){
            var $oneComment = $(this);      
           
            if(!$oneComment.data('longTxt')) {
                var text = $.trim($oneComment.find('a.more').remove().end().html());
                $oneComment.data('longTxt', text);
                /*
                 Ab zeichen clength nach einem Leerzeichen suchen und dann das Kommentar abschneiden
                 und wenn es kein Leerzeichen gibt
                 replace <br>
                 */
                
                var isForumComment = !$oneComment.parents('.latest').length==0;
                var topComment = $oneComment.parents('.com-topcomments').length>0;
                var isQotd = $oneComment.parents('.com-question').length>0;
                
                var clength = !isForumComment?Community.settings().shrinkCommentLength:Community.settings().shrinkCommentLengthForum;
                clength = isQotd?110:clength;
                
                //comment lines
                var commentLines = isQotd?2:3;
                
                
                
                //for topcomments do a special
                if (topComment){                    
                    if($oneComment.parents('.s5').length>0){
                        clength = 100;
                    }
                    else{
                       clength = 175;  
                    }
                    
                }
                
                
                text = text.replace(/<br>|<br\/>/g, '|');
                if(text.length > clength) {
                    for(var i = clength - 30; i <= clength; i++) {
                        if(text.charAt(i) === ' ') {
                            text = text.substring(0, i);
                            break;
                        } else if(i == clength - 10) {
                            /* if there are many spaces we can cut off at the end */
                            if(text.split(' ').length > 10) {
                                text = text.substring(0, clength - 10) + ' ';
                                /* if there are many chars but not many line breaks */
                            } else {
                                text = text.substring(0, 50) + ' ';
                            }
                            break;
                        }
                    }
                }
                /* put the <br>s back */
                text = text.replace(/\|/g, '<br/>');
                /* Text einfuegen, mehr Button und shortText setzen */
                $oneComment.html(text).data('shortTxt', $oneComment.html());
                /* nur wenn ein mehr Button benoetigt wird
                 if the character length is greater than 195, or number of line breaks (<br>) is more than 2 */
                if($oneComment.data('longTxt').length > clength || $oneComment.data('longTxt').split('<br').length > 3) {
                    $oneComment.append(Community.templates().moreHTML);
                    $oneComment.data('expandable', true);
                } else {
                    $oneComment.data('expandable', false);
                }
                /*Falls der Text nun doch zu lang sein sollte. */
                
                //2-lines in Forum 3-Lines in UGC Modules. one line 17px
                var lineheight = commentLines*17;
                
                if($oneComment.height() > lineheight && !topComment) {
                    text = text.replace(/<br>|<br\/>/g, ' <br> ');                    
                    text = text.split(' ');
                    for(var j = text.length - 1; j > 0; j--) {
                        text.splice(j, 1);
                        var tmpText = text.join(' ');
                        $oneComment.html(tmpText + '... ' + Community.lang().more);
                        if($oneComment.height() <= lineheight) {
                            $oneComment.html(tmpText).data('shortTxt', $oneComment.html()).append(Community.templates().moreHTML);
                            break;
                        }
                    }
                }
            }
            if(!$oneComment.attr('data-more-href')){
               $('a.more', $oneComment).click(function(e) {
                e.preventDefault();
                expandComment($(this).parent());
            });
            }
            else{
                $('a.more', $oneComment).attr('href',$oneComment.attr('data-more-href'));
            }
            
            //after shrinking remove class collapsed
            $oneComment.removeClass('collapsed');
            
        }); 
        if($elem) {
            return $elem;
        }
    };
    /**
     * Expands and collapses comment text
     * @function
     * @name expandComment
     * @memberOf de.bild.community
     * @param {$Object} $elem jQuery Object = the clicked button (a.more)
     * @private
     */
    function expandComment($elem) {
        var $more = $elem.find('a.more');
        if($more.length > 0) {
            $more.remove();
            $elem.hide().html($elem.data('longTxt')).fadeIn(Community.settings().fadeSpeed, function() {
            });
            //on forum page set the height of parent not in Forum description
            if($elem.parents('.thread-item').length > 0 
            && !$elem.hasClass('thread-description') 
            && $elem.parents('.thread-item').height()<parseInt($elem.parents('.comment').height()) + 35) {                
                $elem.parents('.thread-item').css('height', parseInt($elem.parents('.comment').height()) + 35)
            }
        }
    };
    /**
     * Handles form field states sets the default text and text colour when the feld gains and loses focus.
     * @function
     * @name setFormFieldState
     * @memberOf de.bild.community
     * @private
     * @param {$Object} $elem jQuery element - the focussed comment field
     * @param {Bool} focus whether the element should be focussed or blurred
     * @returns {Bool} false
     */
    function setFormFieldState($elem, focus) {
        
        //don't handle question of the day textareas
        if($elem.length==0 || $elem.parents('.question').length!=0)return false;
        var $form = $elem.parents('form.com-form'), nodeName = $elem[0].nodeName.toLowerCase();
        /* is the field active? */
        if(focus) {
            /* in the CSS, this active class shows the corresponding buttons and checkboxes  */
            if(!$form.hasClass('comment-nologin')) {
                $form.addClass('active');
            }
            /* remove default text */
            if($elem.attr('placeholder')) {
                if($elem.val() == $elem.attr('placeholder')) {
                    $elem.val('');
                }
            }
            if(nodeName === 'textarea') {
                
                if($elem.attr('id') === 'post-text') {
                    $elem.TextAreaExpander('38');
                } else {                    
                    $elem.TextAreaExpander($elem.height());
                }
            }
            /* else we are leaving the element */
        } else {            
                if($elem.length) {
                    var isEmpty = ($.trim($elem.val()) === '' && $elem.val()!=$elem.attr('placeholder')) ? true : false;
                    
                    if(isEmpty) {
                        /* set textarea */
                        if(nodeName === 'textarea') {
                            $elem.css('height', '');
                            /* this is for the anoym comment case. When a info message is shown don't remove the active class otherwise the message will be hidden */
                            if($form.find('.message:visible').length==0){
                                $form.removeClass('active');
                            }
                            
                        }
                    }
                }
            
        }
        return false;
    };
/* ================================================================================================================ END COMMENTS */
    /* FORUM FORMS
    ///////////////////////////       */
    /**
     * Submits new thread data for the forums
     * @function
     * @name setupThreadForm
     * @memberOf de.bild.community
     * @private
     */
    function setupThreadForm(){
        /* don't need a live event because it's not an HTML snippet */
        var $elem = $('.newthread');
        if ($elem.length) {
            var $textfield = $('#thread-text');
            $textfield.TextAreaExpander($textfield.height());
            $elem.submit(function(e){
                e.preventDefault();
                $elem.find('input[type=submit]').blur();
                if (!Community.validateForm($elem)) return false;
                var $fieldset = $elem.find('fieldset');
               
                Community.submitForm($fieldset, {
                    'url': $elem.attr('action'),
                    'params': $elem.serialize(),
                    'method': 'POST',
                    'callback': function(response, type){
                   
                        if ($elem.find('input#sn-fb:checked').length || $elem.find('input#sn-fb-threaded:checked').length) {
                            de.bild.social.postingCommentToFeed($elem.serialize() + '&threadid=' + response);
                        }
                        
                        //Hide Elements fieldset commit button
                        $fieldset.hide();
                        //inside com-buttons
                        var combuttons = $elem.find('.com-buttons');
                        combuttons.find('.socials, .btn-emp').hide();
                        
                        /* if no id is sent back */
                        if (response.length < 2) {
                            combuttons.find('p.success').remove();
                            combuttons.find('p.error').removeClass('hidden').show();
                        } else {
                            combuttons.find('p.error').remove();
                            combuttons.find('p.success').removeClass('hidden').show();
                        }
                    }
                });
                return false;
            });
        }
    };
    /**
     * sets up the events to opensreport form in a lightbox
     * @function
     * @name setupReportFormEvents
     * @memberOf de.bild.community
     * @private
     */
     function setupReportFormEvents(){
        
     }
    function checkforNewComments() {
        
    }
    
    /**
     * fades object after settings.fadeDelay, then removes it from the DOM
     * @function
     * @name delayToFade
     * @memberOf de.bild.community
     * @param {$Object} $elem - jQuery object
     * @param {Function} callback- optional callback
     * @private
     */
    function delayToFade($elem, fadeDelay, callback){
        fadeDelay = fadeDelay || Community.settings().fadeDelay;
        setTimeout(function(){
            $elem.fadeOut(Community.settings().fadeSpeed, function(){
                $elem.remove();
                if (typeof callback === 'function') {
                    callback();
                }
            });
        }, fadeDelay);
    };
    /**
     * helper function to launch lightbox
     * @function
     * @name showLightBox
     * @param {Object} params normal lightbox params (see jquery.lightbox.js)
     * @memberOf de.bild.community
     * @private
     */
    function showLightBox(params){
        if (params) {
            params.wrapperClass = 'com-lightbox sso';
            return $body.bildLightbox(params);       
            
        }
    }; 
    
    function checkMaxCommentLength(elem) {
                /*  Maximale Kommentarlaenge ueberpruefen */
                var $this = $(elem), comment = $this.val();
                var value = comment.length <= Community.variables().maxCommentLength ? comment : comment.substring(0, Community.variables().maxCommentLength);
                if(value.length == Community.variables().maxCommentLength) {
                    $this.val(value);
                }
            }
 
    
    /**
     * Function that binds a autoload to #mmore if this elem becomes in viewport
     */    
    function bindAutoLoad() {        
        if($('#mmore').length > 0) {
            $('#mmore').unbind('inSight');
            $('#mmore').bind('inSight', function() {
                $(this).find('a').trigger('click');
            })
        }
    }
 
    
    function init(callback) {
        
        //only once because of live bindings
        if(!initialised) { $contentWrapper = $('#innerWrapper'), $body = $('body'), $doc = $(document);
            /* community comments :) */
            setupCommentEvents();
            setupReportFormEvents();
            setupThreadForm();
            bindAutoLoad();
            initialised = true;
        }
        shrinkComments();
        /* are comments already in the page? */
        if($('div.comments').length) {
            checkforNewComments();
        }
        //execute Callback if set
        if( typeof callback === 'function') {
            callback();
        }
    }
    return {
        'init' : function(callback) {
            init(callback);
        },
        'checkforNewComments':checkforNewComments,
        'delayToFade': function($elem, fadeDelay, callback){delayToFade($elem, fadeDelay, callback)} 
    }
})(jQuery, de.bild.community)
/*de.bild.community.businessCards:27210482.4*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};

de.bild.community.businessCards = (function($, Community) {
 var initialised = false;
 var bcardTimeout,
    activeCardId = 'userProfileCardActive',
    $activeCardElement,
    pos,
    cardUrl,
    $parent,   
    $card,
    cardRequest;

   // userProfileCard

    /**
     * events for follow and block buttons  :)
     * @function
     * @name setupFollowButtons
     * @memberOf de.bild.community
     * @private
     */
    function setupBusinessCardOverlays(){
      
      //check if User is logged in and has a profileid
      var ownProfileID = de.bild.sso.getUserInfo() ? de.bild.sso.getUserInfo().encryptedUserId : '';
      
       //username, userphoto, friendsbox
        de.lib.live($contentWrapper, 'div.creator a.member,div.creator img, .friends.edge li a, .friends li a', {

            'mouseover' : function(e){
                e.preventDefault();
                if(bcardTimeout){
                    clearTimeout(bcardTimeout);
                    mouseOutfunction();
                    
                }            

                $activeCardElement = $(this);

                /* we have to have a reference point. this is to catch links which have the same parent. */
                $parent = $activeCardElement.parents('li').first();
                /* get the url */
              
               //when there is a replier we have to find an other userid
               var userId;
               if($activeCardElement.parents('.creator').eq(0).length>0){
                   userId = $activeCardElement.parents('.creator').eq(0).attr('data-userID')
               }
               else if($parent.attr('data-userID')!=null){
                   userId=$parent.attr('data-userID');
               }
               else{
                   userId = $activeCardElement.attr('data-userID');
               }
               
               var url;

                if (userId && userId.length && userId != ownProfileID) {

                   
                    url = de.bild.settings.community.urls.bcard + userId;
                    // TESTING url = '../dummies/bcard-'+ userId+'.html';

                    /* if the card is active and the url is the same then we're dealing with the same bubble */
                    if ($parent.data('isCardActive') === true && cardUrl === url && $card) {
                    
                     //maybe the cursor changed to from profile pic to username so only adjust the card
                     pos = $activeCardElement.offset();
                     $card.css({
                        'top' : pos.top - $card.height() -30,
                        'left' : pos.left + 5
                     });
                    
                        return false;
                    }

                    cardUrl = url;
                   
                    $parent.data('isCardActive', true);

                    /* remove the current bubble, get the position and set up/show the bubble */
                    $('#userProfileCard').remove();
                    pos = $activeCardElement.offset(),
                    $card = $(Community.templates().bcard);
                    $card.hide()
                    $body.append($card);                 
                   
                    $card.css({
                        'top' : pos.top - $card.height() -30,
                        'left' : pos.left + 5
                    });
                 
                  
                  
                    $card.show();
                if(cardRequest){
                   cardRequest.abort();
                 }
                  
                  cardRequest=Community.load({
                        'url' : cardUrl,
                        'cache':!$.browser.msie,
                        'callback' : function(response){
                            if (Community.screenForResponseErrors(response) === false) {
                                if($card && $card!=null){                              
                                 $card.html(response).removeClass('loading');
                                }
                            }
                        },
                        'error' : function(){
                         //Only remove if card hasn't changed during ajax transmission
                         if(cardUrl === url){
                          $card.remove();
                         }                           
                            $parent.data('isCardActive', false);
                        }
                    });
                }
                else{
                 if($card){
                  $card.remove();
                 }
                    $parent.data('isCardActive', false);
                }
                               
            },

            'mouseout' : function(){
                bcardTimeout = setTimeout(function(){
                    mouseOutfunction();
                }, Community.settings().layerDelay);
              
              
            }

        });

  
        de.lib.live($body, '#userProfileCard', {
            'mouseover' : function(e){
                clearTimeout(bcardTimeout);
                $parent.data('isCardActive', true);
            },

            'mouseout' : function(){
                bcardTimeout = setTimeout(function(){
                    if ($card && $card.length) {
                        $parent.data('isCardActive', false);
                        $card.remove();
                        $parent = null;
                        $card = null;
                        $activeCardElement = null;
                        //start Communitycenter Rotation
                    $('div.activity-list ol').trigger('autorotate.comCenter');
                    }
                }, Community.settings().layerDelay);
            }

        });

    };


    function mouseOutfunction() {
        if($card && $card.length) {
            $parent.data('isCardActive', false);
            $card.remove();
            $parent = null;
            $card = null;
            $activeCardElement = null;
            //start Communitycenter Rotation
            $('div.activity-list ol').trigger('autorotate.comCenter');
        }
    }



 function init(){
 
  //init
  if (!initialised){
   initialised = true;
   setupBusinessCardOverlays();
  }
  //reinit
  else{
  
  }
 }
 return {
 
  'init':function(){
   init();
  }
 
 }
})(jQuery, de.bild.community)
/*de.bild.community.comCenter:29369434.2*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
de.bild.community.comCenter = (function($,Community) {
    var initialised = false,
    rotationTimer,
    rotateElem,
    activityList,
    hidden,
    activities;
       
        function rotateOneItem() {
            //First clear Timeout and animation
            clearTimeout(rotationTimer);
            activityList.stop();
           
            var $card = $('#userProfileCard');
           
            //Only do s.th if there is no bcard active
            if($card.length==0) {
                //Normal rotate
                if(parseInt(rotateElem.css('top')) == 0) {
                    var $elem = hidden.first();
                    $elem.removeClass('hidden');
                    activityList.prepend($elem);
                    var height = $elem.height();
                    //calculate a constant speed
                    var speed = height * 20;
                    rotateElem.css('top', -height - 20).animate({
                        'top' : 0
                    }, speed, 'linear', function() {
                        rotationTimer = setTimeout(rotateOneItem, Community.settings().comCenterSlideDelay);
                    });
                    hidden = hidden.not(hidden.first()).add(activities.last());
                    activities = activities.not(activities.last()).add($elem);
                }
                //finish the rotation
                else {
                    var speed = -1 * parseInt(rotateElem.css('top')) * 15;
                    rotateElem.animate({
                        'top' : 0
                    }, speed, 'linear', function() {
                        rotationTimer = setTimeout(rotateOneItem, Community.settings().comCenterSlideDelay);
                    });
                }
            }
        }
    function init() {
        //init
        if(!initialised) {
            initialised = true;
            //only if logged Out
            if(de.bild.sso.isLoggedIn())
                return false;
            //init the two Lists
            activityList = $('div.activity-list.livefeed ol').eq(0);
            activities = activityList.children('li');
            //if not enough elements to rotate -> return
            if(activities.length <= Community.settings().comCenterElems)
               return false;
            hidden = activityList.children('li:gt(' + Community.settings().comCenterElems + ')');
            rotateElem = activityList;
            rotateElem.css({'top':0,'position':'absolute'});
            activities = activities.not(hidden);
            rotationTimer = null;
            rotateOneItem();
            //Start/Stop on Hover
            rotateElem.on('mouseenter.comCenter', function() {
                $(this).data('over', true);
                clearTimeout(rotationTimer);
                activityList.stop();
            }).on('mouseleave.comCenter', function() {
                $(this).data('over', false);
                rotateOneItem();
            })
            rotateElem.on('autorotate.comCenter', function() {
                if($(this).data('over') == false) {
                    rotateOneItem();
                }
            })
        }
        //reinit
        else {
        }
    }
   
   
    return {
       
        'init':function(){
            init();
        }
       
    }  
   
})(jQuery,de.bild.community)
/*de.bild.community.follow:27210478.3*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
de.bild.community.follow = (function($, Community) {
    var initialised = false,articleTopicIds;
    /**
     * events for follow and block buttons  :)
     * @function
     * @name setupFollowButtons
     * @memberOf de.bild.community
     * @private
     */
    function setupFollowButtons() {
        var incVal = 1, $response;
        /* all buttons will make the ajax call to follow or unfollow */
        de.lib.live($body, 'a.btn-follow, a.following-button', {
            'click' : function(e) {
                e.preventDefault();
                
                var $this = $(this);
                // prevent too many clicks
                if($this.data('clicked') === true) {
                    return false;
                }
                $this.data('clicked', true);
                var isFollowing = $this.hasClass('active'), $followTab = $('#user-contact-list ul.com-tabs li:eq(1) > a').first(), countVal = null;
                Community.load({
                    'obj' : this,
                    'cache' : !$.browser.msie,
                    'dataType' : 'json',
                    'callback' : function(response, $target) {                      
    
    
                            if(response.status=="success"){
                            //if ne response is '' delete parent li element
                            if(response.html != '') {
                                /* here we including a nice fade in effect woooosh! */
                                $response = $(response.html);
                                $response.css('opacity', 0);
                                $this.replaceWith($response);
                                $response.animate({
                                    'opacity' : 1
                                }, Community.settings().fadeSpeed, function() {
                                    $response.data('clicked', false).css('opacity', 1);
                                });
                            } else {
                                $this.parent().remove();
                            }
                            /* set values depending on whether we are following or defollowing */
                            if(isFollowing) {
                                incVal = -1;
                            } else {
                                incVal = 1;
                            }
                            //Topic                            
                            //Quotebubble after follow Button
                                if($response.parents('#userProfileCard').length==0 && $response.siblings('span').size() > 0) {
                                    Community.updateCount($response.siblings('span'), incVal);
                                }
                            
                            
                            //User
                            else {
                                //Set count of followers/following only on your own head
                                if($('.profileHead').length > 0) {
                                   //if its your own profilepage
                                   if($('.profileHead .usr-img-upload').length>0){
                                     //find following count tab                                    
                                        countVal = Community.updateCount($('.profileHead .activity li a[href*=following] em'), incVal); 
                                   }
                                   //profilepage of someone else
                                   else{                                       
                                       //check if follow url matches profile url and only increase if it matches
                                       var bCardProfileID = $this.attr('data-ajax-href').split(/add\/|remove\//);
                                       if(bCardProfileID.length>0){
                                           bCardProfileID = bCardProfileID[bCardProfileID.length-1];
                                       }                                       
                                       var urlProfileID = document.location.href.split(/profile\//);
                                       if(urlProfileID.length>0){
                                           urlProfileID = urlProfileID[urlProfileID.length-1];
                                       }                                       
                                       if(bCardProfileID==urlProfileID){
                                            countVal = Community.updateCount($('.profileHead .activity li a[href*=follower] em'), incVal); 
                                       }   
                                   }
                                    
                                }
                                if($('.combox-profile').length > 0) {
                                    //Only Update Count if its your own profile
                                    if($('.combox-profile #currentUser').val() == 1) {                                        
                                        countVal = Community.updateCount($('.combox-profile .activity li em').eq(2), incVal);
                                    }
                                }
                                
                                //in/decrease count in tabs
                                if(countVal !== null && $followTab.length) {
                                    $followTab.text(de.bild.settings.community.lang.followingNo.replace('%COUNT%', countVal));
                                }
                            }
                        }                        
                        //Error Screen appears, reset the click status
                        else {
                            //status == "failure" or "error"
                            if(response.status == "failure") {
                                
                                if(response.message == "login required") {
                                    //trigger promobox
                                    if(de.bild.sso) {
                                        jQuery.ajax({
                                            url : Community.urls().promoLayerFollow,
                                            cache : true
                                        }).done(function(data) {
                                            //close current LB
                                            Community.showLightBox({
                                                content : data,
                                                'onClose' : function() {
                                                }
                                            })
                                        });
                                    }
                                }
                                else{
                                    //show error Message
                                    if(response.message) {
                                        Community.showLightBox({
                                            'content' : Community.templates().lbMessage.replace('%CONTENT%', response.message).replace('%CLASS%', 'hint').replace('%HEADING%', Community.lang().error)
                                        });
                                    }
                                    }
                                
                            }
                        
                            $this.data('clicked', false);
                        }
                    },
                    'error' : function() {
                        $this.data('clicked', false).css('opacity', 1);
                    }
                });
            }
        });
        /* this does nothing more than to replace the text */
        de.lib.live($body, 'a.btn-follow.active', {
            'mouseover' : function(e) {
                //value from the variables
                $(this).text(Community.variables().defollow);
            },
            'mouseleave' : function(e) {
                //value from the variables
                $(this).text(Community.variables().follow);
            }
        });
        
        
        
        //setup following topic buttons
        
    };
    function setupBlocking() {
        /* blocking users */
        de.lib.live($body, 'a.block, a.unblock', {
            'click' : function(e) {
                e.preventDefault();
                var $this = $(this);
                if($this.data('clicked') === true) {
                    return false;
                }$this.data('clicked', true), isBlock = $this.hasClass('block');
                Community.load({
                    'obj' : this,
                    'callback' : function(response, $target) {
                        if(Community.screenForResponseErrors(response) === false) {
                            if(isBlock === true) {
                                $('#communityPendingUserBlock').attr('id', '');
                                $this.attr('id', 'communityPendingUserBlock');
                                
                                Community.showLightBox({
                                    'content' : response,
                                    'closeOnEsc' : false,
                                    'wrapperId' : 'communityBlockUser'
                                });
                            } else {
                                // unblock case
                                var respObj = $.parseJSON(response);
                                if(respObj !== null) {
                                    //Normal unblock
                                    if($this.parents('.com-lightbox').size() == 0) {
                                        var $parent = $this.parent('li');
                                        $parent.html(Community.templates().genericLink.replace('%URL%', respObj.button.link).replace('%CLASS%', 'block').replace('%CONTENT%', respObj.button.text))
                                        var $followbutton = $parent.closest('ul.fnc').find('li:first > a.btn-follow');
                                        if($followbutton.length === 0) {
                                            $followbutton = $('<li style="display:none">' + respObj['follow-button-html'] + '</li>');
                                            $parent.closest('ul.fnc').prepend($followbutton);
                                        } else {
                                            $followButton.replaceWith(respObj['follow-button-html']);
                                        }
                                        $followbutton.fadeIn();
                                    }
                                    //unblock in lightbox (from profile page)
                                    else {
                                        var count = $this.parents('.com-lightbox').find('header h2');
                                        if(count.length != 0)
                                            var countVal = parseInt(count.text().match(/\d+/)[0]);
                                        //reduce count of blocked user
                                        if( typeof (countVal) == 'number') {
                                            count.text(de.bild.settings.community.lang.blockingNo.replace('%COUNT%', countVal - 1));
                                        }
                                        //remove the element
                                        $this.parents('li').eq(1).fadeOut(Community.settings().fadeSpeed, function() {
                                            $(this).remove();
                                        });
                                    }
                                }
                            }
                        }
                        $this.data('clicked', false);
                    },
                    'error' : function() {
                        $this.data('clicked', false);
                    }
                });
            }
        });
        /* loading new blocked user in lightbox */
        de.lib.live($body, '.com-lightbox .js-load', 'click', function(e) {
            e.preventDefault();
            var $this = $(this);
            /*add Loadinglayer */
            var parent = $this.parent('li');
            Community.loadingLayer(parent, 'loading');
            var $parent = $this.parent();
            var $list = $this.parents('.usrlist');
            Community.load({
                'obj' : this,
                'callback' : function(response) {
                    var $newElems = $(response).hide();
                    parent.remove();
                    if($newElems.length > 0) {
                        $list.append($newElems);
                        $('li:hidden', $list).fadeIn(Community.settings().fadeSpeed);
                    }
                }
            })
        })
    }
    
    
     /**
     * Function that gets the status (if logged in) and number of followers for the Bild Topics 
     * var topicMap = {
                "topicID1":["ButtonID"],
                "topicID2":["ButtonID","ButtonID2"],
                "topicID3":["ButtonID3","ButtonID4","ButtonID5"]
                }
     */
    function setupFollowTopics(topics,url) {
        //init Button Count
        if( typeof topics === 'object') {
            topicIDs = [];
            topicMap = topics;
            var getCounter = false;
            for(var k in topics) {
                topicIDs.push(k);
                                
                //check if the counter has class hidden -> rendered by Bild -> get Counter from KIT
                for(var i=0;+i<k.length;i++){
                    if($('#'+topics[k][i]).siblings('span').hasClass('hidden')){
                        getCounter = true;
                    }
                }                 
                               
            }
            var url = url || de.bild.settings.community.urls.topicCount;
            url += topicIDs.join(':');
            
            // load follower count when not rendered by KIT            
            if(getCounter){
                $.ajax({
                    url : url,
                    type : 'GET',
                    dataType : 'json',
                    'cache' : true
                }).done(function(data) {
                }).always(function(data) {
                    if(data.status==="success")
                        showTopicCount(data.numFollowers);
                }); 
            }
            
            
            //GET Button Status when logged in           
           if(de.bild.sso.isLoggedIn()) {
               url = de.bild.settings.community.urls.topicState;
               url += topicIDs.join(':');
               
                //load button status
            $.ajax({
                url : url,
                type : 'GET',
                dataType : 'json',
                'cache' : true
            }).done(function(data) {
            }).always(function(data) {
                if(data.status==="success")
                    setButtonStatus(data.isFollowed);
            });    
                
            } 
        }
    };
    function showTopicCount(data){        
        for(var i=0; i<topicIDs.length;i++){
            var topic = topicIDs[i];
            var topicCount = data[topic];            
            //ID aus der idMap holen   
            var buttonIDs = topicMap[topic];            
            for(var j=0; j<buttonIDs.length;j++){
                $('#'+buttonIDs[j]).parent().find('span').text(topicCount).hide().removeClass('hidden').fadeIn(); 
            }      
        }                
    }
    
    function setButtonStatus(data) {
        for(var i = 0; i < topicIDs.length; i++) {
            var topic = topicIDs[i];
            var isFollowing = data[topic]==="1"?true:false;
            //ID aus der idMap holen
            var buttonIDs = topicMap[topic];
            for(var j = 0; j < buttonIDs.length; j++) {
                if(isFollowing)
                    $('#' + buttonIDs[j]).addClass('active').text('folge ich').attr('data-ajax-href',de.bild.settings.community.urls.unFollowTopic.replace('%TOPICID%',topic));                    
                    
                else
                    $('#' + buttonIDs[j]).removeClass('active').text('Folgen').attr('data-ajax-href',de.bild.settings.community.urls.followTopic.replace('%TOPICID%',topic));
                    
            }
        }
    }
    function init() {
        //init once
        if(!initialised) {
            initialised = true;
            setupFollowButtons();
            setupBlocking();
        }
        //reinit
        else {
        }
    }
    return {
        'init' : function() {
            init();
        },
        'loadTopicData':function(data){
           setupFollowTopics(data);
        }   
    }
})(jQuery, de.bild.community)
/*de.bild.community.lightboxForms:27210488.4*/

var de = de || {}; 
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};

de.bild.community.lightboxForms = (function($,Community) {

    /* 1414 var to be thrown around */
    var uploadProgressBarInterval,initialised=false,anonUpload = '1414';    

    /**
     * setups the ajax upload for upload forms
     * the event delays the submission until we've built in an iframe
     * @function
     * @name setupLightboxForms
     * @memberOf de.bild.community
     * @private
     */
    function setupLightboxForms() {
        /*  Lightbox Form  submit  - we capture upload forms here too ! :) */

        /* Avoiding accidental submit by pressing return */
        de.lib.live($body, 'div.lightbox form.com-form input[type!=submit]', 'keypress', function(e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if(code == 13) {
                return false;
            }
        });     
        
        /* open lightboxes (usually upload forms)
         we disable the esc/body click close for these to prevent people losing data */
        de.lib.live($contentWrapper, 'a.' + Community.settings().ajaxClassLightBox, 'click', function(e) {
            e.preventDefault();
            var $this = $(this), thisAction = $this.attr('data-ajax-href');
            if(thisAction.length) {
                Community.load({
                    'url' : thisAction,
                    'callback' : function(response) {
                        
                        var a =Community.showLightBox({
                            'closeOnEsc' : false,
                            'closeOnBodyClick' : false,
                            'content' : response
                        });
                    }
                });
            }
        });
        


        de.lib.live($body, 'div.com-lightbox form.com-form', 'submit', function(e) {
            e.preventDefault();
            var $this = $(this);
            if($this.attr('id') === 'blockinguser') {
                handleBlockUser($this);
            }
            //Tip/melden/korrektur formular
            else if($this.hasClass('socialform')) {
                Community.submitForm($this, {
                    'url' : $this.attr('action'),
                    'params' : $this.serialize(),
                    'method' : $this.attr('method'),
                    'callback' : function(response, type) {
                        $this.css('opacity', 1).parents('.innerBox').empty().html(response);
                    }
                });
            } else if ($this.hasClass('qotd')){
                //do nothing and let qotd handler do the action
            }            
            else {
                submitLightBoxForm($this);
            }

        });
        /* Extra close button in lightbox form
         reset button in light box form - even though it's a reset button :) */
        de.lib.live($body, 'div.com-lightbox form.com-form input.btn-close, div.com-lightbox form.com-form input.btn-reset', 'click', function(e) {
            Community.closeLightBox();
        });
        
        
        /* 1414 Uploads */
        de.lib.live($body, '#upload-1414', 'submit', function(e) {
            e.preventDefault();
            if(de.bild.community.validateForm(jQuery('.fourteen')))
            handleUpload($(this),'1414');
        });
        
        
        
        };


    /**
     * this handles the case when the form in a lightbox is for a blocked user confirmation
     * it is an exception to the general rule that all forms in lightboxes should submit an AJAX request via post and inject the contents into the lightbox
     * see function setupLightboxForms()
     * @function
     * @name handleBlockUser
     * @memberOf de.bild.community
     * @param {$object} $form form in the lightbox
     * @private
     */
    function handleBlockUser($form) {
        Community.loadingLayer($form);
        de.bild.httpFist.load({
        'url': $form.attr('action'),
        'method': $form.attr('method'),
        'dataType' : 'json',
        'callback': function(response, $target){
                if (Community.screenForResponseErrors(response) === false) {
                    Community.closeLightBox({
                        'callback' : function(){
                            var $pendingUserBlock = $('#communityPendingUserBlock'),
                            countVal,
                            $activeTab = $('.com-tabs li.active > a').first(),
                            $followButton = $pendingUserBlock.closest('ul.fnc').find('li:first > a.btn-follow');
                            $pendingUserBlock.data('clicked', false).attr('id', '').parent('li').html(Community.templates().genericLink.replace('%URL%',response.button.link).replace('%CLASS%', 'unblock').replace('%CONTENT%', response.button.text));
                            $followButton.parent('li').fadeOut(Community.settings().fadeSpeed, function(){
                                $(this).remove();
                            });

                            /*Only if its your profile change the count */
                            if($('.combox-profile #currentUser').val()==1)
                             {
                                /* if on folgen mir list*/
                                if ($('#follower-list').length) {
                                    countVal = Community.updateCount($('em.count-followers'), -1);                                    
                                    if (countVal !== null) {
                                        $activeTab.text(de.bild.settings.community.lang.followersNo.replace('%COUNT%', countVal));
                                    }
                                    
                                    if(response.isFriends=="1"){
                                        countVal = Community.updateCount($('em.count-followed'), -1); 
                                        if (countVal !== null) { 
                                         $otherTab = $('.com-tabs li:not(.active) > a').first();                                   
                                         $otherTab.text(de.bild.settings.community.lang.followingNo.replace('%COUNT%', countVal));
                                        }   
                                    }
                                }
    
                                /* if on folge ich list*/
                                if ($('#following-list').length) {
                                    countVal = Community.updateCount($('em.count-followed'), -1);
                                    if (countVal !== null) {                                    
                                        $activeTab.text(de.bild.settings.community.lang.followingNo.replace('%COUNT%', countVal));
                                    }
                                    
                                    if(response.isFriends=="1"){
                                        countVal = Community.updateCount($('em.count-followers'), -1);    
                                        if (countVal !== null) { 
                                         $otherTab = $('.com-tabs li:not(.active) > a').first();                                   
                                         $otherTab.text(de.bild.settings.community.lang.followingNo.replace('%COUNT%', countVal));
                                        }
                                    }                                 
                                    
                                }
                            }

                        }
                    });
                }
            },
        'error' : function(){
            Community.closeLightBox();
        }   
        });
    };


    /**
     * does what the name says
     * @function
     * @name submitLightBoxForm
     * @param {$Object} jQuery form object
     * @memberOf de.bild.community
     * @private
     */
    function submitLightBoxForm($form) {
        /*validate required fields */
        if(!Community.validateForm($form))
            return false;

        /* crude - this should not really be done this way
         in upload forms
         remove default description text from textarea before submit */
        clearTextareas($form);

        /* don't submit upload forms via this method*/
        if(!$('input:file', $form).length) {
            /* check for fb box in multi upload */
            if($form.find('#sn-fb:checked').length) {
                var photoperm = de.bild.social.userPhotos(), 
                streamperm = de.bild.social.publishStream();
                
                if((photoperm === false) || (streamperm === false)) {
                    /* gather permissions in popup */
                    de.bild.social.loginToFB(function() {
                        /* delay upload until facebook response so weird stuff doesnt happen! */
                        Community.submitForm($form.find('fieldset'), {
                            'url' : $form.attr('action'),
                            'params' : $form.serialize(),
                            'timeout' : '15000', /* increase timeout here because we are uploading to FB in background */
                            'method' : $form.attr('method'),
                            'callback' : function(response, type) {
                                $form.css('opacity', 1).parents('section').replaceWith(response);
                            }
                        });
                    }, {
                        scope : 'publish_stream,user_photos'
                    });
                } else {
                    /* checked box, but has permissions, so carry on. */
                    Community.submitForm($form.find('fieldset'), {
                        'url' : $form.attr('action'),
                        'params' : $form.serialize(),
                        'method' : $form.attr('method'),
                        'timeout' : '15000', // increase timeout here because we are uploading to FB in background
                        'callback' : function(response, type) {
                            $form.css('opacity', 1).parents('section').replaceWith(response);
                        }
                    });
                }
                /* there is no checked facebook thing, so just submit normally */
            } else {
                Community.submitForm($form.find('fieldset'), {
                    'url' : $form.attr('action'),
                    'params' : $form.serialize(),
                    'method' : $form.attr('method'),
                    'callback' : function(response, type) {
                        if(type === 'error') {
                            Community.closeLightBox({
                                'callback' : function() {
                                    Community.showLightBox({
                                        'content' : Community.templates().lbMessage.replace('%CONTENT%', de.bild.settings.community.lang.tryagain).replace('%CLASS%', 'error').replace('%HEADING%', de.bild.settings.community.lang.error)
                                    });
                                }                               
                            });
                            return;
                        }                       
                        $form.css('opacity', 1).parents('section').replaceWith(response);
                        
                    }
                });
            }
            /* upload form! */
        } else {
            /* check for fb */
            if($('input#fb-threaded:checked').length) {
                /* check upload permissions */
                var photoperm = de.bild.social.userPhotos(), streamperm = de.bild.social.publishStream();
                /* videos only need one perm */
                if($form.hasClass('videoUpload') == true && streamperm == false) {
                    de.bild.social.loginToFB(function() {
                        /* delay upload until facebook response! */
                        handleUpload($form, 'lightbox');
                    }, {
                        scope : 'publish_stream'
                    });
                    /* if either permission is false for a photo upload, get the permissions */
                } else if((photoperm == false) || (streamperm == false)) {
                    de.bild.social.loginToFB(function() {                       
                        //double check if user really has now access to fb  and and not closed fb window                    
                        FB.api('/me/permissions',function(response){
                            if(!response.error){
                                handleUpload($form, 'lightbox');
                            }
                            else{
                                return false;
                            }
                            
                        })
                        
                    }, {
                        scope : 'publish_stream,user_photos'
                    });

                    /* user had permissions, upload that thang */
                } else {
                    handleUpload($form, 'lightbox');
                }
                /* FB not checked or not present, just do normal upload */
            } else {
                handleUpload($form, 'lightbox');
            }
        }
        return false;
    };

    /**
     * clears textareas in a form so that default text is not sent
     * @function
     * @name clearTextareas
     * @param {$Object} $formElem Form element as a jquery object
     * @returns {$Object}
     * @memberOf de.bild.community
     * @private
     */
    function clearTextareas($formElem){
        $formElem.find('textarea').each(function(){
            var $this = $(this);
            if ($.trim($this.val()) === $this.attr('placeholder')) {
                $this.val('');
            }
        });
        return $formElem;
    };


     /**
     * does the decision making in upload forms
     * @function
     * @name handleUpload
     * @param {$Object} jQuery form object
     * @param {String} formType the type of form 'lightbox' or '1414'
     * @memberOf de.bild.community
     * @private
     */
    function handleUpload($form, formType){
        formType = formType || '';
        var uploadiframeTargetURL = ((formType === anonUpload) ? de.bild.settings.community.urls.uploadiframeTargetFF : de.bild.settings.community.urls.uploadiframeTarget)  + '/sid=' + Community.variables().uploadProgressSid,
        uploadProgressBarURL = (formType === anonUpload) ? de.bild.settings.community.urls.uploadProgressBarFF : de.bild.settings.community.urls.uploadProgressBar;
        uploadType = 'photo',
        $uploadMsg = $('#uploadMsg'),
        profilePic = $form.hasClass('profile-pic');        
       
        /* crude - this should not really be done this way
            in upload forms
            remove default description text from textarea before submit */
         clearTextareas($form);
       
        if ($form.hasClass('videoUpload')) {
         uploadType = 'video';
        }    

        var $fileInput = $('input:file', $form),
        $fileInputLength = $fileInput.length,
        formElement = $form.get(0);

        if ($fileInputLength > 0 && $fileInput.val().length > 0) {
            /* onstart function here if needed
                submit over an iframe */
            var $commFormIOIframe = $('[id*=commFormIOIframe]');
               
            if ($commFormIOIframe.length === 0) {
                var id = 'commFormIOIframe'+de.bild.utils.ran(1000001);                
                var $iframe = $('<iframe name="' + id + '" id="' + id + '" src="about:blank" onload="de.bild.community.upload(\''+id+'\',\''+formType+'\')">sds</iframe>');
                $iframe.css({
                    position: 'absolute',
                    top: '-9999px',
                    left: '-9999px'
                });
                $iframe.appendTo('body');
                formElement.setAttribute('target', id);
            } else {
                formElement.setAttribute('target', $commFormIOIframe.attr('id'));
            }
            formElement.setAttribute('action', uploadiframeTargetURL);
            formElement.submit();
            
            /* now replace the form with the "in progress" form */
            if ($uploadMsg.length!=0) {
                $form.hide();
            }
            else{
                $form.addClass('loading');
            }            
            
            /*only show upload Message for Videos and 1414 and profile Pic*/
           /*
           if(uploadType === 'video' || formType === anonUpload || profilePic){
            $uploadMsg.show();
           }
           */
            
            /* then start the progress.. */ 
            if ($uploadMsg.length > 0) {
                $uploadMsg.show();
                /* here we distinguish between a single upload and multiple upload (check the number of input[type="file"])
                  at the moment, only videos get a progress bar */
                if ($fileInputLength === 1 || formType === anonUpload) {
                    var id = $uploadMsg.find('form:first').attr('id'); 
                    uploadProgressBar(id,uploadProgressBarURL);
                } else {
                    $uploadMsg.find('form:first div.meter').get(0).className = 'loading';
                } 
            }              
        }
    };  


    /**
     * This function launches an upload progress bar. It will poll the url every 1000ms and update the bar accordingly.
     * When 100% is reached it will trigger another ajax call to fetch the success/failure message. The url for this comes from the form action attribute.
     * The response replaces the content of the Iframe
     * @function
     * @name uploadProgressBar
     * @param {String} id - id of the container (usually a form) that houses the upload bar (in this element we are looking for a child div: <div class="meter"></div>)
     * @param {String} url - url to the json that contains the upload info. This will be polled every 1000ms unless specified
     * @memberOf de.bild.community
     * @private
     */
    function uploadProgressBar(id,url){
        if (arguments.length !== 2) {
            return;
        }
        clearInterval(uploadProgressBarInterval);
        /* delay between api calls */
        var delay = 1000,
        /* initate progress bar */
        $meter = $('#'+id+' div.meter').bildProgressBar({
            /* when 100% is reached */
            'complete' : function(){
                /* this = DOM element on which the plugin acts */
                $meter.data('bildProgressBar') && $meter.data('bildProgressBar').destroy();
                clearInterval(uploadProgressBarInterval);
            }
        });
        if ($meter.length) {
            uploadProgressBarInterval = setInterval(function(){
                $.ajax({
                'url': url+ de.bild.utils.ran(1000000),
                'dataType': 'json',
                'cache' : true
                })
                .done(function(data){
                    if (data == null || data.uploadedbytes >= data.totalbytes) {
                        clearInterval(uploadProgressBarInterval);
                        $meter.data('bildProgressBar') && $meter.data('bildProgressBar').complete();                        
                        return;
                    }
                    if ($meter.length && $meter.data('bildProgressBar')) $meter.data('bildProgressBar').update(data.uploadedbytes, data.totalbytes);
                })
                .fail(function(jqXHR, textStatus) {
                    clearInterval(uploadProgressBarInterval);
                    $meter.data('bildProgressBar') && $meter.data('bildProgressBar').destroy();
                });                     
            }, delay);
        }
    };



    /**
     * handles the results of the upload handshake and publishes the output to the screen
     * @function
     * @name showUploadResults
     * @param {String} id id of the iframe where the success message comes from
     * @param {String} type what type of upload form are we dealing with... 1414 or lightbox?
     * @memberOf de.bild.community
     * @private
     */
    function showUploadResults(id,type) {
        var i = document.getElementById(id);
        clearInterval(uploadProgressBarInterval);
        if (i.contentDocument) {
            var d = i.contentDocument;
        } else if (i.contentWindow) {
            var d = i.contentWindow.document;
        } else {
            var d = window.frames[id].document;
        }
        if (d.location.href == 'about:blank') {
            return;
        }
        setTimeout(function(){
            if (type === anonUpload) {
                $('#upload-1414').replaceWith(d.body.innerHTML);
                $('#uploadMsg').hide();
            } else {
                
                //Hiding
                $('div.com-lightbox .photoUpload, #uploadMsg').hide();
                
                //first() because in some forms there are two sections
                $('div.com-lightbox section').first().replaceWith(d.body.innerHTML); 
                if($(d.body.innerHTML).find('#fotoUploadSuccess')){                 
                    // success! check for FB and do upload if needed
                    var $fotoUploadSuccess = $('#fotoUploadSuccess');
                    if($fotoUploadSuccess.find('input[name=dofbupload]').val() === 'on'){
                        // fb is checked, send to ajax
                        // photo or video?
                        if ($fotoUploadSuccess.find('input[name=phototitle]').length ){
                            de.bild.social.postingPhototoFB($fotoUploadSuccess.serialize());
                        } else if ($fotoUploadSuccess.find('input[name=videotitle]')){
                            de.bild.social.postingVideotoFB($fotoUploadSuccess.serialize());
                        }
                    }
                }
            } 
        }, 500);
    };

    function init() {
        
        if(!initialised) {
            $contentWrapper=$('#innerWrapper'),$body = $('body'), $doc = $(document);   
            initialised = true;
            setupLightboxForms();
        }
        else{
            
        }

    }

    return {

        'init' : function() {
            init();
        },
        'showUploadResults':showUploadResults
    }

})(jQuery, de.bild.community)
/*de.bild.community.likeBtn:27210480.4*/

var de = de || {}; 
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
de.bild.community.likeBtn = (function($,Community) {
 var initialised = false;
 var $loadObj,likeClickTimeout;
 var promoLayerDisplayed = false;
 var LikeCount = 0;
    function setupLikeButtonsEvents(){
        de.lib.live($contentWrapper, 'a.like', 'click', function(e){
            e.preventDefault();
           
            var obj = this,
            $this = $(this);
            var $likecnt = $this.siblings('span.comment-like-count'),
            likeCount = parseInt($likecnt.text());
            
           
            if (typeof $this.data('clickStatus')!== 'number') {
                $this.data('clickStatus', 0);
            }
            
            $this.data('clickStatus', $this.data('clickStatus')+1);
           
                // colour the thing before we get the response
                // insert new value
                if (typeof likeCount === 'number') {
                    if ($this.hasClass('active')) {
                        $this.removeClass('active');
                        $likecnt.text((likeCount === 0) ? 0 : likeCount - 1);
                    } else {
                        $this.addClass('active');
                        $likecnt.text(likeCount + 1);
                    }
                }
            if (typeof likeClickTimeout !== 'undefined' && likeClickTimeout !== null) {
                clearTimeout(likeClickTimeout);
            }
          
           $this.blur();
         
             likeClickTimeout = setTimeout(function(){
               
                if ($this.data('clickStatus')%2 === 1) {
                    $this.data('clickStatus',0);   
                    LikeCount += 1;
                    $loadObj = Community.load({
                        'obj': obj,
                        'method': 'POST',
                        'dataType': 'json',
                        'callback' :function(data){
                            //count likes in cookies                            
                            var likedata = $.cookie(Community.settings().anonLikes);                            
                            if(likedata) {
                                var likedataObj = $.parseJSON(likedata);
                                
                                
                                if(!promoLayerDisplayed && (LikeCount == 2) && !de.bild.sso.isLoggedIn()) {
                                    jQuery.ajax({
                                        url : Community.urls().promoLayer, 
                                        cache : true
                                    }).done(function(data) {
                                        //close current LB
                                        Community.showLightBox({
                                            content : data,
                                            'onClose':function(){
                                                promoLayerDisplayed=true;
                                            }
                                        })
                                    });
                                }
                            }
                        }
                    });                     
                                      
                }  
             },500);
               
        });
        return false;
    };
     /**
     * checks for anon session and marks the like buttons according to stored data. done for caching reasons (PROCO-388)
     * @function
     * @name checkAnonLikes
     * @memberOf de.bild.community
     * @private
     */
     function checkAnonLikes(){      
      var loggedIn = de.bild.sso?de.bild.sso.isLoggedIn():false;
                
        if (loggedIn === false && $('.like').length) {                  
            var likedata = $.cookie(Community.settings().anonLikes); 
            if (likedata) {               
                var likedataObj = $.parseJSON(likedata);               
                $.each(likedataObj, function(key, value){
                    var $key = $('#cmt-'+key);                                       
                    if ($key.length) {
                        if (value === 1){
                            $key.find('a.like:first').addClass('active');
                        } else {
                            $key.find('a.like:first').removeClass('active');
                        }
                    }
                });               
            }
        }      
    };
 
    /**
     * saves the like status so that we only send requests when the status has changed
     * @function
     * @name saveLikeStatus
     * @memberOf de.bild.community
     * @param {$object} $el parent element
     * @private
     */
   function saveLikeStatus($el) {
        if ($el.length) {
            $el.find('a.like').each(function(){
                var $this = $(this);               
                if ($this.hasClass('active')) {
                    $this.data('likeStatus', 1);
                } else {
                    $this.data('likeStatus', 0);
                }
            });
        }
   };
 
 function init(){  
  
  
  //init
  if (!initialised){
   initialised = true;   
   checkAnonLikes();   
   setupLikeButtonsEvents();
  }
  //reinit
  else{
   saveLikeStatus($contentWrapper);
   checkAnonLikes();
  }
 }
 
 
 return {
  
  'init':function(){
   init();
  }
  
 } 
 
})(jQuery,de.bild.community)
/*de.bild.community.notification:29369464.7*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
de.bild.community.notification = (function($, Community) {
    var initialised = false;
    var needToLoad=true;
    var pagesLoaded = 1;
    var notificationElement;
    var counter;
    var cookie;
    var requestTimeout;
    var minutes = 60000;
    var time;
    var loadingElem = $('<ul><li><a href="#" class="js-load active"></a> </li></ul>');    
    var notifyCookie = "notifyCookie";   /* {"unread":true/false
                                             "counter" : 0-x,
                                             "lastUpdate":123213213
                                             "increaseCounter":0,
                                             "notificationTimer":3
                                            }*/
    function loadNotificationCouter(debug){        
        cookie = $.cookie('notifyCookie',{ path: '/' });        
        var updatePossible = true;
        time = new Date().getTime();
        if(cookie!=null){
            cookie = $.parseJSON(cookie);
            
            var diff=time;
            
            if(cookie.lastUpdate){
             diff = time-cookie.lastUpdate;
            }
            if(cookie.notifyTimer){
                //get the time from Cookie if not set take from settings (Default 3 minutes)
               de.bild.community.update({
                  'notifyTimer':cookie.notifyTimer
               });
            }
            
            if(diff<cookie.notifyTimer*minutes ||!cookie.notifyTimer){
                updatePossible=false;
            }
            
        }
        else{
            cookie = {};
            //set default values
            cookie.notifyTimer = 3;
            cookie.lastUpdate = time;
            cookie.increaseCounter =null;
            cookie.unread=false;            
        }
        
        if((de.bild.sso.isLoggedIn() && updatePossible)||debug){        
            $.ajax({
                url: de.bild.settings.community.urls.getNotificationCounter,
                dataType:"json",
                cache : "false"
            }).done(function(data){
                if(data && data.status==="success"){
                    
                    cookie.unread = false; 
                    
                    //set unread status
                    if(counter && parseInt(data.counter)>0){
                       notificationElement.addClass('unread');
                       cookie.unread = true; 
                    }
                    else{
                        notificationElement.removeClass('unread');
                    }
                    
                    //set counter
                    if(typeof(parseInt(data.counter))=="number" && parseInt(data.counter)>=0){
                        counter.text(data.counter);
                        cookie.counter = data.counter;   
                    }
                    else{
                        counter.text('-');
                        cookie.counter = '-'; 
                    }  
                                                                                                 
                    
                    //set Cookie                    
                    cookie.lastUpdate= time;
                    
                    
                    if(cookie.increaseCounter!=null){
                       // console.log('increase active '+cookie.increaseCounter+' times');
                        if(cookie.increaseCounter>1)
                        {   
                            cookie.increaseCounter = cookie.increaseCounter-1;
                            //if necessary set timer to 1
                            de.bild.community.update({
                                'notifyTimer':1
                             });
                        }
                        else{
                          cookie.increaseCounter = null;
                          //no more higher notification rate necessary
                          cookie.notifyTimer=3;
                        }
                    }
                    
                    //set expires date  
                    var expires = new Date();
                    expires.setMinutes( expires.getMinutes() + cookie.notifyTimer );                                          
                    $.cookie(notifyCookie,(JSON.stringify(cookie)),{path:'/',expires:expires});
                }
                
                                
                clearTimeout(requestTimeout); 
                requestTimeout = setTimeout(loadNotificationCouter,cookie.notifyTimer*minutes);
                
            }).fail(function(){
                    //show error message
                    notificationElement.append('<ul style="display:block"><li>'+Community.templates().message.replace('%CLASS%','hint').replace('%CONTENT%',Community.lang().errorNotifications)+'</li></ul>');
                    counter.text('-'); 
                });
        }
        else if(!updatePossible){            
            handleNoUpdate();            
        }
    }
    //if no ajax update is possible take values from cookie if exists
    function handleNoUpdate(){
               clearTimeout(requestTimeout);
               var lastUpdate = cookie.lastUpdate?cookie.lastUpdate:time; 
               //console.log('next update in '+(((cookie.notifyTimer*minutes) - (time - lastUpdate))/1000) +'s');               
               requestTimeout = setTimeout(loadNotificationCouter, (cookie.notifyTimer*minutes) - (time - lastUpdate));
               
               if(typeof(parseInt(cookie.counter))=="number" && parseInt(cookie.counter)>=0){
                 counter.text(cookie.counter);  
               }
               else{
                 counter.text('-');   
               }
                              
               if(cookie.unread || cookie.counter>0){
                    notificationElement.addClass('unread');
                }              
    }
    function initUIEvents(){
        
        var overTimeout;
        
      de.lib.live(notificationElement.parent(), '.notifyme', 'click', function(e) {
            
            
            var $this=$(this);
            if(notificationElement.find('ul').length==0){
                notificationElement.append(loadingElem.hide());
            }           
            var list = notificationElement.find('ul');
            var closedByDocClick =true;
            
            //Click on the notificationbox?
            var selfClick = $(e.target).hasClass('notifyme') || $(e.target).hasClass('counter');
            
            //hide list remove doclick
            if(list.is(':visible')){
                //hide list when not clicked inside the list
                if(selfClick){
                    list.hide();
                    pagesLoaded=1;
                    $(document).off('click.notification');
                    closedByDocClick = false;
                    e.preventDefault();
                }
            }                       
            if(pagesLoaded==1 && !list.is(':visible') && closedByDocClick){
                    list.html(loadingElem.html()).show();
                    loadNotifications();                    
            }
                
        
      })    
    }
          
      
    function loadNotifications() {
        $.ajax({
            url : de.bild.settings.community.urls.loadNotifications.replace('%PAGE%',pagesLoaded),
            dataType : "html",
            cache : "false",
            dataType : "html",
            timeout: 15000 
        }).done(function(data) {
            if(data) {
                
                cookie.unread = false;
                cookie.counter = 0;
                
                if(pagesLoaded>1){
                   notificationElement.find('ul').append(data);
                   pagesLoaded++; 
                }
                else{
                  notificationElement.replaceWith(data); 
                 //reassign variables
                notificationElement = $('#comlogin .notifyme');
                counter = notificationElement.children('a').addClass('counter');
                pagesLoaded++;
                var list = notificationElement.find('ul').show();
                
                bindDocClick(list);
                                                                     
                }
                
                
 
                
                //set expires date  
                var expires = new Date();
                expires.setMinutes( expires.getMinutes() + cookie.notifyTimer );  
                $.cookie(notifyCookie, (JSON.stringify(cookie)),{path:'/',expires:expires});
                
                var time = new Date().getTime();
                clearTimeout(requestTimeout);                 
                requestTimeout = setTimeout(loadNotificationCouter, (cookie.notifyTimer*minutes) - (time - cookie.lastUpdate));
                notificationElement.find('ul').scroll(function(){
                    $this = $(this);
                    //Warten bis man zum Ende gescrollt hat, dann neuladen
                    if($this.get(0).scrollHeight-$this.scrollTop() <=$this.height()){
                        notificationElement.find('ul').off('scroll');
                        loadNotifications();
                         
                    };
                })
            }
        }).fail(function(){
                    var list = notificationElement.find('ul').html('<li>'+Community.templates().message.replace('%CLASS%','hint').replace('%CONTENT%',Community.lang().errorNotifications)+'</li>').show();
                    counter.text('-');                    
                    bindDocClick(list);                     
                });
    }
      
    function increaseFrequency(){
        de.bild.community.update({
            'notifyTimer':1
        });
        
        //Reset Cookie Timer
        cookie = $.cookie('notifyCookie',{path:'/'});
        cookie = $.parseJSON(cookie);
        
        if(cookie.lastUpdate)
        cookie.lastUpdate = new Date().getTime();
        cookie.notifyTimer = 1;
        cookie.increaseCounter = 10;
        
        //set expires date  
        var expires = new Date();
        expires.setMinutes( expires.getMinutes() + cookie.notifyTimer );                                  
        $.cookie(notifyCookie,(JSON.stringify(cookie)),{path:'/',expires:cookie.notifyTimer});
        
        clearTimeout(requestTimeout);
        loadNotificationCouter();
        /*requestTimeout = setTimeout(loadNotificationCouter,Community.variables().notifyTimer*minutes);*/        
        
    }
    function init() {
        //init once
        if(!initialised) {
            initialised = true;
            
            notificationElement = $('#comlogin .notifyme');
            counter = notificationElement.children('a');
            counter.addClass('counter');
            //only try when community is activated
            if(notificationElement.length!=0){
                loadNotificationCouter();
                initUIEvents();
                
                $.subscribe('notification.increaseInterval', function(){
                     increaseFrequency();
                });
            }
        }
        //reinit
        else {
        }
        
        
        
        
    }
function bindDocClick(list){
    $(document).on('click.notification',function(e){                  
                    if(!$(e.target).hasClass('notifyme') && $(e.target).parents('.notifyme').length==0){
                        list.hide();
                        pagesLoaded=1;
                        $(document).off('click.notification');
                        e.preventDefault();
                    }
                }) 
}
    //initialised when user is logged in and all required items are rendered
    $.subscribe('notification.userLoggedIn', function(){
        init();
            
    });
    return {
        'init' : function() {
            init();
        },
        'increaseFrequency':increaseFrequency,
        'triggerCounter':function(){
            loadNotificationCouter(true);
            }
    }
})(jQuery, de.bild.community)
/*de.bild.community.profile:27210476.2*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community || {};
de.bild.community.profile = (function($, Community) {
 var initialised = false,
  $profileHead,
     $profileSettings,
     isProfileHead,
     isProfileSettings,
     profileUrl,
     _separator,
     userData,
     profileString,
     notprovided,
     notpublished,
     profileYears,
     isMobile; 
     
    /**
     * initialises events for profile functionality
     * @function
     * @name setupProfileEvents
     * @memberOf de.bild.community
     * @private
     */
    function setupProfileEvents(){
        $profileHead = $('div.profileHead');
        $profileSettings = $('div.settings');
        isProfileHead = $profileHead.length;
        isProfileSettings = $profileSettings.length;
        
        
        /* handle loading image when clicking on "bearbeiten/abbrechen" */
       de.lib.live($body, '.settings section.category header a', 'click', function(e){
           $(this).html(Community.templates().loadingStatus);
       })
        
        
        /* Profilephoto Lightbox trigger  */
        de.lib.live($contentWrapper, 'div.profileHead a.profilephoto, a.edit', 'click', function(e){
            e.preventDefault();
            de.bild.httpFist.load({
              'obj': this,
              'callback': function(response, $target){
                Community.showLightBox({
                  'content': response,
                  'onClose' : function(){
                    /* if success window has class of refresh...refresh! */
                    if($body.find('#success.refresh').length){
                      /* refresh on success so we can see result of change */
                      window.location.reload();
                    }                   
                  }
                });
              }
            });
        });
        /* change name form */
        de.lib.live($contentWrapper, 'form#account-name, form#privUnlocks, form#usrProfileSocial', 'submit.change', function(e){
            e.preventDefault();
            var $this = $(this),
            $parent = $this.closest('section.category');
            Community.submitForm($this,
             {
                'url' : $this.attr('action'),
                'params' : $this.serialize(),
                'callback' : function(response, type){
                    if (type === 'error') {
                    } else {
                        $parent.replaceWith(response);
                    }
                    $this.css('opacity', 1);
                }
             });
        });
        
        /* change name form reset 
         * not on 'reset' because IE 7/8 doesn't like this :(
         *
         * */
        de.lib.live($contentWrapper, 'form#account-name .btn-reset, form#usrProfile .btn-reset, form#privUnlocks .btn-reset, form#usrProfileSocial .btn-reset', 'click', function(e){
            e.preventDefault();
            var $this = $(this),
            $abort = $this.parents('section.category').find('header a');
            if ($abort.length ) {
                $abort.trigger('click');
            }
        });
       /*delete profilephoto link inside lightbox (global so it works in lightbox) */
        de.lib.live($body, 'form#profilePic a.delimage', 'click', function(e){
            e.preventDefault();
            $.ajax({
                url: de.bild.settings.community.urls.deleteprofilephoto
            })
            .done(function( data ) {
                /* refresh on success so we can see new photo */
                window.location.reload();
            });
        });
       /* delete facebook connection */
        de.lib.live($contentWrapper, 'a.removefb', 'click', function(e){
            e.preventDefault();
            $.ajax({
                url: de.bild.settings.community.urls.removefb
            })
            .done(function( data ) {
                /* refresh on success so we can see new account status */
                window.location.reload();
            });
        });
        /*
            Paket 2 R1
        
   
        var currentShowActivities = 1,
        className,
        $activityPage;
        de.lib.live($contentWrapper, 'div.activity-list li.load-more > a.js-load', 'click', function(e){
            e.preventDefault();
            var $parent = $(this).parent('div.activity-list');
            className = $parent.attr('class');
            className = className.replace(/\s?loadmore\s?/g, '');
            // if we are dealing with the main load more button at the bottom of the feed
            if (className === '') {
                $activityPage = $('.activityPage'+currentShowActivities);
                if ($activityPage.length) {
                    $('.activityPage'+currentShowActivities).fadeIn(settings.fadeSpeed);
                    currentShowActivities++;
                    if ($('.activityPage'+currentShowActivities).length === 0) {
                        $parent.parent('li').hide();
                    }
                } else {
                    $parent.parent('li').hide();
                }
               
            // nested more buttons have more classes! 
            } else {
                $('div.usr-feed li.'+className+'.hide').fadeIn(settings.fadeSpeed);
            }
        }); */
       /* profile Head*/
       var uploadLayerTimeout,
       interesstsTimeout,
       $ulUpload;
        if ($profileHead.length) {
         
         //interessts - show on hover follow button
             de.lib.live($profileHead, '.interests li', 'mouseenter', function(e){               
               $this = $(this);                                     
                clearTimeout(interesstsTimeout);
                //Close all other cards
                $('.interests li.active').removeClass('active');
                
                $this.addClass('active');               
                if (isMobile === true) {
                    $ulUpload.find('ul').show();
                    interesstsTimeout = setTimeout(function(){
                        $this.removeClass('active');
                    },5000); 
                }
            });
             de.lib.live($profileHead, '.interests li', 'mouseleave', function(e){               
               $this = $(this);      
                if (isMobile !== true) {
                    clearTimeout(interesstsTimeout);
                    interesstsTimeout = setTimeout(function(){                        
                             $this.removeClass('active');
                        
                    },500); 
                }
            });        
         
         
         
         
         
         
            de.lib.live($profileHead, 'figure img', 'mouseenter', function(e){
                if (!$ulUpload) {
                    $ulUpload = $profileHead.find('ul.usr-img-upload');
                }
               
                clearTimeout(uploadLayerTimeout);
                $ulUpload.removeClass('hidden').data('imageActive', true);
               
                if (isMobile === true) {
                    $ulUpload.find('ul').show();
                    uploadLayerTimeout = setTimeout(function(){
                        $ulUpload.addClass('hidden');
                    },5000); 
                }
            });
            de.lib.live($profileHead, 'figure img', 'mouseleave', function(e){
                $ulUpload.data('imageActive', false);
                if (isMobile !== true) {
                    clearTimeout(uploadLayerTimeout);
                    uploadLayerTimeout = setTimeout(function(){
                        if (!$ulUpload.data('menuActive') || $ulUpload.data('menuActive') === false) {
                            $ulUpload.addClass('hidden');
                        }
                    },Community.settings().layerDelay); 
                }
            });
            de.lib.live($profileHead, 'ul.usr-img-upload', {
                'mouseenter' : function(){
                     clearTimeout(uploadLayerTimeout);  
                     $ulUpload.data('menuActive', true);
                },
                'mouseleave' : function(){
                    clearTimeout(uploadLayerTimeout);
                    $ulUpload.data('menuActive', false);
                    uploadLayerTimeout = setTimeout(function(){
                        if (!$ulUpload.data('imageActive') || $ulUpload.data('imageActive') === false) {
                            $ulUpload.addClass('hidden');
                        }
                    },Community.settings().layerDelay);
                }
            });
        }
    };
    /**
     * profile pages - getting user data via JSONP
     * @function
     * @name getProfileData
     * @memberOf de.bild.community
     * @private
     */   
     function getProfileData() {
        /* these vars are set in setupProfileEvents()*/
        if (isProfileHead || isProfileSettings) {
            if (Community.variables().profileOwnerEncryptedUserId && Community.variables().profileOwnerEncryptedUserId.length) {
                profileUrl = de.bild.settings.community.urls.getUserInfo.replace('%USERID%', Community.variables().profileOwnerEncryptedUserId);
                profileUrl = profileUrl.replace('%TOKEN%', Community.variables().profileViewToken);
            } else {
                return false;
            }
            if (isProfileSettings) {
                Community.loadingLayer($('#aboutyou'),'loading');                
            }
            /*get the JSONP response*/   
            if (isProfileHead) {     
                
                         
                jsonp(profileUrl, de.bild.community.profile.handleProfileHead); 
                
            } else if (isProfileSettings) {
                // get user data through jsonp
                
                var url = de.bild.settings.community.urls.getUserAbout + '/' + Community.variables().profileViewToken;                
                
                jsonp(url, de.bild.community.profile.handleProfileSettings); 
                /*About edit you has to be received exclusively via JSONP  */
                de.lib.live($contentWrapper, '#aboutyou header a', 'click', function(e) {
                    e.preventDefault();                    
                    var url = $(this).attr('data-ajax-href');
                    url = url.substring(url.indexOf('#')+1,url.length)  + '/' + Community.variables().profileViewToken;
                                                         
                    jsonp(url, de.bild.community.profile.handleProfileSettings);
                });
                //
                // fix for PROCO-1152. this is work if form is sended
                // error handling in server side
                //
                de.lib.live($contentWrapper, '#usrProfile', 'submit', function(e) {
                    Community.loadingLayer($('#usrProfile'),'loading');
                    e.preventDefault();
                    var $this = $(this),
                    params = $this.serialize(), 
                    url = $this.attr('action')  + '/' + Community.variables().profileViewToken + '?' + params;
                                        
                    jsonp(url, de.bild.community.profile.handleProfileSettings);
                    
                }); 
            }
        }
     };
    //public method to handle JSONP request for the profile settings //#aboutyou
    function  handleProfileSettings(response){
        if (response) {
            de.lib.replaceWith($('#aboutyou'), response);
            return response;
        }
    };
    //public method to handle JSONP request for the profile head information
    function handleProfileHead(response){
        if (response) {
            userData['name'] = (response.name && response.name.length > 0) ? response.name : null;
            userData['homepage'] = (response.homepage && response.homepage.length > 0) ? response.homepage : null;
            userData['homepageView'] = (response.homepageView && response.homepageView.length > 0) ? response.homepageView : null;                   
            userData['errors'] = (response.errors) ? response.errors : null;
            userData['occupation'] = (response.occupation && response.occupation.length > 0) ? response.occupation : null;
            userData['location'] = (response.location && response.location.length > 0) ? response.location : null;
            userData['age'] = (response.age && parseInt(response.age) !== 0) ? response.age+profileYears : null;
            userData['showLocation'] = response.showLocation;
            userData['showAge'] = response.showAge;
            /* let's build the string - we don't need the home page in the string for now */
            if (userData['occupation']) {
                profileString.push(_separator);
                profileString.push(userData['occupation']);
            }
            if (userData['location'] && response.showLocation == 1) {
                profileString.push(_separator);
                profileString.push(userData['location']);
            }
            if (userData['age'] && response.showAge == 1) {
                profileString.push(_separator);
                profileString.push(userData['age']);    
            }
            /* remove the first dot if the strong tag has content (moderator etc)*/
            if ($profileHead.find('p[data-type="userdata"] > strong').length>0 && $profileHead.find('p[data-type="userdata"] > strong')[0].innerHTML.length < 1) {
                profileString.shift();
            }
            /* include the user data */
            $profileHead.find('p[data-type="userdata"]').append(Community.templates().spanEl.replace('%CONTENT%', profileString.join('')));
            /* if there is a homepage include it*/
            if (userData['homepageView'] && userData['homepage']) {
            $profileHead.find('p[data-type="homepage"]').html(Community.templates().linkNewWindow.replace('%URL%', userData['homepage']).replace('%CONTENT%', userData['homepageView']));
            }
            return response;
        }
    }
    /**
     * profile settings data loading - this is not schoen, but we have to reload the data every time
     * @function
     * @name insertProfileSettingsData
     * @memberOf de.bild.community
     * @private
     */
    function insertProfileSettingsData(){
        if ($profileSettings.length === 0) {
            return;
        }
        $profileSettings.find('td.homepage').html(userData['homepage'] ? userData['homepage'] : notprovided);
       
        $profileSettings.find('td.occupation').html(userData['occupation'] ? userData['occupation'] : notprovided);
       
        if (userData['location']) {
            $profileSettings.find('td.location').html((userData['showLocation'] == 1) ? userData['location'] : notpublished);
        } else {
            $profileSettings.find('td.location').html(notprovided);
        }
        if (userData['age']) {
            $profileSettings.find('td.age').html((userData['showAge'] == 1) ? userData['age'] : notpublished);    
        } else {
            $profileSettings.find('td.age').html(notprovided);
        }
    };
     /**
     * cross domain get request
     * @function
     * @name jsonp
     * @memberOf de.bild.community
     * @param {string} url - url
     * @param {function} callback - success callback
     * @private
     */
    function jsonp(url, callback){
        if (arguments.length === 2) {
            $.ajax({
                dataType: 'jsonp',
                type : 'GET',
                crossDomain : true,
                cache : true,
                url: url
            })
            .done(callback);
        }
    };
 function init(){
 profileUrl,
    _separator = Community.templates().profileSeparator,
    userData = {},
    profileString = [],
    notprovided = Community.templates().message.replace('%CLASS%', 'disabled').replace('%CONTENT%', de.bild.settings.community.lang.notprovided),
    notpublished = Community.templates().message.replace('%CLASS%', 'disabled').replace('%CONTENT%', de.bild.settings.community.lang.notpublished),
    profileYears = de.bild.settings.community.lang.years; 
 
 isMobile = de.bild.utils.isMobile(); 
  
  
   
  //init
  if (!initialised){
   initialised = true;
   setupProfileEvents();
   getProfileData();
  }
  //reinit
  else{
   
  }
 }
 
 
 return {
  
  'init':function(){
   init();
  },
  handleProfileSettings: function(response){
      handleProfileSettings(response);
  },
  handleProfileHead : function(response){
      handleProfileHead(response);
  }
  
 } 
 
})(jQuery, de.bild.community) 
/*de.bild.community.qotd:29369472.10*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community||{};
de.bild.community.qotd = (function($, Community) {
    
    var initialised = false;
     function checkQOD(){
         var info = de.bild.sso.getUserInfo();         
        
         if(!info.firstLogin){
             var info = jQuery.cookie('avComUser');
             if(info)
             info = jQuery.parseJSON(info);
         }
         if(info && info.firstLogin){
             var url = de.bild.settings.community.urls.getQODcomment;
             info.firstLogin=false;
             jQuery.cookie('avComUser',JSON.stringify(info),{path:'/',domain: de.bild.env.domain});                     
             $.ajax({
                 url: url,
                 dataType:'json',
                 cache:true
             }).done(function(response){            
                     //set lightbox that doesn't queue
                     
                     if(response.status=="success"){
                         
                         
                         
                        Community.showLightBox({
                            "content":response.form,
                            dominant:true,
                            "wrapperClass":"com-lightbox qotd"
                            }
                            );
                     }
                 }
             )
         }
     }
    //Subscriptions QOD
    //initialised when user is logged in and all required items are rendered
    $.subscribe('qotd.checkFB', function() {
        
        var form = $('.com-question').last();
        var $fieldset = form.find('.com-buttons, fieldset');
        $fieldset.find('textarea').val('');
        
        
        if(!de.bild.sso.isLoggedIn() || !de.bild.sso.isFBConnected())
            $('#sn-fb').parents('.socials').remove();
        //check ob user hat gerade ein Kommentar gesendet
        if(de.bild.sso.isLoggedIn() && Community.storage.get('qotdLogin')) {
            //remove Cookie
            Community.storage.remove('qotdLogin');
            
            
            if($fieldset.siblings('p.hint').size() > 0) return false;
            
            var successMSG = $(de.bild.settings.community.templates.message.replace('%CLASS%', 'hint').replace('%CONTENT%', 'Vielen Dank für Ihren Kommentar!'));
            $fieldset.hide();
            $fieldset.first().after(successMSG);
           de.bild.community.comments.delayToFade(successMSG, de.bild.settings.community.options.fadeDelay, function() {
                successMSG.remove();
                $fieldset.find('textarea').val(''); 
                $fieldset.show();
            });
        }
        else{
            //ensure no storage object is set.
            Community.storage.remove('qotdLogin');            
        }
    });
    function handleLoginRequired(response) {
        //do login with special qod parameters
        var qodPromoBox = Community.urls().qotdPromoBox;
        $.ajax(qodPromoBox, {
            dataType : 'html',
            cache : true
        }).done(function(data) {
            if (data && !de.bild.sso.isLoggedIn()) {
                Community.showLightBox({
                    'wrapperId' : 'sso-lightbox',
                    'content' : data,
                    'callback' : function() {
                        
                        $('#qod-login').on('click', function(e) {
                            Community.storage.set('qotdLogin', 1,false);
                            e.preventDefault();
                            
                            de.bild.sso.login({
                                url : response.url
                            });
                        });
                    },
                    'onClose' : function() {
                    }
                });
            }
        });
    }
    function init(){
        
        //init once
        if (!initialised){
            initialised = true;        
            
        //Question of the day trigger
        if(de.bild.sso && de.bild.sso.isLoggedIn()){
             checkQOD();
        }
            
        }
        //reinit
        else{
            
        } 
    }
    
    
    return {        
        'init':function(data){
            init();
        },
        'handleLoginRequired':handleLoginRequired
    }   
    
})(jQuery, de.bild.community) 
/*de.bild.community.teaserComments:27210486.10*/

var de = de || {};
de.bild = de.bild || {};
de.bild.community = de.bild.community||{};
de.bild.community.teaserComments = (function($, Community) {
    
    var initialised = false;
    
    /* cache JSON data for article comments */
    var articleCommentsJSON = {},
    /* cache idMap data for article comments (get from inline call to loadTeaserComments() rendered by CMS) */
    articleCommentsMap = {},
    /* cache single ids of the article comments DOM elements */
    articleCommentsIds = [],
    
    topicMap = {},
    
    commentCall = null,
    
    topicIDs = [];
    /**
     * Loads JSON with the number of comments for each teaser.
     * Required CSS can be dynamically loaded
     * Using the Ids provided in the JSON, we insert in the element with the corresponding Id HTML containing the number of comments
     * @function
     * @param {Object} idMap contains UGC-IDs and their DOM-Ids
     * @param {String} url optional url to Server. UGC ids will be appended
     * @name loadTeaserComments
     * @memberOf de.bild.community
     * @private
     */
    /*
        Object expected from BILD:
        {'19565604': ['rating_19471642_59119364','rating_19471644_59119364'], '19572902': ['rating_19572902_12132434','rating_19572902_799672245'], '19584838': ['rating_19584838_45356346']}
         Object expected from KA: {"payload_type":"json","status":"1","error":"","numComments":[{"10000584":3577,"8819148":3406,"10414364":2746}]}
     */
    function loadTeaserComments(idMap, url) {
        /* idMap has to be present */
        $body = $('body');
        if( typeof idMap === 'object') {
            articleCommentsMap = idMap;
            /*load css */
            //de.bild.utils.addStyleSheet(de.bild.settings.community.urls.commentsCSS, 'comTeaserComments');
            /* option url */
            url = url || de.bild.settings.community.urls.articleComments;
            /* build parameter string to add to the URL */
            
            articleCommentsIds = [];
            
            var lengthBefore = articleCommentsIds.length;
            
            for(var k in articleCommentsMap) {                
                    articleCommentsIds.push(k);                
            }
            //only do the comment call when there are
            if(articleCommentsIds.length > 0) {
                url = url + articleCommentsIds.join(':');
                /* get JSON */
               commentCall = $.ajax({
                    url : url,
                    type : 'GET',
                    dataType : 'json',
                    'cache' : true
                }).done(function(data) {
                    articleCommentsJSON = data.numComments;
                }).always(function() {
                    commentCall=null;
                    showTeaserComments();
                    $.publish('community.teaserCommentsLoaded');
                });
                /* ie is crippled */
                if(!$body.hasClass('modern')) {
                    $contentWrapper.find('div.hentry, .mtA, div.ateaser-content, div.slide-item').mouseenter(function() {
                        var $this = $(this), $ugc;
                        if($this.hasClass('mtA')) {
                            $ugc = $this.closest('div.ugcGroup');
                        } else {
                            $ugc = $this.find('div.ugcGroup');
                        }
                        if($ugc.length) {
                            $ugc.show();
                        }
                    }).mouseleave(function() {
                        var $this = $(this), $ugc;
                        if($this.hasClass('mtA')) {
                            $ugc = $this.closest('div.ugcGroup');
                        } else {
                            $ugc = $this.find('div.ugcGroup');
                        }
                        if($ugc.length) {
                            $ugc.hide();
                        }
                    });
                }
            }
        }
    };
    /**
     * shows Teaser comments on matching elements in the page
     * @function
     * @name showTeaserComments
     * @memberOf de.bild.community
     * @param {Array} ids - Array of DOM ids
     * @private
     */
    function showTeaserComments(){
        if (articleCommentsIds.length) {
            /* loop through the idMap and */
            for (var i = 0, l = articleCommentsIds.length; i < l; ++i) {
                var id = articleCommentsIds[i],
                value = (articleCommentsJSON[id]) ? parseInt(articleCommentsJSON[id]) : 0;
                /* get the dom element ids.. */
                var collection = articleCommentsMap[id];
                /* and loop through it */
                for (var n = 0, m = collection.length, $elem; n < m; ++n) {
                    var $elem = $('#' + collection[n]);
                    /* only if the element has more than 2 comments, otherwise delete it */
                    if ($elem.length && value > 0) {
                         //in some cases there is a <i>-Tag containing "kommentare" this shouldn't be replaced
                         $elem = $elem.find('i').length>0?$elem.find('em'):$elem;
                         $elem.text(value);
                         $elem.parents('div.ugcGroup, li.comment-count').addClass('active'); 
                    }
                    else{
                        $elem.parents('.ugcGroup').hide();
                    }
                }
            }
        }
    };  
    
    /**
     * Function that searches in a given context for ugcGroups and retrieves the comment count.
     */
    function checkForTeaserComments($content) {
        $content = $content ? $content : $('body');
        var ugcs = jQuery('.ugcGroup a', $content)
        var json = {};
        ugcs.each(function() {
            var $this = jQuery(this);
            var linkID = $this.attr('id');
            if(linkID) {
                var tarr = linkID.split('_');
                //id = comments_2101921804_0_1059189009
                if(tarr.length == 4) {
                    var ugcID = tarr[1];
                    //wenn schon ein Element vorhanden ist, nur die ID an das Array hängen
                    if(json[ugcID]) {
                        //nur wenn nicht schon vorhanden, sollte immer der Fall sein
                        if(jQuery.inArray(linkID, tarr) == -1) {
                            json[ugcID].push(linkID);
                        }
                    }
                    //Array an dieser Stelle erstellen
                    else {
                        json[ugcID] = [linkID];
                    }
                }
            }
        })
        if(!commentCall){
            de.bild.community.loadTeaserComments(json);
        }
        else{
         /*    $.subscribe('community.teaserCommentsLoaded',function(){
                $.unsubscribe('community.teaserCommentsLoaded');
                de.bild.community.loadTeaserComments(json); 
            }); */
        }
        
    }
    
    
    
    function init(){
        
        //init once
        if (!initialised){
            initialised = true;
        }
        //reinit
        else{
            
        }        
       //loadTeaserComments();
    }
    
    
    return {        
        'init':function(data){
            loadTeaserComments(data);
        },
        'loadTopicData':function(data){
            de.bild.community.follow.loadTopicData(data);
        },
        'checkForTeaserComments':checkForTeaserComments       
  
    }   
    
})(jQuery, de.bild.community) 
/*Community:27210432.7*/


/*de.bild.user:29329622.3*/

var de = de || {};
de.bild = de.bild || {};

de.bild.user = (function($, SandBox){

    var initialized = false;


    var USERTYPES_FOR_TRACKING = {
        BUYER: 'kaeufer',
        USER: 'nutzer',
        UNKNOWN: 'unbekannt'
    };
    
    
    var VAuthData = {
        clubs: [],
        loggedIn: false,
        cookieName: 'vauth',
        ssoID:''
    };

    
    /**
     * Get the cookie for the given cookie key
     *
     * @param {String} key - cookie name
     * @return {String} cookie value
     */
    function getCookie(key) {
        
        if(jQuery && jQuery.cookie) {
            return jQuery.cookie(key);
        }    
        
        var cookieData;
        return (cookieData = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decodeURIComponent(cookieData[1]) : null;
    }
    
    
    /**
     * Check if the user belongs to the given club.
     *
     * @param {String} clubName
     * @return {boolean}
     */
    function userHasClub(clubName) {
        
        for(var i = 0; i < VAuthData.clubs.length; i++) {
            if( VAuthData.clubs[i] == clubName ) {
                return true;
            }
        }
        
        return false;
        
    }
    
    
    /**
     * Parse the VAuth cookie, extract all relevant data and store it inside {VAuthData} variable
     *
     */
    function getVAuthData() {

        var vauthCookie = getCookie(VAuthData.cookieName);  

        if(!vauthCookie) {
            return false;
        }
        
        var clubsRegex = new RegExp(/~id=:?([^~]*[^:~]):?~/);
        var loggedInRegex = new RegExp(/~data=u=([^&~]*)[&~]/);
        
        var clubs = clubsRegex.exec(vauthCookie);
        
        VAuthData.clubs = [];
        
        if(clubs!=null){
            VAuthData.clubs = clubs[1].split(':');
        }
        
               
        var loggedIn = loggedInRegex.exec(vauthCookie)[1];      
        VAuthData.ssoID =  loggedIn;
        if(loggedIn && loggedIn !== "") {
            VAuthData.loggedIn = true;
        }
        
    }
    
    /** 
     *  Returns a value for a webtrekk parameter that indicates if the users has some premium features or not. 
    */
    function getTrackingInfo(){
        var param = USERTYPES_FOR_TRACKING.UNKNOWN;
        if(VAuthData.loggedIn){
            param = VAuthData.clubs.length > 0 ? USERTYPES_FOR_TRACKING.BUYER : USERTYPES_FOR_TRACKING.USER;
        }
        return param;
    }
        
    /** Self init */
    getVAuthData();
    
    
    function init() {

        initialized = true;
        
    }

    return {
        
        'init' : function(){
            init();
        },
        'isLoggedIn': function(){
            return VAuthData.loggedIn;
        },
        
        'getUserClubs': function(){
            return VAuthData.clubs;
        },
        'userHasClub': function(clubName){
            return userHasClub(clubName);
        },
        'getTrackingInfo':function(){
            return getTrackingInfo();
        },
        'getSSOID':function(){
            return VAuthData.ssoID;
        }
        
    };
       
})(jQuery, de.bild.globalSandBox);





/*de.bild.common:27524118.12*/

var de = de || {};
de.bild = de.bild || {};


de.bild.common = (function ($, SandBox) {


    var GLOBALS = {
        premiumMarkerOffsetRight: 6,
        premiumMarkerOffsetBottom: 31
    };


    /** Global Listeners */
    $.subscribe('de.bild.modifyHeadline', function () {

        var $headline = $('#cover');
        var objKicker = $(document.createElement('span')).addClass('kicker').html($headline.attr('data-kicker'));
        var objHeadline = $(document.createElement('span')).addClass('headline').html($headline.attr('data-headline'));

        $headline.empty().append(objKicker).append(objHeadline);

    });


    $(document).on('click', '.bde-popupLink', function(){
        var popupParams = $(this).attr('data-popup-params');
        if(popupParams.length) {
            window.open('', 'popup', popupParams);
        }
    });

    /** Lightboxes */
    function initLightboxes($context) {

        $context.on(SandBox.getActionEvents('lbLink').click, '.lb-link, .layer-link, .com-lb', function (e) {

            e.preventDefault();
            e.stopPropagation();

            var $domElem = $(this);
            var lbUrl = $domElem.attr("data-ajax-href");
            var lbStyle = 'default';

            if (lbUrl === 'undefined' || lbUrl === false) {
                console.warn('LB-Link has not data-ajax-href attribute.');
                return false;
            }

            if ($domElem.hasClass('layer-link')) {
                lbStyle = 'layer';
            }
            if ($domElem.hasClass('com-lb')) {
                lbStyle = 'com-lb';
            }

            showLightbox(lbStyle, lbUrl);
        });
    }


    function showLightbox(lbStyle, lbUrl) {

        var layerClass = "";
        var overlColor = '#000';
        var defaultLightboxClass = 'lightbox';

        if (lbStyle === 'layer') {
            layerClass = 'layer';
            overlColor = '';
        } else if (lbStyle === 'com-lb') {
            defaultLightboxClass = 'com-lightbox';
            overlColor = '';
        }

        $.ajax({
            url: lbUrl,
            dataType: 'html'
        })
        .done(function (response) {

            var params = {
                wrapperClass: defaultLightboxClass + ' ' + layerClass,
                overlayColor: overlColor,
                content: response,
                callback: function () {
                    SandBox.initModules($('.' + defaultLightboxClass));
                }
            };

            try {
                $('body').bildLightbox(params);
            } catch (err) {
                console.error('Failed to launch BildLightbox. ' + err);
            }
        })
        .fail(function () {
            console.error('Lightbox AJAX Request failed.');
        });
    }

    /** Tabs */
    function loadTab($tab, $tabsElem, event) {

        var targetUrl = $tab.attr('data-ajax-href');

        /* Target Element not found or tab already active. Ignore tab */
        if (targetUrl === undefined || targetUrl.length === 0) {
            return;
        }

        event.preventDefault();

        if ($tab.closest('li').hasClass('active')) {
            return false;
        }

        /* set active class for clicked element */
        $tabsElem.find('li').removeClass('active');
        $tab.closest('li').addClass('active');

        /* If no target-id given, take the target class name */
        var targetId = $tab.attr('data-target-id');
        var $targetElem = targetId ? $('#' + targetId) : $('.' + $tab.attr('data-target-class'));

        $.ajax({
            url: $tab.attr('data-ajax-href'),
            dataType: 'html'
        })
        .done(function (response) {
            SandBox.tearDownModulesIn($targetElem);
            $targetElem.html(response);
            SandBox.initModules($targetElem);
            /* custom event; pubsub vs trigger? */
            $tabsElem.trigger('tabsContentChanged');
        })
        .fail(function () {
            console.error('Tabs AJAX Request failed.');
        });
    }


    function initTabModules($context) {

        /** Common tabs */
        $context.on(SandBox.getActionEvents('tabs').click, '.tabs a', function (e) {
            var $tab = $(this);
            loadTab($tab, $tab.closest('.tabs'), e);
        });

        /** BuLi tabs */
        $context.on(SandBox.getActionEvents('BuLi_Tabs').click, '.btabs a', function (e) {
            var $tab = $(this);
            loadTab($tab, $tab.closest('.btabs'), e);
        });

        /** Radio buttons included in common tabs */
        $context.on(SandBox.getActionEvents('tabsRadio').click, '.sortOption input', function (e) {

            var $radioButton = $(this);
            var $targetContainer = $radioButton.closest('.sortOption').siblings('ol.items,p.hint');
            var $targetParent = $targetContainer.parent();
            var $top5Element = $radioButton.closest('.top5');
            var url = $radioButton.attr('data-ajax-href');

            $.ajax({
                url: url,
                dataType: 'text',
                beforeSend: function () {
                    if (url.indexOf('/ka/') != -1) {
                        $top5Element.addClass('loading');
                        $targetContainer.css('opacity', 0);
                    }
                }
            })
            .always(function () {
                $top5Element.removeClass('loading');
            })
            .done(function (response) {
                $targetContainer.replaceWith(response);
                SandBox.initModules($targetParent);
            })
            .fail(function () {
                console.error('Tabs AJAX Request failed.');
            });
        });
    }

    /** Pagination */
    function initPagination($context) {

        $context.on(SandBox.getActionEvents('pagination').click, '.pagination .pag a', function (e) {

            e.preventDefault();

            var $link = $(this);
            var $targetElem = $link.closest('.pagination');

            $.ajax({
                url: $link.attr('data-ajax-href'),
                dataType: 'html'
            })
            .done(function (response) {
                SandBox.tearDownModulesIn($targetElem);
                $targetElem.html(response);
                SandBox.initModules($targetElem);
            })
            .fail(function () {
                console.error('Pagination AJAX Request failed.');
            });
        });
    }

    /** Comments & Columns */
    function initCommentsAndColumns($context) {

        // Kommentare und Kolumnen
        $context.on(SandBox.getActionEvents('commentsAndColumns').click, '.comments-columns .ajaxReplace', function (e) {

            e.preventDefault();

            var $link = $(this);
            var $targetElem = $('#' + $link.attr('data-ajax-target'));
            $link.parent('.hentry').siblings('.hentry').removeClass('active');
            $link.parent('.hentry').addClass('active');

            $.ajax({
                url: $link.attr('data-ajax-href'),
                dataType: 'html'
            })
            .done(function (response) {
                $targetElem.html(response);
                SandBox.initModules($targetElem);
            })
            .fail(function () {
                console.error('Pagination AJAX Request failed.');
            });
        });
    }

    /** Premium Marker */
    function repositionAndShowPremiumMarker($marker, $img) {

        $marker.css({
            'top': ($img.height() - GLOBALS.premiumMarkerOffsetBottom) + 'px',
            'right': GLOBALS.premiumMarkerOffsetRight + 'px'
        }).removeClass('hide premiumMarker');
    }


    function showPremiumMarkers($context) {

        var $premiumMarker = $context.find('.premiumMarker');

        $premiumMarker.each(function () {

            var $pMarker = $(this);
            var $img = $pMarker.parent().find('img').first();
            $img.on('load', function () {
                repositionAndShowPremiumMarker($pMarker, $img);
            });
            if ($img[0].complete) {
                $img.load();
            }
        });
    }

    /** Login Button Hide */
    function removeLoginButtons($context) {
        $context.find('.btnLogin').remove();
    }

    /** Autoload */
    function autoLoadModule($context) {

        var href = $context.attr('data-ajax-href');

        if (href === undefined || href.length === 0) {
            console.warn('Autoload Module: couldn\'t find data-ajax-href attribute');
            return false;
        }

        $.ajax({
            url: href,
            dataType: 'html'
        })
        .done(function (response) {
            var $temp = $('<div></div>');
            $temp.get(0).innerHTML = response;
            var $parentNode = $context.parent();
            $context.replaceWith($temp.html());
            SandBox.initModules($parentNode);
            SandBox.getEventManager().publish('autoLoadFinished');
        })
        .error(function (data) {
            console.warn('Autoload Module: Ajax Request failed.');
            var xLocation = data.getResponseHeader('X-Location');
            if (xLocation && xLocation.length) {
                console.info('redirecting to : ' + xLocation);
                window.location.href = xLocation;
            }
        });
        return true;
    }


    function init($context) {

        initLightboxes($context);
        initTabModules($context);
        initPagination($context);
        initCommentsAndColumns($context);
    }


    return {

        'initLightboxes': function ($context) {
            return initLightboxes($context);
        },
        'initTabModules': function ($context) {
            return initTabModules($context);
        },
        'initPagination': function ($context) {
            return initPagination($context);
        },
        'initCommentsAndColumns': function ($context) {
            return initCommentsAndColumns($context);
        },
        'init': function ($context) {
            return init($context);
        },
        'autoLoadModule': function ($context) {
            return autoLoadModule($context);
        },
        'showPremiumMarkers': function ($context) {
            return showPremiumMarkers($context);
        },
        'removeLoginButtons': function ($context) {
            return removeLoginButtons($context);
        },
        'showLightbox': function (lbStyle, lbUrl) {
            return showLightbox(lbStyle, lbUrl)
        }
    };

})(jQuery, de.bild.globalSandBox);

/*core:27210750.22*/

var google_adnum=0;

var de = de || {};
de.bild = de.bild || {};

de.bild.iframeData = [];