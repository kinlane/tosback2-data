var JSON;if(!JSON){JSON={};}(function(){function f(n){return n<10?"0"+n:n;}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null;
};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;
function quote(string){escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];
if(value&&typeof value==="object"&&typeof value.toJSON==="function"){value=value.toJSON(key);}if(typeof rep==="function"){value=rep.call(holder,key,value);}switch(typeof value){case"string":return quote(value);case"number":return isFinite(value)?String(value):"null";case"boolean":case"null":return String(value);
case"object":if(!value){return"null";}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==="[object Array]"){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||"null";}v=partial.length===0?"[]":gap?"[\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";
gap=mind;return v;}if(rep&&typeof rep==="object"){length=rep.length;for(i=0;i<length;i+=1){if(typeof rep[i]==="string"){k=rep[i];v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v);}}}}else{for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v);
}}}}v=partial.length===0?"{}":gap?"{\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=mind;return v;}}if(typeof JSON.stringify!=="function"){JSON.stringify=function(value,replacer,space){var i;gap="";indent="";if(typeof space==="number"){for(i=0;i<space;i+=1){indent+=" ";}}else{if(typeof space==="string"){indent=space;
}}rep=replacer;if(replacer&&typeof replacer!=="function"&&(typeof replacer!=="object"||typeof replacer.length!=="number")){throw new Error("JSON.stringify");}return str("",{"":value});};}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];
if(value&&typeof value==="object"){for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);
});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j;}throw new SyntaxError("JSON.parse");
};}}());


/* BEGIN: Console Debugging
 * Check for the console object, and create a dummy version for browsers that don't support it.
**/
if(typeof(window.console) == 'undefined') {
  var f = function(){}; //Make a dummy function to intercept any calls to the console functions
  window.console = {log:f,debug:f,info:f,warn:f,error:f,assert:f,dir:f,dirxml:f,group:f,groupEnd:f,time:f,timeEnd:f,count:f,trace:f,profile:f,profileEnd:f};
}

/* Enable Array.indexOf in IE */
if(typeof(Array.indexOf) =='undefined') {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) { if(this[i]==obj) { return i; } }
		return -1;
	}
}

/* The apps object, which is used to hold more complicated, site-specific functionality */

var FsApps  = {};



/* BEGIN: [Load Functions After Window Load]

 * will launch function(s) after the window has loaded.

 * call as a string:  FsApps.LoadFunctions.add({func:'rackEm("global-nav")'});

**/

FsApps.LoadFunctions = new function() {

  var mThis = this; //an easy reference to the current object (using 'this' sometimes references 'window', not this object)

  var mQueue = []; //the array of functions to execute when the page is fully loaded

  var mAlreadyRun = false; //a flag to check whether the array of functions has been executed



  var mBridgeWarningShown = false; //used to only output the associated deprecation warning once
 
  mThis.showBridgeWarning = function() {

    if(!mBridgeWarningShown) {

      window.console.warn("fsAWLLoadFunction(options) was called at least once, please update to FsApps.LoadFunctions.add(options)");

      mBridgeWarningShown = true;

    }

  }



  mThis.add = function(options) {

    options = options || {};

    if(typeof(options.func) == 'undefined' || options.func == '') {

      return; //The 'func' option is required, ignore the call if not passed

    }



    if(mAlreadyRun) {

    	runFunction(options.func); // document is already ready, run functions as they're received

    } else {
    	//window.console.warn("func: "+options.func);
    	mQueue.push(options.func); //queue up the functions so they'll be run in order when the document is ready

    }

  }



  /* This function is run once, when the DOM is fully loaded. */

  function onLoadComplete() {

    if(!mAlreadyRun) { //only execute once

      for(var i = 0, mQLen=mQueue.length; i < mQLen; i++) { //loop through the accumulated queue of code to execute
    	//window.console.warn("execute the queued code: "+mQueue[i]);
        runFunction(mQueue[i]); //execute the queued code

      }

    }

    mAlreadyRun = true;
  }



  /* Evaluate the passed string */

  function runFunction(code) {

    try {

      if(typeof(code) == 'function') {
    	//window.console.warn("code is function");
        code();

      } else {
    	//window.console.warn("code is: "+ code);
        eval(code);

      }

    } catch(e) { console.warn('LoadFunctions error: ' + e); }

  }



  /* Attach the onLoadComplete function to the document's load complete event, using whichever method is available */

	if (document.addEventListener) { // if the browser supports eventListeners

  	document.addEventListener("DOMContentLoaded", onLoadComplete, false);

	} else if (window.addEventListener) { //DOM method for binding an event

		window.addEventListener("load", onLoadComplete, false);

	} else if (window.attachEvent) { //IE exclusive method for binding an event

		window.attachEvent("onload", onLoadComplete);

	} else if (document.getElementById) { //support older modern browsers

		window.onload = onLoadComplete();

	}

}



/* A migration bridge, to avoid breaking existing code */

function fsAWLLoadFunction(options) {

  FsApps.LoadFunctions.add(options);

  FsApps.LoadFunctions.showBridgeWarning();

}



/* END: [Load Functions After Window Load] */





/* The social stalker, what controls the social networking toolbar (makes it follow the user, and collapse with a small viewport) */

FsApps.SocialStalker = new function() {

  var mThis = this; //A quick reference to this object

  var mContainer, mToolbar, mStalkerWidth, mVerticalOffset;



  var SCORE_STRIP_HEIGHT = 40; //The extra buffer space to stack on top of the position calculations



  mThis.init = function(options) {

    options = options || {};

    options.containerId = options.containerId || "fs-share-container";

    options.toolbarId = options.toolbarId || "fs-share-menu";



    mContainer = document.getElementById(options.containerId);

    mToolbar = document.getElementById(options.toolbarId);

    mStalkerWidth = mToolbar.offsetWidth;

    mVerticalOffset = mContainer.offsetTop + mToolbar.offsetTop - SCORE_STRIP_HEIGHT;

    if(typeof(window.addEventListener) != 'undefined') {

      window.addEventListener('resize', onWindowResize, false);

      window.addEventListener('scroll', onWindowScroll, false);

    } else if(typeof(window.attachEvent) != 'undefined') {

      window.attachEvent('onresize', function() { onWindowResize(window.event); })

      window.attachEvent('onscroll', function() { onWindowScroll(window.event); })

    }



    /* TODO: Find out whether it's safe to remove the "overflow:hidden" on #bdy-container */

    if(document.getElementById('bdy-container')) { //The content container div id="bdy-container" will hide the toolbar on some pages, override its CSS

      document.getElementById('bdy-container').style.overflow = "visible";

    }

  }



  function onWindowResize(event) {

    if((mContainer.offsetLeft - mStalkerWidth) <= 0) {

      mToolbar.className = "narrow";

    } else {

      mToolbar.className = "";

      if(mToolbar.style.position == 'fixed') {

        mToolbar.style.left = (mContainer.offsetLeft - mStalkerWidth)+'px';

      }

    }

  }



  function onWindowScroll(event) {

    if(mToolbar.className.indexOf('narrow') < 0) {

      var scrollHeight = (typeof(window.pageYOffset) != 'undefined') ? window.pageYOffset : document.documentElement.scrollTop;

      if((mVerticalOffset - scrollHeight) < 0) {

        if(mToolbar.style.position != 'fixed') {

          var leftPosition = mContainer.offsetLeft - mStalkerWidth;

          var topPosition = SCORE_STRIP_HEIGHT + mToolbar.offsetTop;

          mToolbar.style.position = 'fixed';

          mToolbar.style.left = leftPosition+'px';

          mToolbar.style.top = topPosition+'px';

        }

      } else {

        mToolbar.style.position = 'absolute';

        mToolbar.style.left = '';

        mToolbar.style.top = '';

      }

    }

  }

}









/* BEGIN: [GLOBAL ANALYTICS TRACKING]

 ** Example on calling this function:

 ** FsApps.analytics(this, {type: "link", description: "fantasy pickem popup - 324314324"});

 ** This example will send an event call to our analytics provider so they can track this link with a description in side of the page

 */

var fsAnalyticsDescription; // page description information

var fsAnalyticsHold = ""; // if this is set to "true", then the fsAnalytics function will not complete it's initial run and wait for a second call.

FsApps.analytics = function(me, options){

	var options = options || {}; // options setup

    var fsType = options.type || 'link'; // get the type of call

    var fsDescription = options.description || fsAnalyticsDescription; // get the description of call

    var realTime = options.realTime || true; // get flag for realtime processing

    var pageView = options.pageView || false; // get pageview request

    var trackingPath = options.tPath || document.location; // get the tracking path

    var fsEventName = options.eventName || fsType; // get the even type to pass to reporting. Default is the type of call.
    
    var callUDC = (options.callUDC != undefined) ?  options.callUDC : true; //the gallery pages call the analytics on pageload and do need 

	var ev;

	trackingPath = encodeURIComponent(trackingPath); // encode all tracking path data



    /* Count Page as a "Page View" or not */

    if (pageView == true) { // see if pageview is set

        pageView = "&pv=1"; // set the flag to be tracked as a new page view

		ev = ''; // set the ev tag

    } else { // if not

        pageView = ""; // set the flag NOT to be tracked as a page view

		ev = "&ev="+fsEventName+"&"; // set ev tag

    }



	if(typeof(fsPartnerAnalytics) != "undefined"){ // for special partner analytics

		fsDescription += "&" + fsPartnerAnalytics; // add their analytics to the string.

	}



	if(FsRef.getUserData("logged-in") == true){

		fsDescription += "&userstate=signedin"; // add their analytics to the string.

	}else{

		fsDescription += "&userstate=guest"; // add their analytics to the string.

	}



	if(me.href){ // check for link location

		fsDescription += "&link_to="+me.href; // add link location to the string.

	}



	if(typeof(me.parentNode) != "undefined"){

		if(me.parentNode.href){

			fsDescription += "&link_to="+me.parentNode.href; // add link location to the string.

		}

	}
	

    if (fsAnalyticsHold != true) { //	if a hold hasn't been placed on the launching of analytics
	

        /* Request Type Launch */

        switch (fsType) { // check the type of call

            case "link": // if it's a link

                	 ntptEventTag("lc=" + trackingPath +ev+"link_ref=" + fsDescription + pageView+""); // send tracking for the link with a description
          
                break;

            case "keepAlive": // time spend tracking in intervals set on the page...            
                
	            	ntptEventTag("lc=" + trackingPath +ev+ pageView+"&autorefresh=true"); // send tracking for the link with a description
	 	           
	            if(!partnerHeaderPageLoad){
	            	if (typeof(fpasSiteId) != "undefined"){
	            		launchMSNFSETracking(); //call for FSE UDC tracking.
	            	}
	            }
            		
                break;

            case "media":

                /* must use the "this" (captured in the "me" variable) call on the onclick for the link */

                /* fsDescription will show up as the query modification they will see in the reporting engine */

                	 ntptLinkTag(me, ["link_ref="+fsDescription]); // captures the url for the link tag

                break;

            case "external":

                /* must use the "this" (captured in the "me" variable) call on the onclick for the link */

                /* fsDescription will show up as the query modification they will see in the reporting engine */

					ntptEventTag("lc=" + trackingPath +ev+"link_ref=" + fsDescription + pageView); // <<< temporary until they figure out external linking params.  Unica documentation is invalid... grrrr.

                break;

            case "form":

                /* must use the "document.formName" or "this" (captured in the "me" variable) call on the onclick for the link */

                /* fsDescription will show up as the query modification they will see in the reporting engine */

                	 ntptSubmitTag(me, ["link_ref="+fsDescription]); // modifies the working query string for the reporting

                break;

            case "ini": // for initial page load
            	if(showTealium){//do nothing if tealium is loaded
            		
            	}else{
	                var head = document.getElementsByTagName('head').item(0); // get the header tag
	
	                var script = document.createElement('script'); // create a script tag
	
	                script.src = fsReqDomain + "/fe/js/ntpagetag.js"; // set the script source
	
	                script.type = "text/javascript"; // set the type
	
	                script.defer = true; // set the defer
	
	                head.appendChild(script); // place the script on the page
            	
            	}
	                if(!partnerHeaderPageLoad) {
	                	//alert("UDC - ini");
	                	if(callUDC && typeof(fpasSiteId) == "undefined"){
	                       launchMSNTracking(); // call to fire the UDC beacon to MSN... GVD
	                	}else{
		                	if (typeof(fpasSiteId) != "undefined"){
		 	            		launchMSNFSETracking(); //call for FSE UDC tracking.
		 	            	}
	                	}
	                 } else {
	                	 
	                	 if (location.href.match('/fantasy')) { // update for partner header UDC tracking
	                		 	launchMSNTracking(); 
	                	 }
	                 }
            	 
					if (typeof(fpasSiteId) == "undefined") { // check to see if we are on an fpas site or not
	
						NTPT_PGEXTRA = fsDescription + "&qc=1"; // if not, then add realtime tracking
	
					}else{ // if so
	
						NTPT_PGEXTRA = fsDescription;  // add the description only with no realtime tracking.
	
					}
				
            	

				break;

        }
    

    } else {

        fsAnalyticsHold = false; // remove the hold... open for second call

    }
    
   //if(!partnerHeaderPageLoad) 
    //launchMSNTracking(); // call to fire the UDC beacon to MSN... GVD

}



/* END: [GLOBAL ANALYTICS TRACKING] */ 



/* BEGIN: [Comments] */



/* BEGIN: [Get user logged in data]

 ** Example on calling this function:

 ** FsApps.getUserData("logged-in");

 */



FsApps.getUserData = function(check) {

	//window.console.log('getUserData');

	if(check){ // if there's something to check

		switch(check){ // check it

			case "verified": // validation check

				if(typeof(user.VERIFIED) != "undefined" && (user.VERIFIED == '' || user.VERIFIED == '0')) { // if the user is unverified, setup alert

					return false; // return false

				}else{ // if the user IS verified

					return true; // return true

				}

			break;

			case "logged-in": // login check

				if (typeof(user) == "undefined" || user.USER_ID == "0" || user.USER_ID == "") { // if the user is not logged in

					return false; // return false

				}else{ // if the user IS logged in

					return true; // return true

				}

			break;

			case "screen-name": // screen name check

				if (typeof(user.SCREEN_NAME) == "undefined" || user.SCREEN_NAME == null || user.SCREEN_NAME == "") { // if the user does not have a screen name

					return false; // return false

				}else{ // if the user does

					return true;  // return true

				}

			break;

			case "onesite-standing": // onsite good standing check

				if (typeof(user.ONESITE_GOOD_STANDING) != "undefined" && (user.ONESITE_GOOD_STANDING == null || user.ONESITE_GOOD_STANDING == "false")){ // if the user is not in good standing

					return false; // return false

				}else{ // if the user IS in good standing

					return true; // return true

				}

			break;

		}

	}else{ // if nothing to check

	    return user; // return full user object

	}

}

/* END: [Get user logged in data] */



var fsXMLComments = "/widget/comments";

//var fsXMLComments = "/fe/js/comments.xml";

var commentsMain = '';

var commentsPagination = '';

var totalPages='';

var fsComments = '';

var fsCFKey = ''; // comment forum key

var fsCTKey = ''; // comment topic key

var fsCommentsTotalLink = ''; // holder for comments link



FsApps.startComments = function(fKey, tKey) {

	//window.console.warn("startComments");

    try{



		if(fsCFKey == ''){

			fsCFKey = fKey; // set the global forum key

		}

		if(fsCTKey == ''){

			fsCTKey = tKey; // set the global topic key

		}



		if (document.getElementById('number_of_comments')) {

			fsCommentsTotalLink = document.getElementById('number_of_comments'); // get handle to comments link

		}



		if (FsApps.getUserData("logged-in") == false) { // check to see if a user is logged in

			var useBrowserCache = true; // use the cached data in the browser

		}else{

			var useBrowserCache = false; // do not use the cached data in the browser

		}



		commentsMain = new Spry.Data.XMLDataSet('', 'root/topic', {useCache:useBrowserCache}); // get member comments

		commentsPagination = new Spry.Data.XMLDataSet('', 'root/pagination', {useCache:useBrowserCache}); // get xml data

		fsComments = new Spry.Data.NestedXMLDataSet(commentsMain, "posts/post", {useCache:useBrowserCache}); // Get the XML Data



		fsComments.setColumnType(['body', 'subject'], 'html'); // show the html in the comment



		Spry.Utils.addLoadListener(function() { // Attach a spry listener... when the data ready, do the following:

			//window.console.log("addLoadListener");

			//user.USER_ID = 3372001;

			Spry.$$(".paginator").setAttribute("spry:detailregion", "commentsPagination"); // setup the comment pagination region

			if (FsApps.getUserData("logged-in") == false) { // if the user is not logged in

				Spry.$$(".add-comment-link").setAttribute("href", "/account/ead?type=PP&fu="+encodeURIComponent(document.location)); // pass in the passportLogin

				Spry.$$(".add-comment-link").setAttribute("title", "Log in to add a comment"); // add the correct title to the anchor

				Spry.$$(".add-comment-link").setAttribute("spry:content", "Log in to add a comment"); // add the correct content to the anchor

				document.getElementById("add_comments_link").innerHTML = "LOG IN TO ADD A COMMENT"; // add the correct content to the anchor

				document.getElementById("add_comments1_link").innerHTML = "LOG IN TO ADD A COMMENT"; // add the correct content to the anchor

			}else {

				if(FsApps.getUserData("onesite-standing") == false){ // if the user is NOT in good standing with ONE SITE

					var message = "This profile no longer has access to the comment posting feature or the FOXSports.com community.";

					Spry.$$(".add-comment-link").setAttribute("href", "javascript:FsApps.alertPopUp(this, {width:800, height:195, params: 'divId=oneSiteGoodStanding', resizable: 'yes', scrollbars: 'yes'});"); // set the verify onclick

				}else{ // if the user IS in good standing with one site

					if(FsApps.getUserData("verified") == false &&FsApps.getUserData("screen-name") == false){

						Spry.$$(".add-comment-link").setAttribute("href", "javascript:FsApps.alertPopUp(this, {width:800, height:455, params: 'divId=communitySetup', resizable: 'yes', scrollbars: 'yes'});"); // set the verify onclick

					} else{

						if (FsApps.getUserData("verified") == false) { // if the user is unverified, setup alert

							Spry.$$(".add-comment-link").setAttribute("href", "javascript:FsApps.alertPopUp(this, {width:800, height:250, params: 'divId=communitySetupEmail', resizable: 'yes', scrollbars: 'yes'});"); // set the verify onclick

						}else{ // user IS verified

							if(FsApps.getUserData("screen-name") == false){ // user has no screen name

								Spry.$$(".add-comment-link").setAttribute("href", "javascript:FsApps.alertPopUp(this, {width:800, height:280, params: 'divId=communitySetupScreenName', resizable: 'yes', scrollbars: 'yes'});	");  // send to create screen name

							}else{ // user HAS screen name

								Spry.$$(".add-comment-link").setAttribute("href", "javascript:FsApps.addComments();");  // set the FsApps.addComments

							}

						}

					}

				}

				   Spry.$$(".add-comment-link").setAttribute("title", "Add a Comment"); // set the new title

				   document.getElementById("add_comments_link").innerHTML = "ADD A COMMENT"; // set the new innerHTML

				   document.getElementById("add_comments1_link").innerHTML = "ADD A COMMENT"; // set the new innerHTML

			}



			Spry.$$(".page_label").setAttribute("spry:if", "{commentsPagination::pageCount}"); // make sure there are comments

			Spry.$$(".page_label").setAttribute("spry:content", "Page"); // if so, show the string



			// paginatione //

			//prev label

			Spry.$$(".prev_label").setAttribute("spry:if", "{commentsPagination::pageCount}"); // make sure there are comments

			//add a click event to the link

			Spry.$$(".prev_label").setAttribute("onclick", "FsApps.pageComments(this, '{commentsPagination::previousPage}'), FsApps.analytics(this, {type: 'link', description: 'Comments - Previous Page&slide_num={commentsPagination::currentPage} of {commentsPagination::pageCount}'})"); // if so, setup next page



			//'prev' link

			Spry.$$(".comment_link_prev").setAttribute("spry:if", "{commentsPagination::pageCount}"); // check for page comments

			//add link's click event

			Spry.$$(".comment_link_prev").setAttribute("onclick", "FsApps.pageComments(this, '{commentsPagination::previousPage}'), FsApps.analytics(this, {type: 'link', description: 'Comments - Previous Page&slide_num={commentsPagination::currentPage} of {commentsPagination::pageCount}'})"); // if so, setup next page



			//next label

			Spry.$$(".next_label").setAttribute("spry:if", "{commentsPagination::pageCount}"); // make sure there are comments

			//add a click event to the link

			Spry.$$(".next_label").setAttribute("onclick", "FsApps.pageComments(this, '{commentsPagination::nextPage}'), FsApps.analytics(this, {type: 'link', description: 'Comments - Next Page&slide_num={commentsPagination::currentPage} of {commentsPagination::pageCount}'})"); // if so, setup next page



			//'next' link

			Spry.$$(".comment_link_next").setAttribute("spry:if", "{commentsPagination::pageCount}"); // check for page comments

			//add link's click event

			Spry.$$(".comment_link_next").setAttribute("onclick", "FsApps.pageComments(this, '{commentsPagination::nextPage}'), FsApps.analytics(this, {type: 'link', description: 'Comments - Next Page&slide_num={commentsPagination::currentPage} of {commentsPagination::pageCount}'})"); // if so, setup next page



			//END: pagination //



			Spry.$$(".current_page").setAttribute("spry:if", "{commentsPagination::pageCount}"); // make sure there are comments

			Spry.$$(".current_page").setAttribute("spry:content", "{commentsPagination::currentPage}"); // if so, show the page numbering

			Spry.$$(".total_pages").setAttribute("spry:if", "{commentsPagination::pageCount}"); // make sure there are comments

			Spry.$$(".total_pages").setAttribute("spry:content", " of {commentsPagination::pageCount}"); // if so, show the page numbering



			Spry.$$("#comment_content").setAttribute("spry:region", "fsComments"); // setup the comments region



			Spry.$$("#commNotification").setAttribute("spry:if", '{fsComments::ds_UnfilteredRowCount} == 0');// show notification if no comments are available

			Spry.$$(".namedAncor").setAttribute("name", '{fsComments::postId}');// setup the anchor



			Spry.$$(".comment").setAttribute("spry:repeat", "fsComments"); // repeat the spry children



			//Spry.$$(".comment:nth-last-child(0) .info:nth-last-child(0)").addClassName("lastInfo");



			Spry.$$(".body").setAttribute("spry:content", '{fsComments::body}'); // attach the body of the comments



			Spry.$$(".comm-user").setAttribute("alt", '{fsComments::userName}'); // ste the user alt tag

			Spry.$$(".avatar").setAttribute("title", '{fsComments::userName}'); // set the title of the user link

			Spry.$$(".userName").setAttribute("spry:content", '{fsComments::userName}'); // attatch the user name

			Spry.$$(".userName").setAttribute("title", '{fsComments::userName}'); // set the title

			Spry.$$(".date").setAttribute("spry:content", '{fsComments::postDate}'); // attach the post date of the comment

			//Spry.$$(".time").setAttribute("spry:content", '{fsComments::postDate}'); // attach the post date of the comment

			Spry.$$(".avatar").setAttribute("href", 'http://community.foxsports.com/{fsComments::userName}');// setup the users profile link

			Spry.$$(".userName").setAttribute("href", 'http://community.foxsports.com/{fsComments::userName}');// setup the users profile link

			Spry.$$(".report-abuse").setAttribute("onclick", 'FsApps.reportComments("{commentsMain::topicID}", "{fsComments::postId}")'); // setup the report abuse link



			Spry.Data.initRegions(); // initialize the the regions

			FsApps.pageComments('', 1); // kick off the comments

			//window.console.log("FsApps.pageComments");

		});



			commentsPagination.addObserver({ onPostLoad: function() { // launch this when the data is confirmed loaded

				//window.console.log("pagination.addObserver");

				totalPages = commentsPagination.getCurrentRow()['pageCount'];

				if (fsCommentsTotalLink) { // check to see if there's a comment bubble

					fsCommentsTotalLink.innerHTML = commentsPagination.getCurrentRow()['itemsCount']; // + " comments &raquo;"; // update the comments bubble

				}

			}

			});



		// Comments Thumbnail Replacement //

		Spry.Data.Region.addObserver("comment_content", { onPostUpdate: function() { // set observer for when the thumbnail achors get loaded

			//window.console.warn("addObserver");

			var rows = fsComments.getData(); // get the thumbnails

			var currentRow = fsComments.getCurrentRow();



			for (var i = 0, rLen=rows.length; i < rLen; i++) { // loop through the thumbnails

				var row = rows[i]; // get the rows

				var rid = row.ds_RowID; // get the individual rowId

				var o = document.getElementById("fs-user_" + rid); // get the first thumbnail in the set



				if (o) // checks to see if the thumbnail image actually exists in the markup

					o.src = row.avatarURLSmall; // if so, then set the image source



				if (i == rows.length - 1) {

					var info = document.getElementById("info_" + rid); // get the info div

					info.style.border = "none";

					info.setAttribute("style", "border:none;");

				}

			}

		}});

	}catch(e){/*alert('comments error: '+e.message)*/}

}



var slide_effect;



FsApps.addComments = function() {    // Add Comments Expander

	//window.console.warn("addComments");

	if(typeof(slide_effect) == "undefined"){

		slide_effect = new Spry.Effect.Slide("add_comments", {duration:500, from:"0%", to:"100%", toggle:true}); // do the spry slide out effect

	}

	slide_effect.start();



}



FsApps.showHidePagination = function(els, index, class1, class2, show){

	//window.console.warn("showHidePagination");

   for(var n=index, elsLen=els.length;n < elsLen;n++){

	  if((els[n].className).indexOf(class1) != -1 || (els[n].className).indexOf(class2) != -1){

		if(show){

			if((els[n].className).indexOf("hide") != -1){

				els[n].className = (els[n].className).split(" ")[0];

			}

		}else{

			if((els[n].className).indexOf("hide") == -1){

				els[n].className = els[n].className+" hide";

			}

		}

	  }



	}

}



FsApps.pageComments = function(me, showPage, refID) { // Page through comments

	//window.console.warn("pageComments");

	/* It's probably better to move this to the back-end*/

	if (fsCFKey == 'StoryComments') {

		fsCFKey = 'story';

	} else if (fsCFKey == 'photoComments') {

		fsCFKey = 'photo';

	} else if (fsCFKey == 'PlayerComments') {

		fsCFKey = 'player';

	}



	if(refID){ // override key if one is passed in.

		fsCTKey = refID;

	}





    /*  if (user.USER_ID == "0" || user.USER_ID == "") { // check for user id (check to see if they are logged in)

        commentsMain.setURL(fsXMLComments + '?commentsContentId=' + fsCTKey + '&forumKey=' + fsCFKey + '&page_no=' + showPage); // get cached url

    } else {

        commentsMain.setURL(fsXMLComments + '?commentsContentId=' + fsCTKey + '&forumKey=' + fsCFKey + '&page_no=' + showPage + '&ran=' + Math.round((Math.random() * 10000) + 1)); // break cache

    } */



	//commentsMain.setURL(fsXMLComments);

	commentsMain.setURL("/widgets/comments/partners/go/integration/services?service=ugcDiscussion&action=getComments&ecType=" + fsCFKey + "&ecXrefID=" + fsCTKey + "&pg=" + showPage + "&transform=FoxComments" + "&no_redir=1&num=10" + "&disable_pending_redirect=1"); // get cached url

	//window.console.log("get comments XML");

    commentsMain.loadData(); // load in the new comments

    //window.console.log("load in the new comments")



    commentsMain.addObserver({ onPostLoad: function() { // launch this when the data is confirmed loaded

        commentsMain.removeObserver(this); // remove this observer



        var sigh = commentsMain.getDocument(); // get the original DOM XML document

        commentsPagination.setDataFromDoc(sigh); // load the data.

        

        	if (!commentsPagination.getCurrentRow()['currentPage']) { 

        		 // added by GVD as a test against a race condition

        		var currentPage = 1;

        	} else {

        		currentPage = commentsPagination.getCurrentRow()['currentPage'];

        	};



        var paginator = document.getElementById("paginator");

        var paginator1 = document.getElementById("paginator1");

        var paginatorLinks = paginator.getElementsByTagName("a");

        var paginator1Links = paginator1.getElementsByTagName("a");

        var paginatorSpans = paginator.getElementsByTagName("span");

        var paginator1Spans = paginator1.getElementsByTagName("span");



      //prev link

        //if(showPage == 1){

        if(parseInt(currentPage) == 1){

    		//hide the 'prev' link

    		Spry.$$(".prev_label").addClassName("hide");

    		Spry.$$(".comment_link_prev").addClassName("hide");

    		//show the 'prev' span

    		Spry.$$(".prev_label_disabled").removeClassName("hide");

    		Spry.$$(".comment_link_prev_disabled").removeClassName("hide");

    		if(document.all){

    			FsApps.showHidePagination(paginatorLinks, 0, "prev_label", "comment_link_prev", false);

    			FsApps.showHidePagination(paginator1Links, 0, "prev_label", "comment_link_prev", false);



    			FsApps.showHidePagination(paginatorSpans, 3, "prev_label_disabled", "comment_link_prev_disabled", true);

    			FsApps.showHidePagination(paginator1Spans, 3, "prev_label_disabled", "comment_link_prev_disabled", true);

    		}

    	}else{

    		//show the 'prev' link

    		Spry.$$(".prev_label").removeClassName("hide");

    		Spry.$$(".comment_link_prev").removeClassName("hide");

    		//hide the 'prev' span

    		Spry.$$(".prev_label_disabled").addClassName("hide");

    		Spry.$$(".comment_link_prev_disabled").addClassName("hide");

    		if(document.all){

    			FsApps.showHidePagination(paginatorLinks, 0, "prev_label", "comment_link_prev", true);

    			FsApps.showHidePagination(paginator1Links, 0, "prev_label", "comment_link_prev", true);



    			FsApps.showHidePagination(paginatorSpans, 3, "prev_label_disabled", "comment_link_prev_disabled", false);

    			FsApps.showHidePagination(paginator1Spans, 3, "prev_label_disabled", "comment_link_prev_disabled", false);

    		}



    	}



        //next link

        if(parseInt(currentPage) < parseInt(totalPages)){



        	//show the link

    		Spry.$$(".next_label").removeClassName("hide");

    		Spry.$$(".comment_link_next").removeClassName("hide");



    		//hide the span

    		Spry.$$(".next_label_disabled").addClassName("hide");

    		Spry.$$(".comment_link_next_disabled").addClassName("hide");

    		if(document.all){

    			FsApps.showHidePagination(paginatorLinks, 0, "next_label", "comment_link_next", true);

    			FsApps.showHidePagination(paginator1Links, 0, "next_label", "comment_link_next", true);



    			FsApps.showHidePagination(paginatorSpans, 3, "next_label_disabled", "comment_link_next_disabled", false);

    			FsApps.showHidePagination(paginator1Spans, 3, "next_label_disabled", "comment_link_next_disabled", false);

    		}



        }else{

        	//hide the link

    		Spry.$$(".next_label").addClassName("hide");

    		Spry.$$(".comment_link_next").addClassName("hide");



    		//show the span

    		Spry.$$(".next_label_disabled").removeClassName("hide");

    		Spry.$$(".comment_link_next_disabled").removeClassName("hide");

    		if(document.all){

    			FsApps.showHidePagination(paginatorLinks, 0, "next_label", "comment_link_next", false);

    			FsApps.showHidePagination(paginator1Links, 0, "next_label", "comment_link_next", false);



    			FsApps.showHidePagination(paginatorSpans, 3, "next_label_disabled", "comment_link_next_disabled", true);

    			FsApps.showHidePagination(paginator1Spans, 3, "next_label_disabled", "comment_link_next_disabled", true);

    		}

        }

     }

    });

}



FsApps.postComments = function() { // Post a comment

	//window.console.warn("postComments");

	var commDiv = document.getElementById("add_comments");

	var textarea = commDiv.getElementsByTagName("textarea")[0];

    var newComment = escape(textarea.value); // get the comments



    var userId = user.USER_ID; // get the users ID

    //window.console.log(userId);

    FsApps.analytics(this, {type: 'link', description: "Comments - Post Comment&slide_num="+commentsPagination.getCurrentRow()['currentPage']+" of "+commentsPagination.getCurrentRow()['pageCount']});

    var req = Spry.Utils.loadURL("POST", "/widget/addComments", true, FsApps.runComments, {postData:"userId=" + userId + "&forumKey=" + fsCFKey + "&topicKey=" + fsCTKey + "&comment=" + newComment + "&url=" + escape(window.location.href), headers: { "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8" } }); // send the comments (loadComments) is going to run when we get a response back

}



FsApps.reportComments = function(tid, pid) { // Report a comment

	//window.console.warn("reportComments");

    //var url = "http://community.foxsports.com/boards/report.aspx?topic_id=" + tid.toString() + "&post_id=" + pid.toString();

    //var reportIt = window.open(url, 'popwin', "width=500, height = 400 ,menubar=no,status=no,location=no,toolbar=no,scrollbars=no");

    var url = "/widget/contentCheck/userInput?topic_id=" + tid.toString() + "&post_id=" + pid.toString();

    var reportIt = window.open(url, 'popwin', "width=680, height=582 ,menubar=no,status=no,location=no,toolbar=no,scrollbars=no,resizable=no");

    reportIt.focus();

}



FsApps.runComments = function(req) {    // Reload comments AFTER a new one has posted

	//window.console.warn("runComments");

    if (req) { 

    //  check if this is a response call

        var text = req.xhRequest.responseText; // get the response text

    		//window.console.log("Got the response text.");

    		//window.console.log("This is the text value = " + eval(text));

        if (text) { 

        // if there is a text object

        	var commDiv = document.getElementById("add_comments");

        	commDiv.getElementsByTagName("textarea")[0].value = '';	// clear the value of the comment field

        	slide_effect.start();

        	//Spry.Effect.DoSlide("add_comments", {duration:300, from:"100%", to:"0%", toggle:true, finish: function() {

        	var freshData = Spry.Utils.stringToXMLDoc(text); // turn the results into XML DOM

            commentsMain.setDataFromDoc(freshData); // load the data.

            //window.console.warn("end of run comments");

            //}); // to close up the comments

        //}  

    } 

    }

}

    

    

/* END: [Comments] */



/* BEGIN: [Global MSN search scripts]

 **

 */

FsApps.launchSiteSearch = function() {

	try{

		Msn.SiteSearch.bindMSN("#search", {// Site Search for BING

			searchParam: "sp_q",

			searchUrl: "http://msn.foxsports.com/fssearch",

			siteSearchOn: "true",

			helpertext: "SEARCH FOX SPORTS",

			onepxgif: "http://blstc.msn.com/br/gbl/css/10/decoration/t.gif"

		});

	} catch(e){/*ignore*/}

}



FsApps.submitSearch = function(){ // For Dropdown Selected Search

		var items = document.getElementById("ntwscopes").childNodes;

		if(items[0].className == "selected") document.getElementById("search").action = items[0].childNodes[0].href;

		else document.getElementById("search").action = items[1].childNodes[0].href;

	}

/* END: [Global MSN search scripts] */



//Launch div overlay in an iframe

FsApps.alertPopUp = function(me, options){

	var options = options || {}; // options setup

	var frame = options.frame || false; // check for iframe

	var height = options.height || 300; // set the height

	var width = options.width || 500; // set the width

	var top = options.top || 300; // set the top

	var left = options.left || 350; // set the left

	var frameId = options.fId || "fs-alert-frame";  // set the id

	var frameName = options.fName || frameId; // set the name

	var frameBorder = options.fBorder || "no"; // set the border (iframe only)

	var exit = options.exit || false; // exit call

	var params = options.params || ''; // any params to be passed (culd be passed in the src url as well)

    var wResizable = options.resizable || "yes"; // Whether or not the window is resizable. Default is "yes".

    var wScrollbars = options.scrollbars || "no"; // Whether or not to display scroll bars. Default is "no".

	var url = options.url || "/account/regPopup?"; // default src url is "/account/regPopup?"



	if(efsuid){ // check for enceripted id

		url = url+params+"&efsuid="+encodeURIComponent(efsuid); // add params if any

	}else{

		url = url+params // add params if any

	}



	if(exit == true){ // IF it's an exit call

		try{

			window.parent.fs_iframe.style.display = "none"; // hide the open iframe

			//window.parent.takeOver(false); // turn the overlay off

			window.parent.FsApps.takeOver(false); // turn the overlay off

		}catch(e){

			window.close(); // close the popup

		}

		return; // exit the script

	}



	if(frame == true){ // IF this is an iframe call

		window.scroll(0,0);

			FsApps.takeOver(true); // turn the over lay on

			if(!fs_iframe){ // if the frame hasn't been created yet

				fs_iframe = document.createElement("iframe"); // create the iframe

				fs_iframe.frameborder = frameBorder; // set the border

				fs_iframe.name = frameName; // set the name

				fs_iframe.id = frameId; // set the id

				fs_iframe.src = url; // set the url

				fs_iframe.width = width;



			}else{ // if the frame HAS been created

				fs_iframe.src = url; // reset the url

				fs_iframe.style.display = "block"; // display it on the screen

			}



			var regPageBody = document.getElementById("fs-page-page-container"); // get a handle to the page container

				regPageBody.appendChild(fs_iframe);  // Add it to the web page



	}else{ // IF it's NOT an iframe call

		FsUtils.openNewWin(this, { // open the window\

			   url:url,  // set the url

			   height: height, // set the height

			   width: width, // set the width

			   top: top, // set the top

			   left: left, // set the left

			   resizable: wResizable, // set the resizeable window feature

			   scrollbars: wScrollbars // set the scrollbar window feature

		});

	}

}

/* END: [Global Open Window Script] */



/* BEGIN: [Add analytics for Flash] */

FsApps.flashAnalytics = function(info){ // info includes the sport(0) and description(1)

	var fh = document.getElementById('FS-header'); // spoofing an element.

	FsApps.analytics(fh, {type: 'link', description: '&link_ref='+info[0]+' - '+info[1].toLowerCase()+' - '+info[2]}); // call the analytics

}

/* END: [Add analytics for Flash] */





/* BEGIN: [Take over Div]

 ** Example on calling this function:

 ** FsApps.takeOver(true, {'zindex':'50', 'bgcolor':'#0000FF', 'opacity':'70'});

 ** Pass true to gray out screen, false to ungray...

 ** This will grab the table you set, cylce through it, set the even class (on) and set a rollover state for the table rows

 */

FsApps.takeOver = function(vis, options) {

    var options = options || {}; // options setup

    var zindex = options.zindex || 990;  // set the zidex... "should be enough to cover the page

    var opacity = options.opacity || 70; // set the default opacity

    var opaque = (opacity / 100); // set the default opacity... (for IE)

    var bgcolor = options.bgcolor || '#000000'; // set the default background color

    var toHide = options.hide || null; // get the elements to hide

    var takeOver = document.getElementById('fsTakeOver');  // get a handle to the takeover div

    var pageWidth = 1600, pageHeight = 1200;





    if (!takeOver) { // if the takeover div doesn't already exist, create another one

        var pageBody = document.getElementsByTagName("body")[0]; // get a handle to the page body

        takeOverDiv = document.createElement('div');  // create the take over div

        takeOverDiv.style.position = 'absolute'; // set the posotion of the div to absolute

        takeOverDiv.style.top = '0px';  // set the top position

        takeOverDiv.style.left = '0px'; // set the left position

        takeOverDiv.style.overflow = 'hidden'; // set the overflow (no scroll bars)

        takeOverDiv.style.display = 'none'; // set the inital display settings (start out hidden)

        takeOverDiv.id = 'fsTakeOver'; // set the DIVs Id

        pageBody.appendChild(takeOverDiv);  // Add it to the web page

        takeOver = document.getElementById('fsTakeOver');  // Get the object.

    }

    if (vis) { // check to see if a gray out should take place

        /* Calculate the page width and height */

        if (typeof( window.innerWidth ) == 'number') {

            //Non-IE

            //pageWidth = window.innerWidth+window.pageXOffset+"px";

            pageWidth = "100%";  // set the page width

            pageHeight = document.documentElement.scrollHeight + "px"; // set the page height

        } else if (document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight )) {

            //IE 6+ in 'standards compliant mode'

            pageWidth = document.documentElement.clientWidth + document.documentElement.scrollWidth + "px";

            pageHeight = document.documentElement.clientHeight + document.documentElement.scrollHeight + "px";



        } else if (document.body && ( document.body.clientWidth || document.body.clientHeight )) {

            //IE 4 compatible

            pageWidth = document.body.clientWidth + document.body.scrollLeft + "px";

            pageHeight = document.body.clientHeight + document.body.scrollTop + "px";

        }



        /* Set the shader to cover the entire page and make it visible. */

        takeOver.style.opacity = opaque;  // set the opacity of the take over div

        takeOver.style.MozOpacity = opaque;  // set the mozilla opacity

        takeOver.style.filter = 'alpha(opacity=' + opacity + ')';  // set the IE filter opacity

        takeOver.style.zIndex = zindex; // set the zIndex

        takeOver.style.backgroundColor = bgcolor;  // set the background color

        takeOver.style.width = pageWidth; // set the width of the div

        takeOver.style.height = pageHeight; // set the height of the div

        takeOver.style.display = 'block';  // show the take over div

        resizeTimer = setTimeout(FsApps.resizeHandler, 10); // set a controller for the resizer

    } else { // if the gray out should be turned off

        takeOver.style.display = 'none';  // hide the take over div

    }

}



/*

 ** Function: FsApps.resizeHandler

 ** checks for window resize

 ** checks if 'takeOverOn' flag is true

 ** displays the overlay

 */

var resizeTimer;

FsApps.resizeHandler = function() { // handler

    var sTakeOver = document.getElementById('fsTakeOver');  // Get the object.

    if (sTakeOver) {

        if (sTakeOver.style.display == "block") {

            window.onresize = function() { // on resize

                if (takeOverOn == true) { // check to see if the takeover is turned on

                	FsApps.takeOver (true); // if so, reset it when the window is done being resized

                }

                window.onresize = function() {;};// set a new function inside of it

                clearTimeout(resizeTimer); // clear the controller when it's done

                resizeTimer = setTimeout(FsApps.resizeHandler, 1); // reset the controller

            }

        }

    }

}

/* END: [Take over Div] */





/*  --- START EMAIL A FRIEND FUNCTIONS ---

FsApps.onSelectEmailField(obj) - Empty the text input if it receives focus while containing the default text

FsApps.onBlurEmailField(obj) - If a text field is deselected while empty, restore its default value

FsApps.emailOverlayVisible(bool) - Open or close the email overlay

*/

FsApps.onSelectEmailField = function(obj) { if(obj.value == obj.title) { obj.value = ''; } }

FsApps.onBlurEmailField = function(obj) { if(obj.value == '') { obj.value = obj.title; } }

FsApps.emailOverlayVisible = function(bool) {

	document.body.appendChild(document.getElementById('fs-email-embed-container'));

	document.getElementById('fs-email-embed-container').style.display = (bool) ? "block" : "none";

	if(!bool) { document.getElementById('fs-email-embed-feedback-container').style.display = "none"; }

}

FsApps.onEmailAFriend = function(me) {

/* Submit the data via AJAX call */

	var emailAjaxCall = null;

	var emailAjaxPath = "/emailLink";

    var formValues = "";



	for(var i = 0, mLen=me.childNodes.length; i < mLen; i++){

  if(me.childNodes[i].name != undefined && me.childNodes[i].value != undefined) {

    if(formValues == "") {

      formValues = me.childNodes[i].name + "=" + me.childNodes[i].value;

    } else {

      formValues += "&" + me.childNodes[i].name + "=" + me.childNodes[i].value;

    }

  }

	}



	if(window.XMLHttpRequest){  // code for all new browsers

		emailAjaxCall = new XMLHttpRequest(); // create new xml request

	} else if(window.ActiveXObject) {  // code for IE5 and IE6

		emailAjaxCall = new ActiveXObject("Microsoft.XMLHTTP"); // create new xml request

	}



	if (emailAjaxCall != null) { // check ajax status

		emailAjaxCall.open("POST",emailAjaxPath,true);

		emailAjaxCall.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

        emailAjaxCall.setRequestHeader("Content-length", formValues.length);

        emailAjaxCall.setRequestHeader("Connection", "close");



		emailAjaxCall.onreadystatechange = function(){

			if(emailAjaxCall.readyState == 4 ){ // Make sure the document has been loaded(4 = "loaded")

				if (emailAjaxCall.status == 200){ // Make sure the contents are good (200 = "OK")

					if(emailAjaxCall.responseText == "OK") {

          //hide the email popover and display the success message if the response is "OK"

		  FsApps.emailOverlayVisible(false);

          document.body.appendChild(document.getElementById('fs-email-embed-feedback-container'));

          document.getElementById('fs-email-embed-feedback-container').style.display = "block";

        } else {

          //display the error message to the user

          alert(emailAjaxCall.responseText);

        }

				}

			}

		}

		emailAjaxCall.send(formValues); // initialize the ajax call

	} else {

		alert("Your browser does not support XMLHTTP."); // notify the user

	}

}



/* --- END EMAIL A FRIEND FUNCTIONS --- */


FsApps.launchRadio = function() {

	FsUtils.openNewWin('', {url: fsReqDomain + "/other/radio", name: "fs_radio_player", width: "310", height: "120", resizable: "no"});

}



FsApps.showSportsMenu = function(data) { // data from flash

    var data = data[0]; // grab the array from flash

    if (data == "ini") { // check for initial call

        var type = "ini"; // set the call type

    } else {

        var type = '';	// set it to null

    }

    FsApps.scoreStrip(type, {info: data }); // call the score strip

}



/*  DOCKING OF SCORE STRIP */

var topElems = '';

var scoreStripVerticalOffset;

FsApps.startSSDock = function(){

	var obj = document.getElementById('scoreStripHolder');



	var fsUrlCheck = FsUtils.urlParse({scriptFile: "partnerHeaders"}); // get the partnerheaders script call attrubutes if any



	if(FsUtils.getUrl("scoreStripLoc") != "bottom"){ // if this is NOT the radio page



		//Calculate the pixel offset between the top of the screen and the score strip

		if(typeof(scoreStripVerticalOffset) != "number") {

			scoreStripVerticalOffset = 0;

			do { scoreStripVerticalOffset += obj.offsetTop; } while (obj = obj.offsetParent);

		}



		if(navigator.userAgent.search("Firefox") == -1) {

			window.onscroll = FsApps.getIt; // start onscroll check for non-firefox browsers

		} else {

			window.onscroll = FsApps.getItFF; // start onscroll check for firefox

			scoreStripHolder.className += "ss-top"; // set the score strip holder to the top

			FsApps.getItFF(); // launch the FF flash fix

		}



	}else{

		document.getElementById("siteHeaders").className += " ssBottom"; // set the site headers class name

		if(document.getElementById("fs-page-bottom-bg")){ // check for page bottom thingy

			document.getElementById("fs-page-bottom-bg").className += " ssBottom"; // set it's class if needed

		}

		obj.className += "ss-bottom"; // set the holder tot he bottom

	}

}





FsApps.getIt = function(){

	var scrollPos = (document.all) ? document.documentElement.scrollTop : window.pageYOffset;

	if(topElems == '') {

		topElems = FsUtils.getComputedHeight("siteHeaders");

	}

	if(scrollPos >= scoreStripVerticalOffset) {

		if(scoreStripHolder.className != "ss-top"){

				scoreStripHolder.className = "ss-top";

		}

	} else {

		if(scoreStripHolder.className != ''){

			scoreStripHolder.className = "";

		}

	}

}



FsApps.getItFF = function(){

	var scrollPos = (document.all) ? document.documentElement.scrollTop : window.pageYOffset;

	if(topElems == '') {

		topElems = FsUtils.getComputedHeight("siteHeaders");

	}

	if(scrollPos >= scoreStripVerticalOffset) {

		scoreStripHolder.style.top = "0px";

	} else {

		scoreStripHolder.style.top = (scoreStripVerticalOffset - scrollPos) + 'px';

	}

}

/* END: [Global Scorestrip Functions Block] */



/* BEGIN: [Check for breaking news and alerts on page]

 ** Add class to header to accoutn for extra breaking news and alert header at top of page

 ** Example on calling this function:

 ** FsApps.fsFoxSportsBreakingNews();

 */



/*var fsGeneral = new Object; // general page information

// Add analytics data for General FOXSports object

try{

	var fsAnaSplit = FsApps.analyticsDescription.split("&"); // split out the attributes

	for(i=0; i<fsAnaSplit.length; i++){ // loop through them

		var fsGenDataSplit = fsAnaSplit[i].split("="); // split out the values

		var fsGenNewData ="fsGeneral."+fsGenDataSplit[0]+ "='" +fsGenDataSplit[1]+"'"; // create the object string

		eval(fsGenNewData); // add the new node to the object

	}

}catch(e){}*/

FsApps.fsFoxSportsBreakingNews = function(){

	try{

		/* check for breaking news and alerts */

		if(typeof(fsGeneral.breakingNews) != "undefined" && fsGeneral.breakingNews == true){ // make sure breaking news alerts is there

			var pageContainer = document.getElementById("fs-page-page-container"); // get a handle to the page container

				if(pageContainer){

					pageContainer.className = pageContainer.className+" FSalert"; // add the class "alert" to it.

				}

		}



		/* get/set user information */

		fsFoxSportsGeneralLoaded = 1; //set fsFoxSportsGeneralLoaded = 1 when fsFoxSportsGeneral has run.

		FsRef.fsUserInfo();	



	}catch(e){/*ignore*/}

}

/* END: [Check for breaking news and alerts on page] */

/*BEGIN: 
 * This one reloads the FsApps.loadAds for the partner headers if the adRefreshRate is not undefined or false
 * (i.e: 30, 60, 90)
 * */
FsApps.callLoadAds = function(){

	FsApps.loadAds();

	FsApps.analytics(this, {type: 'keepAlive', description: 'Partner Header Ad Refresh', pageView: true});
	
	//if(!partnerHeaderPageLoad)launchMSNTracking();
	
	//adding the code below to launch UDC when Unica loads ads
	
	/*if (!partnerHeaderPageLoad) {
		FsApps.LoadFunctions.add({func:"launchMSNTracking()"})
	} else {
		FsApps.LoadFunctions.add({func:"launchMSNFSETracking"})   // the FE version for the partners...
	};*/

}


/* BEGIN: [Global Advertisement Launching]

 ** Example on calling this function:

 ** loadAds(); or fsLoadAds({adID: "45x60", solo: true});

 ** Using options, call what you want to change only.  Inside the function, defaults are set and explained.

 */

var fsLoadAdsHold = false; // if this is set to "true", then the fsLoadAds function will not complete it's initial run and wait for a second call.

FsApps.loadAds = function(options) {	

if(ads instanceof Array && ads.length > 0 && ads[0][0] == 'ad55852'){
 console.log(ads[0], 'ad55852');
 console.trace();
}
    try {
    	
    	//if(!partnerHeaderPageLoad) launchMSNTracking();

        var options = options || {}; // options setup.

        //this is an ad(s) added manually to the page

        //and being called separately from the CMS ads
        is900 = ads.toString().search("900x250"); // check to see if there's a 900x250 ad scripted

        is980 = ads.toString().search("980x50"); // check to see if there's a 980x50 ad scripted.

        is600 = ads.toString().search("300x600"); // check to see if there's a 300x600 ad scripted.
        
        isRegular3 = ads.toString().search('regular3') > -1; // for headercap ads. dont load regular ads when headercap is available
        var headerCapAd = document.getElementById("headerCapAdBox"); // to check if its available in the page

        isStalker = ads.toString().search("Stalker"); // check to see if there's a 300x600 ad scripted.
        
        var stalkerAdId; //get stalker ad id;
        
        //remove 728,980 regular from ads array if its theres regular3
        if(isRegular3)
        {
	        for(var hca = 0;hca < ads.length; hca++)
	        {
	        	var rAd = ads[hca],rSize = rAd[1],rAdType = rAd[4];
	            if(rSize.toString().search('728x90') > -1 || rSize.toString().search('980x50') > -1) // check if its 728 or 980
	            {
	            	if(rAdType == 'regular') //check if its regular
	            	{
	            		ads.splice(hca,1);//remove it from ads array
	            	}
	            }
	        }
        }
        

        if (fsLoadAdsHold != true) {   //	if a hold hasn't been placed on the launching of advertisements



            //these are the ad modules added into a CMS page.

            //the ads information is populated in an array that is being called on page load

            if (ads && ads != null && ads.length > 0) { // if ads exist...



				var ad300s = document.getElementsByClassName("ad300x250box"); // get all 300 ads on the page



                for (var j = 0, adsLen=ads.length; j < adsLen; j++) { // loop through the ads

                    var ad = ads[j];

                    var id = ad[0];// get the id of each ad div

                    var size = ad[1].split("x");// get the size of each ad                    	

                    var dapCall = ad[2] + ad[3];  //"&PG=SPTFB1&AP=1390"

                    var adType = ad[4]; //"regular"



				   	if(ad[1] == "300x250"){  //Check for multiple 300x250 ads



						if(document.getElementById(ad[0])){ // check to  see if the ad ID already exists on the page

							var ad300x250div = document.getElementById(ad[0]);

						}else if(document.getElementById("ad300x250box")){ // **LEGACY** if the ad ID is in the old format

							var ad300x250div = document.getElementById("ad300x250box"); // set the handle to the div

								ad300x250div.id = ad[0];  // set the div ID to the advertisement ID



						}else if (ad300s.length > 0) { //if div with class ad300x250 exists

							if(adType == "overture"){

								for(var o=0, ad3Len=ad300s.length; o<ad3Len; o++){

									if(ad300s[o].className.search(" overture") != -1){

										var ad300x250div = ad300s[o]; // set the handle to the div

										ad300x250div.id = ad[0];  // set the div ID to the advertisement ID

									}

								}

							}else{

								for(var o=0, ad3Len=ad300s.length; o<ad3Len; o++){

									if(ad300s[o].className.search(" overture") == -1){

										var ad300x250div = ad300s[o]; // set the handle to the div

										ad300x250div.id = ad[0];  // set the div ID to the advertisement ID

									}

								}

							}

						}



                    }

				   	if(adType == 'regular3' && ad[1] == "980x50") // replace the id to the headercap div if its regular3
				   	{
				   		id = "headerCapAd";
				   	}
				   	
				   	if(adType == 'regular3' && ad[1] == "728x90") // replace the id to the headercap div if its regular3
				   	{
				   		id = "headerCapAd";
				   	}

                    var el = document.getElementById(id);



                    if (el && el != null) {



					   if(el.className.search("ad300x250") == -1){

						   el.className += ' ad' + ad[1] + 'box';

					   }



					   dapMgr.enableACB(id, false); /* enable advertisement */



					   /* 980 vs. 900 vs. 728 */
					   
					   if (ad[1] == "900x250") { /* check for ad rendering for 900x250 banner ad */
						   
						   if(isRegular3 && adType == 'regular3') /* if it has regular3 dont show regular 1*/
						   {
							  
							   if(headerCapAd){
								   dapMgr.renderAd(id, dapCall, size[0], size[1], '1');
								   headerCapAd.className = headerCapAd.className + " show"; /* activate headercap ad */
							   }
						   }
						   else
						   {
                            dapMgr.renderAd(id, dapCall, size[0], size[1], '1'); /* render advertisement */
						   }
					   }else{
						   /*if we have 900x250 on the list of ads */
					     if(is900 != -1 && (ad[1] == "980x50" || ad[1] == "728x90")){
						   /* don't load the 980x50 or 728x90 */
							el.style.display="none"; /* set style to display none;*/
					     }else{/*we don't have 900x250 on the list of ads*/
                      
					       if (ad[1] == "980x50") { /* check for ad rendering for 980x50 banner ad */
						  
							   if(isRegular3 && adType == 'regular3') /* if it has regular3 dont show regular 1 */
							   {
								  
								   if(headerCapAd){
									   dapMgr.renderAd(id, dapCall, size[0], size[1], '1');
									   headerCapAd.className = headerCapAd.className + " show"; /* activate headercap ad */
								   }
							   }
							   else
							   {
	                            dapMgr.renderAd(id, dapCall, size[0], size[1], '1'); /* render advertisement */
							   }
						   
                            } else {

							   if((is980 != -1) && ad[1] == "728x90"){ /* if there's a 980, don't show the 728. */

								/* don't load the 728 */

								el.style.display="none"; /* set style to display none;*/

							}else{

								if(isRegular3 && adType == 'regular3')
								   {
									  
									 if(headerCapAd){
										   dapMgr.renderAd(id, dapCall, size[0], size[1], '1');
										   headerCapAd.className = headerCapAd.className + " show";
									 }
								   }
								   else
								   {
									   dapMgr.renderAd(id, dapCall, size[0], size[1]); /* render advertisement */
								   }

							}

                          }
					    }
					   }

						/* 300x600 vs. 300x250 */

						if (is600 != -1){ //if there's a 300x600, don't show 300x250

							if(ad[1] == "300x600" && adType == "Stalker"){ //set jQuery div updating for 300x600 adf

								stalkerAdId = id;

								dapMgr.renderAd(id, dapCall, size[0], size[1]); // render advertisement

							}else if (ad[1] == "300x250" && adType == "regular"){

								// don't display the first 300x250 ad.

								el.style.display="none"; // set style to display none;

							}

						}



                    } else {

						if (ad[1] == "300x250_pginterstitial") {

							size = ad[1].split("_")[0].split("x");

                            dapMgr.enableACB('ad' + ad[1], false); // enable advertisement

                            dapMgr.renderAd('ad' + ad[1], dapCall, size[0], size[1]); // render advertisement

                       	}



					    if (ad[1] == "120x30_sportsbar") {

					    	    size = ad[1].split("_")[0].split("x");

	                            dapMgr.enableACB('ad' + ad[1], false); // enable advertisement

	                            dapMgr.renderAd('ad' + ad[1], dapCall, size[0], size[1]); // render advertisement							

	                    } else { // where the adbox is the ID

	                        

                         if (ad[1] == "120x30"){

                          if(sponsor == true){

                            dapMgr.enableACB('ad' + ad[1] + 'box', false); // enable advertisement

                            dapMgr.renderAd('ad' + ad[1] + 'box', dapCall, size[0], size[1]); // render advertisement

                          }

                         }else{

                        	dapMgr.enableACB('ad' + ad[1] + 'box', false); // enable advertisement

                            dapMgr.renderAd('ad' + ad[1] + 'box', dapCall, size[0], size[1]); // render advertisement

                         }

	                    }



                        if (ad[1] == "120x30" && sponsor == true) {

                            var sponsorLabel = document.getElementById("sponsor-label"); // get a handle to the label

                            

                            /*Richard: adding headercap adjustments*/

                            var headerCapTitle = document.getElementById("headerCapCopy");

                            if (headerCapTitle != null)//check if headercap is available

                            {

                            	headerCapTitle.className = headerCapTitle.className + " showAdBox"; // assign class to apply padding

                            }

                            

                            if(sponsorLabel != null){ //added by amanjure as 120x30 gets a diff treatment on Fox Soccer

                            	sponsorLabel.innerHTML = "Presented By: ";

                            }

                        }

                    }

                }

                if (is600 != -1 && isStalker != -1){



                	var stalkerAdDiv = document.getElementById(stalkerAdId);

                	if(typeof(fsGeneral.breakingNews) != "undefined" && fsGeneral.breakingNews == true){ // make sure breaking news alerts is there

                		var startScroll = 475;

                	}else{

                		var startScroll = 445;

                	}

                	var adBottom = $(".fs-article").height();

					var stopScroll = adBottom+startScroll;

					var scrollLocation;



					var pageArticleHeight = $(".fs-article").css("height");

					//alert("Hello World.");

					$(".mostPopular").css("position", "relative");

					$(".mostPopular").css("top", pageArticleHeight/2);



					$(window).unbind('scroll').bind('scroll', function() {

						scrollLocation = $(document).scrollTop();



						if(navigator.userAgent.search("Firefox") == -1) {

							offset = (scrollLocation - startScroll + 5);

						}else{

							offset = (scrollLocation - startScroll - 10);

						}

						offset += "px";

					// begin GVD stalker code mods...

						if (scrollLocation < startScroll){

							$(stalkerAdDiv).css("margin-top","0px");

						}else if((scrollLocation > startScroll) && (scrollLocation < stopScroll)){

							$(stalkerAdDiv).css("margin-top", offset);

						}else if (scrollLocation >= stopScroll){

							$(stalkerAdDiv).css("margin-top", stopScroll-600);

						}

					});

					// end GVD stalker code modifications for stalker ad

                }

				var headerAd = document.getElementById("ad120x30box"); // get a handle to the ad in the header

				if(typeof(headerAd) != "undefined" && headerAd !=null && headerAd.innerHTML == "" && typeof(fpasSiteId) == "undefined"){ // check to see if an ad has been placed.

					FsUtils.launchMyFlash({contUrl: fsReqDomain + '/fe/flash/fs-header_clock.swf', locId: 'ad120x30box', width:116, height:24}); // launch clock

				}

            }

        } else {

            fsLoadAdsHold = false; // remove the hold for this function... open for second call

        }

        // refresh the ads based on the refresh rate from the partner headers



        if(adRefreshRate != undefined && adRefreshRate != null && adRefreshRate.toString() != 'false'){ // check if add refresh is requested

        	FsRef.adInterval = setInterval(FsApps.callLoadAds, (parseInt(adRefreshRate) * 1000)); // set the interval for refreshing of all ads

        	//fsAnalytics(this, {type: 'keepAlive', description: 'Refreshing Ads'});

        	adRefreshRate = null; // clear the refresh rate so the interval loads only once

        }

    } catch(e) {window.console.log("loadAds Error: "+e.message)}

}


/* END: [Global  Advertisement Launching] */


/*
 	The following code launches HTML 5 video similar to launch my flash.  Different browsers support different versioins, mp4 & oog are recommended. 
 	Error handling and default handling for flash will be added for older IE8 and 7 browsers as well as progression tracking. Old listener support
 
  	var options = {
    "mp4":  "http://gtlive.foxsports.com.edgesuite.net/ufc/UFC%20Heavyweight%20Champ%20Nov%2012%20-%2030%20for%20_1300.mp4", // url path to video 
	"ogg": "pregame.ogv", // FF
	"className":"video" ,  
    "id": "int-vid", //id for div or object that the video will load in
    "width": "730px",
	"poster": "",  // pre play image
    "container": "interstitial-content",
    "controls": "controls",
	"className": "video", 
	"autoplay": true,
    "loop": "", 
	"logDiv": "statusMessage",
    "onVideoLoaded": function () {}, // functions launched on listeners. 
    "onVideoEnded": function () {}
};

    // To initiate
    var myVideo1 = new FsAPPS.LaunchVideo(options);
	myVideo1.init();
	myVideo1.play(); 
	
 */

FsApps.LaunchVideo = function (options) {
    var mThis = this;
	var doc = document; 
    if (options.container && doc.getElementById(options.container)) {
		mThis.container = doc.getElementById(options.container).innerHTML = "";
	}
	
	mThis.logMessages = function (message) {	
		// var logDiv = doc.getElementById ( options.logDiv ); 
		 window.console.log (message);
		//if ( logDiv ) {	 logDiv.innerHTML = logDiv.innerHTML + message + '<br />'; }
	} 
	
	mThis.play = function () {		
		if (options.autoplay) {
			mThis.video.play();
		}
	}
	
    mThis.remove = function () {
        mThis.video = "";
        mThis.container.innerHTML = ""; 
		mThis.logMessages ("FsUtils.Video: Removing Video");
    }
	
	mThis.browserDetect = function () {
		var video  = mThis.video;
	  	var playerType; 	
		
			if (video.canPlayType('video/mp4').match('probably|maybe')) {
				playerType = 'mp4'; 
			
			} else if  (video.canPlayType('video/ogg') .match('probably|maybe')) {
				playerType = 'ogg'; 	
			} 
				

		return playerType; 
	
	}
	
    mThis.init = function () {
        try {
            options = options || {};
            mThis.logMessages ("Initializing video");

            var video = doc.createElement('video');
			
			mThis.video = video;
			
			if (options.onVideoError) {
				video.addEventListener('error', options.onVideoError, false);
			} else {
					
				var defaultError = function (e) {
					window.console.log("FsUtils.Video: error");
					var video = e.target;
					var errorMessage = "";
					
					switch(video.error.code)
					{
						case video.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
						  errorMessage =  'FsUtils.Video: Media not supported.'; 
						  break;
						case video.NETWORK_NO_SOURCE:
						  errorMessage =  'FsUtils.Video: No media source.'; 
						  break;
						default:
						  errorMessage =  'FsUtils.Video: Generic error on video object.'; 
					}
					mThis.logMessages(errorMessage);	
				}   
				//mThis.logMessages(); 
				
				video.addEventListener('error', defaultError, false);    
			}
			 
			if (mThis.browserDetect() == 'mp4') { 
				video.setAttribute('src', options.mp4);
				mThis.logMessages ("FsUtils.Video: Running browser check: MP4");
			}
			else if (mThis.browserDetect() == 'ogg'){
				video.setAttribute('src', options.ogg);
				mThis.logMessages ("FsUtils.Video: Video Type: OGG");
			}
			
            if (options.controls) {
				video.setAttribute('controls', options.controls);
			}
			if (options.className) {
			 	video.className = options.className; 
			}
            if (options.loop) {
				video.setAttribute('loop', options.loop);
			}
			
			if (options.poster) {
				video.setAttribute('poster', options.poster);
			}
			
            if (options.width) {
				video.setAttribute('width', options.width);
			}
			
			if (options.height) {
				video.setAttribute('height', options.height);
			}
			
            if (options.id) {
				video.setAttribute('id', 'int-vid');
			}
			
		
            if (options.container && document.getElementById(options.container)) {
                doc.getElementById(options.container).innerHTML = "";
                doc.getElementById(options.container).appendChild(video);
            }
			
			// add support for old school listener
			
            if (options.onVideoLoaded) {
				video.addEventListener('loadeddata', options.onVideoLoaded, false);
			}
			
			
            if (options.onVideoEnded) {
				video.addEventListener('ended', options.onVideoEnded, false);
			}	
							
           
        } catch (e) {
			 mThis.logMessages ("FsUtils.Video: Error, likely in config properties. " + e.message);	
		}
    }
}


/* End Video Launch */ 

/* BEGIN: [load external scripts]

 ** Example on calling this function:

 ** FsApps.loadScriptFile({url:"/script/my.js",callback:"myInit"});
 
 ** required params = url
 ** optional params = callback,async,defer,lazyLoad
 
 */

var scriptTag = document.getElementsByTagName('script')[0]; // get current script tag

FsApps.loadScriptFile = function(options){

	var doc = window.document;
	
	var url = options.url || '',
		callback = (options.callback) ? options.callback : false,
		async = options.async || false,
		defer = options.defer || false,
		lazyLoad = options.lazyLoad || false; 
    
    var script = doc.createElement('script');
	    script.src = url;
	    script.type = 'text/javascript';
	    script.async = async; // set if you want to be async
	    script.defer = defer; // set if you want to defer
	    //set onload callback
	    script.onload = script.onreadystatechange = function() {
			var rs = this.readyState;
			if (rs && rs != 'complete' && rs != 'loaded') return;
			//call the set call back
			try {
				//if type is function
				if(callback && typeof(callback) == "function")
				{
					(!lazyLoad) ? callback() : FsApps.LoadFunctions.add({func:callback+'()'});  //condition if its on lazy load or not
				}
				else
				{
					(!lazyLoad) ? eval(callback) : FsApps.LoadFunctions.add({func:callback+'()'});
				}
				
			} catch (e) {}
		};
	
	scriptTag.parentNode.insertBefore(script, scriptTag);
}

/* END: [load external scripts] */



function fsRunNotifier(a){if(fsNotifier.alreadyRun!=true){if(fsNotifier.widget.findMe({getAll:true})!=false){fsNotifier.widget.setBindings();fsNotifier.widget.bindSet=true;fsNotifier.widgetPolling(false,"");}fsNotifier.alreadyRun=true;}}var fsNotifier={};fsNotifier.alreadyRun=false;fsNotifier.url="/livedata";
fsNotifier.createRequest=function(){var c=null;try{c=new XMLHttpRequest();}catch(b){try{c=new ActiveXObject("Microsoft.XMLHTTP");}catch(a){c=null;}}if(c==null){alert("Error creating request object!");}else{return c;}};fsNotifier.sendRequest=function(e,g,l,d){if(g["updateOnly"]!=true||l==true){var a=g.url+"?fID="+g.feedID+"&fType="+g.name+"&version="+g.version+"&"+g.params;
var j=document.location;fsReqDomain=(!fsReqDomain)?j:fsReqDomain;if(j==fsReqDomain){e.open(g["method"],a,true);e.onreadystatechange=function(){fsNotifier.jsResponse(e,g,l,d);};e.send(null);}else{fsNotifier.jsResponse.request=e;fsNotifier.jsResponse.widget=g;fsNotifier.jsResponse.singleRequest=l;fsNotifier.jsResponse.respCallBack=d;
var b=document.createElement("script");b.setAttribute("type","text/javascript");b.setAttribute("language","JavaScript");b.setAttribute("src",fsReqDomain+a);var k=document.getElementsByTagName("head")[0];var c=k.getElementsByTagName("script");for(var f=0,h=c.length;f<h;f++){if(c[f].src=a){k.removeChild(c[f]);
k.appendChild(b);break;}}}}else{g["updateOnly"]=false;g.getConnected=setTimeout(function(){fsNotifier.sendRequest(g.connectionRequest,g);},g.connectionDuration);}};fsNotifier.jsResponse=function(a,d,e,c,b){if(b){fsNotifier.responseHandler(a,d,e,c,b);}else{if(a.readyState==4&&a.status==200){fsNotifier.responseHandler(a,d,e,c);
}else{if(d["connectionDuration"]){clearTimeout(d.getConnected);d.getConnected=setTimeout(function(){fsNotifier.sendRequest(d.connectionRequest,d);},d.connectionDuration);}}}};fsNotifier.responseHandler=function(request,widget,singleRequest,respCallBack,response){if(!response){var response=request.responseText;
}var response=response.replace(new RegExp("\n","g"),"").replace(new RegExp("\r","g"),"").split("~||~");var widgetResponseData=[];widgetResponseData=response;var cleanWidgetData=[];if(widget["bypassNotifier"]!=true){if(widgetResponseData!=""){var notifierResponse=eval("("+response[0]+")");for(var x in notifierResponse){if(notifierResponse[x].replace(/^\s+|\s+$/g,"")!=""){widget["notifierResponse"].push(notifierResponse[x]);
}}if(typeof(notifierResponse["comebackin"])!="undefined"&&notifierResponse["comebackin"]!=0){widget.getConnected=setTimeout(function(){fsNotifier.sendRequest(widget.connectionRequest,widget);},notifierResponse["comebackin"]);return;}}}else{cleanWidgetData=widgetResponseData;}if(widgetResponseData[1]){cleanWidgetData=[];
for(var i=0;i<widgetResponseData[1].length;i++){if(widgetResponseData[i]){if(widgetResponseData[i].replace(/^\s+|\s+$/g,"")!=""){var wrd="("+widgetResponseData[i]+")";wrd=eval(wrd);if(wrd["fType"]==widget.name){if(wrd["version"]!=widget.version){widget.version=wrd["version"];widget.url=widget.url.replace(/&version=\d+&/i,"&version="+widget.version+"&");
}}cleanWidgetData.push(widgetResponseData[i]);}}}}if(respCallBack){respCallBack(widget);}fsNotifier.sendCallBack(widget,cleanWidgetData);if(widget["connectionDuration"]&&singleRequest!=true){widget.getConnected=setTimeout(function(){fsNotifier.sendRequest(widget.connectionRequest,widget);},widget.connectionDuration);
}};fsNotifier.sendCallBack=function(widget,widgetResponseData){if(widget["isXML"]==true){try{eval(widgetResponseData[0]);}catch(e){}if(typeof(fsNData)!="undefined"){widget["data"]=fsNotifier.xmlParser(fsNData);}else{widget["data"]=fsNotifier.xmlParser(widgetResponseData);}}else{widget["data"]=widgetResponseData;
}if(widget["callback"]){if(typeof(widget["callback"])=="function"){widget["callback"](widget["data"],widget["name"]);}else{eval(widget["callback"]+"("+widget["data"]+", '"+widget["name"]+"')");}}if(widget["boundTo"]){for(var i=0;i<widget["boundTo"].length;i++){if(widget["boundTo"][i]){var sendToName=widget["boundTo"][i][0];
var sendToFunc=widget["boundTo"][i][1];eval("sendToFunc(widget['data'],widget['name'])");}}}};fsNotifier.xmlParser=function(a){if(window.DOMParser){parser=new DOMParser();xml=parser.parseFromString(a,"text/xml");}else{xml=new ActiveXObject("Microsoft.XMLDOM");xml.loadXML(a);}return xml;};fsNotifier.widgetPolling=function(b,c){if(c){fsNotifier.sendRequest(c["connectionRequest"],c);
}else{widgets=fsNotifier.widget.findMe({getAll:(b!=true)?true:false});for(var a=0;a<widgets.length;a++){switch(widgets[a]["connectionType"]){case"short":if(widgets[a]["bypassIni"]!=true){fsNotifier.sendRequest(widgets[a]["connectionRequest"],widgets[a]);}break;}}}};fsNotifier.widget={};fsNotifier.widget.nextWidgetID=0;
fsNotifier.widget.register=function(c){var c=c||{};var b=[];b.callback=(c.callback)?c.callback:"";b.method=c.method||"get";b.connectionType=c.connectionType||"";b.connectionDuration=c.connectionDuration||30000;b.name=c.name||"";b.url=c.url||fsNotifier.url;b.params=c.params||"";b.feedID=c.feedID||"";b.version=c.version||"";
b.readFrom=c.readFrom||[];b.boundTo=[];b.notifierResponse={};b.updateOnly=c.updateOnly||false;b.bypassIni=c.bypassIni||false;b.bypassNotifier=c.bypassNotifier||false;b.isXML=c.isXML||false;if(fsNotifier.widget.findMe({name:b.name})==false){b.widgetID=fsNotifier.widget.nextWidgetID++;fsNotifier.widget[b.widgetID]={};
thisWidget=fsNotifier.widget[b.widgetID];for(var a in b){thisWidget[a]=b[a];}}else{return window.console.log('Widget: "'+b.name+'" is already reigstered.');}if(fsNotifier.widget.bindSet==true){fsNotifier.widget.setBindings();}if(thisWidget.connectionType!=""){thisWidget.connectionRequest=fsNotifier.createRequest();
}return fsNotifier.widget[b.widgetID];};fsNotifier.widget.setBindings=function(){var d=fsNotifier.widget;for(var a in d){var c=d[a]["readFrom"];if(typeof(c)!="undefined"){c=c.toString().split(",");if(c!=""){for(var b=0;b<c.length;b++){fsNotifier.widget.findMe({name:c[b]},true)["boundTo"].push([d[a]["name"],d[a]["callback"]]);
}}}}};fsNotifier.widget.unregister=function(a){var b=fsNotifier.widget.findMe({name:a});if(b!=false){if(b[0]){if(b[0]["name"]==a){clearTimeout(b[0].getConnected);delete fsNotifier.widget[b[0]["widgetID"]];}}}};fsNotifier.widget.findMe=function(b,d){var b=b||{};for(var g in b){var g=g;var f=b[g];}var c=[];
for(var e in fsNotifier.widget){var a=fsNotifier.widget[e];for(var h in a){if(h==g&&a[h]==f||g=="getAll"&&f==true){if(d==true){return fsNotifier.widget[e];}else{c[e]=fsNotifier.widget[e];}}}}if(c!=""){return c;}else{return false;}};


var FsRef={};var user=new Object();FsRef.isJanRain=true;FsRef.init=function(){if(FsRef.isJanRain){FsRef.loadUserData();}var e=new Array();var d=new Array();var c=new Array();var b=-14400000;var f=-25200000;var a=-18000000;this.sslServer=(window.location.protocol.indexOf("https")>=0);this.prodServer=(window.location.hostname.indexOf("msn.foxsports.com")>=0);
this.qaServer=(window.location.hostname.indexOf("qa.foxsports.com")>=0);this.localServer=(!(this.prodServer)&&!(this.localServer));};FsRef.General={};FsRef.util={};FsRef.loadUserData=function(){var d=JSON.parse(FsUtils.getJanRainCookie("janrainProfile"));if(d){user.USER_FIRST_NAME=d.displayName;user.USER_ID=d.uuid;
user.COMMUNITY_SCREEN_NAME=d.fsLiveFyreScreenName;user.MONTH_CODE="";user.DATE_CODE="";user.BIRTH_YEAR="";user.EMAIL=d.email;user.POSTAL="";user.USER_LMD="";var g;if(d){g=d.verified.length-1;}user.VERIFIED=(d.verified[g]!=null&&d.verified[g].screen_name!="")?"1":"";window.console.warn("verified: "+user.VERIFIED);
if(d.fsLegacyEmailVerified=="1"||(d.emailVerified!=null)){user.EMAIL_VERIFIED="1";}else{user.EMAIL_VERIFIED="";}user.ONESITE_GOOD_STANDING=true;var f=new Array();var e=new Array();var c=new Array();var b=-14400000;var h=-25200000;var a=-18000000;}};FsRef.getArgs=function(){var b=new Object();var f=location.search.substring(1);
var e=f.split("&");for(var c=0;c<e.length;c++){var g=e[c].indexOf("=");if(g==-1){continue;}var a=e[c].substring(0,g);var d=e[c].substring(g+1);b[a]=unescape(d);}return b;};FsRef.setPartnerCookies=function(a,g,e){console.warn("**Begin FsRef.setPartnerCookies");var d=JSON.stringify(["uuid","photos","photo_approval_status","displayName","gender","email","givenName","familyName","lastUpdated","primaryAddress.address1","primaryAddress.address2","primaryAddress.city","primaryAddress.stateAbbreviation","primaryAddress.zip","primaryAddress.country","FSCOM.USER_ID","FSCOM.BIRTH_YEAR","FSCOM.MONTH_CODE","FSCOM.DATE_CODE","FSCOM.PHONE","FSCOM.SCREENNAME","FSCOM.PUID","FSCOM.VERIFIED","FSCOM.REG_REF_CODE"]);
var b="/account/loginWithJanrain";var f=[b,"?capture_server_url=",g,"&access_token=",encodeURIComponent(a),"&application_id=",encodeURIComponent(e),"&attributes=",encodeURIComponent(d),"&jsonp=",encodeURIComponent("CAPTURE.finishCreateSession")].join("");var c;if(window.XMLHttpRequest){c=new XMLHttpRequest();
}else{if(window.ActiveXObject){c=new ActiveXObject("Microsoft.XMLHTTP");}}c.open("POST",f,true);c.setRequestHeader("Content-Type","application/x-javascript;");c.onreadystatechange=function(){if(c.readyState==4){if(c.status==200){if(c.responseText){console.log("Successfully finished setting partner cookies");
if(location.href.match("/fantasy")){location.reload();}var h=FsRef.getArgs();if(h["fu"]!=null&&h["fu"].length>0){console.log("Redirecting to "+h["fu"]);window.top.location.href=decodeURIComponent(h["fu"]);}}}else{console.error("Cannot get connection to Janrain server. Request.Status= "+c.status);}}};
c.send(null);};FsRef.delPartnerCookies=function(){var a=(window.location.hostname.indexOf("msn.foxsports.com")>=0)?"p":"q";FsRef.util.deleteCookie(a+"LMD");FsRef.util.deleteCookie(a+"ALERTED");FsRef.util.deleteCookie(a+"ExternalUser");FsRef.util.deleteCookie(a+"ENC_EMAIL");FsRef.util.deleteCookie(a+"ENC_FNAME");
FsRef.util.deleteCookie(a+"ENC_LNAME");FsRef.util.deleteCookie(a+"FANTASYMOGULS");FsRef.util.deleteCookie(a+"WHATIFSPORTS");FsRef.util.deleteCookie(a+"OPENSPORTS");FsRef.util.deleteCookie(a+"STATS");FsRef.util.deleteCookie(a+"CleverTV");FsRef.util.deleteCookie(a+"UID");FsRef.util.deleteCookie(a+"ONESITE");
FsRef.util.deleteCookie("backplane-channel");};FsRef.util.deleteCookie=function(a){document.cookie=a+" =;expires=Thu, 01-Jan-1970 00:00:01 GMT; path = /"+";domain=.foxsports.com";};FsRef.General.ini=function(){try{var fsAnaSplit=fsAnalyticsDescription.split("&");for(i=0,anaLen=fsAnaSplit.length;i<anaLen;
i++){var fsGenDataSplit=fsAnaSplit[i].split("=");var fsGenNewData="FsRef.General."+fsGenDataSplit[0]+"='"+fsGenDataSplit[1]+"'";eval(fsGenNewData);}}catch(e){}};var fsGeneral=FsRef.General;FsRef.getUserData=function(a){if(a){switch(a){case"verified":if(typeof(user.VERIFIED)==null&&(user.VERIFIED==""||user.VERIFIED=="0")){return false;
}else{return true;}break;case"logged-in":var b=false;if(typeof(CAPTURE)!=null){var d=FsUtils.getJanRainCookie("janrainProfile");try{if(d){b=true;}else{b=false;}}catch(c){}}if(!b&&(user.USER_ID=="0"||user.USER_ID==""||user.USER_ID==undefined)){return false;}else{return true;}break;case"screen-name":if(typeof(user.SCREEN_NAME)=="undefined"||user.SCREEN_NAME==null||user.SCREEN_NAME==""||user.USER_ID==undefined){return false;
}else{return true;}break;case"onesite-standing":if(typeof(user.ONESITE_GOOD_STANDING)!="undefined"&&(user.ONESITE_GOOD_STANDING==null||user.ONESITE_GOOD_STANDING=="false")){return false;}else{return true;}break;}}else{return user;}};FsRef.fsUserInfo=function(){try{var d=document.getElementById("fs-header-signed-in");
var j=document.getElementById("fs-header-user-name");var h=document.getElementById("fs-header-user-greeting");var k=document.getElementById("user-dropdown-data");var c=document.getElementById("user-dropdown-data-signed-in");if(!FsRef.isJanRain){var b=document.getElementById("sign-in-out");}var f=encodeURIComponent(window.location);
var a=fsReqDomain;var g=false;user.newsAlerts={};if(fsReqDomain!=""){switch(a){case"https://sqa.foxsports.com":a="http://qa.foxsports.com";f=a;break;case"https://s.foxsports.com":a="http://msn.foxsports.com";f=a;break;}}if(FsRef.getUserData("logged-in")==true){h.className="";h.innerHTML="Hi, ";j.innerHTML=user.USER_FIRST_NAME;
j.className=j.className+" in";if(!FsRef.isJanRain){b.href=a+"/account/logout?fu="+f;}k.className=k.className.replace(new RegExp("logged-out","g"),"");k.className=k.className+" logged-in";c.className=c.className.replace(new RegExp("off","g"),"");c.className="on";userDropDownLinks=k.getElementsByTagName("a");
g=true;if(!FsRef.isJanRain){for(i=0,udLen=userDropDownLinks.length;i<udLen;i++){switch(userDropDownLinks[i].className){case"my-profile":if(FsRef.getUserData("screen-name")==true){userDropDownLinks[i].href="http://community.foxsports.com/"+user.SCREEN_NAME+"?pref_tab=my_site";}else{userDropDownLinks[i].href="javascript:void(0);";
userDropDownLinks[i].onclick=new Function("FsApps.alertPopUp(this, {params: 'divId=communitySetupScreenName', height:280, width:785, resizable: 'yes', scrollbars: 'yes'});");}break;}}}try{gigya.services.socialize.getUserInfo(conf,{callback:getUser});}catch(l){}}else{h.innerHTML="";c.className=c.className.replace(new RegExp("on","g"),"");
c.className="off";j.innerHTML='<a id="signin_link" onclick="javascript:FsApps.JanRain.signInHelper();" href="javascript:void(0);">Sign In</a>';j.className=j.className.replace(new RegExp("in","g"),"");d.className="";k.className=k.className.replace(new RegExp("logged-in","g"),"");k.className=k.className+" logged-out";
}var m=function(n){var e=FsUtils.checkEvent(this);if(e){if(e[1]=="mouseover"){k.className=k.className+" on";if(g){d.className=d.className+" hover";}}if(e[1]=="mouseout"){k.className=k.className.replace(new RegExp("on","g"),"");if(g){d.className=d.className.replace(new RegExp("hover","g"),"");}}}};d.onmouseover=m;
d.onmouseout=m;}catch(l){}};


if(!(Function.prototype.bind instanceof Function)){Function.prototype.bind=function(c){var b=this;return function(){b.apply(c,arguments);};};}var FsUtils={};FsUtils.trim=function(b){return b.replace(/^\s+|\s+$/g,"");};FsUtils.trimLeft=function(b){return b.replace(/^\s+/,"");};FsUtils.trimRight=function(b){return b.replace(/\s+$/,"");
};FsUtils.trimWhiteSpace=function(b){return b.replace(/\s+/g,"");};FsUtils.trimSpecialCharacters=function(b){return b.replace(/&#[0-9A-Z]+;/ig,"").replace(/^\s+|\s+$/g,"");};FsUtils.facebookLaunched=false;FsUtils.twitterLaunched=false;FsUtils.googleLaunched=false;FsUtils.inlineAnalyticsLoaded=false;FsUtils.removeArrayDuplicates=function(b){for(var d=0,e=b.length;
d<e-1;d++){for(var c=d+1;c<e;c++){if(b[d]===b[c]){b.splice(c--,1);}}}};FsUtils.openNewWin=function(n,s){var s=s||{};var d=s.url||null;var c=s.name||"FS_Window";var j=s.width||800;var o=s.height||600;var p=s.top||"";var g=s.left||"";var r=s.toolbar||"no";var b=s.location||"no";var l=s.directories||"no";
var f=s.status||"no";var q=s.menubar||"no";var h=s.resizable||"yes";var e=s.scrollbars||"no";var k=s.fullscreen||"no";var m=s.channelmode||"no";window.open(d,c,"width="+j+",height="+o+",top="+p+",left="+g+",toolbar="+r+",location="+b+",directories"+l+",status="+f+",menubar="+q+",resizable="+h+",scrollbars="+e+",fullscreen="+k+",channelmode="+m);
};FsUtils.parseTemplate=function(l,d,c){var h=/\{\w*\}/g;var f=l.match(h);var g="";if(d){var c=(!c)?d.length:c;for(var e=0;e<c;e++){if(d[e]){if(f){var j=l;for(var b=0,k=f.length;b<k;b++){j=j.replace(f[b],d[e][f[b].replace("}","").replace("{","")]).replace("undefined","0");}g+=j;}}}}return g;};FsUtils.launchMyFlash=function(options){try{var options=options||{};
var flashVars=options.flashVars||"";var iBFlash=options.locId||"";var flashId=options.flashId||iBFlash+"-flash";var contentUrl=options.contUrl||"";var fHeight=options.height||250;var fWidth=options.width||320;var fWmode=options.wMode||"transparent";var fBGColor=options.bgColor||"undefined";var fScale=options.scale||"";
var fsAlign=options.sAlign||"";var fVersion=options.version||"";var fSponsorLabel=options.sponsorLabel;var fSponsorLabelId=options.sponsorLabelId||flashId+"-label";var fFinish=options.finishFunction;var iBFlashHolder=document.getElementById(iBFlash);if(iBFlashHolder){var daFlash=new FSFlashTag(contentUrl,fWidth,fHeight);
if(flashVars){daFlash.setFlashvars(flashVars);}if(flashId){daFlash.setId(flashId);}if(fWmode){daFlash.setWmode(fWmode);daFlash.setWmodeFF(fWmode);}if(fBGColor){daFlash.setBgcolor(fBGColor);}if(fScale){daFlash.setScale(fScale);}if(fsAlign){daFlash.setSalign(fsAlign);}if(fVersion){daFlash.setVersion(fVersion);
}if(fSponsorLabelId){var labelInfo=document.getElementById(fSponsorLabelId);if(labelInfo){labelInfo.innerHTML=fSponsorLabel;}}iBFlashHolder.innerHTML=daFlash;}if(fFinish){eval(fFinish);}}catch(e){}};FsUtils.sizeMyFlash=function(d){var d=d||{};var c=d.height||"";var f=d.width||"";var b=d.flashId||"";if(b){var e=document.getElementById(b);
if(e){if(c){e.style.height=c;}if(f){e.style.width=f;}}}};FsUtils.randomizeMe=function(f,c){var c=c||{};var b=c.exempt||null;var e=c.maxNumber||0;var g=Math.floor(Math.random()*e);if(b!=null){b=b.toString();for(var d=0;d<e;d++){if(b.search(g)!=-1){return FsUtils.randomizeMe(f,{exempt:b,maxNumber:e});}}}return g;
};FsUtils.getObjectSize=function(d){var c=0,b;for(b in d){if(d.hasOwnProperty(b)){c++;}}return c;};FsUtils.evenOdd=function(g,m){var m=m||{};var k=m.RollOverClass||null;var f=m.Even||"on";var b=m.odd||"off";var l=document.getElementById(g);if(l.nodeName=="TABLE"){var j=l.getElementsByTagName("tbody")[0];
var h=j.getElementsByTagName("TR");var e=0;for(var c=0,d=h.length;c<d;c++){if(e==1){h[c].className=f;e=0;}else{h[c].className=b;e=1;}if(k){h[c].onmouseover=function(){this.className=this.className+" "+k;};h[c].onmouseout=function(){this.className=this.className.replace(" "+k,"");if(this.className==k){this.className="";
}};}}}};FsUtils.analyticsListener=function(rgn,options){try{var options=options||{};var region=document.getElementById(rgn);if(region.title){var regionTitle=region.title;}else{var regionTitle="";}var regionHeatMap=new Object();regionHeatMap.fsTag=eval("/"+options.tag+"/");if(regionHeatMap.fsTag=="/undefined/"){regionHeatMap.fsTag="A|IMG|SPAN";
}regionHeatMap.fsType=options.type||"link";regionHeatMap.fsCategory=options.category||"";regionHeatMap.fsDescription=options.description;regionHeatMap.fsAds=options.ads||false;regionHeatMap.fsRealTime=options.realTime||true;regionHeatMap.fsPageView=options.pageView||false;regionHeatMap.fsTrackingPath=options.tPath||document.location;
regionHeatMap.fsEventName=options.eventName||regionHeatMap.fsType;regionHeatMap.fsGo=(function(e,mappedRegion){return function(e){if(!e){var e=window.event||arguments.callee.caller.arguments[0];}if(e.stopPropagation){e.stopPropagation();}e.cancelBubble=true;if(e.target){targ=e.target;}else{if(e.srcElement){targ=e.srcElement;
}}if(targ.nodeType==3){targ=targ.parentNode;}if(e.type=="keydown"&&e.which==17){window.open((e.target).getAttribute("href"),"","");(e.target).blur();}if(!regionHeatMap.fsCategory){if(regionTitle){regionHeatMap.fsCategory+=regionTitle;}if(targ.parentNode.parentNode.title&&region.title!=targ.parentNode.parentNode.title){regionHeatMap.fsCategory+=" - "+targ.parentNode.parentNode.title;
}if(targ.parentNode.title){regionHeatMap.fsCategory+=" - "+targ.parentNode.title;}}if(regionHeatMap.fsDescription){if(regionHeatMap.fsDescription!=regionTitle){var newDesc=regionHeatMap.fsDescription;}else{if(regionTitle){var newDesc="";}else{var newDesc=regionTitle;}}}else{var newDesc="";}var theDescription=newDesc+regionHeatMap.fsCategory.toLowerCase()+" - "+targ.title;
regionHeatMap.fsCategory="";regionHeatMap.fsDescription="";if(targ.nodeName.search(regionHeatMap.fsTag)!=-1){fsAnalytics(targ,{type:regionHeatMap.fsType,description:theDescription.toLowerCase(),realTime:regionHeatMap.fsRealTime,pageView:regionHeatMap.fsPageView,tPath:regionHeatMap.fsTrackingPath,eventName:regionHeatMap.fsEventName});
}};})(regionHeatMap);if(document.all){region.attachEvent("onclick",regionHeatMap.fsGo);region.attachEvent("onkeydown",regionHeatMap.fsGo);}else{region.addEventListener("click",regionHeatMap.fsGo,false);region.addEventListener("keydown",regionHeatMap.fsGo,false);}regionHeatMap.fsCategory="";regionHeatMap.fsDescription="";
}catch(e){}};FsUtils.analyticsInlineTracking=function(){FsUtils.inlineAnalyticsLoaded=true;var l={};var d=document.getElementsByClassName("parentWrapper");for(var g=0,b=d.length;g<b;g++){var f=d[g];var e="inline-num-"+(g+1);var j=f.getElementsByTagName("a");for(var m=0,c=j.length;m<c;m++){var h=j[m];
var k="link-num-"+(m+1);h.id=e+" - "+k;if(window.addEventListener){h.addEventListener("click",function(){fsAnalytics(this,{type:"link",description:this.id});},false);}else{h.onclick=function(n){fsAnalytics(this,{type:"link",description:this.getAttribute("id")});};}}}};FsUtils.checkEmail=function(b){var c=/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
if(c.test(b)==true){return true;}else{return false;}};FsUtils.checkEventObject=function(d,c){if(!d){var d=window.event;}d.cancelBubble=true;if(d.stopPropagation){d.stopPropagation();}if(d.target){b=d.target;}else{if(d.srcElement){b=d.srcElement;}}if(b.nodeType==3){b=b.parentNode;}var b=(d.relatedTarget)?d.relatedTarget:(d.type=="mouseout")?d.toElement:d.fromElement;
if(!b||b==c){return false;}while(b.parentNode){if(b==c){return false;}b=b.parentNode;}return true;};FsUtils.checkEvent=function(d,b){var c=window.event||arguments.callee.caller.arguments[0];evElm=new Array();if(FsUtils.checkEventObject(c,d)){evElm[0]=d;evElm[1]=c.type;return evElm;}};FsUtils.formatDate=function(j){var c=new Array("Jan.","Feb.","Mar.","Apr.","May.","Jun.","Jul.","Aug.","Sep.","Oct.","Nov.","Dec");
var g=new Date(j*1000);var k=g.getYear();var e=g.getHours();var b=g.getMinutes();var f;if(e>=12){f="p.m.";}else{f="a.m.";}if(e>12){e-=12;}else{if(!e){e=12;}}if(b<10){b="0"+b;}if(k<1000){k+=1900;}return c[g.getMonth()]+" "+g.getDate()+", "+k+" "+e+":"+b+" "+f;};FsUtils.dropDownAction=function(h,f){var d="";
var f=f||{};var c=f.toShow;var g=f.clicked||false;var b=f.toggle||true;try{c=document.getElementById(c);if(b==true){if(d!=""&&d!=c){d.className=d.className.replace(new RegExp(" on","g"),"");}}d=c;if(g==false){h.onmouseover=function(){c.className=c.className+" on";};h.onmouseout=function(){c.className=c.className.replace(new RegExp(" on","g"),"");
};c.onmouseout=function(){var e=FsUtils.checkEvent(this);if(e){e[0].className=e[0].className.replace(new RegExp(" on","g"),"");}};}else{var k=c.className+" on";if(c.className!=k){c.className=c.className+" on";}else{c.className=c.className.replace(new RegExp(" on","g"),"");}c.onmouseout=function(){var e=FsUtils.checkEvent(this);
if(e){e[0].className=e[0].className.replace(new RegExp(" on","g"),"");}};}}catch(j){}};FsUtils.checkCookie=function(h,e){var d=document.cookie;var c=d.indexOf(h+"=");if(c!=-1){var g=c+e;var b=d.indexOf(";",g);if(b==-1){b=d.length;}var f=d.substring(g,b);f=unescape(f);return f;}return"";};FsUtils.getJanRainCookie=function(d){var f=d+"=";
var b=document.cookie.split(";");for(var e=0;e<b.length;e++){var g=b[e];while(g.charAt(0)==" "){g=g.substring(1,g.length);}if(g.indexOf(f)==0){return g.substring(f.length,g.length);}}return null;};FsUtils.setCookie=function(c,d,b){var e=new Date();e.setDate(e.getDate()+b);document.cookie=c+"="+escape(d)+((b==null)?"":";expires="+e.toGMTString());
};FsUtils.setCookieDomain=function(k){var c=k.name||null;var g=k.value||null;var d=k.expiredays||null;var j=k.path||null;var e=k.domain||null;var b=k.secure||null;var f=new Date();f.setTime(f.getTime());if(d){d=d*1000*60*60*24;}var h=new Date(f.getTime()+(d));document.cookie=c+"="+escape(g)+((d)?";expires="+h.toGMTString():"")+((j)?";path="+j:"")+((e)?";domain="+e:"")+((b)?";secure":"");
};document.getElementsByClassName=function(c){var b=[];var h=new RegExp("\\b"+c+"\\b");var g=this.getElementsByTagName("*");for(var f=0,e=g.length;f<e;f++){var d=g[f].className;if(h.test(d)){b.push(g[f]);}}return b;};FsUtils.addBookmark=function(f){var k=document.URL;var g=document.title;if(window.sidebar){window.sidebar.addPanel(g,k,"");
}else{if(window.opera){if(typeof(f)=="undefined"||f==null){var f=document.createElement("A");}f.rel="sidebar";f.target="_search";f.title=g;f.href=k;f.setAttribute("href",k);f.setAttribute("title",g);f.setAttribute("rel","sidebar");f.click();}else{if(window.chrome){var f=window,e=document,j=encodeURIComponent,h=f.open("http://www.google.com/bookmarks/mark?op=edit&output=popup&bkmk="+j(e.location)+"&title="+j(e.title),"bkmk_popup","left="+((f.screenX||f.screenLeft)+10)+", top="+((f.screenY||f.screenTop)+10)+",height=420px,width=550px,resizable=1,alwaysRaised=1");
f.setTimeout(function(){h.focus();},300);}else{if(document.all||window.external){window.external.AddFavorite(k,g);}}}}};FsUtils.hashStringArr=new Array();FsUtils.getUrl=function(b){var c=null;if(FsUtils.hashStringArr[b]){c=FsUtils.hashStringArr[b];}return c;};FsUtils.urlParse=function(m){var m=m||{};
var f=m.scriptFile||"";var l=m.url||window.location.search.substring(1);if(f!=""){var d=document.getElementsByTagName("script");for(a=0,seLen=d.length;a<seLen;a++){var c=d[a].src;if(c.indexOf(f)>=0){l=c;break;}}}l+="&"+window.location.hash.substring(1);var b=l.split("&");for(var g=0,e=b.length;g<e;g++){var j=b[g].indexOf("=");
if(j>=0){var h=b[g].substring(0,j);var k=b[g].substring(j+1);FsUtils.hashStringArr[h]=k;}}};FsUtils.urlParse();FsUtils.validateTextLength=function(d,c){var e="You have exceeded the number of "+c+" text characters allowed.";var b=d.value.length;if(c<parseInt(b)){alert(e);d.value=d.value.substring(0,c);
return false;}return true;};FsUtils.loadChartbeatJS=function(){try{if(typeof(loadChartbeat)=="undefined"||typeof(_sf_async_config)=="undefined"){var d=document.getElementsByTagName("body")[0];var b=document.createElement("script");b.src=fsReqDomain+"/fe/js/chartbeatCode.js";b.type="text/javascript";b.defer=false;
try{document.body.appendChild(b);}catch(c){d.appendChild(b);}}}catch(c){}};FsUtils.placeContent=function(c,b){var c=document.getElementById(c);var b=document.getElementById(b);if(c){if(b){b.innerHTML=c.innerHTML;}}};FsUtils.setReturnUrl=function(e,d){var d=d||{};var b=d.field||"";var c=d.url||document.location;
var f=document.getElementById(b);if(f!=""){f.value=c;}};if(typeof(fsGigyaApiKey)=="undefined"){var fsGigyaApiKey="2_mE0oy2vzmOU_vAk1hOf1hZq9qYwf1h7kkqgwcE6Lrrx24oX3P_Cd0R4ef2Sdosgx";}if(location.host.indexOf("qa")!==-1||location.host.indexOf("nqa")!==-1||location.host.indexOf("sqa")!==-1){fsGigyaApiKey="2_24UF0C_QVx_1tpHD_5A-fNJQeAmAELtOHZDUKxav-AQA764EgJlNh6KfFwAop4sB";
}var locator=window.location.href;var conf={APIKey:fsGigyaApiKey,enabledProviders:"messenger,facebook,twitter,yahoo,google,myspace",disabledProviders:"",cid:window.location.href,connectWithoutLoginBehavior:"alwaysLogin"};FsUtils.launchGigya=function(){window.console.warn("No longer launching Gigya");
};if(typeof(fsFBAppId)=="undefined"){var fsFBAppId="380390622023704";}if(typeof(fsSiteLang)=="undefined"){var fsSiteLang="en_US";}FsUtils.launchFB=function(){if(location.protocol!="https:"){fbAsyncInit=function(){FB.init({appId:fsFBAppId,status:true,cookie:true,xfbml:true,oauth:false});};(function(){var c=document.createElement("div");
c.id="fb-root";var f=document.getElementsByTagName("body").item(0);f.appendChild(c);var d=document.getElementsByTagName("head").item(0);var g=document.createElement("script");var b="http://connect.facebook.net/"+fsSiteLang+"/all.js";g.src=b;g.type="text/javascript";g.async=true;d.appendChild(g);g.onload=g.onreadystatechange=function(){var h=this.readyState;
if(h&&h!="complete"&&h!="loaded"){return;}if(FsUtils.facebookLaunched==false){try{FB.Event.subscribe("edge.create",function(e){fsAnalytics(this,{type:"link",description:"share - facebook"});});FB.Event.subscribe("edge.remove",function(e){fsAnalytics(this,{type:"link",description:"dislike - facebook"});
});}catch(j){}FsUtils.facebookLaunched=true;}};}());}};FsUtils.launchTwitterAPI=function(){FsApps.loadScriptFile({url:"//platform.twitter.com/widgets.js",callback:"launchTwitterTracking()",async:true});window.launchTwitterTracking=function(){if(FsUtils.twitterLaunched==false){twttr.events.bind("tweet",function(b){if(b){if(b.target){fsAnalytics(this,{type:"link",description:"share - twitter"});
}}});FsUtils.twitterLaunched=true;}};};FsUtils.launchGoogleAPI=function(){if(FsUtils.googleLaunched==false){FsApps.loadScriptFile({url:"https://apis.google.com/js/plusone.js",async:true});window.plusone_vote=function(b){fsAnalytics(this,{type:"link",description:"share - google"});};}FsUtils.googleLaunched=true;
};function plusone_vote(b){fsAnalytics(this,{type:"link",description:"share - google"});}FsUtils.sendRequestToManyRecipients=function(b){FB.ui({method:"apprequests",message:b},FsUtils.requestCallback);};FsUtils.requestCallback=function(b){window.console.warn(b);};FsUtils.getUser=function(b){try{user.SOCIAL_LINKS=b.user.providers;
var c=b.user.providers;for(i=0,sLen=c.length;i<sLen;i++){var f=document.getElementById("gigya-"+c[i]);if(f){f.className=f.className+" connected";f.onclick=new Function("FsUtils.socialConnect('', {source:'"+c[i]+"', type: 'disconnect'});");}}}catch(d){}};FsUtils.gigyaQuickConnect=function(response){gigya.services.socialize.getUserInfo(conf,{callback:eval(response.context[0])});
};FsUtils.renderUI=function(b){if(b.user!=null&&b.user.isConnected){user=b.user;var c={onSelectionDone:FsUtils.onSelectionDone};gigya.services.socialize.showFriendSelectorUI(conf,c);}};FsUtils.onSelectionDone=function(c){var d="A message from "+user.nickname;var b="I like to share this page with you.";
if(c.friends.getSize()>0){var e={callback:FsUtils.sendNotification_callback,subject:d,body:b,recipients:c.friends};gigya.services.socialize.sendNotification(conf,e);}};FsUtils.sendNotification_callback=function(b){switch(b.errorCode){case 0:document.getElementById("status").style.color="green";document.getElementById("status").innerHTML="Notification sent.";
break;default:document.getElementById("status").style.color="red";document.getElementById("status").innerHTML="Unable to send notification. status="+b.errorCode+"; "+b.errorMessage;}};FsUtils.onLoad=function(){gigya.services.socialize.getUserInfo(conf,{callback:FsUtils.renderUI});gigya.services.socialize.addEventHandlers(conf,{onConnectionAdded:FsUtils.renderUI,onConnectionRemoved:FsUtils.renderUI});
};if(typeof(fsFeedID)=="undefined"){var fsFeedID="fsActivity2010";}FsUtils.hookMeUp=function(z,k){try{var k=k||{};var s=k.source||"facebook";var n=k.otherNet||"";var q=k.linkUrl||document.location.toString();var b=k.title||z.title;var r=k.desc||"";var x=k.imageUrl||"";var l=k.type||"share";var g=k.context||"";
fsFeedID=k.fsFeedID||fsFeedID;var m=k.subject||document.title;var y=k.buttonLoc||"";var v=k.buttonColor||"light";var p=k.buttonLayout||"button_count";var h=k.buttonFaces||"false";var o=k.containerID||"";var j=k.height||300;var A=k.width||325;var u=k.siteId||18106020;var f=k.multi||false;var d=k.fbMsg||"Please check out this page";
switch(l){case"connect":z.onclick=new Function("FsUtils.hookMeUp(this, {source: '"+s+"', type: 'connect'})");gigya.services.socialize.addConnection(conf,{callback:FsUtils.hookMeUpResponse,context:s,provider:s});break;case"disconnect":z.onclick=new Function("FsUtils.hookMeUp(this, {source: '"+s+"', type: 'disconnect'})");
gigya.services.socialize.removeConnection(conf,{provider:s,context:s,callback:FsUtils.hookMeUpResponse});break;case"chat":break;case"share":if(typeof(user.SOCIAL_LINKS)=="undefined"){user.SOCIAL_LINKS=new Array();}else{user.SOCIAL_LINKS.push(s);}janrain.engage.share.setTitle(b);janrain.engage.share.setUrl(q);
janrain.engage.share.setDescription(r);janrain.engage.share.setActionLink({"name":"See More","link":q});if(x){janrain.engage.share.setImage(x);}janrain.engage.share.showProvider(s);janrain.engage.share.show();break;case"email":janrain.engage.share.setTitle(b);janrain.engage.share.setMessage(r);janrain.engage.share.showProvider("email");
janrain.engage.share.show();break;}if(l=="like"||l=="recommend"){var c='<fb:like href="'+q+'" layout="'+p+'" action="'+l+'" show_faces="'+h+'" colorscheme="'+v+'"></fb:like>';if(y!=""){var t=document.getElementById(y);}else{var t=document.createElement("div");t.style.cssFloat="left";}t.innerHTML=c;if(y==""){document.write(t.innerHTML);
}}if(l=="request"){FsUtils.sendRequestToManyRecipients(d);}}catch(w){alert("FsUtils.hookMeUp Error: "+w.message);}};FsUtils.hookMeUpResponse=function(b){var c=document.getElementById("gigya-"+b.context);if(b.errorCode==0){if(b.operation=="addConnection"){c.className=c.className+" connected";}else{c.className=c.className.replace(new RegExp("connected","g"),"");
}}else{}};FsUtils.getComputedHeight=function(b){if(document.all){ch=document.getElementById(b).offsetHeight;}else{elem=document.getElementById(b);ch=document.defaultView.getComputedStyle(elem,"").getPropertyValue("height");ch=ch.split("px");ch=ch[0];}return parseFloat(ch);};FsUtils.JsDataReturn=function(data){if(data){return eval(data);
}};var fs_pin=null;var fsKeepMePosted={};fsKeepMePosted.data=[];fsKeepMePosted.runSnitch=function(b){var b=b||{};try{if(window.external.msIsSiteMode()){var d=sessionStorage.pinnedSite;var e=window.external.msIsSiteModeFirstRun(false);if(FsUtils.getUrl("src")=="IE9pin"){return;}if(typeof(d)=="undefined"){fsKeepMePosted.snitch(b);
return;}if(e==0&&d.search(FsRef.General.category)!=-1){fsKeepMePosted.snitch(b);return;}}else{}}catch(c){}};fsKeepMePosted.snitch=function(d){var d=d||{};fsKeepMePosted.category=(fsKeepMePosted.category)?fsKeepMePosted.category:FsRef.General.category;fs_pin=window.external;fs_pin.msSiteModeClearIconOverlay();
fs_pin.msSiteModeClearJumpList();if(fsKeepMePosted!=null){if(fsKeepMePosted.category!="home"){fs_pin.msSiteModeCreateJumpList("Fox Sports "+fsKeepMePosted.category.toUpperCase());}else{fs_pin.msSiteModeCreateJumpList("Fox Sports");}for(var b=10;b>-1;b--){if(fsKeepMePosted.data[b]){var h=fsKeepMePosted.data[b].title;
if(fsKeepMePosted.data[b].page.indexOf("?")==-1){var c=fsKeepMePosted.data[b].page+"?src=IE9pin";}else{var c=fsKeepMePosted.data[b].page+"&src=IE9pin";}var g=(fsKeepMePosted.data[b].image)?fsKeepMePosted.data[b].image:"/fe/images/ie9/yellow_dot.ico";fs_pin.msSiteModeADdJumpListItem(h,c,g);}}fs_pin.msSiteModeShowJumplist();
if(sessionStorage.pinnedSite==null){sessionStorage.pinnedSite+=fsKeepMePosted.category;}else{sessionStorage.pinnedSite+=", "+fsKeepMePosted.category;}}if(d.notify==true){var e=(fsKeepMePosted.iconOverlay)?fsKeepMePosted.iconOverlay:"";var f=(fsKeepMePosted.iconOverlayDesc)?fsKeepMePosted.iconOverlayDesc:"NEW FoxSports Updates!";
fs_pin.msSiteModeActivate();fs_pin.msSiteModeSetIconOverlay(e,f);}};FsUtils.getServerTime=function(b){if(typeof(b.callback)=="undefined"){return;}b.url=b.url||"/";var d;var e=false;function c(){if(!e&&d.readyState>=3){e=true;b.callback(new Date(d.getResponseHeader("Date")));}}if(typeof(XMLHttpRequest)!="undefined"){d=new XMLHttpRequest();
}else{if(typeof(ActiveXObject)!="undefined"){d=new ActiveXObject("Microsoft.XMLHTTP");}}d.onreadystatechange=c;d.open("HEAD",b.url,true);d.send();};FsUtils.tableToArray=function(o){var n=[];if(o){var q,p,g;if(o.children[0].nodeName=="THEAD"){q=true;var m=o.children[0];g=o.children[1];p=[];for(var f=0,h=m.children[0].children.length;
f<h;f++){var k=m.children[0].children[f];while(k.children.length>0){k=k.children[0];}p.push(k.innerHTML);}}else{if(o.children[0].nodeName=="TBODY"){q=false;g=o.children[0];}else{return[];}}for(var f=0,l=g.children.length;f<l;f++){var r=(q)?{}:[];for(var e=0,d=g.children[f].children.length;e<d;e++){var k=g.children[f].children[e];
var c;var b=k.children.length;if(b>0&&k.children[0].nodeName=="TABLE"){c=tableToArray(k.children[0]);}else{while(b>0){k=k.children[0];}c=k.innerHTML;}if(q){r[p[e]]=c;}else{r.push(c);}}n.push(r);}}return n;};FsUtils.findInObject=function(k,b,c){var j=function(q){var q=q||{};for(var u in q){var u=u;var s=q[u];
}var h=[];for(var t in k){var r=k[t];for(var v in r){if(s=="*"){if(v==u&&r[v]!=""){if(c==true){return k[t];}else{if(typeof(k[t])!="undefined"){h[t]=k[t];}}}}if(v==u&&r[v]==s||u=="getAll"&&s==true){if(c==true){return k[t];}else{if(typeof(k[t])!="undefined"){h[t]=k[t];}}}}}return h;};if(is_array(b)){var d=[];
var f=[];for(var l=0,p=b.length;l<p;l++){var o=j(b[l]);if(o){d.push(o);}}for(var l=0,n=d.length;l<n;l++){for(var m=0,g=d[l].length;m<g;m++){if(typeof(d[l][m])!="undefined"){if(f.indexOf(d[l][m])<0){f.push(d[l][m]);}}}}var e=f;}else{var e=j(b);}if(e!=""){return e;}else{return false;}};function is_array(b){return typeof(b)=="object"&&(b instanceof Array);
}FsUtils.getOrdinal=function(d,c){var c=c||{};var g=c.sScript;var f=d%100;var e=d%10;var b;if((f-e)==10){b="th";}else{switch(e){case 1:b="st";break;case 2:b="nd";break;case 3:b="rd";break;default:b="th";break;}}switch(g){case"sub":return d+"<sub>"+b+"</sub>";break;case"sup":return d+"<sup>"+b+"</sup>";
break;default:return d+b;break;}};FsUtils.Interval=function(){this.interval=null;var b,c;this.start=function(d,e){this.clear();b=d;c=e;this.interval=window.setInterval(d,e);};this.clear=function(){if(this.interval){clearInterval(this.interval);}this.interval=null;b=null;c=null;};this.reset=function(){if(b==null||c==null){return;
}this.set(b,c);};};FsUtils.schonfinkelize=function(b){var d=Array.prototype.slice,c=d.call(arguments,1);return function(){var f=d.call(arguments),e=c.concat(f);return b.apply(null,e);};};


