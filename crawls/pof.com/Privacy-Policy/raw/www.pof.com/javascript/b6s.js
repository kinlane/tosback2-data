function getPOFIMCookie(b) { var c, a, e, d = document.cookie.split(";"); for (c = 0; c < d.length; c++) { a = d[c].substr(0, d[c].indexOf("=")); e = d[c].substr(d[c].indexOf("=") + 1); a = a.replace(/^\s+|\s+$/g, ""); if (a == b) { return unescape(e) } } } function setPOFIMCookie(c, e, f) { var a = ""; if (f) { var b = new Date(); b.setTime(b.getTime() + (f * 24 * 60 * 60 * 1000)); a = "; expires=" + b.toGMTString() } var d = escape(e); document.cookie = c + "=" + d + a } function clearPOFIMCookie(a, b) { setPOFIMCookie(a, b, -1) } var POFIMCookie = getPOFIMCookie("POFIMSession"); if (POFIMCookie == undefined) { var date = new Date(); setPOFIMCookie("POFIMSession", date.getTime()) } var POFPopup; var POFTitle = document.title; var POFHasFocus = true; var POFBlinkingInterval = 1000; var POFMessage; var POFTimer; function openPOFPopup(a, b, c) { if (POFPopup == null || POFPopup.closed) { POFPopup = window.open(a, b, c); POFPopup.focus() } else { if (POFPopup.focus) { POFPopup = window.open(a, b, c); POFPopup.focus() } } } function resizePOFFlash(b, a) { if (!navigator.userAgent.match("MSIE")) { document.getElementById(b).style.height = a + "px" } if (a > 1) { document.getElementById(b).style.left = "100px" } else { document.getElementById(b).style.left = "-237px" } } function setPOFIMFocus(a) { POFHasFocus = !a; if (!a) { document.title = POFTitle } } function showPOFIMMessage(b, a) { clearTimeout(POFTimer); switch (a) { case false: POFHasFocus = true; document.title = POFTitle; break; case true: POFMessage = b; POFTimer = setTimeout("showPOFBlinkingMessage()", POFBlinkingInterval); break } } function showPOFBlinkingMessage() { clearTimeout(POFTimer); if (POFHasFocus) { document.title = POFTitle } else { if (document.title == POFTitle) { document.title = POFMessage } else { document.title = POFTitle } POFTimer = setTimeout("showPOFBlinkingMessage()", POFBlinkingInterval) } } function closePOFWindow() { window.close() } if (navigator.appName == "Microsoft Internet Explorer") { document.onfocusout = function () { setPOFIMFocus(true) }; document.onfocusin = function () { setPOFIMFocus(false) } } else { window.onblur = function () { setPOFIMFocus(true) }; window.onfocus = function () { setPOFIMFocus(false) } } var END_OF_INPUT = -1; var base64Chars = new Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/"); var reverseBase64Chars = new Array(); for (var i = 0; i < base64Chars.length; i++) { reverseBase64Chars[base64Chars[i]] = i } var base64Str; var base64Count; function setBase64Str(a) { base64Str = a; base64Count = 0 } function readBase64() { if (!base64Str) { return END_OF_INPUT } if (base64Count >= base64Str.length) { return END_OF_INPUT } var a = base64Str.charCodeAt(base64Count) & 255; base64Count++; return a } function encodeBase64(e) { setBase64Str(e); var a = ""; var d = new Array(3); var c = 0; var b = false; while (!b && (d[0] = readBase64()) != END_OF_INPUT) { d[1] = readBase64(); d[2] = readBase64(); a += (base64Chars[d[0] >> 2]); if (d[1] != END_OF_INPUT) { a += (base64Chars[((d[0] << 4) & 48) | (d[1] >> 4)]); if (d[2] != END_OF_INPUT) { a += (base64Chars[((d[1] << 2) & 60) | (d[2] >> 6)]); a += (base64Chars[d[2] & 63]) } else { a += (base64Chars[((d[1] << 2) & 60)]); a += ("="); b = true } } else { a += (base64Chars[((d[0] << 4) & 48)]); a += ("="); a += ("="); b = true } c += 4; if (c >= 76) { a += ("\n"); c = 0 } } return a } function readReverseBase64() { if (!base64Str) { return END_OF_INPUT } while (true) { if (base64Count >= base64Str.length) { return END_OF_INPUT } var a = base64Str.charAt(base64Count); base64Count++; if (reverseBase64Chars[a]) { return reverseBase64Chars[a] } if (a == "A") { return 0 } } return END_OF_INPUT } function ntos(a) { a = a.toString(16); if (a.length == 1) { a = "0" + a } a = "%" + a; return unescape(a) } function decodeBase64(d) { setBase64Str(d); var a = ""; var c = new Array(4); var b = false; while (!b && (c[0] = readReverseBase64()) != END_OF_INPUT && (c[1] = readReverseBase64()) != END_OF_INPUT) { c[2] = readReverseBase64(); c[3] = readReverseBase64(); a += ntos((((c[0] << 2) & 255) | c[1] >> 4)); if (c[2] != END_OF_INPUT) { a += ntos((((c[1] << 4) & 255) | c[2] >> 2)); if (c[3] != END_OF_INPUT) { a += ntos((((c[2] << 6) & 255) | c[3])) } else { b = true } } else { b = true } } return a } function pof_ads_$() { var c = new Array(); for (var b = 0; b < arguments.length; b++) { var a = arguments[b]; if (typeof a == "string") { if (document.getElementById || document.getElementsByName) { if (document.getElementById(a)) { a = document.getElementById(a) } else { if (document.getElementsByName(a)) { a = document.getElementsByName(a)[0] } } } else { if (document.all) { a = document.all[a] } } } if (arguments.length == 1) { return a } c.push(a) } return c } function ads_show(b, c) { if (typeof (ads_output[b]) == "undefined") { return } else { if (ads_output[b].substring(0, 1) == "<") { pof_ads_$(c).innerHTML = ads_output[b] } else { var a = document.createElement("iframe"); a.setAttribute("frameBorder", "0"); a.setAttribute("scrolling", "no"); a.setAttribute("width", "100%"); a.setAttribute("height", "100%"); a.setAttribute("vspace", "0"); a.setAttribute("hspace", "0"); a.setAttribute("allowTransparency", "true"); a.setAttribute("marginWidth", "0"); a.setAttribute("marginHeight", "0"); a.style.border = "none"; a.style.margin = "0px"; a.style.padding = "0px"; a.style.width = "100%"; a.style.height = "100%"; pof_ads_$(c).appendChild(a); if (a.contentDocument) { a.contentDocument.write('<html><head></head><body style="margin:0;padding:0"><center>' + decodeBase64(ads_output[b]) + "</center></body></html>") } else { if (a.contentWindow) { a.contentWindow.document.write('<html><head></head><body style="margin:0;padding:0"><center>' + decodeBase64(ads_output[b]) + "</center></body></html>") } } } } } function ads_can_show(a) { try { if (typeof (ads_output[a]) == "undefined") { return false } return true } catch (b) { } return false } var FlashHeed = (function (d) { var a = d.document; var c = function (g, l, h) { var e = "", k = g, f; try { while (k.length > 0) { if (f = k.match(l)) { e += k.slice(0, f.index); e += h; k = k.slice(f.index + f[0].length) } else { e += k, k = "" } } } catch (j) { e = "" } return e }; var b = function (k) { try { if (k === undefined || k === null) { var k = a } var x = k.getElementsByTagName("object"); var u = x.length; var r; for (r = 0; r < u; r++) { var h = x[r]; var p = h.getElementsByTagName("param"); var w = p.length; var g = h.getElementsByTagName("embed"); var v = null; if (g.length > 0) { var v = g[0] } if (v) { v.setAttribute("wmode", "transparent"); var t = v.nextSibling, m = v.parentNode; m.removeChild(v); m.insertBefore(v, t) } var e = false; var l = false; for (var q = 0; q < w; q++) { if (p[q].name === "wmode") { if (/transparent/i.test(p[q].value) || /opaque/i.test(p[q].value)) { e = true } else { l = true } } } if (!e || l) { var s = h.outerHTML; var t = h.nextSibling, m = h.parentNode; s = c(s, /<param name="wmode".*?>/i, ""); s = c(s, /<\/object>/i, '<PARAM NAME="WMode" VALUE="Transparent"></object>'); m.removeChild(h); var f = a.createElement("div"); f.appendChild(h); f.innerHTML = ""; f.innerHTML = s; m.insertBefore(f, t) } } } catch (n) { } }; return { heed: b} })(window); var offsetfrommouse = [15, 15]; var displayduration = 0; var currentimageheight = 270; if (document.getElementById || document.all) { document.write('<div id="trailimageid">'); document.write("</div>") } function gettrailobj() { if (document.getElementById) { return document.getElementById("trailimageid").style } else { if (document.all) { return document.all.trailimagid.style } } } function gettrailobjnostyle() { if (document.getElementById) { return document.getElementById("trailimageid") } else { if (document.all) { return document.all.trailimagid } } } function truebody() { return (!window.opera && document.compatMode && document.compatMode != "BackCompat") ? document.documentElement : document.body } function showtrailb(c, a, b) { if (a > 0) { currentimageheight = a } document.onmousemove = followmouse; newHTML = '<div style="padding: 5px; background-color: #FFF; border: 1px solid #888;">'; newHTML = newHTML + '<div align="center" style="padding: 8px 2px 2px 2px;">' + b; newHTML = newHTML + '<br><img src="' + c + '" border="0"></div>'; newHTML = newHTML + "</div>"; gettrailobjnostyle().innerHTML = newHTML; gettrailobj().display = "inline" } function showtrail(b, a) { if (a > 0) { currentimageheight = a } document.onmousemove = followmouse; newHTML = '<div style="padding: 5px; background-color: #FFF; border: 1px solid #888;">'; newHTML = newHTML + '<div align="center" style="padding: 4px 2px 2px 2px;">'; newHTML = newHTML + '<img src="' + b + '" border="0"></div>'; newHTML = newHTML + "</div>"; gettrailobjnostyle().innerHTML = newHTML; gettrailobj().display = "inline" } function showtrailBatch(c, b, a) { document.onmousemove = followmouseBatch; cameraHTML = ""; newHTML = '<div style="padding: 5px; background-color: #FFF; border: 1px solid #888;" id="trailInnerDiv">'; newHTML = newHTML + '<div align="center" style="padding: 8px 2px 2px 2px;">'; newHTML = newHTML + '<img src="' + c + '" border="0"></div>'; newHTML = newHTML + "</div>"; gettrailobjnostyle().innerHTML = newHTML; gettrailobj().display = "inline"; gettrailobj().position = "absolute"; currentimageheight = $("trailInnerDiv").offsetHeight } function hidetrail() { gettrailobj().innerHTML = " "; gettrailobj().display = "none"; document.onmousemove = ""; gettrailobj().left = "-10000px" } function followmouse(f) { var b = offsetfrommouse[0]; var a = offsetfrommouse[1]; var d = document.all ? truebody().scrollLeft + truebody().clientWidth : pageXOffset + window.innerWidth - 15; var c = document.all ? Math.min(truebody().scrollHeight, truebody().clientHeight) : Math.min(window.innerHeight); if (typeof f != "undefined") { if (d - f.pageX < gettrailobjnostyle().offsetWidth) { b = f.pageX - b - gettrailobjnostyle().offsetWidth } else { b += f.pageX } if (c - f.pageY < (currentimageheight + 110)) { a += f.pageY - Math.max(0, (110 + currentimageheight + f.pageY - c - truebody().scrollTop)) } else { a += f.pageY } } else { if (typeof window.event != "undefined") { if (d - event.clientX < gettrailobjnostyle().offsetWidth) { b = event.clientX + truebody().scrollLeft - b - gettrailobjnostyle().offsetWidth } else { b += truebody().scrollLeft + event.clientX } if (c - event.clientY < (currentimageheight + 110)) { a += event.clientY + truebody().scrollTop - Math.max(0, (110 + currentimageheight + event.clientY - c)) } else { a += truebody().scrollTop + event.clientY } } } if (a < 0) { a = a * -1 } gettrailobj().left = b + "px"; gettrailobj().top = a + "px" } function followmouseBatch(j) { var c = offsetfrommouse[0]; var b = offsetfrommouse[1]; var h = document.all ? truebody().scrollLeft + truebody().clientWidth : pageXOffset + window.innerWidth - 15; var f = document.all ? Math.min(truebody().scrollHeight, truebody().clientHeight) : Math.min(window.innerHeight); var g = $("trailInnerDiv"); var d = g.offsetHeight; var a = g.offsetWidth; scrollPos = Position.realOffset(truebody()); if (typeof j != "undefined") { if (h - j.pageX < gettrailobjnostyle().offsetWidth) { c = j.pageX - c - gettrailobjnostyle().offsetWidth } else { c += j.pageX } if ((j.pageY - scrollPos[1]) + d > f) { b = -b + (j.pageY - d) } else { b += j.pageY } } else { if (typeof window.event != "undefined") { if (event.clientX + a > h) { c = -c + ((event.clientX + scrollPos[0]) - a) } else { c += (event.clientX + scrollPos[0]) } if (event.clientY + d > f) { b = -b + ((event.clientY + scrollPos[1]) - d) } else { b += (event.clientY + scrollPos[1]) } } } if (b < 0) { b = b * -1 } gettrailobj().left = c + "px"; gettrailobj().top = b + "px" } var FlashDetect = new function () { var a = this; a.installed = false; a.raw = ""; a.major = -1; a.minor = -1; a.revision = -1; a.revisionStr = ""; var b = [{ name: "ShockwaveFlash.ShockwaveFlash.7", version: function (h) { return d(h) } }, { name: "ShockwaveFlash.ShockwaveFlash.6", version: function (k) { var h = "6,0,21"; try { k.AllowScriptAccess = "always"; h = d(k) } catch (j) { } return h } }, { name: "ShockwaveFlash.ShockwaveFlash", version: function (h) { return d(h) } }]; var d = function (k) { var h = -1; try { h = k.GetVariable("$version") } catch (j) { } return h }; var g = function (h) { var k = -1; try { k = new ActiveXObject(h) } catch (j) { k = { activeXError: true} } return k }; var c = function (j) { var h = j.split(","); return { raw: j, major: parseInt(h[0].split(" ")[1], 10), minor: parseInt(h[1], 10), revision: parseInt(h[2], 10), revisionStr: h[2]} }; var f = function (l) { var j = l.split(/ +/); var k = j[2].split(/\./); var h = j[3]; return { raw: l, major: parseInt(k[0], 10), minor: parseInt(k[1], 10), revisionStr: h, revision: e(h)} }; var e = function (h) { return parseInt(h.replace(/[a-zA-Z]/g, ""), 10) || a.revision }; a.majorAtLeast = function (h) { return a.major >= h }; a.minorAtLeast = function (h) { return a.minor >= h }; a.revisionAtLeast = function (h) { return a.revision >= h }; a.versionAtLeast = function (j) { var k = [a.major, a.minor, a.revision]; var h = Math.min(k.length, arguments.length); for (i = 0; i < h; i++) { if (k[i] >= arguments[i]) { if (i + 1 < h && k[i] == arguments[i]) { continue } else { return true } } else { return false } } }; a.FlashDetect = function () { if (navigator.plugins && navigator.plugins.length > 0) { var l = "application/x-shockwave-flash"; var k = navigator.mimeTypes; if (k && k[l] && k[l].enabledPlugin && k[l].enabledPlugin.description) { var h = k[l].enabledPlugin.description; var m = f(h); a.raw = m.raw; a.major = m.major; a.minor = m.minor; a.revisionStr = m.revisionStr; a.revision = m.revision; a.installed = true } } else { if (navigator.appVersion.indexOf("Mac") == -1 && window.execScript) { var h = -1; for (var j = 0; j < b.length && h == -1; j++) { var n = g(b[j].name); if (!n.activeXError) { a.installed = true; h = b[j].version(n); if (h != -1) { var m = c(h); a.raw = m.raw; a.major = m.major; a.minor = m.minor; a.revision = m.revision; a.revisionStr = m.revisionStr } } } } } } () }; FlashDetect.JS_RELEASE = "1.0.4"; function createRequestObject() { var c; var b = navigator.appName; var a = navigator.appVersion; if (b == "Microsoft Internet Explorer") { c = new ActiveXObject("Microsoft.XMLHTTP") } else { c = new XMLHttpRequest() } return c } var http = createRequestObject(); var p_id = ""; function getstates(a) { http.open("get", "ajax_response.aspx?country_id=" + a.value); http.onreadystatechange = handleResponse; http.send(null) } function validateZipCode(d) { var e = document.getElementById("country"); var c = ""; try { if (e) { e = document.getElementById("country").value } else { e = document.getElementById("country1"); if (e) { e = document.getElementById("country1").value } else { e = "<%=country_id%>" } } var b = d.value; var a = new RegExp("[^A-Za-z0-9]"); while (a.test(b)) { b = b.replace(a, "") } b = b.toUpperCase(); d.value = b; if (d.value != null && d.value != "") { http.open("get", "ajax_response.aspx?zipcode=" + d.value + "&countryid=" + e); http.onreadystatechange = handleResponseZipCode; http.send(null) } else { try { document.getElementById("isvalidzcode").innerHTML = "" } catch (c) { document.getElementById("isvalidzcode1").innerHTML = "" } } } catch (c) { } } function resetZipcode() { var b = ""; var a = document.getElementById("z_code"); if (a) { document.getElementById("z_code").value = "" } else { a = document.getElementById("postalcode"); if (a) { document.getElementById("postalcode").value = "" } } var a = document.getElementById("z_code1"); if (a) { document.getElementById("z_code1").value = "" } else { a = document.getElementById("postalcode"); if (a) { document.getElementById("postalcode").value = "" } } try { document.getElementById("isvalidzcode").innerHTML = "" } catch (b) { if (document.getElementById("isvalidzcode1")) { document.getElementById("isvalidzcode1").innerHTML = "" } } } function resetCity() { var a = document.getElementById("City"); if (a) { document.getElementById("City").value = "" } else { a = document.getElementById("city"); if (a) { document.getElementById("city").value = "" } else { if (document.getElementById("city1")) { document.getElementById("city1").value = "" } } } } function nextimage(c, d, a, b) { p_id = a; http.open("get", "ajax_response.aspx?image_id=" + c + "&id=" + d + "&profile_id=" + a + "&imagecount=" + b); http.onreadystatechange = handleResponseImage; http.send(null) } function handleResponseImage() { if (http.readyState == 4) { var a = http.responseText; document.getElementById(p_id).innerHTML = a } } function handleResponse() { if (http.readyState == 4) { var a = http.responseText; document.getElementById("astates").innerHTML = a } } function handleResponseZipCode() { if (http.readyState == 4) { var a = http.responseXML; var e = ""; var c = ""; e = a.getElementsByTagName("errorMsg")[0].firstChild; try { if (e) { if (e.length > 0) { if (document.getElementById("isvalidzcode")) { document.getElementById("isvalidzcode").innerHTML = '<span style="color: red;">' + e.nodeValue + "</span>" } else { document.getElementById("isvalidzcode1").innerHTML = '<span style="color: red;">' + e.nodeValue + "</span>" } } } else { if (document.getElementById("isvalidzcode")) { document.getElementById("isvalidzcode").innerHTML = "" } else { document.getElementById("isvalidzcode1").innerHTML = "" } var d = document.getElementById("city"); if (d) { var b = a.getElementsByTagName("city")[0].firstChild; if (b) { if (b.length > 0) { document.getElementById("city").value = a.getElementsByTagName("city")[0].firstChild.nodeValue } } } else { d = document.getElementById("city1"); if (d) { var b = a.getElementsByTagName("city")[0].firstChild; if (b) { if (b.length > 0) { document.getElementById("city1").value = a.getElementsByTagName("city")[0].firstChild.nodeValue } } } else { var b = a.getElementsByTagName("city")[0].firstChild; if (b) { if (b.length > 0) { document.getElementById("City").value = a.getElementsByTagName("city")[0].firstChild.nodeValue } } } } if (document.getElementById("state")) { document.getElementById("state").value = a.getElementsByTagName("stateid")[0].firstChild.nodeValue } else { document.getElementById("state1").value = a.getElementsByTagName("stateid")[0].firstChild.nodeValue } } } catch (c) { } } } var swfobject = function () { var aq = "undefined", aD = "object", ab = "Shockwave Flash", X = "ShockwaveFlash.ShockwaveFlash", aE = "application/x-shockwave-flash", ac = "SWFObjectExprInst", ax = "onreadystatechange", af = window, aL = document, aB = navigator, aa = false, Z = [aN], aG = [], ag = [], al = [], aJ, ad, ap, at, ak = false, aU = false, aH, an, aI = true, ah = function () { var a = typeof aL.getElementById != aq && typeof aL.getElementsByTagName != aq && typeof aL.createElement != aq, e = aB.userAgent.toLowerCase(), c = aB.platform.toLowerCase(), h = c ? /win/.test(c) : /win/.test(e), k = c ? /mac/.test(c) : /mac/.test(e), g = /webkit/.test(e) ? parseFloat(e.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, d = ! +"\v1", f = [0, 0, 0], l = null; if (typeof aB.plugins != aq && typeof aB.plugins[ab] == aD) { l = aB.plugins[ab].description; if (l && !(typeof aB.mimeTypes != aq && aB.mimeTypes[aE] && !aB.mimeTypes[aE].enabledPlugin)) { aa = true; d = false; l = l.replace(/^.*\s+(\S+\s+\S+$)/, "$1"); f[0] = parseInt(l.replace(/^(.*)\..*$/, "$1"), 10); f[1] = parseInt(l.replace(/^.*\.(.*)\s.*$/, "$1"), 10); f[2] = /[a-zA-Z]/.test(l) ? parseInt(l.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0 } } else { if (typeof af.ActiveXObject != aq) { try { var j = new ActiveXObject(X); if (j) { l = j.GetVariable("$version"); if (l) { d = true; l = l.split(" ")[1].split(","); f = [parseInt(l[0], 10), parseInt(l[1], 10), parseInt(l[2], 10)] } } } catch (b) { } } } return { w3: a, pv: f, wk: g, ie: d, win: h, mac: k} } (), aK = function () { if (!ah.w3) { return } if ((typeof aL.readyState != aq && aL.readyState == "complete") || (typeof aL.readyState == aq && (aL.getElementsByTagName("body")[0] || aL.body))) { aP() } if (!ak) { if (typeof aL.addEventListener != aq) { aL.addEventListener("DOMContentLoaded", aP, false) } if (ah.ie && ah.win) { aL.attachEvent(ax, function () { if (aL.readyState == "complete") { aL.detachEvent(ax, arguments.callee); aP() } }); if (af == top) { (function () { if (ak) { return } try { aL.documentElement.doScroll("left") } catch (a) { setTimeout(arguments.callee, 0); return } aP() })() } } if (ah.wk) { (function () { if (ak) { return } if (!/loaded|complete/.test(aL.readyState)) { setTimeout(arguments.callee, 0); return } aP() })() } aC(aP) } } (); function aP() { if (ak) { return } try { var b = aL.getElementsByTagName("body")[0].appendChild(ar("span")); b.parentNode.removeChild(b) } catch (a) { return } ak = true; var d = Z.length; for (var c = 0; c < d; c++) { Z[c]() } } function aj(a) { if (ak) { a() } else { Z[Z.length] = a } } function aC(a) { if (typeof af.addEventListener != aq) { af.addEventListener("load", a, false) } else { if (typeof aL.addEventListener != aq) { aL.addEventListener("load", a, false) } else { if (typeof af.attachEvent != aq) { aM(af, "onload", a) } else { if (typeof af.onload == "function") { var b = af.onload; af.onload = function () { b(); a() } } else { af.onload = a } } } } } function aN() { if (aa) { Y() } else { am() } } function Y() { var d = aL.getElementsByTagName("body")[0]; var b = ar(aD); b.setAttribute("type", aE); var a = d.appendChild(b); if (a) { var c = 0; (function () { if (typeof a.GetVariable != aq) { var e = a.GetVariable("$version"); if (e) { e = e.split(" ")[1].split(","); ah.pv = [parseInt(e[0], 10), parseInt(e[1], 10), parseInt(e[2], 10)] } } else { if (c < 10) { c++; setTimeout(arguments.callee, 10); return } } d.removeChild(b); a = null; am() })() } else { am() } } function am() { var g = aG.length; if (g > 0) { for (var h = 0; h < g; h++) { var c = aG[h].id; var m = aG[h].callbackFn; var a = { success: false, id: c }; if (ah.pv[0] > 0) { var j = aS(c); if (j) { if (ao(aG[h].swfVersion) && !(ah.wk && ah.wk < 312)) { ay(c, true); if (m) { a.success = true; a.ref = av(c); m(a) } } else { if (aG[h].expressInstall && au()) { var e = {}; e.data = aG[h].expressInstall; e.width = j.getAttribute("width") || "0"; e.height = j.getAttribute("height") || "0"; if (j.getAttribute("class")) { e.styleclass = j.getAttribute("class") } if (j.getAttribute("align")) { e.align = j.getAttribute("align") } var f = {}; var d = j.getElementsByTagName("param"); var l = d.length; for (var k = 0; k < l; k++) { if (d[k].getAttribute("name").toLowerCase() != "movie") { f[d[k].getAttribute("name")] = d[k].getAttribute("value") } } ae(e, f, c, m) } else { aF(j); if (m) { m(a) } } } } } else { ay(c, true); if (m) { var b = av(c); if (b && typeof b.SetVariable != aq) { a.success = true; a.ref = b } m(a) } } } } } function av(b) { var d = null; var c = aS(b); if (c && c.nodeName == "OBJECT") { if (typeof c.SetVariable != aq) { d = c } else { var a = c.getElementsByTagName(aD)[0]; if (a) { d = a } } } return d } function au() { return !aU && ao("6.0.65") && (ah.win || ah.mac) && !(ah.wk && ah.wk < 312) } function ae(f, d, h, e) { aU = true; ap = e || null; at = { success: false, id: h }; var a = aS(h); if (a) { if (a.nodeName == "OBJECT") { aJ = aO(a); ad = null } else { aJ = a; ad = h } f.id = ac; if (typeof f.width == aq || (!/%$/.test(f.width) && parseInt(f.width, 10) < 310)) { f.width = "310" } if (typeof f.height == aq || (!/%$/.test(f.height) && parseInt(f.height, 10) < 137)) { f.height = "137" } aL.title = aL.title.slice(0, 47) + " - Flash Player Installation"; var b = ah.ie && ah.win ? "ActiveX" : "PlugIn", c = "MMredirectURL=" + af.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + b + "&MMdoctitle=" + aL.title; if (typeof d.flashvars != aq) { d.flashvars += "&" + c } else { d.flashvars = c } if (ah.ie && ah.win && a.readyState != 4) { var g = ar("div"); h += "SWFObjectNew"; g.setAttribute("id", h); a.parentNode.insertBefore(g, a); a.style.display = "none"; (function () { if (a.readyState == 4) { a.parentNode.removeChild(a) } else { setTimeout(arguments.callee, 10) } })() } aA(f, d, h) } } function aF(a) { if (ah.ie && ah.win && a.readyState != 4) { var b = ar("div"); a.parentNode.insertBefore(b, a); b.parentNode.replaceChild(aO(a), b); a.style.display = "none"; (function () { if (a.readyState == 4) { a.parentNode.removeChild(a) } else { setTimeout(arguments.callee, 10) } })() } else { a.parentNode.replaceChild(aO(a), a) } } function aO(b) { var d = ar("div"); if (ah.win && ah.ie) { d.innerHTML = b.innerHTML } else { var e = b.getElementsByTagName(aD)[0]; if (e) { var a = e.childNodes; if (a) { var f = a.length; for (var c = 0; c < f; c++) { if (!(a[c].nodeType == 1 && a[c].nodeName == "PARAM") && !(a[c].nodeType == 8)) { d.appendChild(a[c].cloneNode(true)) } } } } } return d } function aA(e, g, c) { var d, a = aS(c); if (ah.wk && ah.wk < 312) { return d } if (a) { if (typeof e.id == aq) { e.id = c } if (ah.ie && ah.win) { var f = ""; for (var j in e) { if (e[j] != Object.prototype[j]) { if (j.toLowerCase() == "data") { g.movie = e[j] } else { if (j.toLowerCase() == "styleclass") { f += ' class="' + e[j] + '"' } else { if (j.toLowerCase() != "classid") { f += " " + j + '="' + e[j] + '"' } } } } } var h = ""; for (var k in g) { if (g[k] != Object.prototype[k]) { h += '<param name="' + k + '" value="' + g[k] + '" />' } } a.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + f + ">" + h + "</object>"; ag[ag.length] = e.id; d = aS(e.id) } else { var b = ar(aD); b.setAttribute("type", aE); for (var l in e) { if (e[l] != Object.prototype[l]) { if (l.toLowerCase() == "styleclass") { b.setAttribute("class", e[l]) } else { if (l.toLowerCase() != "classid") { b.setAttribute(l, e[l]) } } } } for (var m in g) { if (g[m] != Object.prototype[m] && m.toLowerCase() != "movie") { aQ(b, m, g[m]) } } a.parentNode.replaceChild(b, a); d = b } } return d } function aQ(b, d, c) { var a = ar("param"); a.setAttribute("name", d); a.setAttribute("value", c); b.appendChild(a) } function aw(a) { var b = aS(a); if (b && b.nodeName == "OBJECT") { if (ah.ie && ah.win) { b.style.display = "none"; (function () { if (b.readyState == 4) { aT(a) } else { setTimeout(arguments.callee, 10) } })() } else { b.parentNode.removeChild(b) } } } function aT(a) { var b = aS(a); if (b) { for (var c in b) { if (typeof b[c] == "function") { b[c] = null } } b.parentNode.removeChild(b) } } function aS(a) { var c = null; try { c = aL.getElementById(a) } catch (b) { } return c } function ar(a) { return aL.createElement(a) } function aM(a, c, b) { a.attachEvent(c, b); al[al.length] = [a, c, b] } function ao(a) { var b = ah.pv, c = a.split("."); c[0] = parseInt(c[0], 10); c[1] = parseInt(c[1], 10) || 0; c[2] = parseInt(c[2], 10) || 0; return (b[0] > c[0] || (b[0] == c[0] && b[1] > c[1]) || (b[0] == c[0] && b[1] == c[1] && b[2] >= c[2])) ? true : false } function az(b, f, a, c) { if (ah.ie && ah.mac) { return } var e = aL.getElementsByTagName("head")[0]; if (!e) { return } var g = (a && typeof a == "string") ? a : "screen"; if (c) { aH = null; an = null } if (!aH || an != g) { var d = ar("style"); d.setAttribute("type", "text/css"); d.setAttribute("media", g); aH = e.appendChild(d); if (ah.ie && ah.win && typeof aL.styleSheets != aq && aL.styleSheets.length > 0) { aH = aL.styleSheets[aL.styleSheets.length - 1] } an = g } if (ah.ie && ah.win) { if (aH && typeof aH.addRule == aD) { aH.addRule(b, f) } } else { if (aH && typeof aL.createTextNode != aq) { aH.appendChild(aL.createTextNode(b + " {" + f + "}")) } } } function ay(a, c) { if (!aI) { return } var b = c ? "visible" : "hidden"; if (ak && aS(a)) { aS(a).style.visibility = b } else { az("#" + a, "visibility:" + b) } } function ai(b) { var a = /[\\\"<>\.;]/; var c = a.exec(b) != null; return c && typeof encodeURIComponent != aq ? encodeURIComponent(b) : b } var aR = function () { if (ah.ie && ah.win) { window.attachEvent("onunload", function () { var a = al.length; for (var b = 0; b < a; b++) { al[b][0].detachEvent(al[b][1], al[b][2]) } var d = ag.length; for (var c = 0; c < d; c++) { aw(ag[c]) } for (var e in ah) { ah[e] = null } ah = null; for (var f in swfobject) { swfobject[f] = null } swfobject = null }) } } (); return { registerObject: function (a, e, c, b) { if (ah.w3 && a && e) { var d = {}; d.id = a; d.swfVersion = e; d.expressInstall = c; d.callbackFn = b; aG[aG.length] = d; ay(a, false) } else { if (b) { b({ success: false, id: a }) } } }, getObjectById: function (a) { if (ah.w3) { return av(a) } }, embedSWF: function (l, e, h, f, c, a, b, j, g, k) { var d = { success: false, id: e }; if (ah.w3 && !(ah.wk && ah.wk < 312) && l && e && h && f && c) { ay(e, false); aj(function () { h += ""; f += ""; var r = {}; if (g && typeof g === aD) { for (var p in g) { r[p] = g[p] } } r.data = l; r.width = h; r.height = f; var o = {}; if (j && typeof j === aD) { for (var q in j) { o[q] = j[q] } } if (b && typeof b === aD) { for (var m in b) { if (typeof o.flashvars != aq) { o.flashvars += "&" + m + "=" + b[m] } else { o.flashvars = m + "=" + b[m] } } } if (ao(c)) { var n = aA(r, o, e); if (r.id == e) { ay(e, true) } d.success = true; d.ref = n } else { if (a && au()) { r.data = a; ae(r, o, e, k); return } else { ay(e, true) } } if (k) { k(d) } }) } else { if (k) { k(d) } } }, switchOffAutoHideShow: function () { aI = false }, ua: ah, getFlashPlayerVersion: function () { return { major: ah.pv[0], minor: ah.pv[1], release: ah.pv[2]} }, hasFlashPlayerVersion: ao, createSWF: function (a, b, c) { if (ah.w3) { return aA(a, b, c) } else { return undefined } }, showExpressInstall: function (b, a, d, c) { if (ah.w3 && au()) { ae(b, a, d, c) } }, removeSWF: function (a) { if (ah.w3) { aw(a) } }, createCSS: function (b, a, c, d) { if (ah.w3) { az(b, a, c, d) } }, addDomLoadEvent: aj, addLoadEvent: aC, getQueryParamValue: function (b) { var a = aL.location.search || aL.location.hash; if (a) { if (/\?/.test(a)) { a = a.split("?")[1] } if (b == null) { return ai(a) } var c = a.split("&"); for (var d = 0; d < c.length; d++) { if (c[d].substring(0, c[d].indexOf("=")) == b) { return ai(c[d].substring((c[d].indexOf("=") + 1))) } } } return "" }, expressInstallCallback: function () { if (aU) { var a = aS(ac); if (a && aJ) { a.parentNode.replaceChild(aJ, a); if (ad) { ay(ad, true); if (ah.ie && ah.win) { aJ.style.display = "block" } } if (ap) { ap(at) } } aU = false } } } } ();