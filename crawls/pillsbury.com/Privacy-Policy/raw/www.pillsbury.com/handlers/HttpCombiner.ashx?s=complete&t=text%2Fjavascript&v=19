(function(a) { a.fn.extend({ autocomplete: function(b, c) { var d = typeof b == "string"; c = a.extend({}, a.Autocompleter.defaults, { url: d ? b : null, data: d ? null : b, delay: d ? a.Autocompleter.defaults.delay : 10, max: c && !c.scroll ? 10 : 150 }, c); c.highlight = c.highlight || function(e) { return e; }; c.formatMatch = c.formatMatch || c.formatItem; return this.each(function() { new a.Autocompleter(this, c); }); }, result: function(b) { return this.bind("result", b); }, search: function(b) { return this.trigger("search", [b]); }, flushCache: function() { return this.trigger("flushCache"); }, setOptions: function(b) { return this.trigger("setOptions", [b]); }, unautocomplete: function() { return this.trigger("unautocomplete"); } }); a.Autocompleter = function(k, f) { var b = { UP: 38, DOWN: 40, DEL: 46, TAB: 9, RETURN: 13, ESC: 27, COMMA: 188, PAGEUP: 33, PAGEDOWN: 34, BACKSPACE: 8 }; var s = a(k).attr("autocomplete", "off").addClass(f.inputClass); var i; var o = ""; var l = a.Autocompleter.Cache(f); var d = 0; var u; var x = { mouseDownOnSelect: false }; var q = a.Autocompleter.Select(f, k, c, x); var w; a.browser.opera && a(k.form).bind("submit.autocomplete", function() { if (w) { w = false; return false; } }); s.bind((a.browser.opera ? "keypress" : "keydown") + ".autocomplete", function(y) { u = y.keyCode; switch (y.keyCode) { case b.UP: y.preventDefault(); if (q.visible()) { q.prev(); } else { t(0, true); } break; case b.DOWN: y.preventDefault(); if (q.visible()) { q.next(); } else { t(0, true); } break; case b.PAGEUP: y.preventDefault(); if (q.visible()) { q.pageUp(); } else { t(0, true); } break; case b.PAGEDOWN: y.preventDefault(); if (q.visible()) { q.pageDown(); } else { t(0, true); } break; case f.multiple && a.trim(f.multipleSeparator) == "," && b.COMMA: case b.TAB: case b.RETURN: if (c()) { y.preventDefault(); w = true; return false; } break; case b.ESC: q.hide(); break; default: clearTimeout(i); i = setTimeout(t, f.delay); break; } }).focus(function() { d++; }).blur(function() { d = 0; if (!x.mouseDownOnSelect) { r(); } }).click(function() { if (d++ > 1 && !q.visible()) { t(0, true); } }).bind("search", function() { var y = (arguments.length > 1) ? arguments[1] : null; function z(D, C) { var A; if (C && C.length) { for (var B = 0; B < C.length; B++) { if (C[B].result.toLowerCase() == D.toLowerCase()) { A = C[B]; break; } } } if (typeof y == "function") { y(A); } else { s.trigger("result", A && [A.data, A.value]); } } a.each(g(s.val()), function(A, B) { e(B, z, z); }); }).bind("flushCache", function() { l.flush(); }).bind("setOptions", function() { a.extend(f, arguments[1]); if ("data" in arguments[1]) { l.populate(); } }).bind("unautocomplete", function() { q.unbind(); s.unbind(); a(k.form).unbind(".autocomplete"); }); function c() { var z = q.selected(); if (!z) { return false; } var y = z.result; o = y; if (f.multiple) { var A = g(s.val()); if (A.length > 1) { y = A.slice(0, A.length - 1).join(f.multipleSeparator) + f.multipleSeparator + y; } y += f.multipleSeparator; } s.val(y); v(); s.trigger("result", [z.data, z.value]); return true; } function t(A, z) { if (u == b.DEL) { q.hide(); return; } var y = s.val(); if (!z && y == o) { return; } o = y; y = h(y); if (y.length >= f.minChars) { s.addClass(f.loadingClass); if (!f.matchCase) { y = y.toLowerCase(); } e(y, j, v); } else { m(); q.hide(); } } function g(z) { if (!z) { return [""]; } var A = z.split(f.multipleSeparator); var y = []; a.each(A, function(B, C) { if (a.trim(C)) { y[B] = a.trim(C); } }); return y; } function h(y) { if (!f.multiple) { return y; } var z = g(y); return z[z.length - 1]; } function p(y, z) { if (f.autoFill && (h(s.val()).toLowerCase() == y.toLowerCase()) && u != b.BACKSPACE) { s.val(s.val() + z.substring(h(o).length)); a.Autocompleter.Selection(k, o.length, o.length + z.length); } } function r() { clearTimeout(i); i = setTimeout(v, 200); } function v() { var y = q.visible(); q.hide(); clearTimeout(i); m(); if (f.mustMatch) { s.search(function(z) { if (!z) { if (f.multiple) { var A = g(s.val()).slice(0, -1); s.val(A.join(f.multipleSeparator) + (A.length ? f.multipleSeparator : "")); } else { s.val(""); } } }); } if (y) { a.Autocompleter.Selection(k, k.value.length, k.value.length); } } function j(z, y) { if (y && y.length && d) { m(); q.display(y, z); p(z, y[0].value); q.show(); } else { v(); } } function e(z, B, y) { if (!f.matchCase) { z = z.toLowerCase(); } var A = l.load(z); if (A && A.length) { B(z, A); } else { if ((typeof f.url == "string") && (f.url.length > 0)) { var C = { timestamp: +new Date() }; a.each(f.extraParams, function(D, E) { C[D] = typeof E == "function" ? E() : E; }); a.ajax({ mode: "abort", port: "autocomplete" + k.name, dataType: f.dataType, url: f.url, data: a.extend({ q: h(z), limit: f.max }, C), success: function(E) { var D = f.parse && f.parse(E) || n(E); l.add(z, D); B(z, D); } }); } else { q.emptyList(); y(z); } } } function n(B) { var y = []; var A = B.split("\n"); for (var z = 0; z < A.length; z++) { var C = a.trim(A[z]); if (C) { C = C.split("|"); y[y.length] = { data: C, value: C[0], result: f.formatResult && f.formatResult(C, C[0]) || C[0] }; } } return y; } function m() { s.removeClass(f.loadingClass); } }; a.Autocompleter.defaults = { inputClass: "ac_input", resultsClass: "ac_results", loadingClass: "ac_loading", minChars: 1, delay: 400, matchCase: false, matchSubset: true, matchContains: false, cacheLength: 10, max: 100, mustMatch: false, extraParams: {}, selectFirst: true, formatItem: function(b) { return b[0]; }, formatMatch: null, autoFill: false, width: 0, multiple: false, multipleSeparator: ", ", highlight: function(c, b) { return c.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + b.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>"); }, scroll: true, scrollHeight: 180 }; a.Autocompleter.Cache = function(c) { var f = {}; var d = 0; function h(l, k) { if (!c.matchCase) { l = l.toLowerCase(); } var j = l.indexOf(k); if (c.matchContains == "word") { j = l.toLowerCase().search("\\b" + k.toLowerCase()); } if (j == -1) { return false; } return j == 0 || c.matchContains; } function g(j, i) { if (d > c.cacheLength) { b(); } if (!f[j]) { d++; } f[j] = i; } function e() { if (!c.data) { return false; } var k = {}, j = 0; if (!c.url) { c.cacheLength = 1; } k[""] = []; for (var m = 0, l = c.data.length; m < l; m++) { var p = c.data[m]; p = (typeof p == "string") ? [p] : p; var o = c.formatMatch(p, m + 1, c.data.length); if (o === false) { continue; } var n = o.charAt(0).toLowerCase(); if (!k[n]) { k[n] = []; } var q = { value: o, data: p, result: c.formatResult && c.formatResult(p) || o }; k[n].push(q); if (j++ < c.max) { k[""].push(q); } } a.each(k, function(r, s) { c.cacheLength++; g(r, s); }); } setTimeout(e, 25); function b() { f = {}; d = 0; } return { flush: b, add: g, populate: e, load: function(n) { if (!c.cacheLength || !d) { return null; } if (!c.url && c.matchContains) { var m = []; for (var j in f) { if (j.length > 0) { var o = f[j]; a.each(o, function(p, k) { if (h(k.value, n)) { m.push(k); } }); } } return m; } else { if (f[n]) { return f[n]; } else { if (c.matchSubset) { for (var l = n.length - 1; l >= c.minChars; l--) { var o = f[n.substr(0, l)]; if (o) { var m = []; a.each(o, function(p, k) { if (h(k.value, n)) { m[m.length] = k; } }); return m; } } } } } return null; } }; }; a.Autocompleter.Select = function(e, j, l, p) { var i = { ACTIVE: "ac_over" }; var k, f = -1, r, m = "", s = true, c, o; function n() { if (!s) { return; } c = a("<div/>").hide().addClass(e.resultsClass).css("position", "absolute").appendTo(document.body); o = a("<ul/>").appendTo(c).mouseover(function(t) { if (q(t).nodeName && q(t).nodeName.toUpperCase() == "LI") { f = a("li", o).removeClass(i.ACTIVE).index(q(t)); a(q(t)).addClass(i.ACTIVE); } }).click(function(t) { a(q(t)).addClass(i.ACTIVE); l(); j.focus(); return false; }).mousedown(function() { p.mouseDownOnSelect = true; }).mouseup(function() { p.mouseDownOnSelect = false; }); if (e.width > 0) { c.css("width", e.width); } s = false; } function q(u) { var t = u.target; while (t && t.tagName != "LI") { t = t.parentNode; } if (!t) { return []; } return t; } function h(t) { k.slice(f, f + 1).removeClass(i.ACTIVE); g(t); var v = k.slice(f, f + 1).addClass(i.ACTIVE); if (e.scroll) { var u = 0; k.slice(0, f).each(function() { u += this.offsetHeight; }); if ((u + v[0].offsetHeight - o.scrollTop()) > o[0].clientHeight) { o.scrollTop(u + v[0].offsetHeight - o.innerHeight()); } else { if (u < o.scrollTop()) { o.scrollTop(u); } } } } function g(t) { f += t; if (f < 0) { f = k.size() - 1; } else { if (f >= k.size()) { f = 0; } } } function b(t) { return e.max && e.max < t ? e.max : t; } function d() { o.empty(); var u = b(r.length); for (var v = 0; v < u; v++) { if (!r[v]) { continue; } var w = e.formatItem(r[v].data, v + 1, u, r[v].value, m); if (w === false) { continue; } var t = a("<li/>").html(e.highlight(w, m)).addClass(v % 2 == 0 ? "ac_even" : "ac_odd").appendTo(o)[0]; a.data(t, "ac_data", r[v]); } k = o.find("li"); if (e.selectFirst) { k.slice(0, 1).addClass(i.ACTIVE); f = 0; } if (a.fn.bgiframe) { o.bgiframe(); } } return { display: function(u, t) { n(); r = u; m = t; d(); }, next: function() { h(1); }, prev: function() { h(-1); }, pageUp: function() { if (f != 0 && f - 8 < 0) { h(-f); } else { h(-8); } }, pageDown: function() { if (f != k.size() - 1 && f + 8 > k.size()) { h(k.size() - 1 - f); } else { h(8); } }, hide: function() { c && c.hide(); k && k.removeClass(i.ACTIVE); f = -1; }, visible: function() { return c && c.is(":visible"); }, current: function() { return this.visible() && (k.filter("." + i.ACTIVE)[0] || e.selectFirst && k[0]); }, show: function() { var v = a(j).offset(); c.css({ width: typeof e.width == "string" || e.width > 0 ? e.width : a(j).width(), top: v.top + j.offsetHeight, left: v.left }).show(); if (e.scroll) { o.scrollTop(0); o.css({ maxHeight: e.scrollHeight, overflow: "auto" }); if (a.browser.msie && typeof document.body.style.maxHeight === "undefined") { var t = 0; k.each(function() { t += this.offsetHeight; }); var u = t > e.scrollHeight; o.css("height", u ? e.scrollHeight : t); if (!u) { k.width(o.width() - parseInt(k.css("padding-left")) - parseInt(k.css("padding-right"))); } } } }, selected: function() { var t = k && k.filter("." + i.ACTIVE).removeClass(i.ACTIVE); return t && t.length && a.data(t[0], "ac_data"); }, emptyList: function() { o && o.empty(); }, unbind: function() { c && c.remove(); } }; }; a.Autocompleter.Selection = function(d, e, c) { if (d.createTextRange) { var b = d.createTextRange(); b.collapse(true); b.moveStart("character", e); b.moveEnd("character", c); b.select(); } else { if (d.setSelectionRange) { d.setSelectionRange(e, c); } else { if (d.selectionStart) { d.selectionStart = e; d.selectionEnd = c; } } } d.focus(); }; })(jQuery);var _previousTime = 0;
var _priorState = "";
var _adPresent = false;
var _isReplayed = false;
var _previousCIEC = ""; // previous current item embed code
var _previousEC = ""; //   previous embed code
var _firstFramePlayed = false; //   previous embed code
var _playComplete = false;
var _videoTitle = "";
var _embedCode = "";
var _videoLink = "";


function getFlashMovie(movieName) {
    if (window.document[movieName]) {
        return window.document[movieName];
    }

    if (navigator.appName.indexOf("Microsoft") == -1) {
        if (document.embeds && document.embeds[movieName])
            return document.embeds[movieName];
        else
            return document[movieName];
    }
    else // if (navigator.appName.indexOf("Microsoft Internet")!=-1)
    {
        return document.getElementById(movieName);
    }
}



function receiveOoyalaEvent(playerId, eventName, p) {
    var player = document.getElementById(playerId);
    var identifier = playerId.substring(11);
    var event_catcher = getFlashMovie("eventCatcher" + identifier);

    switch (eventName) {
        case "currentItemEmbedCodeChanged":
            event_catcher.resetEvents(playerId, player.getCurrentItemTitle());
            _priorState = "";
            _firstFramePlayed = false;
            break;

        case "embedCodeChanged":
            event_catcher.resetEvents(playerId, player.getTitle());
            _priorState = "";
            _firstFramePlayed = false;
            //            _videoTitle = arguments[2].title;
            //            _embedCode = arguments[2].embedCode;
            //            _videoLink = arguments[2].promo;
            break;

        case "playComplete":
            _playComplete = true;
            event_catcher.sendPercent_100(playerId);
            event_catcher.sendFinish(playerId);
            break;

        case "apiReady":
            if (jQuery('.hdnRecipeHeroPlayClicked').val() == "1") {
                jQuery('.hdnRecipeHeroPlayClicked').val("0");
                //player.playMovie();
            }
            jQuery('#heroVideoReady').val("1");
            break;

        case "activePanelChanged":
            break;

        case "adStarted":
            _adPresent = true;
            break;

        case "adCompleted":
            _priorState = "";
            _adPresent = false;
            break;

        case "stateChanged":
            if (_adPresent == false) {
                if (p["state"] == "playing") {
                    pauseHero(jQuery(player).parents('.hero_container'));
                    pauseHero("StopPlayer"); //Catch error in finding the right player
                  
                    TrackSpotlightVideoPlay();
                    if (jQuery('.hdnHeroPlacement').val() == "Full Column") {
                        FireHomepageWebTrends();
                    }

                    //replay and start decisions
                    if (isReplayed(player) && _playComplete) {
                        event_catcher.resetEvents(playerId, player.getTitle());
                        event_catcher.sendReplay(playerId);
                    } else if (!_firstFramePlayed) {
                        event_catcher.sendStart(playerId);
                        _firstFramePlayed = true;
                        ntptEventTag('ev=videostart&videotitle=' + encodeURIComponent(player.getTitle()));
                    }
                    _playComplete = false;

                    if (_priorState == "paused") {
                        event_catcher.sendPlay(playerId);
                    } else if (_priorState == "seeked") {
                        event_catcher.seek(playerId);
                    }
                    _priorState = "playing";
                } else if (p["state"] == "paused" || p["state"] == "channel") {
                    if (_priorState == "playing") {
                        if (player.getPlayheadTime() != 0) {
                            // if reaches here and the playHeatime is zero it means the play is complete
                            event_catcher.sendPause(playerId);
                        }
                    }
                    _priorState = "paused";
                }
            }
            break;

        case "seeked":
            _priorState = "seeked";
            break;

        case "playheadTimeChanged":
            if (_adPresent == false) {
                if (p.playheadTime >= player.getTotalTime() * 0.75) {
                    event_catcher.sendPercent_75(playerId);
                } else if (p.playheadTime >= player.getTotalTime() * 0.5) {
                    event_catcher.sendPercent_50(playerId);
                } else if (p.playheadTime >= player.getTotalTime() * 0.25) {
                    event_catcher.sendPercent_25(playerId);
                }
            }
            break;
    }
}

function isReplayed(player) {
    var replay = false;

    if (player.getLineup() != null) {
        if (player.getCurrentItemEmbedCode() == _previousCIEC) {
            replay = true;
        }
        _previousCIEC = player.getCurrentItemEmbedCode();
    } else {
        if (player.getEmbedCode() == _previousEC) {
            replay = true;
        }
        _previousEC = player.getEmbedCode();
    }
    return replay;
}


function TrackSpotlightVideoPlay() {
    var axel = Math.random() + "";
    var num = axel * 1000000000000000000;
    var spotpix = new Image();
    spotpix.src = "http://ad.doubleclick.net/activity;src=1869704;type=pills674;cat=pbvid477;ord=" + num;
    MarinTagging('UTM:I||eba_v526||||');
}

function FireHomepageWebTrends() {
    var vid_name = jQuery('.hdnVideoTitle').val();
    ntptEventTag('ev=Slideshow_video_bt&videoname=' + vid_name + '&ActionType=Other');
}
if (!this.JSON) {
JSON = function() {
function f(n) { return n < 10 ? '0' + n : n; }
Date.prototype.toJSON = function() {
return this.getUTCFullYear() + '-' +
f(this.getUTCMonth() + 1) + '-' +
f(this.getUTCDate()) + 'T' +
f(this.getUTCHours()) + ':' +
f(this.getUTCMinutes()) + ':' +
f(this.getUTCSeconds()) + 'Z';
}; var m = { '\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', '\r': '\\r', '"': '\\"', '\\': '\\\\' }; function stringify(value, whitelist) {
var a, i, k, l, r = /["\\\x00-\x1f\x7f-\x9f]/g, v; switch (typeof value) {
case 'string': return r.test(value) ? '"' + value.replace(r, function(a) {
var c = m[a]; if (c) { return c; }
c = a.charCodeAt(); return '\\u00' + Math.floor(c / 16).toString(16) +
(c % 16).toString(16);
}) + '"' : '"' + value + '"'; case 'number': return isFinite(value) ? String(value) : 'null'; case 'boolean': case 'null': return String(value); case 'object': if (!value) { return 'null'; }
if (typeof value.toJSON === 'function') { return stringify(value.toJSON()); }
a = []; if (typeof value.length === 'number' && !(value.propertyIsEnumerable('length'))) {
l = value.length; for (i = 0; i < l; i += 1) { a.push(stringify(value[i], whitelist) || 'null'); }
return '[' + a.join(',') + ']';
}
if (whitelist) { l = whitelist.length; for (i = 0; i < l; i += 1) { k = whitelist[i]; if (typeof k === 'string') { v = stringify(value[k], whitelist); if (v) { a.push(stringify(k) + ':' + v); } } } } else { for (k in value) { if (typeof k === 'string') { v = stringify(value[k], whitelist); if (v) { a.push(stringify(k) + ':' + v); } } } }
return '{' + a.join(',') + '}';
} 
}
return { stringify: stringify, parse: function(text, filter) {
var j; function walk(k, v) {
var i, n; if (v && typeof v === 'object') { for (i in v) { if (Object.prototype.hasOwnProperty.apply(v, [i])) { n = walk(i, v[i]); if (n !== undefined) { v[i] = n; } } } }
return filter(k, v);
}
if (/^[\],:{}\s]*$/.test(text.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) { j = eval('(' + text + ')'); return typeof filter === 'function' ? walk('', j) : j; }
throw new SyntaxError('parseJSON');
} 
};
} ();
}
function bitlyAPI(longUrl, callback) {
    this.bitly_api_key = 'R_cd79d173b03201efcedf49f304b5cbc0';
    this.bitly_user = 'gmpillsbury'; //Must be all lowercase for API to work.

    function initBitLy() {
        if (typeof BitlyCB == 'undefined') {
            var html_doc = document.getElementsByTagName('head')[0];
            js = document.createElement('script');
            js.setAttribute('type', 'text/javascript');
            js.setAttribute('src', 'http://bit.ly/javascript-api.js?version=latest&login=' + bitly_user + '&apiKey=' + bitly_api_key);
            html_doc.appendChild(js);
            
            js.onreadystatechange = function() {
                if (js.readyState == 'complete' || js.readyState == 'loaded') {
                    bitlyReady();
                }
            }
            js.onload = bitlyReady;
        } else bitlyReady();
    }

    function bitlyReady() {
        try {
            BitlyCB.bitlyResponse = function(data) {
                var s = '', first_result;
                for (var r in data.results) {
                    first_result = data.results[r]; break;
                }
                callback(first_result.shortUrl);
            };
            BitlyClient.call('shorten', { 'longUrl': longUrl }, 'BitlyCB.bitlyResponse');
        }
        catch (ex) {
            callback(false);
        }
    }

    initBitLy();
}
(function ($) {
    $.fn.pillspager = function (options) {
        var defaults = {
            visibleItems: 1,
            scrollItems: 1,
            pageSpeed: 350,
            nextButton: '',
            prevButton: '',
            disabledClass: '',
            hideControls: false,
            hideControlsContainer: false
        }
        var options = $.extend(defaults, options);

        var curItem = 0, pageWidth = 0, numItems, disabled = options.disabledClass, container = $(this);

        function moveNext() {
            if ((curItem + options.scrollItems) >= (numItems - options.visibleItems + options.scrollItems))
                return false;
            curItem += options.scrollItems;
            jQuery('ul:first>li', container).css({ 'position': 'relative' }).stop(true, true).animate({ left: '-=' + pageWidth }, options.pageSpeed, 'linear');
            if (options.disabledClass) {
                if ((curItem + options.scrollItems) >= (numItems - options.visibleItems + options.scrollItems))
                    jQuery(options.nextButton).addClass(disabled);
                jQuery(options.prevButton).removeClass(disabled);
            }
            return false;
        }
        function movePrev() {
            if (curItem == 0)
                return false;
            curItem -= options.scrollItems;
            jQuery('ul:first>li', container).stop(true, true).animate({ left: '+=' + pageWidth }, options.pageSpeed, 'linear');
            if (curItem - options.scrollItems < 0) {
                jQuery(options.prevButton).addClass(disabled);
            }
            jQuery(options.nextButton).removeClass(disabled);
            return false;
        }
        function setupControls() {
            //Show items first if the user wants to hide them.  Mainly fixes styling issues.
            if (options.hideControls)
                $(options.nextButton).add(options.prevButton).show();
            else if (options.hideControlsContainer)
                $(options.nextButton).parent().show();

            if (numItems <= options.visibleItems) {
                if (options.hideControls)
                    $(options.nextButton).add(options.prevButton).hide();
                else if (options.hideControlsContainer)
                    $(options.nextButton).parent().hide();
            }
            else {
                jQuery(options.nextButton).unbind('click').click(moveNext);
                jQuery(options.prevButton).unbind('click').click(movePrev);
            }
            if (options.disabledClass) $(options.prevButton).addClass(options.disabledClass);
        }
        return this.each(function () {
            if (options.prevButton && options.nextButton) {
                var scrollCount = 1;
                jQuery('>ul>li:lt(' + options.visibleItems + ')', container).each(function () {
                    if ($(this).is(':visible')) {
                        if (scrollCount <= options.scrollItems) {
                            pageWidth += $(this).outerWidth(true);
                        }
                    } else {
                        if (scrollCount <= options.scrollItems) {
                            var marg_left = $(this).css('margin-left') == 'auto' ? 0 : eval($(this).css('margin-left').replace('px', ''));
                            var marg_right = $(this).css('margin-right') == 'auto' ? 0 : eval($(this).css('margin-right').replace('px', ''));
                            pageWidth += eval($(this).css('width').replace('px', '')) + marg_left + marg_right;
                            //pageWidth += $(this).outerWidth(true);
                        }
                    }
                    scrollCount++;
                });
                numItems = jQuery('>ul>li', container).length;
                jQuery('>ul', container).width(100000);
                if (!jQuery(container).css('width'))
                    jQuery(container).width(pageWidth);
                setupControls();
            }
            else {
                throw Error("Invalid paging controls.");
            }
        });
    }
})(jQuery);/*!
* jQuery Cycle Plugin (with Transition Definitions)
* Examples and documentation at: http://jquery.malsup.com/cycle/
* Copyright (c) 2007-2010 M. Alsup
* Version: 2.9999.5 (10-APR-2012)
* Dual licensed under the MIT and GPL licenses.
* http://jquery.malsup.com/license.html
* Requires: jQuery v1.3.2 or later
*/
; (function ($, undefined) {
    "use strict";

    var ver = '2.9999.5';

    // if $.support is not defined (pre jQuery 1.3) add what I need
    if ($.support === undefined) {
        $.support = {
            opacity: !($.browser.msie)
        };
    }

    function debug(s) {
        if ($.fn.cycle.debug)
            log(s);
    }
    function log() {
        if (window.console && console.log)
            console.log('[cycle] ' + Array.prototype.join.call(arguments, ' '));
    }
    $.expr[':'].paused = function (el) {
        return el.cyclePause;
    };


    // the options arg can be...
    //   a number  - indicates an immediate transition should occur to the given slide index
    //   a string  - 'pause', 'resume', 'toggle', 'next', 'prev', 'stop', 'destroy' or the name of a transition effect (ie, 'fade', 'zoom', etc)
    //   an object - properties to control the slideshow
    //
    // the arg2 arg can be...
    //   the name of an fx (only used in conjunction with a numeric value for 'options')
    //   the value true (only used in first arg == 'resume') and indicates
    //	 that the resume should occur immediately (not wait for next timeout)

    $.fn.cycle = function (options, arg2) {
        var o = { s: this.selector, c: this.context };

        // in 1.3+ we can fix mistakes with the ready state
        if (this.length === 0 && options != 'stop') {
            if (!$.isReady && o.s) {
                log('DOM not ready, queuing slideshow');
                $(function () {
                    $(o.s, o.c).cycle(options, arg2);
                });
                return this;
            }
            // is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()
            log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
            return this;
        }

        // iterate the matched nodeset
        return this.each(function () {
            var opts = handleArguments(this, options, arg2);
            if (opts === false)
                return;

            opts.updateActivePagerLink = opts.updateActivePagerLink || $.fn.cycle.updateActivePagerLink;

            // stop existing slideshow for this container (if there is one)
            if (this.cycleTimeout)
                clearTimeout(this.cycleTimeout);
            this.cycleTimeout = this.cyclePause = 0;
            this.cycleStop = 0; // issue #108

            var $cont = $(this);
            var $slides = opts.slideExpr ? $(opts.slideExpr, this) : $cont.children();
            var els = $slides.get();

            if (els.length < 2) {
                log('terminating; too few slides: ' + els.length);
                return;
            }

            var opts2 = buildOptions($cont, $slides, els, opts, o);
            if (opts2 === false)
                return;

            var startTime = opts2.continuous ? 10 : getTimeout(els[opts2.currSlide], els[opts2.nextSlide], opts2, !opts2.backwards);

            // if it's an auto slideshow, kick it off
            if (startTime) {
                startTime += (opts2.delay || 0);
                if (startTime < 10)
                    startTime = 10;
                debug('first timeout: ' + startTime);
                this.cycleTimeout = setTimeout(function () { go(els, opts2, 0, !opts.backwards); }, startTime);
            }
        });
    };

    function triggerPause(cont, byHover, onPager) {
        var opts = $(cont).data('cycle.opts');
        var paused = !!cont.cyclePause;
        if (paused && opts.paused)
            opts.paused(cont, opts, byHover, onPager);
        else if (!paused && opts.resumed)
            opts.resumed(cont, opts, byHover, onPager);
    }

    // process the args that were passed to the plugin fn
    function handleArguments(cont, options, arg2) {
        if (cont.cycleStop === undefined)
            cont.cycleStop = 0;
        if (options === undefined || options === null)
            options = {};
        if (options.constructor == String) {
            switch (options) {
                case 'destroy':
                case 'stop':
                    var opts = $(cont).data('cycle.opts');
                    if (!opts)
                        return false;
                    cont.cycleStop++; // callbacks look for change
                    if (cont.cycleTimeout)
                        clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                    if (opts.elements)
                        $(opts.elements).stop();
                    $(cont).removeData('cycle.opts');
                    if (options == 'destroy')
                        destroy(cont, opts);
                    return false;
                case 'toggle':
                    cont.cyclePause = (cont.cyclePause === 1) ? 0 : 1;
                    checkInstantResume(cont.cyclePause, arg2, cont);
                    triggerPause(cont);
                    return false;
                case 'pause':
                    cont.cyclePause = 1;
                    triggerPause(cont);
                    return false;
                case 'resume':
                    cont.cyclePause = 0;
                    checkInstantResume(false, arg2, cont);
                    triggerPause(cont);
                    return false;
                case 'prev':
                case 'next':
                    opts = $(cont).data('cycle.opts');
                    if (!opts) {
                        log('options not found, "prev/next" ignored');
                        return false;
                    }
                    $.fn.cycle[options](opts);
                    return false;
                default:
                    options = { fx: options };
            }
            return options;
        }
        else if (options.constructor == Number) {
            // go to the requested slide
            var num = options;
            options = $(cont).data('cycle.opts');
            if (!options) {
                log('options not found, can not advance slide');
                return false;
            }
            if (num < 0 || num >= options.elements.length) {
                log('invalid slide index: ' + num);
                return false;
            }
            options.nextSlide = num;
            if (cont.cycleTimeout) {
                clearTimeout(cont.cycleTimeout);
                cont.cycleTimeout = 0;
            }
            if (typeof arg2 == 'string')
                options.oneTimeFx = arg2;
            go(options.elements, options, 1, num >= options.currSlide);
            return false;
        }
        return options;

        function checkInstantResume(isPaused, arg2, cont) {
            if (!isPaused && arg2 === true) { // resume now!
                var options = $(cont).data('cycle.opts');
                if (!options) {
                    log('options not found, can not resume');
                    return false;
                }
                if (cont.cycleTimeout) {
                    clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                }
                go(options.elements, options, 1, !options.backwards);
            }
        }
    }

    function removeFilter(el, opts) {
        if (!$.support.opacity && opts.cleartype && el.style.filter) {
            try { el.style.removeAttribute('filter'); }
            catch (smother) { } // handle old opera versions
        }
    }

    // unbind event handlers
    function destroy(cont, opts) {
        if (opts.next)
            $(opts.next).unbind(opts.prevNextEvent);
        if (opts.prev)
            $(opts.prev).unbind(opts.prevNextEvent);

        if (opts.pager || opts.pagerAnchorBuilder)
            $.each(opts.pagerAnchors || [], function () {
                this.unbind().remove();
            });
        opts.pagerAnchors = null;
        $(cont).unbind('mouseenter.cycle mouseleave.cycle');
        if (opts.destroy) // callback
            opts.destroy(opts);
    }

    // one-time initialization
    function buildOptions($cont, $slides, els, options, o) {
        var startingSlideSpecified;
        // support metadata plugin (v1.0 and v2.0)
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
        var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;
        if (meta)
            opts = $.extend(opts, meta);
        if (opts.autostop)
            opts.countdown = opts.autostopCount || els.length;

        var cont = $cont[0];
        $cont.data('cycle.opts', opts);
        opts.$cont = $cont;
        opts.stopCount = cont.cycleStop;
        opts.elements = els;
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];

        // push some after callbacks
        if (!$.support.opacity && opts.cleartype)
            opts.after.push(function () { removeFilter(this, opts); });
        if (opts.continuous)
            opts.after.push(function () { go(els, opts, 0, !opts.backwards); });

        saveOriginalOpts(opts);

        // clearType corrections
        if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)
            clearTypeFix($slides);

        // container requires non-static position so that slides can be position within
        if ($cont.css('position') == 'static')
            $cont.css('position', 'relative');
        if (opts.width)
            $cont.width(opts.width);
        if (opts.height && opts.height != 'auto')
            $cont.height(opts.height);

        if (opts.startingSlide !== undefined) {
            opts.startingSlide = parseInt(opts.startingSlide, 10);
            if (opts.startingSlide >= els.length || opts.startSlide < 0)
                opts.startingSlide = 0; // catch bogus input
            else
                startingSlideSpecified = true;
        }
        else if (opts.backwards)
            opts.startingSlide = els.length - 1;
        else
            opts.startingSlide = 0;

        // if random, mix up the slide array
        if (opts.random) {
            opts.randomMap = [];
            for (var i = 0; i < els.length; i++)
                opts.randomMap.push(i);
            opts.randomMap.sort(function (a, b) { return Math.random() - 0.5; });
            if (startingSlideSpecified) {
                // try to find the specified starting slide and if found set start slide index in the map accordingly
                for (var cnt = 0; cnt < els.length; cnt++) {
                    if (opts.startingSlide == opts.randomMap[cnt]) {
                        opts.randomIndex = cnt;
                    }
                }
            }
            else {
                opts.randomIndex = 1;
                opts.startingSlide = opts.randomMap[1];
            }
        }
        else if (opts.startingSlide >= els.length)
            opts.startingSlide = 0; // catch bogus input
        opts.currSlide = opts.startingSlide || 0;
        var first = opts.startingSlide;

        // set position and zIndex on all the slides
        $slides.css({ position: 'absolute', top: 0, left: 0 }).hide().each(function (i) {
            var z;
            if (opts.backwards)
                z = first ? i <= first ? els.length + (i - first) : first - i : els.length - i;
            else
                z = first ? i >= first ? els.length - (i - first) : first - i : els.length - i;
            $(this).css('z-index', z);
        });

        // make sure first slide is visible
        $(els[first]).css('opacity', 1).show(); // opacity bit needed to handle restart use case
        removeFilter(els[first], opts);

        // stretch slides
        if (opts.fit) {
            if (!opts.aspect) {
                if (opts.width)
                    $slides.width(opts.width);
                if (opts.height && opts.height != 'auto')
                    $slides.height(opts.height);
            } else {
                $slides.each(function () {
                    var $slide = $(this);
                    var ratio = (opts.aspect === true) ? $slide.width() / $slide.height() : opts.aspect;
                    if (opts.width && $slide.width() != opts.width) {
                        $slide.width(opts.width);
                        $slide.height(opts.width / ratio);
                    }

                    if (opts.height && $slide.height() < opts.height) {
                        $slide.height(opts.height);
                        $slide.width(opts.height * ratio);
                    }
                });
            }
        }

        if (opts.center && ((!opts.fit) || opts.aspect)) {
            $slides.each(function () {
                var $slide = $(this);
                $slide.css({
                    "margin-left": opts.width ?
					((opts.width - $slide.width()) / 2) + "px" :
					0,
                    "margin-top": opts.height ?
					((opts.height - $slide.height()) / 2) + "px" :
					0
                });
            });
        }

        if (opts.center && !opts.fit && !opts.slideResize) {
            $slides.each(function () {
                var $slide = $(this);
                $slide.css({
                    "margin-left": opts.width ? ((opts.width - $slide.width()) / 2) + "px" : 0,
                    "margin-top": opts.height ? ((opts.height - $slide.height()) / 2) + "px" : 0
                });
            });
        }

        // stretch container
        var reshape = opts.containerResize && !$cont.innerHeight();
        if (reshape) { // do this only if container has no size http://tinyurl.com/da2oa9
            var maxw = 0, maxh = 0;
            for (var j = 0; j < els.length; j++) {
                var $e = $(els[j]), e = $e[0], w = $e.outerWidth(), h = $e.outerHeight();
                if (!w) w = e.offsetWidth || e.width || $e.attr('width');
                if (!h) h = e.offsetHeight || e.height || $e.attr('height');
                maxw = w > maxw ? w : maxw;
                maxh = h > maxh ? h : maxh;
            }
            if (maxw > 0 && maxh > 0)
                $cont.css({ width: maxw + 'px', height: maxh + 'px' });
        }

        var pauseFlag = false;  // https://github.com/malsup/cycle/issues/44
        if (opts.pause)
            $cont.bind('mouseenter.cycle', function () {
                pauseFlag = true;
                this.cyclePause++;
                triggerPause(cont, true);
            }).bind('mouseleave.cycle', function () {
                if (pauseFlag)
                    this.cyclePause--;
                triggerPause(cont, true);
            });

        if (supportMultiTransitions(opts) === false)
            return false;

        // apparently a lot of people use image slideshows without height/width attributes on the images.
        // Cycle 2.50+ requires the sizing info for every slide; this block tries to deal with that.
        var requeue = false;
        options.requeueAttempts = options.requeueAttempts || 0;
        $slides.each(function () {
            // try to get height/width of each slide
            var $el = $(this);
            this.cycleH = (opts.fit && opts.height) ? opts.height : ($el.height() || this.offsetHeight || this.height || $el.attr('height') || 0);
            this.cycleW = (opts.fit && opts.width) ? opts.width : ($el.width() || this.offsetWidth || this.width || $el.attr('width') || 0);

            if ($el.is('img')) {
                // sigh..  sniffing, hacking, shrugging...  this crappy hack tries to account for what browsers do when
                // an image is being downloaded and the markup did not include sizing info (height/width attributes);
                // there seems to be some "default" sizes used in this situation
                var loadingIE = ($.browser.msie && this.cycleW == 28 && this.cycleH == 30 && !this.complete);
                var loadingFF = ($.browser.mozilla && this.cycleW == 34 && this.cycleH == 19 && !this.complete);
                var loadingOp = ($.browser.opera && ((this.cycleW == 42 && this.cycleH == 19) || (this.cycleW == 37 && this.cycleH == 17)) && !this.complete);
                var loadingOther = (this.cycleH === 0 && this.cycleW === 0 && !this.complete);
                // don't requeue for images that are still loading but have a valid size
                if (loadingIE || loadingFF || loadingOp || loadingOther) {
                    if (o.s && opts.requeueOnImageNotLoaded && ++options.requeueAttempts < 100) { // track retry count so we don't loop forever
                        log(options.requeueAttempts, ' - img slide not loaded, requeuing slideshow: ', this.src, this.cycleW, this.cycleH);
                        setTimeout(function () { $(o.s, o.c).cycle(options); }, opts.requeueTimeout);
                        requeue = true;
                        return false; // break each loop
                    }
                    else {
                        log('could not determine size of image: ' + this.src, this.cycleW, this.cycleH);
                    }
                }
            }
            return true;
        });

        if (requeue)
            return false;

        opts.cssBefore = opts.cssBefore || {};
        opts.cssAfter = opts.cssAfter || {};
        opts.cssFirst = opts.cssFirst || {};
        opts.animIn = opts.animIn || {};
        opts.animOut = opts.animOut || {};

        $slides.not(':eq(' + first + ')').css(opts.cssBefore);
        $($slides[first]).css(opts.cssFirst);

        if (opts.timeout) {
            opts.timeout = parseInt(opts.timeout, 10);
            // ensure that timeout and speed settings are sane
            if (opts.speed.constructor == String)
                opts.speed = $.fx.speeds[opts.speed] || parseInt(opts.speed, 10);
            if (!opts.sync)
                opts.speed = opts.speed / 2;

            var buffer = opts.fx == 'none' ? 0 : opts.fx == 'shuffle' ? 500 : 250;
            while ((opts.timeout - opts.speed) < buffer) // sanitize timeout
                opts.timeout += opts.speed;
        }
        if (opts.easing)
            opts.easeIn = opts.easeOut = opts.easing;
        if (!opts.speedIn)
            opts.speedIn = opts.speed;
        if (!opts.speedOut)
            opts.speedOut = opts.speed;

        opts.slideCount = els.length;
        opts.currSlide = opts.lastSlide = first;
        if (opts.random) {
            if (++opts.randomIndex == els.length)
                opts.randomIndex = 0;
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        }
        else if (opts.backwards)
            opts.nextSlide = opts.startingSlide === 0 ? (els.length - 1) : opts.startingSlide - 1;
        else
            opts.nextSlide = opts.startingSlide >= (els.length - 1) ? 0 : opts.startingSlide + 1;

        // run transition init fn
        if (!opts.multiFx) {
            var init = $.fn.cycle.transitions[opts.fx];
            if ($.isFunction(init))
                init($cont, $slides, opts);
            else if (opts.fx != 'custom' && !opts.multiFx) {
                log('unknown transition: ' + opts.fx, '; slideshow terminating');
                return false;
            }
        }

        // fire artificial events
        var e0 = $slides[first];
        if (!opts.skipInitializationCallbacks) {
            if (opts.before.length)
                opts.before[0].apply(e0, [e0, e0, opts, true]);
            if (opts.after.length)
                opts.after[0].apply(e0, [e0, e0, opts, true]);
        }
        if (opts.next)
            $(opts.next).bind(opts.prevNextEvent, function () { return advance(opts, 1); });
        if (opts.prev)
            $(opts.prev).bind(opts.prevNextEvent, function () { return advance(opts, 0); });
        if (opts.pager || opts.pagerAnchorBuilder)
            buildPager(els, opts);

        exposeAddSlide(opts, els);

        return opts;
    }

    // save off original opts so we can restore after clearing state
    function saveOriginalOpts(opts) {
        opts.original = { before: [], after: [] };
        opts.original.cssBefore = $.extend({}, opts.cssBefore);
        opts.original.cssAfter = $.extend({}, opts.cssAfter);
        opts.original.animIn = $.extend({}, opts.animIn);
        opts.original.animOut = $.extend({}, opts.animOut);
        $.each(opts.before, function () { opts.original.before.push(this); });
        $.each(opts.after, function () { opts.original.after.push(this); });
    }

    function supportMultiTransitions(opts) {
        var i, tx, txs = $.fn.cycle.transitions;
        // look for multiple effects
        if (opts.fx.indexOf(',') > 0) {
            opts.multiFx = true;
            opts.fxs = opts.fx.replace(/\s*/g, '').split(',');
            // discard any bogus effect names
            for (i = 0; i < opts.fxs.length; i++) {
                var fx = opts.fxs[i];
                tx = txs[fx];
                if (!tx || !txs.hasOwnProperty(fx) || !$.isFunction(tx)) {
                    log('discarding unknown transition: ', fx);
                    opts.fxs.splice(i, 1);
                    i--;
                }
            }
            // if we have an empty list then we threw everything away!
            if (!opts.fxs.length) {
                log('No valid transitions named; slideshow terminating.');
                return false;
            }
        }
        else if (opts.fx == 'all') {  // auto-gen the list of transitions
            opts.multiFx = true;
            opts.fxs = [];
            for (var p in txs) {
                if (txs.hasOwnProperty(p)) {
                    tx = txs[p];
                    if (txs.hasOwnProperty(p) && $.isFunction(tx))
                        opts.fxs.push(p);
                }
            }
        }
        if (opts.multiFx && opts.randomizeEffects) {
            // munge the fxs array to make effect selection random
            var r1 = Math.floor(Math.random() * 20) + 30;
            for (i = 0; i < r1; i++) {
                var r2 = Math.floor(Math.random() * opts.fxs.length);
                opts.fxs.push(opts.fxs.splice(r2, 1)[0]);
            }
            debug('randomized fx sequence: ', opts.fxs);
        }
        return true;
    }

    // provide a mechanism for adding slides after the slideshow has started
    function exposeAddSlide(opts, els) {
        opts.addSlide = function (newSlide, prepend) {
            var $s = $(newSlide), s = $s[0];
            if (!opts.autostopCount)
                opts.countdown++;
            els[prepend ? 'unshift' : 'push'](s);
            if (opts.els)
                opts.els[prepend ? 'unshift' : 'push'](s); // shuffle needs this
            opts.slideCount = els.length;

            // add the slide to the random map and resort
            if (opts.random) {
                opts.randomMap.push(opts.slideCount - 1);
                opts.randomMap.sort(function (a, b) { return Math.random() - 0.5; });
            }

            $s.css('position', 'absolute');
            $s[prepend ? 'prependTo' : 'appendTo'](opts.$cont);

            if (prepend) {
                opts.currSlide++;
                opts.nextSlide++;
            }

            if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)
                clearTypeFix($s);

            if (opts.fit && opts.width)
                $s.width(opts.width);
            if (opts.fit && opts.height && opts.height != 'auto')
                $s.height(opts.height);
            s.cycleH = (opts.fit && opts.height) ? opts.height : $s.height();
            s.cycleW = (opts.fit && opts.width) ? opts.width : $s.width();

            $s.css(opts.cssBefore);

            if (opts.pager || opts.pagerAnchorBuilder)
                $.fn.cycle.createPagerAnchor(els.length - 1, s, $(opts.pager), els, opts);

            if ($.isFunction(opts.onAddSlide))
                opts.onAddSlide($s);
            else
                $s.hide(); // default behavior
        };
    }

    // reset internal state; we do this on every pass in order to support multiple effects
    $.fn.cycle.resetState = function (opts, fx) {
        fx = fx || opts.fx;
        opts.before = []; opts.after = [];
        opts.cssBefore = $.extend({}, opts.original.cssBefore);
        opts.cssAfter = $.extend({}, opts.original.cssAfter);
        opts.animIn = $.extend({}, opts.original.animIn);
        opts.animOut = $.extend({}, opts.original.animOut);
        opts.fxFn = null;
        $.each(opts.original.before, function () { opts.before.push(this); });
        $.each(opts.original.after, function () { opts.after.push(this); });

        // re-init
        var init = $.fn.cycle.transitions[fx];
        if ($.isFunction(init))
            init(opts.$cont, $(opts.elements), opts);
    };

    // this is the main engine fn, it handles the timeouts, callbacks and slide index mgmt
    function go(els, opts, manual, fwd) {
        var p = opts.$cont[0], curr = els[opts.currSlide], next = els[opts.nextSlide];

        // opts.busy is true if we're in the middle of an animation
        if (manual && opts.busy && opts.manualTrump) {
            // let manual transitions requests trump active ones
            debug('manualTrump in go(), stopping active transition');
            $(els).stop(true, true);
            opts.busy = 0;
            clearTimeout(p.cycleTimeout);
        }

        // don't begin another timeout-based transition if there is one active
        if (opts.busy) {
            debug('transition active, ignoring new tx request');
            return;
        }


        // stop cycling if we have an outstanding stop request
        if (p.cycleStop != opts.stopCount || p.cycleTimeout === 0 && !manual)
            return;

        // check to see if we should stop cycling based on autostop options
        if (!manual && !p.cyclePause && !opts.bounce &&
		((opts.autostop && (--opts.countdown <= 0)) ||
		(opts.nowrap && !opts.random && opts.nextSlide < opts.currSlide))) {
            if (opts.end)
                opts.end(opts);
            return;
        }

        // if slideshow is paused, only transition on a manual trigger
        var changed = false;
        if ((manual || !p.cyclePause) && (opts.nextSlide != opts.currSlide)) {
            changed = true;
            var fx = opts.fx;
            // keep trying to get the slide size if we don't have it yet
            curr.cycleH = curr.cycleH || $(curr).height();
            curr.cycleW = curr.cycleW || $(curr).width();
            next.cycleH = next.cycleH || $(next).height();
            next.cycleW = next.cycleW || $(next).width();

            // support multiple transition types
            if (opts.multiFx) {
                if (fwd && (opts.lastFx === undefined || ++opts.lastFx >= opts.fxs.length))
                    opts.lastFx = 0;
                else if (!fwd && (opts.lastFx === undefined || --opts.lastFx < 0))
                    opts.lastFx = opts.fxs.length - 1;
                fx = opts.fxs[opts.lastFx];
            }

            // one-time fx overrides apply to:  $('div').cycle(3,'zoom');
            if (opts.oneTimeFx) {
                fx = opts.oneTimeFx;
                opts.oneTimeFx = null;
            }

            $.fn.cycle.resetState(opts, fx);

            // run the before callbacks
            if (opts.before.length)
                $.each(opts.before, function (i, o) {
                    if (p.cycleStop != opts.stopCount) return;
                    o.apply(next, [curr, next, opts, fwd]);
                });

            // stage the after callacks
            var after = function () {
                opts.busy = 0;
                $.each(opts.after, function (i, o) {
                    if (p.cycleStop != opts.stopCount) return;
                    o.apply(next, [curr, next, opts, fwd]);
                });
                if (!p.cycleStop) {
                    // queue next transition
                    queueNext();
                }
            };

            debug('tx firing(' + fx + '); currSlide: ' + opts.currSlide + '; nextSlide: ' + opts.nextSlide);

            // get ready to perform the transition
            opts.busy = 1;
            if (opts.fxFn) // fx function provided?
                opts.fxFn(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
            else if ($.isFunction($.fn.cycle[opts.fx])) // fx plugin ?
                $.fn.cycle[opts.fx](curr, next, opts, after, fwd, manual && opts.fastOnEvent);
            else
                $.fn.cycle.custom(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
        }
        else {
            queueNext();
        }

        if (changed || opts.nextSlide == opts.currSlide) {
            // calculate the next slide
            var roll;
            opts.lastSlide = opts.currSlide;
            if (opts.random) {
                opts.currSlide = opts.nextSlide;
                if (++opts.randomIndex == els.length) {
                    opts.randomIndex = 0;
                    opts.randomMap.sort(function (a, b) { return Math.random() - 0.5; });
                }
                opts.nextSlide = opts.randomMap[opts.randomIndex];
                if (opts.nextSlide == opts.currSlide)
                    opts.nextSlide = (opts.currSlide == opts.slideCount - 1) ? 0 : opts.currSlide + 1;
            }
            else if (opts.backwards) {
                roll = (opts.nextSlide - 1) < 0;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = 1;
                    opts.currSlide = 0;
                }
                else {
                    opts.nextSlide = roll ? (els.length - 1) : opts.nextSlide - 1;
                    opts.currSlide = roll ? 0 : opts.nextSlide + 1;
                }
            }
            else { // sequence
                roll = (opts.nextSlide + 1) == els.length;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = els.length - 2;
                    opts.currSlide = els.length - 1;
                }
                else {
                    opts.nextSlide = roll ? 0 : opts.nextSlide + 1;
                    opts.currSlide = roll ? els.length - 1 : opts.nextSlide - 1;
                }
            }
        }
        if (changed && opts.pager)
            opts.updateActivePagerLink(opts.pager, opts.currSlide, opts.activePagerClass);

        function queueNext() {
            // stage the next transition
            var ms = 0, timeout = opts.timeout;
            if (opts.timeout && !opts.continuous) {
                ms = getTimeout(els[opts.currSlide], els[opts.nextSlide], opts, fwd);
                if (opts.fx == 'shuffle')
                    ms -= opts.speedOut;
            }
            else if (opts.continuous && p.cyclePause) // continuous shows work off an after callback, not this timer logic
                ms = 10;
            if (ms > 0)
                p.cycleTimeout = setTimeout(function () { go(els, opts, 0, !opts.backwards); }, ms);
        }
    }

    // invoked after transition
    $.fn.cycle.updateActivePagerLink = function (pager, currSlide, clsName) {
        $(pager).each(function () {
            $(this).children().removeClass(clsName).eq(currSlide).addClass(clsName);
        });
    };

    // calculate timeout value for current transition
    function getTimeout(curr, next, opts, fwd) {
        if (opts.timeoutFn) {
            // call user provided calc fn
            var t = opts.timeoutFn.call(curr, curr, next, opts, fwd);
            while (opts.fx != 'none' && (t - opts.speed) < 250) // sanitize timeout
                t += opts.speed;
            debug('calculated timeout: ' + t + '; speed: ' + opts.speed);
            if (t !== false)
                return t;
        }
        return opts.timeout;
    }

    // expose next/prev function, caller must pass in state
    $.fn.cycle.next = function (opts) { advance(opts, 1); };
    $.fn.cycle.prev = function (opts) { advance(opts, 0); };

    // advance slide forward or back
    function advance(opts, moveForward) {
        var val = moveForward ? 1 : -1;
        var els = opts.elements;
        var p = opts.$cont[0], timeout = p.cycleTimeout;
        if (timeout) {
            clearTimeout(timeout);
            p.cycleTimeout = 0;
        }
        if (opts.random && val < 0) {
            // move back to the previously display slide
            opts.randomIndex--;
            if (--opts.randomIndex == -2)
                opts.randomIndex = els.length - 2;
            else if (opts.randomIndex == -1)
                opts.randomIndex = els.length - 1;
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        }
        else if (opts.random) {
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        }
        else {
            opts.nextSlide = opts.currSlide + val;
            if (opts.nextSlide < 0) {
                if (opts.nowrap) return false;
                opts.nextSlide = els.length - 1;
            }
            else if (opts.nextSlide >= els.length) {
                if (opts.nowrap) return false;
                opts.nextSlide = 0;
            }
        }

        var cb = opts.onPrevNextEvent || opts.prevNextClick; // prevNextClick is deprecated
        if ($.isFunction(cb))
            cb(val > 0, opts.nextSlide, els[opts.nextSlide]);
        go(els, opts, 1, moveForward);
        return false;
    }

    function buildPager(els, opts) {
        var $p = $(opts.pager);
        $.each(els, function (i, o) {
            $.fn.cycle.createPagerAnchor(i, o, $p, els, opts);
        });
        opts.updateActivePagerLink(opts.pager, opts.startingSlide, opts.activePagerClass);
    }

    $.fn.cycle.createPagerAnchor = function (i, el, $p, els, opts) {
        var a;
        if ($.isFunction(opts.pagerAnchorBuilder)) {
            a = opts.pagerAnchorBuilder(i, el);
            debug('pagerAnchorBuilder(' + i + ', el) returned: ' + a);
        }
        else
            a = '<a href="#">' + (i + 1) + '</a>';

        if (!a)
            return;
        var $a = $(a);
        // don't reparent if anchor is in the dom
        if ($a.parents('body').length === 0) {
            var arr = [];
            if ($p.length > 1) {
                $p.each(function () {
                    var $clone = $a.clone(true);
                    $(this).append($clone);
                    arr.push($clone[0]);
                });
                $a = $(arr);
            }
            else {
                $a.appendTo($p);
            }
        }

        opts.pagerAnchors = opts.pagerAnchors || [];
        opts.pagerAnchors.push($a);

        var pagerFn = function (e) {
            e.preventDefault();
            opts.nextSlide = i;
            var p = opts.$cont[0], timeout = p.cycleTimeout;
            if (timeout) {
                clearTimeout(timeout);
                p.cycleTimeout = 0;
            }
            var cb = opts.onPagerEvent || opts.pagerClick; // pagerClick is deprecated
            if ($.isFunction(cb))
                cb(opts.nextSlide, els[opts.nextSlide]);
            go(els, opts, 1, opts.currSlide < i); // trigger the trans
            //		return false; // <== allow bubble
        };

        if (/mouseenter|mouseover/i.test(opts.pagerEvent)) {
            $a.hover(pagerFn, function () { /* no-op */ });
        }
        else {
            $a.bind(opts.pagerEvent, pagerFn);
        }

        if (!/^click/.test(opts.pagerEvent) && !opts.allowPagerClickBubble)
            $a.bind('click.cycle', function () { return false; }); // suppress click

        var cont = opts.$cont[0];
        var pauseFlag = false; // https://github.com/malsup/cycle/issues/44
        if (opts.pauseOnPagerHover) {
            $a.hover(
			function () {
			    pauseFlag = true;
			    cont.cyclePause++;
			    triggerPause(cont, true, true);
			}, function () {
			    if (pauseFlag)
			        cont.cyclePause--;
			    triggerPause(cont, true, true);
			}
		);
        }
    };

    // helper fn to calculate the number of slides between the current and the next
    $.fn.cycle.hopsFromLast = function (opts, fwd) {
        var hops, l = opts.lastSlide, c = opts.currSlide;
        if (fwd)
            hops = c > l ? c - l : opts.slideCount - l;
        else
            hops = c < l ? l - c : l + opts.slideCount - c;
        return hops;
    };

    // fix clearType problems in ie6 by setting an explicit bg color
    // (otherwise text slides look horrible during a fade transition)
    function clearTypeFix($slides) {
        debug('applying clearType background-color hack');
        function hex(s) {
            s = parseInt(s, 10).toString(16);
            return s.length < 2 ? '0' + s : s;
        }
        function getBg(e) {
            for (; e && e.nodeName.toLowerCase() != 'html'; e = e.parentNode) {
                var v = $.css(e, 'background-color');
                if (v && v.indexOf('rgb') >= 0) {
                    var rgb = v.match(/\d+/g);
                    return '#' + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
                }
                if (v && v != 'transparent')
                    return v;
            }
            return '#ffffff';
        }
        $slides.each(function () { $(this).css('background-color', getBg(this)); });
    }

    // reset common props before the next transition
    $.fn.cycle.commonReset = function (curr, next, opts, w, h, rev) {
        $(opts.elements).not(curr).hide();
        if (typeof opts.cssBefore.opacity == 'undefined')
            opts.cssBefore.opacity = 1;
        opts.cssBefore.display = 'block';
        if (opts.slideResize && w !== false && next.cycleW > 0)
            opts.cssBefore.width = next.cycleW;
        if (opts.slideResize && h !== false && next.cycleH > 0)
            opts.cssBefore.height = next.cycleH;
        opts.cssAfter = opts.cssAfter || {};
        opts.cssAfter.display = 'none';
        $(curr).css('zIndex', opts.slideCount + (rev === true ? 1 : 0));
        $(next).css('zIndex', opts.slideCount + (rev === true ? 0 : 1));
    };

    // the actual fn for effecting a transition
    $.fn.cycle.custom = function (curr, next, opts, cb, fwd, speedOverride) {
        var $l = $(curr), $n = $(next);
        var speedIn = opts.speedIn, speedOut = opts.speedOut, easeIn = opts.easeIn, easeOut = opts.easeOut;
        $n.css(opts.cssBefore);
        if (speedOverride) {
            if (typeof speedOverride == 'number')
                speedIn = speedOut = speedOverride;
            else
                speedIn = speedOut = 1;
            easeIn = easeOut = null;
        }
        var fn = function () {
            $n.animate(opts.animIn, speedIn, easeIn, function () {
                cb();
            });
        };
        $l.animate(opts.animOut, speedOut, easeOut, function () {
            $l.css(opts.cssAfter);
            if (!opts.sync)
                fn();
        });
        if (opts.sync) fn();
    };

    // transition definitions - only fade is defined here, transition pack defines the rest
    $.fn.cycle.transitions = {
        fade: function ($cont, $slides, opts) {
            $slides.not(':eq(' + opts.currSlide + ')').css('opacity', 0);
            opts.before.push(function (curr, next, opts) {
                $.fn.cycle.commonReset(curr, next, opts);
                opts.cssBefore.opacity = 0;
            });
            opts.animIn = { opacity: 1 };
            opts.animOut = { opacity: 0 };
            opts.cssBefore = { top: 0, left: 0 };
        }
    };

    $.fn.cycle.ver = function () { return ver; };

    // override these globally if you like (they are all optional)
    $.fn.cycle.defaults = {
        activePagerClass: 'activeSlide', // class name used for the active pager link
        after: null,     // transition callback (scope set to element that was shown):  function(currSlideElement, nextSlideElement, options, forwardFlag)
        allowPagerClickBubble: false, // allows or prevents click event on pager anchors from bubbling
        animIn: null,     // properties that define how the slide animates in
        animOut: null,     // properties that define how the slide animates out
        aspect: false,    // preserve aspect ratio during fit resizing, cropping if necessary (must be used with fit option)
        autostop: 0,        // true to end slideshow after X transitions (where X == slide count)
        autostopCount: 0,        // number of transitions (optionally used with autostop to define X)
        backwards: false,    // true to start slideshow at last slide and move backwards through the stack
        before: null,     // transition callback (scope set to element to be shown):     function(currSlideElement, nextSlideElement, options, forwardFlag)
        center: null,     // set to true to have cycle add top/left margin to each slide (use with width and height options)
        cleartype: !$.support.opacity,  // true if clearType corrections should be applied (for IE)
        cleartypeNoBg: false,    // set to true to disable extra cleartype fixing (leave false to force background color setting on slides)
        containerResize: 1,        // resize container to fit largest slide
        continuous: 0,        // true to start next transition immediately after current one completes
        cssAfter: null,     // properties that defined the state of the slide after transitioning out
        cssBefore: null,     // properties that define the initial state of the slide before transitioning in
        delay: 0,        // additional delay (in ms) for first transition (hint: can be negative)
        easeIn: null,     // easing for "in" transition
        easeOut: null,     // easing for "out" transition
        easing: null,     // easing method for both in and out transitions
        end: null,     // callback invoked when the slideshow terminates (use with autostop or nowrap options): function(options)
        fastOnEvent: 0,        // force fast transitions when triggered manually (via pager or prev/next); value == time in ms
        fit: 0,        // force slides to fit container
        fx: 'fade',   // name of transition effect (or comma separated names, ex: 'fade,scrollUp,shuffle')
        fxFn: null,     // function used to control the transition: function(currSlideElement, nextSlideElement, options, afterCalback, forwardFlag)
        height: 'auto',   // container height (if the 'fit' option is true, the slides will be set to this height as well)
        manualTrump: true,     // causes manual transition to stop an active transition instead of being ignored
        metaAttr: 'cycle',  // data- attribute that holds the option data for the slideshow
        next: null,     // element, jQuery object, or jQuery selector string for the element to use as event trigger for next slide
        nowrap: 0,        // true to prevent slideshow from wrapping
        onPagerEvent: null,     // callback fn for pager events: function(zeroBasedSlideIndex, slideElement)
        onPrevNextEvent: null,     // callback fn for prev/next events: function(isNext, zeroBasedSlideIndex, slideElement)
        pager: null,     // element, jQuery object, or jQuery selector string for the element to use as pager container
        pagerAnchorBuilder: null,   // callback fn for building anchor links:  function(index, DOMelement)
        pagerEvent: 'click.cycle', // name of event which drives the pager navigation
        pause: 0,        // true to enable "pause on hover"
        pauseOnPagerHover: 0,       // true to pause when hovering over pager link
        prev: null,     // element, jQuery object, or jQuery selector string for the element to use as event trigger for previous slide
        prevNextEvent: 'click.cycle', // event which drives the manual transition to the previous or next slide
        random: 0,        // true for random, false for sequence (not applicable to shuffle fx)
        randomizeEffects: 1,        // valid when multiple effects are used; true to make the effect sequence random
        requeueOnImageNotLoaded: true, // requeue the slideshow if any image slides are not yet loaded
        requeueTimeout: 250,      // ms delay for requeue
        rev: 0,        // causes animations to transition in reverse (for effects that support it such as scrollHorz/scrollVert/shuffle)
        shuffle: null,     // coords for shuffle animation, ex: { top:15, left: 200 }
        skipInitializationCallbacks: false, // set to true to disable the first before/after callback that occurs prior to any transition
        slideExpr: null,     // expression for selecting slides (if something other than all children is required)
        slideResize: 1,        // force slide width/height to fixed size before every transition
        speed: 1000,     // speed of the transition (any valid fx speed value)
        speedIn: null,     // speed of the 'in' transition
        speedOut: null,     // speed of the 'out' transition
        startingSlide: undefined, // zero-based index of the first slide to be displayed
        sync: 1,        // true if in/out transitions should occur simultaneously
        timeout: 4000,     // milliseconds between slide transitions (0 to disable auto advance)
        timeoutFn: null,     // callback for determining per-slide timeout value:  function(currSlideElement, nextSlideElement, options, forwardFlag)
        updateActivePagerLink: null, // callback fn invoked to update the active pager link (adds/removes activePagerClass style)
        width: null      // container width (if the 'fit' option is true, the slides will be set to this width as well)
    };

})(jQuery);


/*!
* jQuery Cycle Plugin Transition Definitions
* This script is a plugin for the jQuery Cycle Plugin
* Examples and documentation at: http://malsup.com/jquery/cycle/
* Copyright (c) 2007-2010 M. Alsup
* Version:	 2.73
* Dual licensed under the MIT and GPL licenses:
* http://www.opensource.org/licenses/mit-license.php
* http://www.gnu.org/licenses/gpl.html
*/
(function ($) {
    "use strict";

    //
    // These functions define slide initialization and properties for the named
    // transitions. To save file size feel free to remove any of these that you
    // don't need.
    //
    $.fn.cycle.transitions.none = function ($cont, $slides, opts) {
        opts.fxFn = function (curr, next, opts, after) {
            $(next).show();
            $(curr).hide();
            after();
        };
    };

    // not a cross-fade, fadeout only fades out the top slide
    $.fn.cycle.transitions.fadeout = function ($cont, $slides, opts) {
        $slides.not(':eq(' + opts.currSlide + ')').css({ display: 'block', 'opacity': 1 });
        opts.before.push(function (curr, next, opts, w, h, rev) {
            $(curr).css('zIndex', opts.slideCount + (rev !== true ? 1 : 0));
            $(next).css('zIndex', opts.slideCount + (rev !== true ? 0 : 1));
        });
        opts.animIn.opacity = 1;
        opts.animOut.opacity = 0;
        opts.cssBefore.opacity = 1;
        opts.cssBefore.display = 'block';
        opts.cssAfter.zIndex = 0;
    };

    // scrollUp/Down/Left/Right
    $.fn.cycle.transitions.scrollUp = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssBefore.top = h;
        opts.cssBefore.left = 0;
        opts.cssFirst.top = 0;
        opts.animIn.top = 0;
        opts.animOut.top = -h;
    };
    $.fn.cycle.transitions.scrollDown = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssFirst.top = 0;
        opts.cssBefore.top = -h;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.top = h;
    };
    $.fn.cycle.transitions.scrollLeft = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = 0 - w;
    };
    $.fn.cycle.transitions.scrollRight = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = -w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = w;
    };
    $.fn.cycle.transitions.scrollHorz = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden').width();
        opts.before.push(function (curr, next, opts, fwd) {
            if (opts.rev)
                fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.left = fwd ? (next.cycleW - 1) : (1 - next.cycleW);
            opts.animOut.left = fwd ? -curr.cycleW : curr.cycleW;
        });
        opts.cssFirst.left = 0;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.top = 0;
    };
    $.fn.cycle.transitions.scrollVert = function ($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push(function (curr, next, opts, fwd) {
            if (opts.rev)
                fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.top = fwd ? (1 - next.cycleH) : (next.cycleH - 1);
            opts.animOut.top = fwd ? curr.cycleH : -curr.cycleH;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.left = 0;
    };

    // slideX/slideY
    $.fn.cycle.transitions.slideX = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
        opts.animIn.width = 'show';
        opts.animOut.width = 0;
    };
    $.fn.cycle.transitions.slideY = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.height = 0;
        opts.animIn.height = 'show';
        opts.animOut.height = 0;
    };

    // shuffle
    $.fn.cycle.transitions.shuffle = function ($cont, $slides, opts) {
        var i, w = $cont.css('overflow', 'visible').width();
        $slides.css({ left: 0, top: 0 });
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
        });
        // only adjust speed once!
        if (!opts.speedAdjusted) {
            opts.speed = opts.speed / 2; // shuffle has 2 transitions
            opts.speedAdjusted = true;
        }
        opts.random = 0;
        opts.shuffle = opts.shuffle || { left: -w, top: 15 };
        opts.els = [];
        for (i = 0; i < $slides.length; i++)
            opts.els.push($slides[i]);

        for (i = 0; i < opts.currSlide; i++)
            opts.els.push(opts.els.shift());

        // custom transition fn (hat tip to Benjamin Sterling for this bit of sweetness!)
        opts.fxFn = function (curr, next, opts, cb, fwd) {
            if (opts.rev)
                fwd = !fwd;
            var $el = fwd ? $(curr) : $(next);
            $(next).css(opts.cssBefore);
            var count = opts.slideCount;
            $el.animate(opts.shuffle, opts.speedIn, opts.easeIn, function () {
                var hops = $.fn.cycle.hopsFromLast(opts, fwd);
                for (var k = 0; k < hops; k++) {
                    if (fwd)
                        opts.els.push(opts.els.shift());
                    else
                        opts.els.unshift(opts.els.pop());
                }
                if (fwd) {
                    for (var i = 0, len = opts.els.length; i < len; i++)
                        $(opts.els[i]).css('z-index', len - i + count);
                }
                else {
                    var z = $(curr).css('z-index');
                    $el.css('z-index', parseInt(z, 10) + 1 + count);
                }
                $el.animate({ left: 0, top: 0 }, opts.speedOut, opts.easeOut, function () {
                    $(fwd ? this : curr).hide();
                    if (cb) cb();
                });
            });
        };
        $.extend(opts.cssBefore, { display: 'block', opacity: 1, top: 0, left: 0 });
    };

    // turnUp/Down/Left/Right
    $.fn.cycle.transitions.turnUp = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = next.cycleH;
            opts.animIn.height = next.cycleH;
            opts.animOut.width = next.cycleW;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.cssBefore.height = 0;
        opts.animIn.top = 0;
        opts.animOut.height = 0;
    };
    $.fn.cycle.transitions.turnDown = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.height = 0;
        opts.animOut.height = 0;
    };
    $.fn.cycle.transitions.turnLeft = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = next.cycleW;
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
        opts.animIn.left = 0;
        opts.animOut.width = 0;
    };
    $.fn.cycle.transitions.turnRight = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        $.extend(opts.cssBefore, { top: 0, left: 0, width: 0 });
        opts.animIn.left = 0;
        opts.animOut.width = 0;
    };

    // zoom
    $.fn.cycle.transitions.zoom = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.cssBefore.left = next.cycleW / 2;
            $.extend(opts.animIn, { top: 0, left: 0, width: next.cycleW, height: next.cycleH });
            $.extend(opts.animOut, { width: 0, height: 0, top: curr.cycleH / 2, left: curr.cycleW / 2 });
        });
        opts.cssFirst.top = 0;
        opts.cssFirst.left = 0;
        opts.cssBefore.width = 0;
        opts.cssBefore.height = 0;
    };

    // fadeZoom
    $.fn.cycle.transitions.fadeZoom = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false);
            opts.cssBefore.left = next.cycleW / 2;
            opts.cssBefore.top = next.cycleH / 2;
            $.extend(opts.animIn, { top: 0, left: 0, width: next.cycleW, height: next.cycleH });
        });
        opts.cssBefore.width = 0;
        opts.cssBefore.height = 0;
        opts.animOut.opacity = 0;
    };

    // blindX
    $.fn.cycle.transitions.blindX = function ($cont, $slides, opts) {
        var w = $cont.css('overflow', 'hidden').width();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        opts.cssBefore.left = w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = w;
    };
    // blindY
    $.fn.cycle.transitions.blindY = function ($cont, $slides, opts) {
        var h = $cont.css('overflow', 'hidden').height();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore.top = h;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.top = h;
    };
    // blindZ
    $.fn.cycle.transitions.blindZ = function ($cont, $slides, opts) {
        var h = $cont.css('overflow', 'hidden').height();
        var w = $cont.width();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore.top = h;
        opts.cssBefore.left = w;
        opts.animIn.top = 0;
        opts.animIn.left = 0;
        opts.animOut.top = h;
        opts.animOut.left = w;
    };

    // growX - grow horizontally from centered 0 width
    $.fn.cycle.transitions.growX = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = this.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = 0;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
    };
    // growY - grow vertically from centered 0 height
    $.fn.cycle.transitions.growY = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = this.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = this.cycleH;
            opts.animOut.top = 0;
        });
        opts.cssBefore.height = 0;
        opts.cssBefore.left = 0;
    };

    // curtainX - squeeze in both edges horizontally
    $.fn.cycle.transitions.curtainX = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true, true);
            opts.cssBefore.left = next.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = curr.cycleW / 2;
            opts.animOut.width = 0;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
    };
    // curtainY - squeeze in both edges vertically
    $.fn.cycle.transitions.curtainY = function ($cont, $slides, opts) {
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH / 2;
            opts.animOut.height = 0;
        });
        opts.cssBefore.height = 0;
        opts.cssBefore.left = 0;
    };

    // cover - curr slide covered by next slide
    $.fn.cycle.transitions.cover = function ($cont, $slides, opts) {
        var d = opts.direction || 'left';
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            if (d == 'right')
                opts.cssBefore.left = -w;
            else if (d == 'up')
                opts.cssBefore.top = h;
            else if (d == 'down')
                opts.cssBefore.top = -h;
            else
                opts.cssBefore.left = w;
        });
        opts.animIn.left = 0;
        opts.animIn.top = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.left = 0;
    };

    // uncover - curr slide moves off next slide
    $.fn.cycle.transitions.uncover = function ($cont, $slides, opts) {
        var d = opts.direction || 'left';
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (d == 'right')
                opts.animOut.left = w;
            else if (d == 'up')
                opts.animOut.top = -h;
            else if (d == 'down')
                opts.animOut.top = h;
            else
                opts.animOut.left = -w;
        });
        opts.animIn.left = 0;
        opts.animIn.top = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.left = 0;
    };

    // toss - move top slide and fade away
    $.fn.cycle.transitions.toss = function ($cont, $slides, opts) {
        var w = $cont.css('overflow', 'visible').width();
        var h = $cont.height();
        opts.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            // provide default toss settings if animOut not provided
            if (!opts.animOut.left && !opts.animOut.top)
                $.extend(opts.animOut, { left: w * 2, top: -h / 2, opacity: 0 });
            else
                opts.animOut.opacity = 0;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
    };

    // wipe - clip animation
    $.fn.cycle.transitions.wipe = function ($cont, $slides, opts) {
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.cssBefore = opts.cssBefore || {};
        var clip;
        if (opts.clip) {
            if (/l2r/.test(opts.clip))
                clip = 'rect(0px 0px ' + h + 'px 0px)';
            else if (/r2l/.test(opts.clip))
                clip = 'rect(0px ' + w + 'px ' + h + 'px ' + w + 'px)';
            else if (/t2b/.test(opts.clip))
                clip = 'rect(0px ' + w + 'px 0px 0px)';
            else if (/b2t/.test(opts.clip))
                clip = 'rect(' + h + 'px ' + w + 'px ' + h + 'px 0px)';
            else if (/zoom/.test(opts.clip)) {
                var top = parseInt(h / 2, 10);
                var left = parseInt(w / 2, 10);
                clip = 'rect(' + top + 'px ' + left + 'px ' + top + 'px ' + left + 'px)';
            }
        }

        opts.cssBefore.clip = opts.cssBefore.clip || clip || 'rect(0px 0px 0px 0px)';

        var d = opts.cssBefore.clip.match(/(\d+)/g);
        var t = parseInt(d[0], 10), r = parseInt(d[1], 10), b = parseInt(d[2], 10), l = parseInt(d[3], 10);

        opts.before.push(function (curr, next, opts) {
            if (curr == next) return;
            var $curr = $(curr), $next = $(next);
            $.fn.cycle.commonReset(curr, next, opts, true, true, false);
            opts.cssAfter.display = 'block';

            var step = 1, count = parseInt((opts.speedIn / 13), 10) - 1;
            (function f() {
                var tt = t ? t - parseInt(step * (t / count), 10) : 0;
                var ll = l ? l - parseInt(step * (l / count), 10) : 0;
                var bb = b < h ? b + parseInt(step * ((h - b) / count || 1), 10) : h;
                var rr = r < w ? r + parseInt(step * ((w - r) / count || 1), 10) : w;
                $next.css({ clip: 'rect(' + tt + 'px ' + rr + 'px ' + bb + 'px ' + ll + 'px)' });
                (step++ <= count) ? setTimeout(f, 13) : $curr.css('display', 'none');
            })();
        });
        $.extend(opts.cssBefore, { display: 'block', opacity: 1, top: 0, left: 0 });
        opts.animIn = { left: 0 };
        opts.animOut = { left: 0 };
    };

})(jQuery);


(function($) {
    $.fn.share = function(options) {
        var defaults = {
            digg: true,
            facebook: true,
            stumbleUpon: true,
            twitter: true,
            delicious: true,
            reddit: true,
            title: '',
            url: '',
            direction: 'bottom',
            delay: 1,
            shareType: ''
        }
        var options = $.extend(defaults, options);

        var digg = { cssClass: 'DiggSmall', text: "Digg", func: 'openDigg' };
        var facebook = { cssClass: 'FacebookSmall', text: 'Facebook', func: 'openFacebook' }
        var stumbleupon = { cssClass: 'StumbleUponSmall', text: "StumbleUpon", func: 'openStumbleupon' };
        var twitter = { cssClass: 'TwitterSmall', text: "Twitter", func: 'openTwitter' };
        var delicious = { cssClass: 'DeliciousSmall', text: "Del.icio.us", func: 'openDelicious' };
        var reddit = { cssClass: 'RedditSmall', text: "Reddit", func: 'openReddit' };
        var timer;

      

        function addShareLink(container, linkObj) {
            var share = new shareMethods(options.title, options.url, options.shareType);
            var anchor = $('<a>' + linkObj.text + '</a>').addClass(linkObj.cssClass).click(eval('share.' + linkObj.func)).attr('href', '#');
            container.append($('<li>').append(anchor));
           
        }

        function getContainer() {
            var container = $('.share_modal');
            if (container.length > 0)
                return container.empty();
            return $('<ul>').addClass('share_modal').appendTo('body');
        }

        return this.hover(function() {
            switch (options.direction) {
                case 'bottom':
                    var container = getContainer().css({
                        top: $(this).offset().top + $(this).height() + 2,
                        left: $(this).offset().left
                    });
                    break;
                case 'top':
                    var container = getContainer().css({
                        top: $(this).offset().top - $(this).height() - 70,
                        left: $(this).offset().left
                    });
                    break;
                case 'left':
                    var container = getContainer().css({
                    top: $(this).offset().top,
                    left: $(this).offset().left - 268
                });
                break;
                case 'right':
                    var container = getContainer().css({
                    //top: $(this).offset().top + $(this).height() + 2,
                    //left: $(this).offset().left
                });
                break;
                default:
                break;
            }

            if (options.digg) addShareLink(container, digg);
            if (options.facebook) addShareLink(container, facebook);
            if (options.stumbleUpon) addShareLink(container, stumbleupon);
            if (options.twitter) addShareLink(container, twitter);
            if (options.delicious) addShareLink(container, delicious);
            if (options.reddit) addShareLink(container, reddit);

            $(container).hover(function() {
                clearTimeout(timer);
            }, function() {
                container.remove();
            });
        }, function() {
        clearTimeout(timer);
        timer = setTimeout(function() {
            $('.share_modal').remove();
        }, options.delay * 1000);
        
        }).click(function() { return false; });
    }
})(jQuery);

function shareMethods(titleParam, urlParam,shareContent) {

   
    var url = urlParam ? urlParam : getUrl();

    
    var relativePath = "";
    var recipeId = "";
    var title = "";
    if (titleParam != null || titleParam == undefined || titleParam == "") {
        title = titleParam;
    }

    if (urlParam == null || urlParam == undefined || urlParam == "") {

        relativePath = location.pathname;
        var pathArray = relativePath.split('/');
        recipeId = pathArray[3];
        if (title == "") {
         
            var titleArray = pathArray[i].split('-');
            for (j = 0; j < titleArray.length; j++) {
                title += titleArray[j] + " ";
            }
        }
    }
    else {
        var pathArray = urlParam.split('/');
        var newPathname = "";
        for (i = 3; i < pathArray.length; i++) {

            if (i == "4") {

                if (title == "") {
                    var titleArray = pathArray[i].split('-');
                    for (j = 0; j < titleArray.length; j++) {
                        title = titleArray[j] + " ";
                    }
                }
            }
        
            if (i == "5") {
                recipeId = pathArray[i];
            }

            newPathname += "/";
            newPathname += pathArray[i];
        }
        relativePath = newPathname;
    }


    this.openReddit = function () {
        if (shareContent == "share_recipe") {
            ntptEventTag('ev=RecipeShare_Reddit_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
        }
        else {

            ntptEventTag('ev=ContentShare_Reddit_bt');
        }
        window.open("http://reddit.com/submit?title=" + title + "&url=" + url);
        return false;
    }

        this.openFacebook = function () {

            if (shareContent == "share_recipe") 
            {
                ntptEventTag('ev=RecipeShare_Facebook_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
            }
            else {
               
                ntptEventTag('ev=ContentShare_Facebook_bt');
            }
            window.open("http://www.facebook.com/share.php?u=" + url);
            return false;
        }

        this.openStumbleupon = function () {
            if (shareContent == "share_recipe") {
                ntptEventTag('ev=RecipeShare_StumbleUpon_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
            }
            else {

                ntptEventTag('ev=ContentShare_StumbleUpon_bt');
            }
            window.open("http://www.stumbleupon.com/submit?url=" + url + "&title=" + title);
            return false;
        }

        this.openDigg = function () {
            if (shareContent == "share_recipe") {
                ntptEventTag('ev=RecipeShare_Digg_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
            }
            else {

                ntptEventTag('ev=ContentShare_Digg_bt');
            }
            window.open("http://digg.com/submit?phase=2&title=" + title + "&url=" + url);
            return false;
        }

        this.openDelicious = function () {
            if (shareContent == "share_recipe") {
                ntptEventTag('ev=RecipeShare_Delicious_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
            }
            else {

                ntptEventTag('ev=ContentShare_Delicious_bt');
            }
            window.open("http://del.icio.us/post?url=" + url + "&title=" + title);
            return false;
        }

        this.openTwitter = function () {
            if (shareContent == "share_recipe") {
                ntptEventTag('ev=RecipeShare_twitter_bt&RecipeID=' + recipeId + '&RecipeTitle=' + encodeURIComponent(title) + '&ActionType=Share');
            }
            else {

                ntptEventTag('ev=ContentShare_twitter_bt');
            }
 
            //var isSafari = (document.childNodes) && (!document.all) && (!navigator.taintEnabled) && (!navigator.accentColorName);
            //if (isSafari) {
            //window.open("http://twitter.com/home?status=" + url + ' ' + title);
            //}
            //else {
            //bitlyAPI(url, function(bitlyUrl) {
            //if (bitlyUrl) url = bitlyUrl;
            //window.open("http://twitter.com/home?status=" + url + ' ' + title);
            //});
            //}
            window.open("http://twitter.com/share?text=" + title + "&url=" + url);

            return false;
        }
    

    function getUrl() {
        var currentUrl = window.location.toString();
        var anchor_index = currentUrl.indexOf('#');
        if (anchor_index != -1)
            currentUrl = currentUrl.substring(0, anchor_index);
        return currentUrl;
    }
}
/*
* jqModal - Minimalist Modaling with jQuery
*   (http://dev.iceburg.net/jquery/jqModal/)
*
* Copyright (c) 2007,2008 Brice Burgess <bhb@iceburg.net>
* Dual licensed under the MIT and GPL licenses:
*   http://www.opensource.org/licenses/mit-license.php
*   http://www.gnu.org/licenses/gpl.html
* 
* $Version: 03/01/2009 +r14
*/
var focusModal;
var backModal;
var selectBucket;
(function($) {
    $.fn.jqm = function(o) {
        var p = {
            overlay: 50,
            overlayClass: 'jqmOverlay',
            closeClass: 'closeModal',
            trigger: '.jqModal',
            ajax: F,
            ajaxText: '',
            target: F,
            modal: F,
            toTop: F,
            onShow: F,
            onHide: F,
            onLoad: F,
            setTop: 0
        };
        return this.each(function() {
            if (this._jqm) return H[this._jqm].c = $.extend({}, H[this._jqm].c, o); s++; this._jqm = s;
            H[s] = { c: $.extend(p, $.jqm.params, o), a: F, w: $(this).addClass('jqmID' + s), s: s };
            if (p.trigger) $(this).jqmAddTrigger(p.trigger);
        });
    };

    $.fn.jqmAddClose = function(e) { return hs(this, e, 'jqmHide'); };
    $.fn.jqmAddTrigger = function(e) { return hs(this, e, 'jqmShow'); };
    $.fn.jqmShow = function(t) { return this.each(function() { t = t || window.event; $.jqm.open(this._jqm, t); }); };
    $.fn.jqmHide = function(t) { return this.each(function() { t = t || window.event; $.jqm.close(this._jqm, t) }); };

    $.jqm = {
        hash: {},
        open: function(s, t) {
            var h = H[s], c = h.c, cc = '.' + c.closeClass, z = (parseInt(h.w.css('z-index'))), z = (z > 0) ? z : 3000, o = $('<div></div>').css({ height: '100%', width: '100%', position: 'fixed', left: 0, top: 0, 'z-index': z - 1, opacity: c.overlay / 100 }); if (h.a) return F; h.t = t; h.a = true; h.w.css('z-index', z);
            if (c.modal) { if (!A[0]) L('bind'); A.push(s); }
            else if (c.overlay > 0) h.w.jqmAddClose(o);
            else o = F;
            //Added to append the close link and title to all modals
            var top = '<a href="#" class="closeModal">X</a><h3 class="modalTitle">' + c.title + '</h3>';
            if (c.closeClass != null && c.closeClass != '' && h.w.find(cc).length == 0) h.w.prepend(top);

            //Fixes IE6 select z-index issue, but only once.
            if (focusModal) { //if there is already a window open
                backModal = focusModal; //set the old focus window to the background
                $(h.w).css('z-index', $(focusModal).css('z-index') + 1); //up its z-index
            }
            focusModal = h.w; //focus on the new window
            if (backModal) { //If there is a back modal
                $(backModal).find("select").hide(); //Hide the broken crap on it
                $(focusModal).find("a.closeModal").click(function() {
                    $(backModal).find("select").show();
                });
            }
            //Added to do modal layering

            //End addition

            if (ie6) {
                o.css({ height: jQuery('.pageContainer').height(), position: 'absolute' });
                h.o = (o) ? o.addClass(c.overlayClass).prependTo('body') : F;
                jQuery('html').css({ height: '100%', width: '100%' });
                jQuery('body').css({ height: '100%', width: '100%' });
                c.toTop = true;
            }
            else {
                h.o = (o) ? o.addClass(c.overlayClass).prependTo('.modal_mask_container') : F;
            }

            if (c.ajax) {
                var r = c.target || h.w, u = c.ajax, r = (typeof r == 'string') ? $(r, h.w) : $(r), u = (u.substr(0, 1) == '@') ? $(t).attr(u.substring(1)) : u;
                r.html(c.ajaxText).load(u, function() { if (c.onLoad) c.onLoad.call(this, h); if (cc) h.w.jqmAddClose($(cc, h.w)); e(h); });
            }
            else if (c.closeClass != null && c.closeClass != '' && cc) h.w.jqmAddClose($(cc, h.w));

            //Added for dynamic content adding
            if (c.content) h.w.find(".modalContent").html(c.content);

            //Added to automatically handle dimensions, centering, and styling
            //var width = (c.width ? c.width : 700);
            //var height = c.height;
            //if (!c.height) height = ($(window).height() - 100 > 600) ? 600 : $(window).height() - 100;

            //((h.w.find(".modalContent").length > 0) ? h.w.find(".modalContent") : h.w).css({ 'width': width, 'height': height });
            h.w.css({ 'margin-left': -h.w.width() / 2 });
            if (c.setTop != 0) {
                h.w.css({ 'top': c.setTop });
            }
            else {
                h.w.css({ 'top': ($(window).height() - h.w.height()) / 2 + (ie6 ? document.documentElement.scrollTop : 0) });
            }
            //End Addition

            if (c.toTop && h.o) h.w.before('<span id="jqmP' + h.w[0]._jqm + '"></span>').insertAfter(h.o);
            (c.onShow) ? c.onShow(h) : h.w.show(); e(h); return F;
        },
        close: function(s) {
            focusModal = backModal;
            backModal = null;
            var h = H[s]; if (!h.a) return F; h.a = F;
            if (A[0]) { A.pop(); if (!A[0]) L('unbind'); }
            if (h.c.toTop && h.o) $('#jqmP' + h.w[0]._jqm).after(h.w).remove();
            if (h.c.onHide) h.c.onHide(h); else { h.w.hide(); if (h.o) h.o.remove(); } return F;
        },
        params: {}
    };
    var s = 0, H = $.jqm.hash, A = [], ie6 = $.browser.msie && ($.browser.version == "6.0"), ie7 = $.browser.msie && ($.browser.version == "7.0"), F = false,
i = $('<iframe src="javascript:false;document.write(\'\');" class="jqm"></iframe>').css({ opacity: 0 }),
e = function(h) { if (ie6) if (h.o) h.o.html('<p style="width:100%;height:100%"/>').prepend(i); else if (!$('iframe.jqm', h.w)[0]) h.w.prepend(i); f(h); },
f = function(h) { try { $(':input:visible', h.w)[0].focus(); } catch (_) { } },
L = function(t) { $()[t]("keypress", m)[t]("keydown", m)[t]("mousedown", m); },
m = function(e) { var h = H[A[A.length - 1]], r = (!$(e.target).parents('.jqmID' + h.s)[0]); if (r) f(h); return !r; },
hs = function(w, t, c) {
    return w.each(function() {
        var s = this._jqm; $(t).each(function() {
            if (!this[c]) { this[c] = []; $(this).click(function() { for (var i in { jqmShow: 1, jqmHide: 1 }) for (var s in this[i]) if (H[this[i][s]]) H[this[i][s]].w[i](this); return F; }); } this[c].push(s);
        });
    });
};
})(jQuery);
function pr_swfver() {
    var osf, osfd, i, axo = 1, v = 0, nv = navigator;
    if (nv.plugins && nv.mimeTypes.length) { osf = nv.plugins["Shockwave Flash"]; if (osf && osf.description) { osfd = osf.description; v = parseInt(osfd.substring(osfd.indexOf(".") - 2)) } }
    else { try { for (i = 5; axo != null; i++) { axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + i); v = i } } catch (e) { } }
    return v;
}
var pr_d = new Date(); pr_d = pr_d.getDay() + "|" + pr_d.getHours() + ":" + pr_d.getMinutes() + "|" + -pr_d.getTimezoneOffset() / 60;
var pr_postal = "";
var pr_data = "";
var pr_redir = "$CTURL$";
var pr_nua = navigator.userAgent.toLowerCase();
var prHost = (("https:" == document.location.protocol) ? "https://" : "http://"); var pr_sec = ((prHost == 'https://') ? '&secure=1' : '');
var pr_pos = "", pr_inif = (window != top);
if (pr_inif) {
    try { pr_pos = (typeof (parent.document) != "unknown") ? (((typeof (inDapIF) != "undefined") && (inDapIF)) || (parent.document.domain == document.domain)) ? "&pos=s" : "&pos=x" : "&pos=x"; }
    catch (e) { pr_pos = "&pos=x"; } if (pr_pos == "&pos=x") {
        var pr_u = new RegExp("[A-Za-z]+:[/][/][A-Za-z0-9.-]+"); var pr_t = this.window.document.referrer;
        var pr_m = pr_t.match(pr_u); if (pr_m != null) { pr_pos += "&dom=" + pr_m[0]; } 
    } else { if (((typeof (inDapMgrIf) != "undefined") && (inDapMgrIf)) || ((typeof (isAJAX) != "undefined") && (isAJAX))) { pr_pos += "&ajx=1" } } 
}
if (pr_postal != "") { var przipmatch = /^\d{5}$/; if (przipmatch.test(pr_postal)) { pr_pos += "&postal=" + pr_postal; } }
if ((pr_data != "") && (pr_data.indexOf("&") < 0)) { pr_pos += "&data=" + pr_data; }/*
 * jQuery Templates Plugin 1.0.0pre
 * http://github.com/jquery/jquery-tmpl
 * Requires jQuery 1.4.2
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
(function (a) { var r = a.fn.domManip, d = "_tmplitem", q = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /, b = {}, f = {}, e, p = { key: 0, data: {} }, i = 0, c = 0, l = []; function g(e, d, g, h) { var c = { data: h || (d ? d.data : {}), _wrap: d ? d._wrap : null, tmpl: null, parent: d || null, nodes: [], calls: u, nest: w, wrap: x, html: v, update: t }; e && a.extend(c, e, { nodes: [], parent: d }); if (g) { c.tmpl = g; c._ctnt = c._ctnt || c.tmpl(a, c); c.key = ++i; (l.length ? f : b)[i] = c } return c } a.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (f, d) { a.fn[f] = function (n) { var g = [], i = a(n), k, h, m, l, j = this.length === 1 && this[0].parentNode; e = b || {}; if (j && j.nodeType === 11 && j.childNodes.length === 1 && i.length === 1) { i[d](this[0]); g = this } else { for (h = 0, m = i.length; h < m; h++) { c = h; k = (h > 0 ? this.clone(true) : this).get(); a(i[h])[d](k); g = g.concat(k) } c = 0; g = this.pushStack(g, f, i.selector) } l = e; e = null; a.tmpl.complete(l); return g } }); a.fn.extend({ tmpl: function (d, c, b) { return a.tmpl(this[0], d, c, b) }, tmplItem: function () { return a.tmplItem(this[0]) }, template: function (b) { return a.template(b, this[0]) }, domManip: function (d, m, k) { if (d[0] && a.isArray(d[0])) { var g = a.makeArray(arguments), h = d[0], j = h.length, i = 0, f; while (i < j && !(f = a.data(h[i++], "tmplItem"))); if (f && c) g[2] = function (b) { a.tmpl.afterManip(this, b, k) }; r.apply(this, g) } else r.apply(this, arguments); c = 0; !e && a.tmpl.complete(b); return this } }); a.extend({ tmpl: function (d, h, e, c) { var i, k = !c; if (k) { c = p; d = a.template[d] || a.template(null, d); f = {} } else if (!d) { d = c.tmpl; b[c.key] = c; c.nodes = []; c.wrapped && n(c, c.wrapped); return a(j(c, null, c.tmpl(a, c))) } if (!d) return []; if (typeof h === "function") h = h.call(c || {}); e && e.wrapped && n(e, e.wrapped); i = a.isArray(h) ? a.map(h, function (a) { return a ? g(e, c, d, a) : null }) : [g(e, c, d, h)]; return k ? a(j(c, null, i)) : i }, tmplItem: function (b) { var c; if (b instanceof a) b = b[0]; while (b && b.nodeType === 1 && !(c = a.data(b, "tmplItem")) && (b = b.parentNode)); return c || p }, template: function (c, b) { if (b) { if (typeof b === "string") b = o(b); else if (b instanceof a) b = b[0] || {}; if (b.nodeType) b = a.data(b, "tmpl") || a.data(b, "tmpl", o(b.innerHTML)); return typeof c === "string" ? (a.template[c] = b) : b } return c ? typeof c !== "string" ? a.template(null, c) : a.template[c] || a.template(null, q.test(c) ? c : a(c)) : null }, encode: function (a) { return ("" + a).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;") } }); a.extend(a.tmpl, { tag: { tmpl: { _default: { $2: "null" }, open: "if($notnull_1){_=_.concat($item.nest($1,$2));}" }, wrap: { _default: { $2: "null" }, open: "$item.calls(_,$1,$2);_=[];", close: "call=$item.calls();_=call._.concat($item.wrap(call,_));" }, each: { _default: { $2: "$index, $value" }, open: "if($notnull_1){$.each($1a,function($2){with(this){", close: "}});}" }, "if": { open: "if(($notnull_1) && $1a){", close: "}" }, "else": { _default: { $1: "true" }, open: "}else if(($notnull_1) && $1a){" }, html: { open: "if($notnull_1){_.push($1a);}" }, "=": { _default: { $1: "$data" }, open: "if($notnull_1){_.push($.encode($1a));}" }, "!": { open: ""} }, complete: function () { b = {} }, afterManip: function (f, b, d) { var e = b.nodeType === 11 ? a.makeArray(b.childNodes) : b.nodeType === 1 ? [b] : []; d.call(f, b); m(e); c++ } }); function j(e, g, f) { var b, c = f ? a.map(f, function (a) { return typeof a === "string" ? e.key ? a.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + d + '="' + e.key + '" $2') : a : j(a, e, a._ctnt) }) : e; if (g) return c; c = c.join(""); c.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function (f, c, e, d) { b = a(e).get(); m(b); if (c) b = k(c).concat(b); if (d) b = b.concat(k(d)) }); return b ? b : k(c) } function k(c) { var b = document.createElement("div"); b.innerHTML = c; return a.makeArray(b.childNodes) } function o(b) { return new Function("jQuery", "$item", "var $=jQuery,call,_=[],$data=$item.data;with($data){_.push('" + a.trim(b).replace(/([\\'])/g, "\\$1").replace(/[\r\t\n]/g, " ").replace(/\$\{([^\}]*)\}/g, "{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g, function (m, l, k, d, b, c, e) { var j = a.tmpl.tag[k], i, f, g; if (!j) throw "Template command not found: " + k; i = j._default || []; if (c && !/\w$/.test(b)) { b += c; c = "" } if (b) { b = h(b); e = e ? "," + h(e) + ")" : c ? ")" : ""; f = c ? b.indexOf(".") > -1 ? b + h(c) : "(" + b + ").call($item" + e : b; g = c ? f : "(typeof(" + b + ")==='function'?(" + b + ").call($item):(" + b + "))" } else g = f = i.$1 || "null"; d = h(d); return "');" + j[l ? "close" : "open"].split("$notnull_1").join(b ? "typeof(" + b + ")!=='undefined' && (" + b + ")!=null" : "true").split("$1a").join(g).split("$1").join(f).split("$2").join(d ? d.replace(/\s*([^\(]+)\s*(\((.*?)\))?/g, function (d, c, b, a) { a = a ? "," + a + ")" : b ? ")" : ""; return a ? "(" + c + ").call($item" + a : d }) : i.$2 || "") + "_.push('" }) + "');}return _;") } function n(c, b) { c._wrap = j(c, true, a.isArray(b) ? b : [q.test(b) ? b : a(b).html()]).join("") } function h(a) { return a ? a.replace(/\\'/g, "'").replace(/\\\\/g, "\\") : null } function s(b) { var a = document.createElement("div"); a.appendChild(b.cloneNode(true)); return a.innerHTML } function m(o) { var n = "_" + c, k, j, l = {}, e, p, h; for (e = 0, p = o.length; e < p; e++) { if ((k = o[e]).nodeType !== 1) continue; j = k.getElementsByTagName("*"); for (h = j.length - 1; h >= 0; h--) m(j[h]); m(k) } function m(j) { var p, h = j, k, e, m; if (m = j.getAttribute(d)) { while (h.parentNode && (h = h.parentNode).nodeType === 1 && !(p = h.getAttribute(d))); if (p !== m) { h = h.parentNode ? h.nodeType === 11 ? 0 : h.getAttribute(d) || 0 : 0; if (!(e = b[m])) { e = f[m]; e = g(e, b[h] || f[h]); e.key = ++i; b[i] = e } c && o(m) } j.removeAttribute(d) } else if (c && (e = a.data(j, "tmplItem"))) { o(e.key); b[e.key] = e; h = a.data(j.parentNode, "tmplItem"); h = h ? h.key : 0 } if (e) { k = e; while (k && k.key != h) { k.nodes.push(j); k = k.parent } delete e._ctnt; delete e._wrap; a.data(j, "tmplItem", e) } function o(a) { a = a + n; e = l[a] = l[a] || g(e, b[e.parent.key + n] || e.parent) } } } function u(a, d, c, b) { if (!a) return l.pop(); l.push({ _: a, tmpl: d, item: this, data: c, options: b }) } function w(d, c, b) { return a.tmpl(a.template(d), c, b, this) } function x(b, d) { var c = b.options || {}; c.wrapped = d; return a.tmpl(a.template(b.tmpl), b.data, c, b.item) } function v(d, c) { var b = this._wrap; return a.map(a(a.isArray(b) ? b.join("") : b).filter(d || "*"), function (a) { return c ? a.innerText || a.textContent : a.outerHTML || s(a) }) } function t() { var b = this.nodes; a.tmpl(null, null, null, this).insertBefore(b[0]); a(b).remove() } })(jQuery)
// Knockout JavaScript library v1.1.2
// (c) 2010 Steven Sanderson - http://knockoutjs.com/
// License: Ms-Pl (http://www.opensource.org/licenses/ms-pl.html)

function a(f) { throw f; } var m = true, o = null, p = false, r = window.ko = {}; r.b = function (f, b) { for (var c = f.split("."), d = window, e = 0; e < c.length - 1; e++) d = d[c[e]]; d[c[c.length - 1]] = b }; r.g = function (f, b, c) { f[b] = c };
r.a = new function () {
    var f = /^(\s|\u00A0)+|(\s|\u00A0)+$/g; return { ba: ["authenticity_token", /^__RequestVerificationToken(_.*)?$/], h: function (b, c) { for (var d = 0, e = b.length; d < e; d++) c(b[d]) }, i: function (b, c) { if (typeof b.indexOf == "function") return b.indexOf(c); for (var d = 0, e = b.length; d < e; d++) if (b[d] == c) return d; return -1 }, xa: function (b, c, d) { for (var e = 0, g = b.length; e < g; e++) if (c.call(d, b[e])) return b[e]; return o }, Z: function (b, c) { var d = r.a.i(b, c); d >= 0 && b.splice(d, 1) }, Y: function (b) {
        b = b || []; for (var c = [], d = 0, e = b.length; d <
e; d++) r.a.i(c, b[d]) < 0 && c.push(b[d]); return c
    }, K: function (b, c) { b = b || []; for (var d = [], e = 0, g = b.length; e < g; e++) d.push(c(b[e])); return d }, J: function (b, c) { b = b || []; for (var d = [], e = 0, g = b.length; e < g; e++) c(b[e]) && d.push(b[e]); return d }, L: function (b, c) { for (var d = 0, e = c.length; d < e; d++) b.push(c[d]) }, aa: function (b) { for (; b.firstChild; ) { r.a.e.N(b.firstChild); b.removeChild(b.firstChild) } }, Ua: function (b, c) { r.a.aa(b); c && r.a.h(c, function (d) { b.appendChild(d) }) }, ka: function (b, c) {
        var d = b.nodeType ? [b] : b; if (d.length > 0) {
            for (var e =
d[0], g = e.parentNode, h = 0, i = c.length; h < i; h++) g.insertBefore(c[h], e); h = 0; for (i = d.length; h < i; h++) { r.a.e.N(d[h]); g.removeChild(d[h]) } 
        } 
    }, na: function (b, c) { if (navigator.userAgent.indexOf("MSIE 6") >= 0) b.setAttribute("selected", c); else b.selected = c }, Ia: function (b, c) { if (!b || b.nodeType != 1) return []; var d = []; b.getAttribute(c) !== o && d.push(b); for (var e = b.getElementsByTagName("*"), g = 0, h = e.length; g < h; g++) e[g].getAttribute(c) !== o && d.push(e[g]); return d }, l: function (b) { return (b || "").replace(f, "") }, $a: function (b, c) {
        for (var d =
[], e = (b || "").split(c), g = 0, h = e.length; g < h; g++) { var i = r.a.l(e[g]); i !== "" && d.push(i) } return d
    }, Va: function (b, c) { b = b || ""; if (c.length > b.length) return p; return b.substring(0, c.length) === c }, Ga: function (b, c) { if (c === undefined) return (new Function("return " + b))(); with (c) return eval("(" + b + ")") }, Ea: function (b, c) { if (c.compareDocumentPosition) return (c.compareDocumentPosition(b) & 16) == 16; for (; b != o; ) { if (b == c) return m; b = b.parentNode } return p }, A: function (b) { return r.a.Ea(b, document) }, q: function (b, c, d) {
        if (typeof jQuery !=
"undefined") jQuery(b).bind(c, d); else if (typeof b.addEventListener == "function") b.addEventListener(c, d, p); else if (typeof b.attachEvent != "undefined") b.attachEvent("on" + c, function (e) { d.call(b, e) }); else a(Error("Browser doesn't support addEventListener or attachEvent"))
    }, qa: function (b, c) {
        if (!(b && b.nodeType)) a(Error("element must be a DOM node when calling triggerEvent")); if (typeof document.createEvent == "function") if (typeof b.dispatchEvent == "function") {
            var d = document.createEvent(c == "click" ? "MouseEvents" :
"HTMLEvents"); d.initEvent(c, m, m, window, 0, 0, 0, 0, 0, p, p, p, p, 0, b); b.dispatchEvent(d)
        } else a(Error("The supplied element doesn't support dispatchEvent")); else if (typeof b.fireEvent != "undefined") { if (c == "click") if (b.tagName == "INPUT" && (b.type.toLowerCase() == "checkbox" || b.type.toLowerCase() == "radio")) b.checked = b.checked !== m; b.fireEvent("on" + c) } else a(Error("Browser doesn't support triggering events"))
    }, d: function (b) { return r.C(b) ? b() : b }, Da: function (b, c) { return r.a.i((b.className || "").split(/\s+/), c) >= 0 }, Xa: function (b,
c, d) { var e = r.a.Da(b, c); if (d && !e) b.className = (b.className || "") + " " + c; else if (e && !d) { d = (b.className || "").split(/\s+/); e = ""; for (var g = 0; g < d.length; g++) if (d[g] != c) e += d[g] + " "; b.className = r.a.l(e) } }, Ra: function (b, c) { b = r.a.d(b); c = r.a.d(c); for (var d = [], e = b; e <= c; e++) d.push(e); return d }, ga: function (b) { for (var c = [], d = b.length - 1; d >= 0; d--) c.push(b[d]); return c }, P: /MSIE 6/i.test(navigator.userAgent), La: /MSIE 7/i.test(navigator.userAgent), da: function (b, c) {
    for (var d = r.a.ga(b.getElementsByTagName("INPUT")).concat(r.a.ga(b.getElementsByTagName("TEXTAREA"))),
e = typeof c == "string" ? function (i) { return i.name === c } : function (i) { return c.test(i.name) }, g = [], h = d.length - 1; h >= 0; h--) e(d[h]) && g.push(d[h]); return g
}, F: function (b) { if (typeof b == "string") if (b = r.a.l(b)) { if (window.JSON && window.JSON.parse) return window.JSON.parse(b); return (new Function("return " + b))() } return o }, T: function (b) {
    if (typeof JSON == "undefined" || typeof JSON.stringify == "undefined") a(Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js"));
    return JSON.stringify(r.a.d(b))
}, Qa: function (b, c, d) {
    d = d || {}; var e = d.params || {}, g = d.includeFields || this.ba, h = b; if (typeof b == "object" && b.tagName == "FORM") { h = b.action; for (var i = g.length - 1; i >= 0; i--) for (var j = r.a.da(b, g[i]), l = j.length - 1; l >= 0; l--) e[j[l].name] = j[l].value } c = r.a.d(c); var k = document.createElement("FORM"); k.style.display = "none"; k.action = h; k.method = "post"; for (var n in c) { b = document.createElement("INPUT"); b.name = n; b.value = r.a.T(r.a.d(c[n])); k.appendChild(b) } for (n in e) {
        b = document.createElement("INPUT");
        b.name = n; b.value = e[n]; k.appendChild(b)
    } document.body.appendChild(k); d.submitter ? d.submitter(k) : k.submit(); setTimeout(function () { k.parentNode.removeChild(k) }, 0)
}, e: { Ya: 0, w: "__ko__" + (new Date).getTime(), Za: {}, t: function (b, c) { var d = r.a.e.ca(b, p); return d === undefined ? undefined : d[c] }, la: function (b, c, d) { r.a.e.ca(b, m)[c] = d }, ca: function (b, c) { var d = b[r.a.e.w]; if (!d) { if (!c) return; d = b[r.a.e.w] = "ko" + r.a.e.Ya++; r.a.e[d] = {} } return r.a.e[d] }, M: function (b) { var c = b[r.a.e.w]; if (c) { delete r.a.e[c]; b[r.a.e.w] = o } }, N: function (b) {
    if (!(b.nodeType !=
1 && b.nodeType != 9)) { r.a.e.M(b); b = b.getElementsByTagName("*"); for (var c = 0, d = b.length; c < d; c++) r.a.e.M(b[c]) } 
} 
}
    }
}; r.b("ko.utils", r.a); r.b("ko.utils.arrayForEach", r.a.h); r.b("ko.utils.arrayFirst", r.a.xa); r.b("ko.utils.arrayFilter", r.a.J); r.b("ko.utils.arrayGetDistinctValues", r.a.Y); r.b("ko.utils.arrayIndexOf", r.a.i); r.b("ko.utils.arrayMap", r.a.K); r.b("ko.utils.arrayPushAll", r.a.L); r.b("ko.utils.arrayRemoveItem", r.a.Z); r.b("ko.utils.fieldsIncludedWithJsonPost", r.a.ba); r.b("ko.utils.getFormFields", r.a.da);
r.b("ko.utils.postJson", r.a.Qa); r.b("ko.utils.parseJson", r.a.F); r.b("ko.utils.stringifyJson", r.a.T); r.b("ko.utils.range", r.a.Ra); r.b("ko.utils.triggerEvent", r.a.qa); r.b("ko.utils.unwrapObservable", r.a.d); Function.prototype.bind || (Function.prototype.bind = function (f) { var b = this, c = Array.prototype.slice.call(arguments); f = c.shift(); return function () { return b.apply(f, c.concat(Array.prototype.slice.call(arguments))) } });
r.j = function () {
    function f() { return ((1 + Math.random()) * 4294967296 | 0).toString(16).substring(1) } function b(d, e) { if (d) if (d.nodeType == 8) { var g = r.j.ia(d.nodeValue); g != o && e.push({ Ca: d, Na: g }) } else if (d.nodeType == 1) { g = 0; for (var h = d.childNodes, i = h.length; g < i; g++) b(h[g], e) } } var c = {}; return { R: function (d) { if (typeof d != "function") a(Error("You can only pass a function to ko.memoization.memoize()")); var e = f() + f(); c[e] = d; return "<!--[ko_memo:" + e + "]--\>" }, ra: function (d, e) {
        var g = c[d]; if (g === undefined) a(Error("Couldn't find any memo with ID " +
d + ". Perhaps it's already been unmemoized.")); try { g.apply(o, e || []); return m } finally { delete c[d] } 
    }, sa: function (d, e) { var g = []; b(d, g); for (var h = 0, i = g.length; h < i; h++) { var j = g[h].Ca, l = [j]; e && r.a.L(l, e); r.j.ra(g[h].Na, l); j.nodeValue = ""; j.parentNode && j.parentNode.removeChild(j) } }, ia: function (d) { return (d = d.match(/^\[ko_memo\:(.*?)\]$/)) ? d[1] : o } 
    }
} (); r.b("ko.memoization", r.j); r.b("ko.memoization.memoize", r.j.R); r.b("ko.memoization.unmemoize", r.j.ra); r.b("ko.memoization.parseMemoText", r.j.ia);
r.b("ko.memoization.unmemoizeDomNodeAndDescendants", r.j.sa); r.Wa = function (f, b) { this.za = f; this.s = b; r.g(this, "dispose", this.s) }; r.U = function () { var f = []; this.V = function (b, c) { var d = new r.Wa(c ? function () { b.call(c) } : b, function () { r.a.Z(f, d) }); f.push(d); return d }; this.v = function (b) { r.a.h(f.slice(0), function (c) { c && c.za(b) }) }; this.Ja = function () { return f.length }; r.g(this, "subscribe", this.V); r.g(this, "notifySubscribers", this.v); r.g(this, "getSubscriptionsCount", this.Ja) };
r.fa = function (f) { return typeof f.V == "function" && typeof f.v == "function" }; r.b("ko.subscribable", r.U); r.b("ko.isSubscribable", r.fa); r.z = function () { var f = []; return { ya: function () { f.push([]) }, end: function () { return f.pop() }, ja: function (b) { if (!r.fa(b)) a("Only subscribable things can act as dependencies"); f.length > 0 && f[f.length - 1].push(b) } } } ();
r.p = function (f) { function b() { if (arguments.length > 0) { c = arguments[0]; b.v(c); return this } else { r.z.ja(b); return c } } var c = f; b.n = r.p; b.H = function () { b.v(c) }; r.U.call(b); r.g(b, "valueHasMutated", b.H); return b }; r.C = function (f) { if (f === o || f === undefined || f.n === undefined) return p; if (f.n === r.p) return m; return r.C(f.n) }; r.D = function (f) { if (typeof f == "function" && f.n === r.p) return m; if (typeof f == "function" && f.n === r.m && f.Ka) return m; return p }; r.b("ko.observable", r.p); r.b("ko.isObservable", r.C);
r.b("ko.isWriteableObservable", r.D);
r.Pa = function (f) {
    var b = new r.p(f); r.a.h(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (c) { b[c] = function () { var d = b(); d = d[c].apply(d, arguments); b.H(); return d } }); r.a.h(["slice"], function (c) { b[c] = function () { var d = b(); return d[c].apply(d, arguments) } }); b.remove = function (c) { for (var d = b(), e = [], g = [], h = typeof c == "function" ? c : function (k) { return k === c }, i = 0, j = d.length; i < j; i++) { var l = d[i]; h(l) ? g.push(l) : e.push(l) } b(e); return g }; b.Sa = function (c) {
        if (!c) return []; return b.remove(function (d) {
            return r.a.i(c,
d) >= 0
        })
    }; b.$ = function (c) { for (var d = b(), e = typeof c == "function" ? c : function (h) { return h === c }, g = d.length - 1; g >= 0; g--) if (e(d[g])) d[g]._destroy = m; b.H() }; b.Ba = function (c) { if (!c) return []; return b.$(function (d) { return r.a.i(c, d) >= 0 }) }; b.indexOf = function (c) { var d = b(); return r.a.i(d, c) }; b.replace = function (c, d) { var e = b.indexOf(c); if (e >= 0) { b()[e] = d; b.H() } }; r.g(b, "remove", b.remove); r.g(b, "removeAll", b.Sa); r.g(b, "destroy", b.$); r.g(b, "destroyAll", b.Ba); r.g(b, "indexOf", b.indexOf); return b
};
r.b("ko.observableArray", r.Pa);
r.m = function (f, b, c) {
    function d() { r.a.h(i, function (k) { k.s() }); i = [] } function e(k) { d(); r.a.h(k, function (n) { i.push(n.V(g)) }) } function g() { if (l && typeof c.disposeWhen == "function") if (c.disposeWhen()) { h.s(); return } try { r.z.ya(); j = c.owner ? c.read.call(c.owner) : c.read() } finally { var k = r.a.Y(r.z.end()); e(k) } h.v(j); l = m } function h() {
        if (arguments.length > 0) if (typeof c.write === "function") { var k = arguments[0]; c.owner ? c.write.call(c.owner, k) : c.write(k) } else a("Cannot write a value to a dependentObservable unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters."); else {
            l ||
g(); r.z.ja(h); return j
        } 
    } if (f && typeof f == "object") c = f; else { c = c || {}; c.read = f || c.read; c.owner = b || c.owner } if (typeof c.read != "function") a("Pass a function that returns the value of the dependentObservable"); var i = [], j, l = p; h.n = r.m; h.Ha = function () { return i.length }; h.Ka = typeof c.write === "function"; h.s = function () { d() }; r.U.call(h); c.deferEvaluation !== m && g(); r.g(h, "dispose", h.s); r.g(h, "getDependenciesCount", h.Ha); return h
}; r.m.n = r.p; r.b("ko.dependentObservable", r.m);
(function () {
    function f(d, e, g) { g = g || new c; d = e(d); if (!(typeof d == "object" && d !== o && d !== undefined)) return d; var h = d instanceof Array ? [] : {}; g.save(d, h); b(d, function (i) { var j = e(d[i]); switch (typeof j) { case "boolean": case "number": case "string": case "function": h[i] = j; break; case "object": case "undefined": var l = g.t(j); h[i] = l !== undefined ? l : f(j, e, g) } }); return h } function b(d, e) { if (d instanceof Array) for (var g = 0; g < d.length; g++) e(g); else for (g in d) e(g) } function c() {
        var d = [], e = []; this.save = function (g, h) {
            var i = r.a.i(d,
g); if (i >= 0) e[i] = h; else { d.push(g); e.push(h) } 
        }; this.t = function (g) { g = r.a.i(d, g); return g >= 0 ? e[g] : undefined } 
    } r.pa = function (d) { if (arguments.length == 0) a(Error("When calling ko.toJS, pass the object you want to convert.")); return f(d, function (e) { for (var g = 0; r.C(e) && g < 10; g++) e = e(); return e }) }; r.toJSON = function (d) { d = r.pa(d); return r.a.T(d) } 
})(); r.b("ko.toJS", r.pa); r.b("ko.toJSON", r.toJSON);
r.f = { k: function (f) { if (f.tagName == "OPTION") { if (f.__ko__hasDomDataOptionValue__ === m) return r.a.e.t(f, r.c.options.ha); return f.getAttribute("value") } else return f.tagName == "SELECT" ? f.selectedIndex >= 0 ? r.f.k(f.options[f.selectedIndex]) : undefined : f.value }, I: function (f, b) {
    if (f.tagName == "OPTION") switch (typeof b) {
        case "string": case "number": r.a.e.M(f); "__ko__hasDomDataOptionValue__" in f && delete f.__ko__hasDomDataOptionValue__; f.value = b; break; default: r.a.e.la(f, r.c.options.ha, b); f.__ko__hasDomDataOptionValue__ =
m; f.value = ""
    } else if (f.tagName == "SELECT") for (var c = f.options.length - 1; c >= 0; c--) { if (r.f.k(f.options[c]) == b) { f.selectedIndex = c; break } } else { if (b === o || b === undefined) b = ""; f.value = b } 
} 
}; r.b("ko.selectExtensions", r.f); r.b("ko.selectExtensions.readValue", r.f.k); r.b("ko.selectExtensions.writeValue", r.f.I);
r.o = function () {
    function f(e, g) { return e.replace(b, function (h, i) { return g[i] }) } var b = /\[ko_token_(\d+)\]/g, c = /^[\_$a-z][\_$a-z0-9]*(\[.*?\])*(\.[\_$a-z][\_$a-z0-9]*(\[.*?\])*)*$/i, d = ["true", "false"]; return { F: function (e) {
        e = r.a.l(e); if (e.length < 3) return {}; for (var g = [], h = o, i, j = e.charAt(0) == "{" ? 1 : 0; j < e.length; j++) {
            var l = e.charAt(j); if (h === o) switch (l) { case '"': case "'": case "/": h = j; i = l; break; case "{": h = j; i = "}"; break; case "[": h = j; i = "]" } else if (l == i) {
                l = e.substring(h, j + 1); g.push(l); var k = "[ko_token_" + (g.length -
1) + "]"; e = e.substring(0, h) + k + e.substring(j + 1); j -= l.length - k.length; h = o
            } 
        } h = {}; e = e.split(","); i = 0; for (j = e.length; i < j; i++) { k = e[i]; var n = k.indexOf(":"); if (n > 0 && n < k.length - 1) { l = r.a.l(k.substring(0, n)); k = r.a.l(k.substring(n + 1)); if (l.charAt(0) == "{") l = l.substring(1); if (k.charAt(k.length - 1) == "}") k = k.substring(0, k.length - 1); l = r.a.l(f(l, g)); k = r.a.l(f(k, g)); h[l] = k } } return h
    }, O: function (e) {
        var g = r.o.F(e), h = [], i; for (i in g) {
            var j = g[i], l; l = j; l = r.a.i(d, r.a.l(l).toLowerCase()) >= 0 ? p : l.match(c) !== o; if (l) {
                h.length > 0 &&
h.push(", "); h.push(i + " : function(__ko_value) { " + j + " = __ko_value; }")
            } 
        } if (h.length > 0) e = e + ", '_ko_property_writers' : { " + h.join("") + " } "; return e
    } 
    }
} (); r.b("ko.jsonExpressionRewriting", r.o); r.b("ko.jsonExpressionRewriting.parseJson", r.o.F); r.b("ko.jsonExpressionRewriting.insertPropertyAccessorsIntoJson", r.o.O); r.c = {};
r.X = function (f, b, c) {
    function d(i) { return function () { return h[i] } } function e() { return h } var g = m, h; new r.m(function () {
        var i; if (!(i = typeof b == "function" ? b() : b)) { var j = f.getAttribute("data-bind"); try { var l = " { " + r.o.O(j) + " } "; i = r.a.Ga(l, c === o ? window : c) } catch (k) { a(Error("Unable to parse binding attribute.\nMessage: " + k + ";\nAttribute value: " + j)) } } h = i; if (g) for (var n in h) r.c[n] && typeof r.c[n].init == "function" && (0, r.c[n].init)(f, d(n), e, c); for (n in h) r.c[n] && typeof r.c[n].update == "function" && (0, r.c[n].update)(f,
d(n), e, c)
    }, o, { disposeWhen: function () { return !r.a.A(f) } }); g = p
}; r.ua = function (f, b) { if (b && b.nodeType == undefined) a(Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node (note: this is a breaking change since KO version 1.05)")); b = b || window.document.body; var c = r.a.Ia(b, "data-bind"); r.a.h(c, function (d) { r.X(d, o, f) }) }; r.b("ko.bindingHandlers", r.c); r.b("ko.applyBindings", r.ua);
r.c.click = { init: function (f, b, c, d) { r.a.q(f, "click", function (e) { var g, h = b(); try { g = h.call(d) } finally { if (g !== m) if (e.preventDefault) e.preventDefault(); else e.returnValue = p } }) } }; r.c.submit = { init: function (f, b, c, d) { if (typeof b() != "function") a(Error("The value for a submit binding must be a function to invoke on submit")); r.a.q(f, "submit", function (e) { var g, h = b(); try { g = h.call(d, f) } finally { if (g !== m) if (e.preventDefault) e.preventDefault(); else e.returnValue = p } }) } };
r.c.visible = { update: function (f, b) { var c = r.a.d(b()), d = f.style.display != "none"; if (c && !d) f.style.display = ""; else if (!c && d) f.style.display = "none" } }; r.c.enable = { update: function (f, b) { var c = r.a.d(b()); if (c && f.disabled) f.removeAttribute("disabled"); else if (!c && !f.disabled) f.disabled = m } }; r.c.disable = { update: function (f, b) { r.c.enable.update(f, function () { return !r.a.d(b()) }) } };
r.c.value = { init: function (f, b, c) { var d = c().valueUpdate || "change", e = p; if (r.a.Va(d, "after")) { e = m; d = d.substring(5) } var g = e ? function (h) { setTimeout(h, 0) } : function (h) { h() }; r.a.q(f, d, function () { g(function () { var h = b(), i = r.f.k(f); if (r.D(h)) h(i); else { h = c(); h._ko_property_writers && h._ko_property_writers.value && h._ko_property_writers.value(i) } }) }) }, update: function (f, b) {
    var c = r.a.d(b()), d = r.f.k(f), e = c != d; if (c === 0 && d !== 0 && d !== "0") e = m; if (e) { d = function () { r.f.I(f, c) }; d(); f.tagName == "SELECT" && setTimeout(d, 0) } if (f.tagName ==
"SELECT") { d = r.f.k(f); d !== c && r.a.qa(f, "change") } 
} 
};
r.c.options = { update: function (f, b, c) {
    if (f.tagName != "SELECT") a(Error("options binding applies only to SELECT elements")); var d = r.a.K(r.a.J(f.childNodes, function (k) { return k.tagName && k.tagName == "OPTION" && k.selected }), function (k) { return r.f.k(k) || k.innerText || k.textContent }), e = f.scrollTop, g = r.a.d(b()); r.a.aa(f); if (g) {
        var h = c(); if (typeof g.length != "number") g = [g]; if (h.optionsCaption) { var i = document.createElement("OPTION"); i.innerHTML = h.optionsCaption; r.f.I(i, undefined); f.appendChild(i) } c = 0; for (b = g.length; c <
b; c++) { i = document.createElement("OPTION"); var j = typeof h.optionsValue == "string" ? g[c][h.optionsValue] : g[c], l = typeof h.optionsText == "string" ? g[c][h.optionsText] : j; j = r.a.d(j); l = r.a.d(l); r.f.I(i, j); i.innerHTML = l.toString(); f.appendChild(i) } g = f.getElementsByTagName("OPTION"); c = h = 0; for (b = g.length; c < b; c++) if (r.a.i(d, r.f.k(g[c])) >= 0) { r.a.na(g[c], m); h++ } if (e) f.scrollTop = e
    } 
} 
}; r.c.options.ha = "__ko.bindingHandlers.options.optionValueDomData__";
r.c.selectedOptions = { ea: function (f) { var b = []; f = f.childNodes; for (var c = 0, d = f.length; c < d; c++) { var e = f[c]; e.tagName == "OPTION" && e.selected && b.push(r.f.k(e)) } return b }, init: function (f, b, c) { r.a.q(f, "change", function () { var d = b(); if (r.D(d)) d(r.c.selectedOptions.ea(this)); else { d = c(); d._ko_property_writers && d._ko_property_writers.value && d._ko_property_writers.value(r.c.selectedOptions.ea(this)) } }) }, update: function (f, b) {
    if (f.tagName != "SELECT") a(Error("values binding applies only to SELECT elements")); var c =
r.a.d(b()); if (c && typeof c.length == "number") for (var d = f.childNodes, e = 0, g = d.length; e < g; e++) { var h = d[e]; h.tagName == "OPTION" && r.a.na(h, r.a.i(c, r.f.k(h)) >= 0) } 
} 
}; r.c.text = { update: function (f, b) { var c = r.a.d(b()); if (c === o || c === undefined) c = ""; typeof f.innerText == "string" ? f.innerText = c : f.textContent = c } }; r.c.css = { update: function (f, b) { var c = r.a.d(b() || {}), d; for (d in c) if (typeof d == "string") { var e = r.a.d(c[d]); r.a.Xa(f, d, e) } } };
r.c.style = { update: function (f, b) { var c = r.a.d(b() || {}), d; for (d in c) if (typeof d == "string") { var e = r.a.d(c[d]); f.style[d] = e || "" } } }; r.c.uniqueName = { init: function (f, b) { if (b()) { f.name = "ko_unique_" + ++r.c.uniqueName.Aa; r.a.P && f.mergeAttributes(document.createElement("<INPUT name='" + f.name + "'/>"), p) } } }; r.c.uniqueName.Aa = 0;
r.c.checked = { init: function (f, b, c) { function d() { var e; if (f.type == "checkbox") e = f.checked; else if (f.type == "radio" && f.checked) e = f.value; else return; var g = b(); if (r.D(g)) g() !== e && g(e); else { g = c(); g._ko_property_writers && g._ko_property_writers.checked && g._ko_property_writers.checked(e) } } r.a.q(f, "change", d); r.a.q(f, "click", d); f.type == "radio" && !f.name && r.c.uniqueName.init(f, function () { return m }) }, update: function (f, b) {
    var c = r.a.d(b()); if (f.type == "checkbox") (f.checked = c) && r.a.P && f.mergeAttributes(document.createElement("<INPUT type='checkbox' checked='checked' />"),
p); else if (f.type == "radio") { f.checked = f.value == c; if (f.value == c && (r.a.P || r.a.La)) f.mergeAttributes(document.createElement("<INPUT type='radio' checked='checked' />"), p) } 
} 
};
r.W = function () { this.renderTemplate = function () { a("Override renderTemplate in your ko.templateEngine subclass") }; this.isTemplateRewritten = function () { a("Override isTemplateRewritten in your ko.templateEngine subclass") }; this.rewriteTemplate = function () { a("Override rewriteTemplate in your ko.templateEngine subclass") }; this.createJavaScriptEvaluatorBlock = function () { a("Override createJavaScriptEvaluatorBlock in your ko.templateEngine subclass") } }; r.b("ko.templateEngine", r.W);
r.G = function () {
    var f = /(<[a-z]+\d*(\s+(?!data-bind=)[a-z0-9]+(=(\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind=(["'])([\s\S]*?)\5/g; return { Fa: function (b, c) { c.isTemplateRewritten(b) || c.rewriteTemplate(b, function (d) { return r.G.Oa(d, c) }) }, Oa: function (b, c) { return b.replace(f, function (d, e, g, h, i, j, l) { d = l; d = r.o.O(d); return c.createJavaScriptEvaluatorBlock("ko.templateRewriting.applyMemoizedBindingsToNextSibling(function() {                     return (function() { return { " + d + " } })()                 })") + e }) },
        va: function (b) { return r.j.R(function (c, d) { c.nextSibling && r.X(c.nextSibling, b, d) }) } 
    }
} (); r.b("ko.templateRewriting", r.G); r.b("ko.templateRewriting.applyMemoizedBindingsToNextSibling", r.G.va);
(function () {
    function f(c, d, e, g, h) { var i = r.a.d(g); h = h || {}; var j = h.templateEngine || b; r.G.Fa(e, j); e = j.renderTemplate(e, i, h); if (typeof e.length != "number" || e.length > 0 && typeof e[0].nodeType != "number") a("Template engine must return an array of DOM nodes"); e && r.a.h(e, function (l) { r.j.sa(l, [g]) }); switch (d) { case "replaceChildren": r.a.Ua(c, e); break; case "replaceNode": r.a.ka(c, e); break; case "ignoreTargetNode": break; default: a(Error("Unknown renderMode: " + d)) } h.afterRender && h.afterRender(e, g); return e } var b; r.oa =
function (c) { if (c != undefined && !(c instanceof r.W)) a("templateEngine must inherit from ko.templateEngine"); b = c }; r.S = function (c, d, e, g, h) { e = e || {}; if ((e.templateEngine || b) == undefined) a("Set a template engine before calling renderTemplate"); h = h || "replaceChildren"; if (g) { var i = g.nodeType ? g : g.length > 0 ? g[0] : o; return new r.m(function () { var j = f(g, h, c, d, e); if (h == "replaceNode") { g = j; i = g.nodeType ? g : g.length > 0 ? g[0] : o } }, o, { disposeWhen: function () { return !i || !r.a.A(i) } }) } else return r.j.R(function (j) { r.S(c, d, e, j, "replaceNode") }) };
    r.Ta = function (c, d, e, g) { new r.m(function () { var h = r.a.d(d) || []; if (typeof h.length == "undefined") h = [h]; h = r.a.J(h, function (i) { return e.includeDestroyed || !i._destroy }); r.a.ma(g, h, function (i) { return f(o, "ignoreTargetNode", c, i, e) }, e) }, o, { disposeWhen: function () { return !r.a.A(g) } }) }; r.c.template = { update: function (c, d, e, g) {
        d = r.a.d(d()); e = typeof d == "string" ? d : d.name; if (typeof d.foreach != "undefined") r.Ta(e, d.foreach || [], { afterAdd: d.afterAdd, beforeRemove: d.beforeRemove, includeDestroyed: d.includeDestroyed, afterRender: d.afterRender },
c); else { var h = d.data; r.S(e, typeof h == "undefined" ? g : h, { afterRender: d.afterRender }, c) } 
    } 
    }
})(); r.b("ko.setTemplateEngine", r.oa); r.b("ko.renderTemplate", r.S);
r.a.r = function (f, b, c) {
    if (c === undefined) return r.a.r(f, b, 1) || r.a.r(f, b, 10) || r.a.r(f, b, Number.MAX_VALUE); else {
        f = f || []; b = b || []; for (var d = f, e = b, g = [], h = 0; h <= e.length; h++) g[h] = []; h = 0; for (var i = Math.min(d.length, c); h <= i; h++) g[0][h] = h; h = 1; for (i = Math.min(e.length, c); h <= i; h++) g[h][0] = h; i = d.length; var j, l = e.length; for (h = 1; h <= i; h++) {
            var k = Math.min(l, h + c); for (j = Math.max(1, h - c); j <= k; j++) g[j][h] = d[h - 1] === e[j - 1] ? g[j - 1][h - 1] : Math.min(g[j - 1][h] === undefined ? Number.MAX_VALUE : g[j - 1][h] + 1, g[j][h - 1] === undefined ? Number.MAX_VALUE :
g[j][h - 1] + 1)
        } f = f; b = b; c = f.length; d = b.length; e = []; h = g[d][c]; if (h === undefined) g = o; else { for (; c > 0 || d > 0; ) { i = g[d][c]; j = d > 0 ? g[d - 1][c] : h + 1; l = c > 0 ? g[d][c - 1] : h + 1; k = d > 0 && c > 0 ? g[d - 1][c - 1] : h + 1; if (j === undefined || j < i - 1) j = h + 1; if (l === undefined || l < i - 1) l = h + 1; if (k < i - 1) k = h + 1; if (j <= l && j < k) { e.push({ status: "added", value: b[d - 1] }); d-- } else { if (l < j && l < k) e.push({ status: "deleted", value: f[c - 1] }); else { e.push({ status: "retained", value: f[c - 1] }); d-- } c-- } } g = e.reverse() } return g
    } 
}; r.b("ko.utils.compareArrays", r.a.r);
(function () {
    function f(b, c) { var d = []; r.m(function () { var e = b(c) || []; d.length > 0 && r.a.ka(d, e); d.splice(0, d.length); r.a.L(d, e) }, o, { disposeWhen: function () { return d.length == 0 || !r.a.A(d[0]) } }); return d } r.a.ma = function (b, c, d, e) {
        c = c || []; e = e || {}; var g = r.a.e.t(b, "setDomNodeChildrenFromArrayMapping_lastMappingResult") === undefined, h = r.a.e.t(b, "setDomNodeChildrenFromArrayMapping_lastMappingResult") || [], i = r.a.K(h, function (s) { return s.wa }), j = r.a.r(i, c); c = []; var l = 0, k = []; i = []; for (var n = o, q = 0, w = j.length; q < w; q++) switch (j[q].status) {
            case "retained": var t =
h[l]; c.push(t); if (t.B.length > 0) n = t.B[t.B.length - 1]; l++; break; case "deleted": r.a.h(h[l].B, function (s) { k.push({ element: s, index: q, value: j[q].value }); n = s }); l++; break; case "added": t = f(d, j[q].value); c.push({ wa: j[q].value, B: t }); for (var v = 0, x = t.length; v < x; v++) { var u = t[v]; i.push({ element: u, index: q, value: j[q].value }); if (n == o) b.firstChild ? b.insertBefore(u, b.firstChild) : b.appendChild(u); else n.nextSibling ? b.insertBefore(u, n.nextSibling) : b.appendChild(u); n = u } 
        } r.a.h(k, function (s) { r.a.e.N(s.element) }); d = p; if (!g) {
            if (e.afterAdd) for (q =
0; q < i.length; q++) e.afterAdd(i[q].element, i[q].index, i[q].value); if (e.beforeRemove) { for (q = 0; q < k.length; q++) e.beforeRemove(k[q].element, k[q].index, k[q].value); d = m } 
        } d || r.a.h(k, function (s) { s.element.parentNode && s.element.parentNode.removeChild(s.element) }); r.a.e.la(b, "setDomNodeChildrenFromArrayMapping_lastMappingResult", c)
    } 
})(); r.b("ko.utils.setDomNodeChildrenFromArrayMapping", r.a.ma);
r.Q = function () {
    function f(c) { var d = document.getElementById(c); if (d == o) a(Error("Cannot find template with ID=" + c)); return d } this.u = function () { if (typeof jQuery == "undefined" || !jQuery.tmpl) return 0; if (jQuery.tmpl.tag) return 2; return 1 } (); var b = RegExp("__ko_apos__", "g"); this.renderTemplate = function (c, d) {
        if (this.u == 0) a(Error("jquery.tmpl not detected.\nTo use KO's default template engine, reference jQuery and jquery.tmpl. See Knockout installation documentation for more details.")); if (this.u == 1) {
            var e =
'<script type="text/html">' + f(c).text + "<\/script>"; e = jQuery.tmpl(e, d)[0].text.replace(b, "'"); return jQuery.clean([e], document)
        } d = [d]; e = f(c).text; return jQuery.tmpl(e, d)
    }; this.isTemplateRewritten = function (c) { return f(c).Ma === m }; this.rewriteTemplate = function (c, d) { var e = f(c), g = d(e.text); if (this.u == 1) { g = r.a.l(g); g = g.replace(/([\s\S]*?)(\${[\s\S]*?}|{{[\=a-z][\s\S]*?}}|$)/g, function (h, i, j) { return i.replace(/\'/g, "__ko_apos__") + j }) } e.text = g; e.Ma = m }; this.createJavaScriptEvaluatorBlock = function (c) {
        if (this.u ==
1) return "{{= " + c + "}}"; return "{{ko_code ((function() { return " + c + " })()) }}"
    }; this.ta = function (c, d) { document.write("<script type='text/html' id='" + c + "'>" + d + "<\/script>") }; r.g(this, "addTemplate", this.ta); if (this.u > 1) jQuery.tmpl.tag.ko_code = { open: "_.push($1 || '');"}
}; r.Q.prototype = new r.W; r.oa(new r.Q); r.b("ko.jqueryTmplTemplateEngine", r.Q);
(function(){var a={},d={en:{}};d["default"]=d.en;a.extend=function(g){for(var c=arguments[1]||{},f=2,i=arguments.length;f<i;f++){var e=arguments[f];if(e)for(var d in e){var a=e[d];if(typeof a!=="undefined")if(g&&(w(a)||h(a))){var b=c[d];b=b&&(w(b)||h(b))?b:h(a)?[]:{};c[d]=this.extend(true,b,a)}else c[d]=a}}return c};a.findClosestCulture=function(a){var d;if(!a)return this.culture||this.cultures["default"];if(G(a))a=a.split(",");if(h(a)){for(var c,k=this.cultures,m=a,j=m.length,g=[],b=0;b<j;b++){a=e(m[b]);var f,i=a.split(";");c=e(i[0]);if(i.length===1)f=1;else{a=e(i[1]);if(a.indexOf("q=")===0){a=a.substr(2);f=parseFloat(a,10);f=isNaN(f)?0:f}else f=1}g.push({lang:c,pri:f})}g.sort(function(a,b){return a.pri<b.pri?1:-1});for(b=0;b<j;b++){c=g[b].lang;d=k[c];if(d)return d}for(b=0;b<j;b++){c=g[b].lang;do{var l=c.lastIndexOf("-");if(l===-1)break;c=c.substr(0,l);d=k[c];if(d)return d}while(1)}}else if(typeof a==="object")return a;return d||null};a.preferCulture=function(a){this.culture=this.findClosestCulture(a)||this.cultures["default"]};a.localize=function(e,a,b){if(typeof a==="string"){a=a||"default";a=this.cultures[a]||{name:a}}var c=d[a.name];if(arguments.length===3){if(!c)c=d[a.name]={};c[e]=b}else{if(c)b=c[e];if(typeof b==="undefined"){var f=d[a.language];if(f)b=f[e];if(typeof b==="undefined")b=d["default"][e]}}return typeof b==="undefined"?null:b};a.format=function(a,c,b){b=this.findClosestCulture(b);if(typeof a==="number")a=C(a,c,b);else if(a instanceof Date)a=u(a,c,b);return a};a.parseInt=function(c,b,a){return Math.floor(this.parseFloat(c,b,a))};a.parseFloat=function(a,u,q){q=this.findClosestCulture(q);var m=NaN,c=q.numberFormat;a=e(a);if(A.test(a))m=parseFloat(a,u);else if(!u&&H.test(a))m=parseInt(a,16);else{var h=l(a,c,c.pattern[0]),i=h[0],f=h[1];if(i===""&&c.pattern[0]!=="-n"){h=l(a,c,"-n");i=h[0];f=h[1]}i=i||"+";var j,d,g=f.indexOf("e");if(g<0)g=f.indexOf("E");if(g<0){d=f;j=null}else{d=f.substr(0,g);j=f.substr(g+1)}var b,k,t=c["."],o=d.indexOf(t);if(o<0){b=d;k=null}else{b=d.substr(0,o);k=d.substr(o+t.length)}var p=c[","];b=b.split(p).join("");var r=p.replace(/\u00A0/g," ");if(p!==r)b=b.split(r).join("");var n=i+b;if(k!==null)n+="."+k;if(j!==null){var s=l(j,c,"-n");n+="e"+(s[0]||"+")+s[1]}if(x.test(n))m=parseFloat(n)}return m};a.parseDate=function(g,a,b){b=this.findClosestCulture(b);var c,h,d;if(a){if(typeof a==="string")a=[a];if(a.length)for(var e=0,i=a.length;e<i;e++){var f=a[e];if(f){c=v(g,f,b);if(c)break}}}else{d=b.calendar.patterns;for(h in d){c=v(g,d[h],b);if(c)break}}return c||null};var n=a.cultures=a.cultures||{},r=n["default"]=n.en=a.extend(true,{name:"en",englishName:"English",nativeName:"English",isRTL:false,language:"en",numberFormat:{pattern:["-n"],decimals:2,",":",",".":".",groupSizes:[3],"+":"+","-":"-",percent:{pattern:["-n %","n %"],decimals:2,groupSizes:[3],",":",",".":".",symbol:"%"},currency:{pattern:["($n)","$n"],decimals:2,groupSizes:[3],",":",",".":".",symbol:"$"}},calendars:{standard:{name:"Gregorian_USEnglish","/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy'-'MM'-'dd'T'HH':'mm':'ss"}}}},n.en);r.calendar=r.calendar||r.calendars.standard;var F=/^\s+|\s+$/g,A=/^[+-]?infinity$/i,H=/^0x[a-f0-9]+$/i,x=/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,p=Object.prototype.toString;function g(b,a){return b.indexOf(a)===0}function o(b,a){return b.substr(b.length-a.length)===a}function e(a){return(a+"").replace(F,"")}function i(a,c,d){for(var b=a.length;b<c;b++)a=d?"0"+a:a+"0";return a}function h(a){return p.call(a)==="[object Array]"}function G(a){return p.call(a)==="[object String]"}function w(a){return p.call(a)==="[object Object]"}function f(a,c){if(a.indexOf)return a.indexOf(c);for(var b=0,d=a.length;b<d;b++)if(a[b]===c)return b;return-1}function B(j,g,l){var m=l.groupSizes,h=m[0],k=1,p=Math.pow(10,g),n=Math.round(j*p)/p;if(!isFinite(n))n=j;j=n;var b=j+"",a="",e=b.split(/e/i),c=e.length>1?parseInt(e[1],10):0;b=e[0];e=b.split(".");b=e[0];a=e.length>1?e[1]:"";var q;if(c>0){a=i(a,c,false);b+=a.slice(0,c);a=a.substr(c)}else if(c<0){c=-c;b=i(b,c+1);a=b.slice(-c,b.length)+a;b=b.slice(0,-c)}if(g>0)a=l["."]+(a.length>g?a.slice(0,g):i(a,g));else a="";var d=b.length-1,o=l[","],f="";while(d>=0){if(h===0||h>d)return b.slice(0,d+1)+(f.length?o+f+a:a);f=b.slice(d-h+1,d+1)+(f.length?o+f:"");d-=h;if(k<m.length){h=m[k];k++}}return b.slice(0,d+1)+o+f+a}function l(a,e,f){var b=e["-"],c=e["+"],d;switch(f){case"n -":b=" "+b;c=" "+c;case"n-":if(o(a,b))d=["-",a.substr(0,a.length-b.length)];else if(o(a,c))d=["+",a.substr(0,a.length-c.length)];break;case"- n":b+=" ";c+=" ";case"-n":if(g(a,b))d=["-",a.substr(b.length)];else if(g(a,c))d=["+",a.substr(c.length)];break;case"(n)":if(g(a,"(")&&o(a,")"))d=["-",a.substr(1,a.length-2)]}return d||["",a]}function C(h,c,m){if(!c||c==="i")return m.name.length?h.toLocaleString():h.toString();c=c||"D";var f=m.numberFormat,b=Math.abs(h),d=-1,g;if(c.length>1)d=parseInt(c.slice(1),10);var k=c.charAt(0).toUpperCase(),a;switch(k){case"D":g="n";if(d!==-1)b=i(""+b,d,true);if(h<0)b=-b;break;case"N":a=f;case"C":a=a||f.currency;case"P":a=a||f.percent;g=h<0?a.pattern[0]:a.pattern[1]||"n";if(d===-1)d=a.decimals;b=B(b*(k==="P"?100:1),d,a);break;default:throw"Bad number format specifier: "+k;}for(var l=/n|\$|-|%/g,e="";true;){var n=l.lastIndex,j=l.exec(g);e+=g.slice(n,j?j.index:g.length);if(!j)break;switch(j[0]){case"n":e+=b;break;case"$":e+=f.currency.symbol;break;case"-":if(/[1-9]/.test(b))e+=f["-"];break;case"%":e+=f.percent.symbol}}return e}function b(a,c,b){return a<c||a>b}function E(d,b){var e=new Date,f=j(e);if(b<100){var a=d.twoDigitYearMax;a=typeof a==="string"?(new Date).getFullYear()%100+parseInt(a,10):a;var c=m(e,d,f);b+=c-c%100;if(b>a)b-=100}return b}function j(e,c){if(!c)return 0;for(var b,d=e.getTime(),a=0,f=c.length;a<f;a++){b=c[a].start;if(b===null||d>=b)return a}return 0}function q(a){return a.split("\u00a0").join(" ").toUpperCase()}function c(c){for(var b=[],a=0,d=c.length;a<d;a++)b[a]=q(c[a]);return b}function m(d,b,e,c){var a=d.getFullYear();if(!c&&b.eras)a-=b.eras[e].offset;return a}function D(g,b,h){var d,e=g.days,a=g._upperDays;if(!a)g._upperDays=a=[c(e.names),c(e.namesAbbr),c(e.namesShort)];b=q(b);if(h){d=f(a[1],b);if(d===-1)d=f(a[2],b)}else d=f(a[0],b);return d}function z(a,d,j){var i=a.months,h=a.monthsGenitive||a.months,b=a._upperMonths,e=a._upperMonthsGen;if(!b){a._upperMonths=b=[c(i.names),c(i.namesAbbr)];a._upperMonthsGen=e=[c(h.names),c(h.namesAbbr)]}d=q(d);var g=f(j?b[1]:b[0],d);if(g<0)g=f(j?e[1]:e[0],d);return g}function k(e,b){for(var d=0,a=false,c=0,g=e.length;c<g;c++){var f=e.charAt(c);switch(f){case"'":if(a)b.push("'");else d++;a=false;break;case"\\":a&&b.push("\\");a=!a;break;default:b.push(f);a=false}}return d}function t(e,a){a=a||"F";var b,d=e.patterns,c=a.length;if(c===1){b=d[a];if(!b)throw"Invalid date format string '"+a+"'.";a=b}else if(c===2&&a.charAt(0)==="%")a=a.charAt(1);return a}function y(d,g){var e=d._parseRegExp;if(!e)d._parseRegExp=e={};else{var m=e[g];if(m)return m}var f=t(d,g).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,"\\\\$1"),b=["^"],n=[],h=0,l=0,j=s(),c;while((c=j.exec(f))!==null){var q=f.slice(h,c.index);h=j.lastIndex;l+=k(q,b);if(l%2){b.push(c[0]);continue}var i=c[0],r=i.length,a;switch(i){case"dddd":case"ddd":case"MMMM":case"MMM":case"gg":case"g":a="(\\D+)";break;case"tt":case"t":a="(\\D*)";break;case"yyyy":case"fff":case"ff":case"f":a="(\\d{"+r+"})";break;case"dd":case"d":case"MM":case"M":case"yy":case"y":case"HH":case"H":case"hh":case"h":case"mm":case"m":case"ss":case"s":a="(\\d\\d?)";break;case"zzz":a="([+-]?\\d\\d?:\\d{2})";break;case"zz":case"z":a="([+-]?\\d\\d?)";break;case"/":a="(\\"+d["/"]+")";break;default:throw"Invalid date format pattern '"+i+"'.";}a&&b.push(a);n.push(c[0])}k(f.slice(h),b);b.push("$");var p=b.join("").replace(/\s+/g,"\\s+"),o={regExp:p,groups:n};return e[g]=o}function s(){return/\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g}function v(w,M,L){w=e(w);var a=L.calendar,H=y(a,M),K=(new RegExp(H.regExp)).exec(w);if(K===null)return null;for(var J=H.groups,A=null,k=null,i=null,j=null,q=null,h=0,l,B=0,C=0,x=0,m=null,v=false,s=0,N=J.length;s<N;s++){var c=K[s+1];if(c){var I=J[s],n=I.length,f=parseInt(c,10);switch(I){case"dd":case"d":j=f;if(b(j,1,31))return null;break;case"MMM":case"MMMM":i=z(a,c,n===3);if(b(i,0,11))return null;break;case"M":case"MM":i=f-1;if(b(i,0,11))return null;break;case"y":case"yy":case"yyyy":k=n<4?E(a,f):f;if(b(k,0,9999))return null;break;case"h":case"hh":h=f;if(h===12)h=0;if(b(h,0,11))return null;break;case"H":case"HH":h=f;if(b(h,0,23))return null;break;case"m":case"mm":B=f;if(b(B,0,59))return null;break;case"s":case"ss":C=f;if(b(C,0,59))return null;break;case"tt":case"t":v=a.PM&&(c===a.PM[0]||c===a.PM[1]||c===a.PM[2]);if(!v&&(!a.AM||c!==a.AM[0]&&c!==a.AM[1]&&c!==a.AM[2]))return null;break;case"f":case"ff":case"fff":x=f*Math.pow(10,3-n);if(b(x,0,999))return null;break;case"ddd":case"dddd":q=D(a,c,n===3);if(b(q,0,6))return null;break;case"zzz":var u=c.split(/:/);if(u.length!==2)return null;l=parseInt(u[0],10);if(b(l,-12,13))return null;var t=parseInt(u[1],10);if(b(t,0,59))return null;m=l*60+(g(c,"-")?-t:t);break;case"z":case"zz":l=f;if(b(l,-12,13))return null;m=l*60;break;case"g":case"gg":var p=c;if(!p||!a.eras)return null;p=e(p.toLowerCase());for(var r=0,O=a.eras.length;r<O;r++)if(p===a.eras[r].name.toLowerCase()){A=r;break}if(A===null)return null}}}var d=new Date,G,o=a.convert;G=o?o.fromGregorian(d)[0]:d.getFullYear();if(k===null)k=G;else if(a.eras)k+=a.eras[A||0].offset;if(i===null)i=0;if(j===null)j=1;if(o){d=o.toGregorian(k,i,j);if(d===null)return null}else{d.setFullYear(k,i,j);if(d.getDate()!==j)return null;if(q!==null&&d.getDay()!==q)return null}if(v&&h<12)h+=12;d.setHours(h,B,C,x);if(m!==null){var F=d.getMinutes()-(m+d.getTimezoneOffset());d.setHours(d.getHours()+parseInt(F/60,10),F%60)}return d}function u(b,f,o){var c=o.calendar,p=c.convert;if(!f||!f.length||f==="i"){var a;if(o&&o.name.length)if(p)a=u(b,c.patterns.F,o);else{var z=new Date(b.getTime()),G=j(b,c.eras);z.setFullYear(m(b,c,G));a=z.toLocaleString()}else a=b.toString();return a}var A=c.eras,y=f==="s";f=t(c,f);a=[];var g,F=["0","00","000"],l,w,B=/([^d]|^)(d|dd)([^d]|$)/g,x=0,v=s(),i;function e(d,a){var b,c=d+"";if(a>1&&c.length<a){b=F[a-2]+c;return b.substr(b.length-a,a)}else b=c;return b}function D(){if(l||w)return l;l=B.test(f);w=true;return l}function r(a,b){if(i)return i[b];switch(b){case 0:return a.getFullYear();case 1:return a.getMonth();case 2:return a.getDate()}}if(!y&&p)i=p.fromGregorian(b);for(;true;){var E=v.lastIndex,n=v.exec(f),C=f.slice(E,n?n.index:f.length);x+=k(C,a);if(!n)break;if(x%2){a.push(n[0]);continue}var q=n[0],d=q.length;switch(q){case"ddd":case"dddd":names=d===3?c.days.namesAbbr:c.days.names;a.push(names[b.getDay()]);break;case"d":case"dd":l=true;a.push(e(r(b,2),d));break;case"MMM":case"MMMM":var h=r(b,1);a.push(c.monthsGenitive&&D()?c.monthsGenitive[d===3?"namesAbbr":"names"][h]:c.months[d===3?"namesAbbr":"names"][h]);break;case"M":case"MM":a.push(e(r(b,1)+1,d));break;case"y":case"yy":case"yyyy":h=i?i[0]:m(b,c,j(b,A),y);if(d<4)h=h%100;a.push(e(h,d));break;case"h":case"hh":g=b.getHours()%12;if(g===0)g=12;a.push(e(g,d));break;case"H":case"HH":a.push(e(b.getHours(),d));break;case"m":case"mm":a.push(e(b.getMinutes(),d));break;case"s":case"ss":a.push(e(b.getSeconds(),d));break;case"t":case"tt":h=b.getHours()<12?c.AM?c.AM[0]:" ":c.PM?c.PM[0]:" ";a.push(d===1?h.charAt(0):h);break;case"f":case"ff":case"fff":a.push(e(b.getMilliseconds(),3).substr(0,d));break;case"z":case"zz":g=b.getTimezoneOffset()/60;a.push((g<=0?"+":"-")+e(Math.floor(Math.abs(g)),d));break;case"zzz":g=b.getTimezoneOffset()/60;a.push((g<=0?"+":"-")+e(Math.floor(Math.abs(g)),2)+":"+e(Math.abs(b.getTimezoneOffset()%60),2));break;case"g":case"gg":c.eras&&a.push(c.eras[j(b,A)].name);break;case"/":a.push(c["/"]);break;default:throw"Invalid date format pattern '"+q+"'.";}}return a.join("")}jQuery.findClosestCulture=a.findClosestCulture;jQuery.culture=a.culture;jQuery.cultures=a.cultures;jQuery.preferCulture=a.preferCulture;jQuery.localize=a.localize;jQuery.format=a.format;jQuery.parseInt=a.parseInt;jQuery.parseFloat=a.parseFloat;jQuery.parseDate=a.parseDate})()/// <reference path="jquery-1.4.2.js"/>
jQuery.noConflict();

/** New/Consolidated Stuff **/

/* Global Doc Ready - Add any function that needs to run on all page loads */

jQuery(document).ready(function () {
    TrimModules();
    SetupHintText();
    SetTopNavBG();

});



jQuery(document).ready(function () {
    jQuery(".hero_badge li").hover(
		    function () {
		        jQuery(this).find("span").html(window[jQuery(this).find('img').attr('rel')]);
		        var iconName = jQuery(this).find("img").attr("src");
		        jQuery(this).find("span").attr({
		            "style": 'display:inline'
		        });
		        jQuery(this).find("span").animate({ opacity: 1, top: "-150" }, { queue: false, duration: 400 });
		    },
		    function () {
		        var iconName = jQuery(this).find("img").attr("src");
		        jQuery(this).find("span").animate({ opacity: 0, top: "-60" }, { queue: false, duration: 400, complete: function () {
		            jQuery(this).attr({ "style": 'display:none' });
		        }
		        }
			    );
		    });
});


// Set up Hint text display
function SetupHintText() {
    jQuery('.hintText').live('focus', function () {
        if (jQuery(this).data('default') == undefined) { jQuery(this).data('default', jQuery(this).val()) }
        jQuery(this).addClass("hintTextOver");
        if (jQuery(this).val() == jQuery(this).data('default')) {
            jQuery(this).val("");
        }
    });

    jQuery('.hintText').live('blur', function () {
        if (jQuery(this).val() == "") {
            jQuery(this).val(jQuery(this).data('default'));
            jQuery(this).removeClass("hintTextOver");
        }
    });
}

//Generic Function to adjust heights
function equalHeight(group) {
    var tallest = 0;
    group.each(function () {
        var thisHeight = jQuery(this).height();
        if (thisHeight > tallest) {
            tallest = thisHeight;
        }
    });
    group.height(tallest);
}

// Strip bottom border and margin off last module in column
function TrimModules() {
    jQuery('.three_middle .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.three_right .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.three_right_full .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.two_left .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.two_right .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.activity .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('.inlineModule .module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    jQuery('#VideoBrowse li.column_item:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
}

function TrimHomePageModules() {
    jQuery('.homepage_column').each(function () {
        jQuery(this).find('.module:last').css({ 'border-bottom': 0, 'margin-bottom': '0px' });
    });
}

// Top Nav background - needed to allow opacity for bg without fading nav itself
function SetTopNavBG() {
    var w = jQuery('div.topNavAbove ul').outerWidth(false);
    jQuery('div.topNavBehind').css({ width: w });
};


// Sets items that match 'selector' to the same height - does not factor in padding/margin
function setToEqualHeight(selector) {
    var tallest = 0
    var check_tall = 0
    jQuery(selector)
    .each(function () {
        check_tall = jQuery(this).height()
        if (check_tall > tallest) { tallest = check_tall; }
    })
    .each(function () {
        jQuery(this).height(tallest)
    });
}

// Scroll open hidden content 
function setupReveal(filter, container, content, button, speed) {
    jQuery(button, filter).click(function () {
        if (jQuery(container, filter).data('state') == undefined) {
            jQuery(container, filter).data('state', 'up');
        }
        if (jQuery(container, filter).data('state') != 'moving') {
            if (jQuery(container, filter).data('state') == 'up') {
                jQuery(container, filter).data('state', 'moving');
                jQuery(this).addClass('revealed');
                jQuery(container, filter).data('closed', jQuery(container, filter).outerHeight());
                jQuery(container, filter).data('open', jQuery(content, filter).outerHeight());
                jQuery(container, filter).animate({ height: jQuery(container, filter).data('open') }, speed,
                    function () { jQuery(container, filter).data('state', 'down'); });
            }
            else {
                jQuery(container, filter).data('state', 'moving');
                jQuery(this).removeClass('revealed');
                jQuery(container, filter).animate({ height: jQuery(container, filter).data('closed') }, speed,
                function () { jQuery(container, filter).data('state', 'up'); });
            }
        }
    });
}

// Two Column List Handling
// Set row items to equal height and add vertical separator, 
// strip margin on top row, strip bottom border on last row
function parseTwoColumn() {
    jQuery('ul.two_column_list').each(function () {
        var sibCount = jQuery(this).children().length;
        var sep_top = false;
        jQuery(this).children().each(function (index) {
            if (index % 2 != 0) {
                if (index == 1) {
                    jQuery(this).css({ 'margin-top': 0 });
                    jQuery(this).prev().css({ 'margin-top': 0 });
                }
                if (index == sibCount - 1) {
                    jQuery(this).css({ 'border-bottom': 0 });
                    jQuery(this).prev().css({ 'border-bottom': 0 });
                }
                var tall = 0;
                tall = jQuery(this).height() >= jQuery(this).prev().height() ? jQuery(this).height() : jQuery(this).prev().height()
                jQuery(this).height(tall).addClass('item_right');
                jQuery(this).prev().height(tall);
                jQuery(this).prev().after('<li class="list_sep" style="height:' + tall + 'px; margin-top:' + jQuery(this).css("margin-top") + '"></li>');
            }
            else {
                jQuery(this).addClass('item_left');
                if (index == 0) {
                    jQuery(this).css({ 'margin-top': 0 });
                }
                if (index == sibCount - 1) {
                    jQuery(this).css({ 'border-bottom': 0 });
                    jQuery(this).after('<li class="list_sep" style="height:' + jQuery(this).height() + 'px; margin-top:' + jQuery(this).css("margin-top") + '"></li>');
                }
            }
        });
    });
}

function parseMultipleTwoColumn() {
    jQuery('ul.two_column_list').each(function () {
        var sibCount = jQuery(this).children().length;
        var sep_top = false;
        jQuery(this).children().each(function (index) {
            if (index % 2 != 0) {
                if (index == 1) {
                    jQuery(this).css({ 'margin-top': 0 });
                    jQuery(this).prev().css({ 'margin-top': 0 });
                }
                var tall = 0;
                tall = jQuery(this).height() >= jQuery(this).prev().height() ? jQuery(this).height() : jQuery(this).prev().height()
                jQuery(this).height(tall).addClass('item_right');
                jQuery(this).prev().height(tall);
                jQuery(this).prev().after('<li class="list_sep" style="height:' + tall + 'px; margin-top:' + jQuery(this).css("margin-top") + '"></li>');
                if (index == sibCount - 1) {
                    jQuery(this).css({ 'border-bottom': '0px' });
                }
            }
            else {
                jQuery(this).addClass('item_left');
                if (index == 0) {
                    jQuery(this).css({ 'margin-top': 0 });
                }
                if (index == sibCount - 1) {
                    jQuery(this).after('<li class="list_sep" style="height:' + jQuery(this).height() + 'px; margin-top:' + jQuery(this).css("margin-top") + '"></li>');
                    jQuery(this).css({ 'border-bottom': '0px' });
                }
                if (index == sibCount - 2) {
                    jQuery(this).css({ 'border-bottom': '0px' });
                }
            }
        });
    });
    jQuery('.two_column_list:last li').css({ 'border-bottom': '0px' });
}

function parseTwoColumnThumbs(context) {
    jQuery('ul.two_column_thumbs', context).each(function () {
        jQuery(this).children().each(function (index) {
            if (index % 2 != 0) {
                jQuery(this).after('<li class="full_clear"></li>');
            }
            else {
                jQuery(this).addClass('leftMargined');
            }
        });
    });
}

/* Scrollers */
var init_run = false;
function InitScroller() {
    if (!init_run) {
        jQuery('.full_column .carousel_container .carousel_set').each(function () {
            jQuery(this).children('.scroller_view').pillspager({ visibleItems: 6, scrollItems: 6, nextButton: jQuery(this).find('.scroller_next'), prevButton: jQuery(this).find('.scroller_prev'), hideControls: true, disabledClass: 'grayedOut' });
        });
        jQuery('.three_right_full .carousel_container .carousel_set').each(function () {
            jQuery(this).children('.scroller_view').pillspager({ visibleItems: 6, scrollItems: 6, nextButton: jQuery(this).find('.scroller_next'), prevButton: jQuery(this).find('.scroller_prev'), hideControls: true, disabledClass: 'grayedOut' });
        });
        jQuery('.two_left .carousel_container .carousel_set').each(function () {
            jQuery(this).children('.scroller_view').pillspager({ visibleItems: 4, scrollItems: 4, nextButton: jQuery(this).find('.scroller_next'), prevButton: jQuery(this).find('.scroller_prev'), hideControls: true, disabledClass: 'grayedOut' });
        });
        jQuery('.two_left_wide .carousel_container .carousel_set').each(function () {
            jQuery(this).children('.scroller_view').pillspager({ visibleItems: 3, scrollItems: 3, nextButton: jQuery(this).find('.scroller_next'), prevButton: jQuery(this).find('.scroller_prev'), hideControls: true, disabledClass: 'grayedOut' });
        });
        jQuery('.three_middle .carousel_container .carousel_set').each(function () {
            jQuery(this).children('.scroller_view').pillspager({ visibleItems: 3, scrollItems: 3, nextButton: jQuery(this).find('.scroller_next'), prevButton: jQuery(this).find('.scroller_prev'), hideControls: true, disabledClass: 'grayedOut' });
        });

        jQuery('#scroll_select').change(function () {
            var index = parseInt(jQuery(this).val()) - 1;
            jQuery('.carousel_container .carousel_set', jQuery(this).parent().parent().parent()).hide().eq(index).show();
            return false;
        });
        init_run = true;
    }
}


jQuery(function () {
    if (typeof (jQuery('.communityCloud .content').pillspager) != "undefined") {
        jQuery('.communityCloud .content').pillspager({ visibleItems: 1, nextButton: '.communityNext', prevButton: '.communityPrev', hideControlsContainer: true, disabledClass: 'grayedOut' });
    }
    if (typeof (jQuery('.videoModuleRight .content').pillspager) != "undefined") {
        jQuery('.videoModuleRight .content').pillspager({ visibleItems: 1, nextButton: '.videoNext', prevButton: '.videoPrev', hideControls: true, disabledClass: 'grayedOut' });
    }
    if (typeof (jQuery('.winnersScrollerCarousel').pillspager) != "undefined") {
        jQuery('.winnersScrollerCarousel').pillspager({ visibleItems: 1, nextButton: '.scroller_next', prevButton: '.scroller_prev', hideControls: true, disabledClass: 'grayedOut' });
    }
    if (typeof (jQuery('.avatarScroller').pillspager) != "undefined") {
        jQuery('.avatarScroller').pillspager({ visibleItems: 3, scrollItems: 3, nextButton: '.avatarNext', prevButton: '.avatarPrev', hideControls: true, disabledClass: 'grayedOut' });
    }
});


/**** HERO ****/
var videoReadyTimeout;
var videoSwapped = false;

function InitHero(selector, context, startingSlideNumber) {

    var initial = true;
    jQuery(selector).cycle({
        timeout: 6000,            //Time between slides
        speed: 500,          // Transition time
        fx: 'fade',
        pager: context + '#hero_pager',
        next: context + '#hero_next',
        prev: context + '#hero_prev',
        startingSlide: startingSlideNumber,
        pagerAnchorBuilder: function (idx, slide) {
            return '<div class="pager_item"><a href="#">' + (idx + 1) + '</a><div class="pager_item_thumb"><img src="' + jQuery(".hdnThumbSrc", slide).val() + '" alt="" /></div>';
        },
        before: function (curr, next, opts, fwd) {
            if (!initial) {
                var index = opts.nextSlide;
                var item_width = jQuery('.pager_item', jQuery(selector).parent()).eq(0).outerWidth();
                var nextLeft = item_width * index;
                jQuery('.pager_selected', jQuery(selector).parent()).animate({ left: nextLeft }, 400)
                jQuery('#hero_video_player', jQuery(selector).parent()).addClass("zero_opacity");
            }
        },
        after: function (curr, next, opts, fwd) {
            if (!initial) {
                if (jQuery('.OoyalaVideoPlayer', jQuery(selector).parent()).length > 0) {
                    jQuery('.OoyalaVideoPlayer', jQuery(selector).parent())[0].pauseMovie();
                }
                if (jQuery("#hdnVideoEmbedCode", jQuery(next)).length > 0) {
                    var embed_code = jQuery("#hdnVideoEmbedCode", jQuery(next)).val();
                    if (embed_code != jQuery("#heroCurrentVideoEC").val()) {
                        var player_id = jQuery('.OoyalaVideoPlayer', jQuery(selector).parent()).attr('id');
                        var identifier = player_id.substring(11);
                        var vid_title = jQuery("#hdnVideoTitle", jQuery(next)).val();
                        var player_url = jQuery('input#ec_url', jQuery(selector).parent()).val();
                        ChangeHeroVideo(player_id, identifier, vid_title, player_url, embed_code);
                        videoSwapped = true;
                        jQuery("#heroCurrentVideoEC").val(embed_code)
                        var isRecipeHero = jQuery(".hdnRecipeHeroPlayClicked", jQuery(next)).length > 0;
                        var fn = function () { pollVideoSwap(isRecipeHero); }
                        videoReadyTimeout = setTimeout(fn, 200);
                    }
                    else {
                        var isRecipeHero = jQuery(".hdnRecipeHeroPlayClicked", jQuery(next)).length > 0;
                        var fn = function () { pollVideoSwap(isRecipeHero); }
                        videoReadyTimeout = setTimeout(fn, 200);
                    }
                }
            }
            initial = false;

        },
        prevNextClick: function (isNext, idx, slide) {
            pauseHero(selector);
        },
        pagerClick: function (isNext, idx, slide) {
            pauseHero(selector);

        }
    }).after("<input type='hidden' class='hero_state' value='1' />");

    jQuery('#hero_pager .pager_item', jQuery(selector).parent()).hover(function () {
        jQuery('.pager_item_thumb', jQuery(this)).show()
    }, function () {
        jQuery('.pager_item_thumb', jQuery(this)).hide()
    });
    jQuery('a#playtoggle', jQuery(selector).parent()).click(function () {
        if (jQuery('.hero_state', jQuery(selector).parent()).val() == "0") {
            resumeHero(selector);
        }
        else {
            pauseHero(selector);
        }
    });
    var single_item_width = jQuery('.pager_item', jQuery(selector).parent()).eq(0).outerWidth();
    var item_count = jQuery('.pager_item', jQuery(selector).parent()).length;
    var item_bg_width = (single_item_width * item_count) - 1;
    jQuery('div.pager_items_background', jQuery(selector).parent()).css({ width: item_bg_width + "px" });

    jQuery('.recipe_hero_play', jQuery(selector)).click(function () {
        //jQuery('.hdnRecipeHeroPlayClicked').val("1");
        pauseHero(selector);
        jQuery('#hero_video_player').removeClass("zero_opacity");
        var fn = function () { playRecipeVideo(jQuery(selector).parent()); };
        videoReadyTimeout = setTimeout(fn, 500);
    });

    jQuery('.closeVideoButton').click(function () {
        var player_id = jQuery('.OoyalaVideoPlayer', jQuery(selector).parent()).attr('id');
        var identifier = jQuery(selector).parent().attr('id').substring(11);
        var event_catcher = getFlashMovie("eventCatcher" + identifier);
        event_catcher.seek(playerId);
        jQuery('#hero_video_player').addClass("zero_opacity");
    });
}

function playRecipeVideo(selector, context) {
    pauseHero(selector);
    clearTimeout(videoReadyTimeout);
    jQuery('.OoyalaVideoPlayer', context)[0].playMovie();
}

function pauseHero(selector) {
    jQuery('.hero_container_vid').cycle('pause');
    jQuery(selector).cycle('pause');

    jQuery('a#playtoggle', jQuery(selector).parent()).attr('class', 'toggle_play');
    jQuery('.hero_state', jQuery(selector).parent()).val('0');
}
function resumeHero(selector) {
    jQuery('a#playtoggle', jQuery(selector).parent()).attr('class', 'toggle_pause');
    jQuery('.hero_state', jQuery(selector).parent()).val('1');
    jQuery(selector).cycle('resume');
}
function pollVideoSwap(isRecipeHero) {
    clearTimeout(videoReadyTimeout);
    if (!videoSwapped && !isRecipeHero) {
        jQuery('#hero_video_player').removeClass("zero_opacity");
    }
    else {
        jQuery('#heroVideoReady').attr("value", "0");
        if (!isRecipeHero) {
            videoReadyTimeout = setTimeout("revealVideo()", 100);
        }
    }
}
function revealVideo() {
    clearTimeout(videoReadyTimeout);
    jQuery('#hero_video_player').removeClass("zero_opacity");
}

function ChangeOoyalaVideo(playerId, embedCode, videoTitle, videoDescription, caller) {
    //todo fix the change of the videos
    //jQuery('#eventCatcher').html(jQuery('#eventCatcher').html().replace(new RegExp('waId=[a-zA-Z0-9\s]*', 'g'), 'waId=' + videoTitle));
    if (caller) {
        jQuery(caller).parents('ul').parents('ul').children('li').children('ul').children('li').removeClass('activeVideo');
        jQuery(caller).parents('li:first').addClass('activeVideo');
    }
    jQuery('#' + playerId)[0].setEmbedCode(embedCode);
    jQuery('.videoTitle').html(videoTitle);
    jQuery('.videoCopy').html(videoDescription);
    return false;
}

function ChangeHeroVideo(playerId, identifier, vid_title, player_url, embedCode) {
    var player = jQuery('#' + playerId)[0];
    player.setEmbedCode(embedCode);
    var waURL = "/Services/PostHandlers/WebActivityReceiver.ashx";
    var waName = "PBVideos";
    var waType = "VideoViewed";
    var new_flashvar_string = "waURL=" + waURL + "&waName=" + waName + "&waId=" + vid_title + "&waRscURL=" + player_url + "&waType=" + waType;
    //document.getElementById("event_catcher_container"+identifier).innerHTML = BuildEventCatcherHtml(new_flashvar_string, identifier);
    //jQuery(ec_container).html('');
    //jQuery(ec_container).html(BuildEventCatcherHtml(new_flashvar_string, identifier));
    //var event_catcher = getFlashMovie("eventCatcher" + identifier);
    //event_catcher.setAttribute("flashvars", new_flashvar_string);
}

function BuildEventCatcherHtml(fv_string, ec_id) {
    var ec_html = '';
    ec_html += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"'
    ec_html += '    width="1px" height="1px" id="eventCatcher' + ec_id + '" style="position:fixed;">'
    ec_html += '    <param name="movie" value="/flash/ooyala_event_catcher.swf" />'
    ec_html += '    <param name="quality" value="high" />'
    ec_html += '    <param name="allowScriptAccess" value="always" />'
    ec_html += '    <param name="flashvars" id="flashVarsParam" value="' + fv_string + '" />'
    ec_html += '    <embed id="videoEmbed" src="/flash/ooyala_event_catcher.swf"'
    ec_html += '        flashvars="' + fv_string + '"'
    ec_html += '        width="1" height="1" name="eventCatcher' + ec_id + '" align="middle"'
    ec_html += '        play="true"'
    ec_html += '        quality="high"'
    ec_html += '        allowScriptAccess="always"'
    ec_html += '       type="application/x-shockwave-flash"'
    ec_html += '       pluginspage="http://www.adobe.com/go/getflashplayer">'
    ec_html += '   </embed>'
    ec_html += '</object>'
    return ec_html;
}

function childBrowseAdjust() {
    jQuery('.hero_main').css({ 'padding-bottom': '0px' });
    jQuery('.hero_main .hero_details').css({ 'border-bottom': '0' });
    setToEqualHeight(jQuery('.hero_main .hero_details'));
    jQuery('.hero_main .hero_container').css({ 'height': jQuery('.hero_main .hero_container').height() - 1, 'overflow': 'hidden' });
    if (jQuery('.hero_main .hero_container_single').length == 0) {
        jQuery('.hero_browse_children .inner').css({ 'padding-left': '30px', 'padding-right': '30px' });
    }
}

function vidScrollerAdjust() {
    jQuery('.hero_video').css({ 'padding-bottom': '0px' });
    jQuery('.hero_video .hero_details').css({ 'border-bottom': '0' });
    setToEqualHeight(jQuery('.hero_video .hero_details'));
    jQuery('.hero_video .hero_container').css({ 'height': jQuery('.hero_video .hero_container').height() - 1, 'overflow': 'hidden' });
}

function vidDetailAdjust() {
    jQuery('.hero_video').css({ 'padding-bottom': '0px' });
    jQuery('.hero_video .hero_details').css({ 'border-bottom': '0' });
    jQuery('.hero_video .hero_container').css({ 'height': jQuery('.hero_video .hero_container').height() - 1, 'overflow': 'hidden' });
}

jQuery('.hero_image div, .hero_image object, .hero_image embed').click(function () {
    pauseHero(jQuery(this).parents('.hero_container'));
});


function js_setCookie(c_name, value, expiredays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + expiredays);
    document.cookie = c_name + "=" + escape(value) + ((expiredays == null) ? "" : ";expires=" + exdate.toUTCString());
}
function js_getCookie(c_name) {
    if (document.cookie.length > 0) {
        c_start = document.cookie.indexOf(c_name + "=");
        if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1) c_end = document.cookie.length;
            return unescape(document.cookie.substring(c_start, c_end));
        }
    }
    return "";
}
function js_removeCookie(c_name) {
    setCookie(c_name, null, -1000);
}


//Flavor Selector
var fading = false;
function setFlavors(context) {

    if (jQuery('.flavor_container', context).data('state') == undefined) {
        jQuery('.flavor_container', context).data('state', 'up');
    }

    jQuery('.flavor_container', context).data('curIndex', 0);
    jQuery('.flavor_links a:first', context).eq(0).addClass('selected');
    jQuery('.flavor_container', context).height(jQuery('.flavor_item', context).eq(0).outerHeight() + 5);
    jQuery('.flavor_items', context).height(jQuery('.flavor_item', context).eq(0).outerHeight());

    jQuery('.flavor_links a', context).click(function () {
        if (!jQuery(this).hasClass('selected') && !fading) {
            fading = true;
            var new_index = parseInt(jQuery(this).attr('id').substring(11));
            updateSelectedFlavor(new_index);
            flavorFade(new_index);
            return false;
        }
    });

    jQuery('.jq_flavor_next', context).click(function () {
        if (!fading) {
            fading = true;
            var f_count = jQuery('.flavor_links a', context).length;
            var cur_index = jQuery('.flavor_container', context).data('curIndex');
            var new_index = (cur_index >= f_count - 1) ? 0 : cur_index + 1;
            updateSelectedFlavor(new_index);
            flavorFade(new_index);
        }
    });

    jQuery('.jq_flavor_prev', context).click(function () {
        if (!fading) {
            fading = true;
            var f_count = jQuery('.flavor_links a', context).length;
            var cur_index = jQuery('.flavor_container', context).data('curIndex');
            var new_index = (cur_index == 0) ? f_count - 1 : cur_index - 1;
            updateSelectedFlavor(new_index);
            flavorFade(new_index);
        }
    });
}

function updateSelectedFlavor(index) {
    jQuery('.flavor_links a').removeClass('selected');
    var link_targ = "#flavor_link" + index;
    jQuery(link_targ).addClass('selected');
}

function flavorFade(index) {
    jQuery('.flavor_container', '.flavorModule').data('curIndex', index);
    var targ_top = parseInt(jQuery('.flavor_item').eq(index).position().top)
    var targ_height = jQuery('.flavor_item').eq(index).outerHeight();
    jQuery('.flavor_items_content').fadeOut(500, function () {
        jQuery('.flavor_items_content').css('top', -targ_top);
        jQuery('.flavor_items').animate({ 'height': targ_height }, 200);
        if (jQuery('.flavor_container').data('state') == 'up') {
            jQuery('.flavor_container').animate({ 'height': targ_height + 5 }, 200);
        }
        jQuery('.flavor_items_content').fadeIn(500, function () {
            fading = false;
        });
    });
}


/***************************************************************/
/***************************************************************/
/***************************************************************/
/****************** OLD STUFF BELOW ****************************/
/***************************************************************/
/***************************************************************/
/***************************************************************/



function InitRecipeScroller(startingSlideNumber) {
    jQuery('.heroSlideShowRecipe,  .heroSlideShow ul, .heroBodyCopy, .heroCoupon, .heroHeadline').each(function (index) {
        jQuery(this).cycle({
            timeout: 6000,            //Time between slides
            speed: 0,          // Transition time
            fx: 'fade',
            pager: '.heroPager',
            next: '.heroNext',
            prev: '.heroPrev',
            debug: true,
            cleartype: true,
            cleartypeNoBg: true,
            startingSlide: startingSlideNumber,
            pagerAnchorBuilder: function (i) {
                if (index == 0)
                    return '<a href="#">' + (i + 1) + '</a>';
                return '.heroPager a:eq(' + i + ')';
            }
        });
    });
    if (jQuery('.heroSlideShow ul img, .heroSlideShowRecipe > div').length > 1) { jQuery('.heroPager, .heroNext, .heroPrev').css({ 'display': 'block' }); }
}

/* Stuff to Show First */

/* Social sharing START */
function ShareSite(sUrl, site) {

    if (typeof window.fireSpotlight == 'function') {
        fireSpotlight('share_pills', 'share01');
    }

    window.open(sUrl, 'winShare', 'scrollbars=1,toolbar=0,width=800,height=600');
    return;
}
/* Social sharing END */

/* Video Recommend START */
function RecommendVideo(choice) {
    var videoId = jQuery('input[name=VideoRecommendId]').attr("value")
    var statusFlag = jQuery.parseJSON(jQuery.ajax({ url: "/Services/Profile/LogOnStatusHandler.ashx",
        async: false,
        timeout: 3000
    }).responseText);

    if (statusFlag.toUpperCase() == "AU" || statusFlag.toUpperCase() == "K") {
        jQuery('div.videoRecommend').load("/Services/VideoHandler.ashx?vguid=" + videoId + "&choice=" + choice);
    }
    else {
        jQuery('p.videoRecommendPrompt').show();
    }
    return false;
}

function VideoNoThanks() {
    jQuery('div.VideoRecommendWarnArea').css("visibility", "hidden");

    return false;
}



//function receiveOoyalaEvent(playerId, eventName, eventArgs) {
//    var playerObject = document.getElementById(playerId);
//    
//    switch (eventName) {
//        case "currentItemEmbedCodeChanged":
//            playerObject.playMovie();
//            break;
//    }
//}

/* Video Recommend END */


// Browse Recipe Tab Selection
jQuery(function () {
    //jQuery('.findaRecipeMenu a:first').addClass('selected');
    var tabContainers = jQuery('.browseRecipeItems>div');
    tabContainers.hide().filter(':first').show().addClass('selected');
    jQuery('.findaRecipeMenu a').click(function () {
        //jQuery('.findaRecipeMenu a').removeClass('selected');
        //jQuery(this).addClass('selected');
        tabContainers.hide().removeClass('selected');
        jQuery('.browseRecipeItems div' + jQuery(this).attr('name')).show().addClass('selected');
        return false;
    });
});

// Rookie Bake Off Tab Selection
jQuery(function () {
    var index = jQuery('.challengeTabContainer li:has(div.currentTab)').index();
    jQuery('div[id*=challengerContainer' + index + "]").show();
    jQuery('.challengeTabContainer .tab ').click(function () {
        if (jQuery('.challengeTabContainer li:has(div.activeTab)').click(function () {
            jQuery('div[id^=challengerContainer]').hide();
            jQuery('.tab>div').removeClass('currentTab');
            var index = jQuery('.challengeTabContainer li').index(this);
            jQuery('div[id*=challengerContainer' + index + "]").show();
            jQuery('li[id*=tabContainer' + index + "] > div").addClass('currentTab');
            return false;
        }));
    });
});

/* Dynamic search BEGIN */
function PerformSearch(searchTerm, searchType) {
    var redirectUrl = '/Services/Search/LogSearch.ashx?terms=' + encodeURIComponent(searchTerm);

    jQuery.ajax({ url: redirectUrl,
        success: function (data, status, xhr) { PostSearchLogRequest(searchTerm, searchType) },
        error: function (xhr, status, error) { PostSearchLogRequest(searchTerm, searchType, xhr, status, error) },
        timeout: 5000
    });


}

function PostSearchLogRequest(searchTerm, searchType, xhr, status, error) {

    var queryParameters = new Array();
    queryParameters.push('terms=' + encodeURIComponent(searchTerm));

    if (searchType != undefined && searchType != '') {
        queryParameters.push('tab=' + encodeURIComponent(searchType));
    }

    window.location = '/search/?' + queryParameters.join('&');
    return false;
}


function PerformEasyMealSearch(ingredient1, ingredient2, ingredient3, refineFacet, defaultIngredient1Text, defaultAdditionalIngredientText) {
    var terms = new Array();
    var queryParameters = new Array();

    queryParameters.push("st=7");

    if (ingredient1 != undefined && ingredient1 != '' && ingredient1 != defaultIngredient1Text) {
        terms.push(ingredient1);
        //queryParameters.push('ingredient1=' + encodeURIComponent(ingredient1));
    }

    if (ingredient2 != undefined && ingredient2 != '' && ingredient2 != defaultAdditionalIngredientText) {
        terms.push(ingredient2);
        //queryParameters.push('ingredient2=' + encodeURIComponent(ingredient2));
    }

    if (ingredient3 != undefined && ingredient3 != '' && ingredient3 != defaultAdditionalIngredientText) {
        terms.push(ingredient3);
        //queryParameters.push('ingredient3=' + encodeURIComponent(ingredient3));
    }

    var refineParameter = '';
    if (refineFacet != undefined && refineFacet != '') {
        queryParameters.push('f=' + encodeURIComponent(refineFacet));
        queryParameters.push('refine=' + encodeURIComponent(refineFacet));
    }

    var combinedTerms = terms.join(' ');
    queryParameters.push('term=' + encodeURIComponent(combinedTerms));
    //queryParameters.push('terms=' + encodeURIComponent(combinedTerms));
    //queryParameters.push('tab=Recipes');

    //    var redirectUrl = '/Services/Search/LogSearch.ashx?terms=' + encodeURIComponent(combinedTerms);
    //    jQuery.ajax({ url: redirectUrl });
    window.location = '/search/searchresults?' + queryParameters.join('&');
    return false;
}
/* Dyanmic search END */


//Video Image Swap
jQuery(function () {
    jQuery('.videoModuleRight ul li:first ul li:first').addClass('activeVideo');
    //jQuery('.videoModuleRight ul li ul li:not(.activeVideo) img').after('<span class="playButton"></span>');
    //jQuery('.videoModuleRight ul li ul li.activeVideo img').after('<p>Playing</p>');
});

//Video Recommendation
jQuery(function () {

    jQuery('.noThanks').click(function () {
        jQuery('.videoRecommendPrompt').hide();
        return false;
    });
    jQuery('.videoModuleShare > ul > li').hover(
        function () { jQuery('ul:first', this).addClass('show'); },
        function () { jQuery('ul:first', this).removeClass('show'); }
    );
});

//Search Results Page
jQuery(function () {
    var hiddenSubFacet = jQuery('.searchResultsFacetsHeaders');
    jQuery('.seeMore', hiddenSubFacet).click(function () {
        jQuery('div.bottomAll', hiddenSubFacet).hide('fast');
        jQuery(this).next('div.bottomAll').show('fast');
        return false;
    });
    jQuery('.bottomAll img', hiddenSubFacet).click(function () {
        jQuery('div.bottomAll', hiddenSubFacet).hide('fast');
        return false;
    });
});


/* Report Abuse */
function sendReportAbuse(containerId, contenttype, itemId, url, comment) {
    jQuery('#' + containerId).load("/Services/ReportAbuse/ReportAbuseHandler.ashx?c_type=" + contenttype + "&item_guid=" + itemId + "&report_url=" + url + "&comment=" + encodeURIComponent(comment));
}

function ReportAbuseSubmit() {
    if (jQuery('#ReportAbuseComment').val().length > 0) {
        jQuery('div#ReportAbuse').hide();

        sendReportAbuse(jQuery('#ReportAbuseDisplayMessage').val(),
        jQuery('#ReportAbuseContentType').val(),
        jQuery('#ReportAbuseItemId').val(),
        jQuery('#ReportAbuseUrl').val(),
        jQuery('#ReportAbuseComment').val());

        //reset the form
        jQuery('#ReportAbuseComment').val('');
        jQuery('#ReportMessageError').hide();
    } else {
        jQuery('#ReportMessageError').show();
    }
}

function DisplayReportAbuse(source, contenttype, itemId, url) {

    var e = jQuery('#ReportAbuse');

    if (!(e.length > 0)) {
        e = jQuery('<div id="ReportAbuse" class="reportAbuse">' +
        '<div id="divLoginMessage">Please describe how this content is inappropriate</div>' +
        '<textarea id="ReportAbuseComment" style="width:220px; height:68px;"></textarea><br />' +
        '<div id="ReportMessageError" style="display:none; color: #ff0000;">You must provide a reason.</div>' +
        '<a onclick="ReportAbuseClose();" style="padding-right:10px; cursor: pointer; cursor: hand;">Cancel</a>' +
        '<a onclick="ReportAbuseSubmit();" style="cursor: pointer; cursor: hand;">Submit</a>' +
        '<input id="ReportAbuseContentType" type="hidden" />' +
        '<input id="ReportAbuseItemId" type="hidden" />' +
        '<input id="ReportAbuseUrl" type="hidden" />' +
        '<input id="ReportAbuseDisplayMessage" type="hidden" />' +
        '</div>');
    }
    jQuery('body').prepend(e);

    jQuery('#ReportAbuseContentType').val(contenttype);
    jQuery('#ReportAbuseItemId').val(itemId);
    jQuery('#ReportAbuseUrl').val(url);
    jQuery('#ReportAbuseDisplayMessage').val(source.id);

    var leftPosition = jQuery(source).offset().left;
    var topPosition = jQuery(source).offset().top + jQuery(source).height() + 2;

    e.css('left', leftPosition);
    e.css('top', topPosition);
    e.css('position', 'absolute');
    e.css('z-index', 4000);
    e.show();
    return false;
}

function ReportAbuseClose() {
    jQuery('div#ReportAbuse').hide();
    return false;
}

/* Pop-Up links - Detect rel attribute and add on-click with href */

jQuery(function () {
    jQuery('a[rel]').click(function () {
        var share_url = jQuery(this).attr('shareurl');
        var share_title = jQuery(this).attr('sharetitle');
        switch (jQuery(this).attr('rel')) {
            case 'external':
                window.open(jQuery(this).attr('href'));
                break;
            case 'popup_print':
                PrintPopUp(jQuery(this).attr('href'));
                break;
            case 'digg':
                if (share_url == null || share_title == null) {
                    (new shareMethods()).openDigg();
                }
                else {
                    (new shareMethods(share_title, share_url)).openDigg();
                }
                break;
            case 'facebook':
                if (share_url == null || share_title == null) {
                    (new shareMethods).openFacebook();
                }
                else {
                    (new shareMethods(share_title, share_url)).openFacebook();
                }
                break;
            case 'reddit':
                if (share_url == null || share_title == null) {
                    (new shareMethods).openReddit();
                }
                else {
                    (new shareMethods(share_title, share_url)).openReddit();
                }
                break;
            case 'stumbleUpon':
                if (share_url == null || share_title == null) {
                    (new shareMethods).openStumbleupon();
                }
                else {
                    (new shareMethods(share_title, share_url)).openStumbleupon();
                }
                break;
            case 'delicious':
                if (share_url == null || share_title == null) {
                    (new shareMethods).openDelicious();
                }
                else {
                    (new shareMethods(share_title, share_url)).openDelicious();
                }
                break;
            case 'twitter':
                if (share_url == null || share_title == null) {
                    (new shareMethods).openTwitter();
                }
                else {
                    (new shareMethods(share_title, share_url)).openTwitter();
                }
                break;
            default:
                return true;
        }
        return false;
    });

    jQuery('div.rtbTop a[rel=share_recipe]').share({ shareType: 'share_recipe' });
    jQuery('div.rtbBottom a[rel=share_recipe]').share({ direction: 'top', shareType: 'share_recipe' });
    jQuery('div.rtbRight a[rel=share_recipe]').share({ direction: 'left', shareType: 'share_recipe' });
    jQuery('a[rel=share]').share();
});

jQuery.query = function () {
    var r = {};
    var q = location.search;
    q = q.replace(/^\?/, ''); // remove the leading ?
    q = q.replace(/\&$/, ''); // remove the trailing &
    jQuery.each(q.split('&'), function () {
        var key = this.split('=')[0];
        var val = this.split('=')[1];
        // convert floats
        if (/^[0-9.]+$/.test(val))
            val = parseFloat(val);
        // ingnore empty values
        if (val)
            r[key] = val;
    });
    return r;
};

/*  ------   Double Click tag functions. (aka Spotlight)    */

function DoubleClickTagIt(tagSrc, tagType, tagCat, tagOrd, protocal) {

    var axel = Math.random() + "";
    var a = axel * 10000000000000;
    var spotpix = new Image();
    if (tagOrd == null)
        spotpix.src = protocal + "://fls.doubleclick.net/activityi;src=" + tagSrc + ";type=" + tagType + ";cat=" + tagCat + ";ord=" + a;
    else
        spotpix.src = protocal + "://fls.doubleclick.net/activityi;src=" + tagSrc + ";type=" + tagType + ";cat=" + tagCat + ";ord=" + tagOrd + ";num=" + a;

    spotpix.onload = DoubleClickTagItFakeFunction;
    return true;
}

function DoubleClickTagItFakeFunction() { }

/*  ------ End  Double Click tag functions. (aka Spotlight)    */

/* Limit Max Length */
jQuery.fn.limitMaxlength = function (options) {

    var settings = jQuery.extend({
        attribute: "maxlength",
        onLimit: function () { },
        onEdit: function () { }
    }, options);

    // Event handler to limit the textarea
    var onEdit = function () {
        var textarea = jQuery(this);
        var maxlength = parseInt(textarea.attr(settings.attribute));

        if (textarea.val().length > maxlength) {
            textarea.val(textarea.val().substr(0, maxlength));

            // Call the onlimit handler within the scope of the textarea
            jQuery.proxy(settings.onLimit, this)();
        }

        // Call the onEdit handler within the scope of the textarea
        jQuery.proxy(settings.onEdit, this)(maxlength - textarea.val().length);
    }

    this.each(onEdit);

    return this.keyup(onEdit)
				.keydown(onEdit)
				.focus(onEdit)
				.live('input paste', onEdit);
}

jQuery(function () {
    jQuery('textarea[maxlength]').limitMaxlength();
});

/* Grocerylist */
//function GetGroceryList(callbackFunction) {
//    jQuery.ajax({
//        url: '/Services/grocerylist/getlist.ashx',
//        success: callbackFunction,
//        error: callbackFunction,
//        complete: callbackFunction,
//        //data: '{"ListId":"76838d4d-a859-4caf-ae45-76122f59aefb"}',
//        dataType: 'json',
//        type: 'POST'
//    });
//}

function GetGroceryList(callbackFunction, listId) {
    var requestData;
    if (listId != null) {
        var requestObject = { ListId: listId }
        requestData = JSON.stringify(requestObject)
    }
    jQuery.ajax({
        url: '/Services/grocerylist/getlist.ashx',
        success: callbackFunction,
        error: callbackFunction,
        data: requestData,
        dataType: 'json',
        type: 'POST'
    });
}

function GetGroceryLists(callbackFunction) {
    jQuery.ajax({
        url: '/Services/grocerylist/GetGrocerylists.ashx',
        success: callbackFunction,
        dataType: 'json',
        type: 'POST'
    });
}

function AddRecipeToGroceryList(listId, recipeId, callbackFunction) {
    var requestObject = { ListId: listId, RecipeId: recipeId }
    jQuery.ajax({
        url: '/Services/grocerylist/AddRecipeToList.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function AddRecipeToNewGroceryList(listName, recipeId, callbackFunction) {
    var requestObject = { ListName: listName, RecipeId: recipeId }
    jQuery.ajax({
        url: '/Services/grocerylist/AddListAndRecipe.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function DeleteGroceryList(listId, callbackFunction) {
    var requestObject = { ListId: listId }
    jQuery.ajax({
        url: '/Services/grocerylist/DeleteGroceryList.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function DeleteRecipeFromGroceryList(listId, recipeId, callbackFunction) {
    var requestObject = { ListId: listId, RecipeId: recipeId }
    jQuery.ajax({
        url: '/Services/grocerylist/DeleteRecipeFromGroceryList.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function AddNewGroceryList(listName, callbackFunction) {
    var requestObject = { ListName: listName }
    jQuery.ajax({
        url: '/Services/grocerylist/AddGroceryList.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function DeleteGroceryListLine(listId, listLineId, callbackFunction) {
    var requestObject = { ListId: listId, ListLineId: listLineId }
    jQuery.ajax({
        url: '/Services/grocerylist/DeleteLineItem.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

function AddGroceryListLine(listId, description, categoryId, callbackFunction) {
    var requestObject = { ListId: listId, Description: description, CategoryId: categoryId }
    jQuery.ajax({
        url: '/Services/grocerylist/AddLineItem.ashx',
        success: callbackFunction,
        data: JSON.stringify(requestObject),
        dataType: 'json',
        type: 'POST'
    });
}

jQuery(function () {
    jQuery('div[id*=PollSubmit]').click(function () {
        var selectedPollChoice = jQuery('input:radio[name=radioVote]:checked').val();
        var atLeastOneIsChecked = jQuery('input:radio[name=radioVote]:checked').length > 0;
        var PERCENT_BAR_WIDTH_MULTIPLIER = .8;

        //function AddPollEntry(selectedPollChoice) {
        if (atLeastOneIsChecked == 0) {
            jQuery('div[id*=PollError]').show();
        }
        else {
            var requestObject = { ChoiceId: selectedPollChoice }
            jQuery.ajax({
                url: '/Services/Polls/PollHandler.ashx',
                success: function (data) {

                    //Needs to log in first
                    if (data.UserState == 'A') {
                        location.href = "/login";
                    }

                    //Everything ok show the poll results
                    if (data.UserState == 'K') {
                        jQuery('div[id*=SubmissionPanel]').hide();
                        jQuery('div[id*=DisplayPanel]').hide();
                        jQuery('div[id*=DisplayPollPanel]').show();
                        var tempString = "";

                        var i;
                        for (i = 0; i < data.InfoItems.length; i++) {
                            tempString += '<div class="poll_competitor">';
                            tempString += '<div class="competitor_text">' + data.InfoItems[i].LabelText + '</div>';
                            tempString += '<div class="competitor_bar left" style="width:' + (data.InfoItems[i].PercentLead * PERCENT_BAR_WIDTH_MULTIPLIER) + '%"></div>';
                            tempString += '<div class="competitor_pct left">' + data.InfoItems[i].PercentTotal + '%</div>';
                            tempString += '<div class="full_clear"></div>';
                            tempString += '</div>';
                        };

                        jQuery('div[id*=PollDisplayRepeater]').append(tempString);

                    }
                    else {
                        jQuery('div[id*=SubmissionPanel]').show();
                        jQuery('div[id*=DisplayPanel]').hide();
                        jQuery('div[id*=DisplayPollPanel]').hide();
                    }

                    jQuery('div[id*=PollError]').hide();

                },
                error: function (xhr, status, error) {
                    //alert("Failed to select poll choice!");

                },
                data: requestObject,
                dataType: 'json',
                type: 'POST'
            });
        }

        //}
    });
});

jQuery(function () {
    jQuery('div[id*=TipSubmit]').click(function () {
        var suppliedtiplength = jQuery("textarea[id*=TipText]").val().length;
        var suppliedtip = jQuery("textarea[id*=TipText]").val();
        var tipguid = jQuery("input[id*=TipGuid]").val();

        //Make sure they supplied a tip that was less then 250 charactors
        if (suppliedtiplength == 0) {
            if (suppliedtip == 0) {
                jQuery('div[id*=TipErrorLabel]').html("You have not entered any information");
            }
        }
        else if (suppliedtiplength >= 250) {
            jQuery('div[id*=TipErrorLabel]').html("You have exceeded the character limit");
        }
        else {
            //alert(suppliedtip);
            var requestObject = { TipContent: suppliedtip, TipGUID: tipguid }
            jQuery.ajax({
                url: '/Services/Tips/TipHandler.ashx',
                success: function (data) {

                    //Everything ok show the poll results
                    if (data.SuccessStatus == 'K') {
                        jQuery('div[id*=TipFormContainer]').hide();
                        jQuery('div[id*=TipThankYouContainer]').show();

                    }
                    else {
                        if (data.ErrorType == '2') {
                            //Need to agree to community terms
                            location.href = data.ErrorMessage;
                        }
                        else {
                            jQuery('div[id*=TipErrorLabel]').html(data.ErrorMessage);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    //alert("Failed to select poll choice!");

                },
                data: requestObject,
                dataType: 'json',
                type: 'POST'
            });
        }

        //}
    });
});


function ParseMicrosoftDate(inputDate) {
    var result = new Date(parseInt(inputDate.substr(6)));
    return result;
}

function MarinTagging(catDesc) {
    try {
        var src;
        src = "https://tracker.marinsm.com/tp?act=2&cid=6139535055&trans=" + catDesc;
        document.getElementById("marinFrame").src = ("https:" == document.location.protocol) ? src.replace("http:", "https:") : src;
    } catch (err) { }
    return true;
}

/* Newsletter Widget Start */

function getSubscriptions() {
    jQuery.ajax({
        type: "POST",
        url: "/Services/Profile/Newsletters/GetSubscriptions.ashx",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            jQuery(".knownUserNewsletter").empty().append(jQuery("#SubscriptionTemplate").tmpl(data));
            jQuery(".knownUserNewsletter input:checkbox").click(function () {
                var $checkBox = jQuery(this);
                var checked = $checkBox.attr("checked") == true
                processSubscription($checkBox.next().attr("value"), checked, this)
            });
        }
    });
};

function processSubscription(newsletterId, subscribed, item) {
    jQuery(".loadingNewsletter").html("<img src='/images/coupons/loading.gif' alt='Loading...' />").show();

    var requestObject = { "NewsletterId": newsletterId, "Subscribed": subscribed };
    jQuery.ajax({
        type: "POST",
        url: "/Services/Profile/Newsletters/ProcessSubscription.ashx",
        data: JSON.stringify(requestObject),
        complete: function () {
            jQuery(".loadingNewsletter").empty().hide();
        },
        success: function (data) {
            if (data == true) {
                var message;
                if (subscribed) {
                    message = " (subscribed)";
                    if (newsletterId == "12c2f995-c4a3-4bf5-99ca-ef656736199d") {
                        ntptEventTag('ev=newsletteroptin&NewsletterTitle=PillsburyNewsLetter&ActionType=Other');
                    }
                    else if (newsletterId == "04fbc030-309d-4c18-b44d-886ca4fa5586") {
                        ntptEventTag('ev=newsletteroptin&NewsletterTitle=CookingForTwo&ActionType=Other');
                    }
                    else if (newsletterId == "b65e3d65-f5a1-4e1f-a362-09f741c15114") {
                        ntptEventTag('ev=newsletteroptin&NewsletterTitle=TodaysTaste&ActionType=Other');
                    }
                    subscribeNewsletter(newsletterId);
                }
                else {
                    message = " (unsubscribed)";
                    if (newsletterId == "12c2f995-c4a3-4bf5-99ca-ef656736199d") {
                        ntptEventTag('ev=newsletteroptout&NewsletterTitle=PillsburyNewsLetter&ActionType=Other');
                    }
                    else if (newsletterId == "04fbc030-309d-4c18-b44d-886ca4fa5586") {
                        ntptEventTag('ev=newsletteroptout&NewsletterTitle=CookingForTwo&ActionType=Other');
                    }
                    else if (newsletterId == "b65e3d65-f5a1-4e1f-a362-09f741c15114") {
                        ntptEventTag('ev=newsletteroptout&NewsletterTitle=TodaysTaste&ActionType=Other');
                    }
                    unsubscribeNewsletter();
                }
                jQuery(item).next().next().next().text(message);
            }
            else {
                jQuery(item).next().next().next().text("Error occurred while processing");
            }
        },
        error: function (data) {
            jQuery(item).next().next().next().text("Error occurred while processing");
        }
    });
};

/* Newsletter Widget End */

/* Count Down Clock  */
function GetCountDownClock(liftoffTime) {
    jQuery('#countdownLayout').countdown({ until: liftoffTime, compact: true,
        layout: '<div class="days">{d10}{d1}</div>' +
        '<div class="hours">{h10}{h1}</div>' +
        '<div class="minutes">{m10}{m1}</div>' +
        '<div class="seconds">{s10}{s1}</div>'
    });
}



function showLogInWindow(options) {
    if (typeof options === 'undefined')
        options = {};
    var returnurlstring;
    if (options.returnUrl != undefined) {
        returnurlstring = "?ReturnUrl=" + options.returnUrl;
    }

    if (options.esrc != undefined) {
        esrcodestring = "?esrc=" + options.esrc;
    }
    if (options.returnUrl != undefined) {
        if (options.esrc != undefined) {
            returnurlstring = esrcodestring + "&ReturnUrl=" + options.returnUrl;
        }
        else {
            returnurlstring = "?ReturnUrl=" + options.returnUrl;
        }
    }

    jQuery('#jq_frame_memberlogin_target').dialog({ autoOpen: false, modal: true, height: 270, width: 550, dialogClass: 'VariableWidth VariableWidth-ui-dialog registrationDialogClass' });
    jQuery('#jq_frame_memberlogin_target').html('<iframe id="modalIframeIdLogin" width="530" height="260" marginWidth="0" marginHeight="0" frameBorder="0" scrolling="no" ALLOWTRANSPARENCY="true" />').dialog("open");


    jQuery('#modalIframeIdLogin').attr("src", "/modallogon" + returnurlstring);
    jQuery('#jq_frame_memberlogin_target').css('z-index', 99999);
    jQuery('.ui-dialog').css('z-index', 99998);
    jQuery('.ui-widget-overlay').css('z-index', 99997);
    return false;
}


function showInterstitialWindow(options) {
    if (typeof options === 'undefined')
        options = {};

    // alert("Hit");
    jQuery('#jq_frame_memberlogin_target').dialog({ autoOpen: false, modal: true, height: 745, width: 865 });
    jQuery('#jq_frame_memberlogin_target').html('<iframe id="modalAdId" width="860" height="740" marginWidth="0" marginHeight="0" frameBorder="0" scrolling="no" ALLOWTRANSPARENCY="true" />').dialog("open");

    jQuery('#modalAdId').attr("src", "/modals/notsosecretclub.html");
    jQuery('#jq_frame_memberlogin_target').css('z-index', 99999);
    jQuery('.ui-dialog').css('z-index', 99998);
    jQuery('.ui-widget-overlay').css('z-index', 99997);
    jQuery('.ui-icon').hide();
    // return false;
}

function closeModalandRedirectWindow(newurl) {
    top.location = newurl;
}

function closeModalandOpenRegistration() {
    jQuery('#toolBarSignUp').click();
}

function openRegistartionDialog(options) {
    if (typeof options === 'undefined')
        options = {};
    var modalRegistration = jQuery('input[id$="hdnModalRegistrationUrl"]');
    var modalRegistrationUrlValue;
    if ("esrc" in options && modalRegistration.length > 0) {
        modalRegistrationUrlValue = modalRegistration.val();
        modalRegistrationUrlValue += (modalRegistrationUrlValue.indexOf("?") < 0 ? "?" : "&");
        modalRegistrationUrlValue += "esrc=";
        modalRegistrationUrlValue += options.esrc;
        modalRegistration.val(modalRegistrationUrlValue);
    }
    bc.userRegistration.openRegistartionDialog(',');
}


jQuery('#event_catcher_container_2').click(function () {
    // alert("Hit");
    pauseHero(jQuery(this).parents('.hero_content'));
    return false;
});

function showPopup(url) {
    newwindow = window.open(url, 'name', 'height=450,width=580,top=200,left=300,resizable');
    if (window.focus) { newwindow.focus() }
}




/*End of Main.js */// Trigger contentview Unica tag on all page loads other than recipe detail

jQuery(document).ready(function () {
    var recipeDetailRegex = /\/recipes\/[^\/]+\/[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/i;
    if (!document.location.href.match(recipeDetailRegex)) {
        ntptEventTag('ev=contentview&ActionType=View');
    }
});

/*End of Global.js */jQuery(document).ready(function() {
    //    jQuery("#benefitSlider").click(function() {
    //        jQuery(".memberBenefits").slideToggle("400");
    //    });
    //});

    var benefitTimeout;

    jQuery("#benefitSlider").mouseover(function() {
        benefitTimeout = setTimeout(function() {
            jQuery(".memberBenefits").slideDown(400);
        }, 500);
    });
    jQuery("#benefitSlider").mouseout(function() {
        clearTimeout(benefitTimeout);
    });
    jQuery("#benefitsCloseButton").click(function() {
        jQuery(".memberBenefits").slideUp(400);
    });

});

function liveExperience() {
    // To Prevent failures if legacy js calls this.
}
function ReadCookie(cookieName) {
    var theCookie = " " + document.cookie;
    var ind = theCookie.indexOf(" " + cookieName + "=");
    if (ind == -1) ind = theCookie.indexOf(";" + cookieName + "=");
    if (ind == -1 || cookieName == "") return "";
    var ind1 = theCookie.indexOf(";", ind + 1);
    if (ind1 == -1) ind1 = theCookie.length;
    return unescape(theCookie.substring(ind + cookieName.length + 2, ind1));
}
function WebTrendRegistrationFlow(flowId, regPageCount, isBackFlow) {

    if (flowId == "2") {
            if (isBackFlow == "False" && regPageCount=="1") {
            document.cookie = "regStep=1;path=/;";
        }

        else if (ReadCookie("regStep") == "1" && regPageCount == "2") {
            document.cookie = "regStep=2;path=/;";

        }
        else if (ReadCookie("regStep") == "2" && regPageCount == "3") {
            document.cookie = "regStep=3;path=/;";
        }
        else if (ReadCookie("regStep") == "3" && regPageCount == "4") {
            document.cookie = "regStep=4;path=/;";
        }
        else if (ReadCookie("regStep") == "4" && regPageCount == "5") {
            document.cookie = "regStep=5;path=/;";           
           
        }
        else if (ReadCookie("regStep") == "6" && regPageCount == "6") {
            document.cookie = "regStep=0; expires=0;  path=/;";          
          

        }
    }
}
//eof



function fireSpotlight(activity, cat) {
    // Random number to prevent caching
    var axel = Math.random() + "";
    var a = axel * 10000000000000;
    var src;
    src = 'http://fls.doubleclick.net/activityi;src=1869704;type=pills674;cat=' + cat + ';ord=1;num='+ a + '?';

    if(document.getElementById("spotlightFrame"))    
        document.getElementById("spotlightFrame").src = src;
   
    else if(window.console) 
        console.log(activity + ": Spotlight IFrame missing from page");
}
var titleLength = 100;
var descriptionLength = 155;
var emptyStar = "/Images/star_blue_empty.png";
var fullStar = "/Images/star_blue_full.png";
var halfStar = "/Images/star_blue_half.png";
var maxStars = 5;

var recipeSummaryData = {
    Title: ko.observable('Recipe Title'),
    Description: ko.observable('Recipe Description'),
    IngredientCount: ko.observable('0'),
    TotalTime: ko.observable('0'),
    PrepTime: ko.observable('0'),
    IsMemberGenerated: ko.observable(false),
    ContestLogo: ko.observable(null),
    ScaledUserRating: ko.observable('5'),
    HasErrors: ko.observable(false),
    IsLoading: ko.observable(true),
    RecipeId: ko.observable(''),
    RecommendationValue: ko.observable('0%'),
    RecipePage: ko.observable(''),
    GetRecipeSummary: function (recipeAnchor) {
        var rid = recipeAnchor.attr("rid");
        this.RecipeId(rid);
        recipeSummaryData.IsLoading(true);
        GetRecipeSummaryFromService(recipeAnchor);
    }
};

function ApplyRecipeSummaryBinding(data, recipeAnchor) {
    recipeSummaryData.IsLoading(false);
    jQuery(recipeAnchor).data('ajaxRequestInProgress', 'no');
    if (data != null) {
        recipeSummaryData.Title((data.Title.length >= titleLength ? data.Title.substring(0, titleLength) + "..." : data.Title));
        recipeSummaryData.Description((data.Description.length >= descriptionLength ? data.Description.substring(0, descriptionLength) + "..." : data.Description));
        recipeSummaryData.IngredientCount(data.IngredientCount);
        recipeSummaryData.TotalTime(data.TotalTime);
        recipeSummaryData.PrepTime(data.PrepTime);
        recipeSummaryData.IsMemberGenerated(data.IsMemberGenerated);
        recipeSummaryData.ContestLogo(data.ContestLogo);
        recipeSummaryData.ScaledUserRating(data.ScaledUserRating);
        recipeSummaryData.RecommendationValue(data.RecommendationValue);
        recipeSummaryData.RecipePage(data.RecipePage);
        recipeSummaryData.HasErrors(false);


        jQuery("#recipeSummaryDiv").find(".viewRecipeLink").attr("href", data.RecipePage + "?overLay=Recipe");
        jQuery("#recipeSummaryDiv").find(".addToRecipeBoxLink").attr("href", data.RecipeBoxPage + "&overLay=RecipeBox"); //WTReq :12 this query string will be read in recipebox page
        jQuery("#recipeSummaryDiv").find(".jq_printLink").attr("href", data.PrintPage+ "&overLay=Print");
        jQuery("#recipeSummaryDiv").find(".jq_emailLink").attr("href", data.RecipePage + "?tab=Email&overLay=Email");
        jQuery("#recipeSummaryDiv").find(".jq_facebookLink").unbind('click');
        jQuery("#recipeSummaryDiv").find(".jq_twitterLink").unbind('click');
        jQuery("#recipeSummaryDiv").find(".jq_facebookLink").click(function (event) { ShareClick(recipeSummaryData.RecipePage(), recipeSummaryData.Title(), 1, event); });
        jQuery("#recipeSummaryDiv").find(".jq_twitterLink").click(function (event) { ShareClick(recipeSummaryData.RecipePage(), recipeSummaryData.Title(), 2, event); });
        jQuery("#recipeSummaryDiv").find(".jq_imgContestWinnner").data("contestLogo", recipeSummaryData.ContestLogo()).css("display", function () {
            var contestLogo = jQuery(this).data('contestLogo');
            if (contestLogo != null && contestLogo != "") {
                jQuery(this).attr("src", contestLogo);                
                return "inline";
            }
            return "none";
        });

        DisplayRating(recipeSummaryData.ScaledUserRating(), jQuery("#recipeSummaryDiv").find(".jq_overlayRating"));

        var r_sum1 = jQuery("#recipeSummaryDiv").clone(true)
        var r_sum2 = jQuery("#recipeSummaryDiv").clone(true)
        r_sum1.appendTo(recipeAnchor).attr("id", "span" + jQuery(recipeAnchor).attr("rid")).addClass("tooltipPosition");
        if (jQuery(recipeAnchor).data("over") == "yes") {
            CopySummarytoPopup(r_sum2, recipeAnchor);
        }
        jQuery(recipeAnchor).find("#span" + jQuery(recipeAnchor).attr("rid")).find("*").removeAttr("data-bind");
        

    }
    else {
        recipeSummaryData.HasErrors(true);
    }
}

function DisplayErrorMessage(jqXHR, textStatus, errorThrown) {
    recipeSummaryData.HasErrors(true);
    recipeSummaryData.IsLoading(false);
}

function GetRecipeSummaryFromService(recipeAnchor) {
    jQuery.ajax({
        url: '/Services/Recipe/Summary.ashx',
        data: 'rid=' + recipeSummaryData.RecipeId(),
        success: function (data) { ApplyRecipeSummaryBinding(data, recipeAnchor); },
        error: DisplayErrorMessage,
        dataType: 'json',
        type: 'GET'
    });
}

var summary_timeout;

jQuery(function () {
    ko.applyBindings(recipeSummaryData, document.getElementById('recipeSummaryContainerID'));

    jQuery("#recipeSummaryPop").data('over', 'no');
    jQuery("#recipeSummaryPop").data('timing', 'no');

    jQuery(".recipeSummaryHover").bind('mouseenter',
    function () {
        jQuery("#recipeSummaryPop").data('timing', 'yes');
        var anc = this;
        var fn = function () { ShowRecipeSummary(anc); }
        summary_timeout = setTimeout(fn, 250);
    }).bind('mouseleave',
    function () {
        if (jQuery("#recipeSummaryPop").data('timing') == 'yes') {
            clearTimeout(summary_timeout);
        }
        else {
            jQuery(this).data('over', 'no');
            setTimeout("HideRecipeSummary()", 100);
        }
    });

    jQuery("#recipeSummaryPop").bind('mouseenter',
    function () {
        jQuery(this).data('over', 'yes');
    })
    .bind('mouseleave',
    function () {
        jQuery(this).data('over', 'no');
        setTimeout("HideRecipeSummary()", 100);
    });

});

function ShowRecipeSummary(anchor) {
    jQuery("#recipeSummaryPop").data('timing','no')
    if (jQuery(anchor).data('ajaxRequestInProgress') != 'yes') {
        jQuery(anchor).data('over', 'yes');
        jQuery("div#recipeSummaryPop").data("anchor", jQuery(anchor));
        if (jQuery(anchor).find("#span" + jQuery(anchor).attr("rid")).is("span")) {
            CopySummarytoPopup(jQuery(anchor).find("#span" + jQuery(anchor).attr("rid")).clone(true), anchor);
        }
        else {
            jQuery(anchor).data('ajaxRequestInProgress', 'yes');
            recipeSummaryData.GetRecipeSummary(jQuery(anchor));
        }
    }
}

function HideRecipeSummary() {
    var r_pop = jQuery("#recipeSummaryPop");
    var over_anchor = r_pop.data("anchor");
    if (over_anchor.data('over') == "no" && r_pop.data('over') == "no") {
        jQuery("#recipeSummaryPop").html('');
    }
}

function ShareClick(url, title, option, event) {
    var objShare = new shareMethods(title, url, "share_recipe");
    if (option == 1) {

       
ntptEventTag('ev=Recipeoverlay_FacebookShare_bt&RecipeID=' + recipeSummaryData.RecipeId() + '&RecipeTitle=' + encodeURIComponent(recipeSummaryData.Title()) + '');

        objShare.openFacebook();

    }

    else if (option == 2) {
        
ntptEventTag('ev=Recipeoverlay_twitter_bt&RecipeID=' + recipeSummaryData.RecipeId() + '&RecipeTitle=' + encodeURIComponent(recipeSummaryData.Title()) + '');
        objShare.openTwitter();
    }
    event.preventDefault();
    return false;
}

function CopySummarytoPopup(source, recipeAnchor) {
    var r_pop = jQuery("div#recipeSummaryPop");
    var win_middle = jQuery(window).height() / 2;
    var win_scroll = jQuery(window).scrollTop();
    var offset = jQuery(recipeAnchor).offset();
    r_pop.html('');
    r_pop.css({ 'top': offset.top, 'left': offset.left });
    if (offset.top + 38 - win_scroll > win_middle) {
        source.addClass("recipeSummaryAbove")
    }
    else {
        source.addClass("recipeSummaryBelow")
    }
    source.appendTo(r_pop).css("display", "inline");
}


function DisplayRating(rating, ratingContainer) {
    var objImg;
    jQuery(ratingContainer).html('');
    for (i = 0; i < maxStars; i++) {
        objImg = jQuery(document.createElement("img"));
        objImg.attr("src", emptyStar);
        jQuery(ratingContainer).append(objImg);
    }

    if (rating < 1 || rating > maxStars) rating = 0;
    rating = rating - 1;
    
    var floorRating = Math.floor(rating);
    var indexValue = 0;
    jQuery.each(ratingContainer.find("img"), function (index, img) {
        if (index <= floorRating) {
            jQuery(img).attr("src", fullStar);
            indexValue = index;
        }
    });

    if (indexValue < (maxStars - 1)) {
        rating = rating - floorRating;
        if (rating >= 0.75)
            jQuery(ratingContainer).find("img:nth-child(" + (indexValue + 2) + ")").attr("src", fullStar);
        else if (rating >= 0.25)
            jQuery(ratingContainer).find("img:nth-child(" + (indexValue + 2) + ")").attr("src", halfStar);

    }
}

//End Of File

/*********** TOOLBAR *********/
var toolbarV = 1;
var toolbar_min_cookie_name = "pbTBarMin";
var toolbar_reg_cookie_name = "pbTBarReg";
var reg_call_timeout;
var isIE6 = (navigator.userAgent.indexOf("IE 6") > -1);

function ApplyToolbarBindings(data) {
    if (!data.IsKnown) {
        jQuery("#ToolBar").attr("data-bind", 'template: { name: "AnonymousUserToolbarTemplate" }');
        CheckToolbarRegCall();

    } else {
        jQuery("#ToolBar").attr("data-bind", 'template: { name: "KnownUserToolbarTemplate" }');
        CheckToolbarLists();
    }
    ko.applyBindings(data, document.getElementById('ToolBar'));
}

function ApplyToolBarClickDataBindings(data, link, name) {
    jQuery("#" + name + "ID").attr("data-bind", "template: { name: '" + name + "TemplateBase" + "' }");
    ko.applyBindings(data, document.getElementById(name + "ID"));
    CheckToolbarLists(name);
    jQuery.removeData(link, "state");
    linkClicked(link,false);
}

function GetToolBarData(callbackFunction) {
    jQuery.ajax({
    	url: '/Services/Toolbar/ToolBarService.ashx?v=' + toolbarV,
        success: callbackFunction,
        dataType: 'json',
        type: 'GET'
    });
}
function GetToolBarUserData(callbackFunction) {
	jQuery.ajax({
		url: '/Services/Toolbar/ToolBarService.ashx?v=' + toolbarV +'&DC=User',
		success: callbackFunction,
		dataType: 'json',
		type: 'GET'
	});
}
function GetToolBarRecipeBoxData(currentLink) {
    jQuery.ajax({
    	url: '/Services/Toolbar/ToolBarService.ashx?v=' + toolbarV + '&DC=RecipeBox',
        success: function (data) { ApplyToolBarClickDataBindings(data, currentLink, 'RecipeBoxToolbar') },
        dataType: 'json',
        error: function (xhr, status, error) {
            ToolbarErrorHandler(xhr, status, error, "RecipeBoxToolbar", currentLink) 
        },
        type: 'GET'
    });
}
function GetToolBarRecentlyViewedData(currentLink) {
	jQuery.ajax({
		url: '/Services/Toolbar/ToolBarService.ashx?v=' + toolbarV + '&DC=RecentlyViewedRecipes',
		success: function (data) { ApplyToolBarClickDataBindings(data, currentLink, 'RecentRecipeToolbar') },
		dataType: 'json',
		error: function (xhr, status, error) {
		    ToolbarErrorHandler(xhr, status, error, "RecentRecipeToolbar", currentLink)
		},
		type: 'GET'
	});
}
function GetToolBarGroceryListsData(currentLink) {
	jQuery.ajax({
		url: '/Services/Toolbar/ToolBarService.ashx?v=' + toolbarV + '&DC=GroceryLists',
		success: function (data) { ApplyToolBarClickDataBindings(data, currentLink, 'GroceryListToolbar') },
		dataType: 'json',
		error: function (xhr, status, error) {
		    ToolbarErrorHandler(xhr, status, error, "GroceryListToolbar", currentLink)
		   
		},
		type: 'GET'
	});
}

function AjaxLogOut() {

    ntptEventTag('ev=membertoolbar_logout_bt&ActionType=Other');
    var logoutStatus = jQuery.parseJSON(jQuery.ajax({ url: "/Services/Profile/LogOffHandler.ashx",
        async: false,
        timeout: 3000
    }).responseText);
    if (logoutStatus.toUpperCase() == "S") {
        window.location.href = "/";
    }
    else {
        window.location.href = "/logout";
    }
}

function loadToolbar() {
    //if (jQuery("meta[name='DCS.dcsaut'][content='non-member']").length == 1) {
    //check the Unica NTPT_GLBLEXTRA tag to see if the current user is anonymous
    if (window.NTPT_GLBLEXTRA !== undefined && window.NTPT_GLBLEXTRA.indexOf("UserStatus=Anonymous") != -1) {
        ApplyToolbarBindings({ IsKnown: false });
    } else {
        GetToolBarUserData(ApplyToolbarBindings);
    }
	SetToolBar();
	jQuery('#tb_log_out').live('click', function () {
		AjaxLogOut();
    });
    jQuery('#tb_close_button').live('click', function () {
        HideRegCallOut();
    });
    //jQuery('#tb_nl_link').live('click', function () {        
      //  window.location.href = "/login?esrc=15895&Overlay=Newsletter&email=" + jQuery('#nl_email').val();
   // });
    jQuery('#nl_email').live('keypress', function (e) {
        if (e.keyCode == '13') {
            e.preventDefault();           
            window.location.href = "/login?&Overlay=Newsletteresrc=15895&email=" + jQuery('#nl_email').val();
        }
    });
}

jQuery(function () { loadToolbar(); });

function SetToolBar() {
    if (js_getCookie(toolbar_min_cookie_name) == 'min') {
        jQuery('.toolbar_dashboard').css({ 'width': '0px' });
        jQuery('.toolbar_share_text').css({ 'width': '0px' });
        jQuery('.toolbar_content').css({ 'width': '300px' });
        jQuery('.toolbar_toggle a').addClass('minimized');
    }
    jQuery('.toolbar_content').animate({ 'top': '0px' }, 400);
    
    jQuery('.toolbar_toggle a').click(function () {
        if (jQuery('.toolbar_toggle a').hasClass('minimized')) {
            js_setCookie(toolbar_min_cookie_name, "max", 1)
            jQuery('.toolbar_dashboard .roll_up .roll_list').css({ 'top': '0px' });
            jQuery('.roll_up_link').data('state', 'down');
            jQuery('.toolbar_dashboard .roll_up').show();
            jQuery('.toolbar_content').animate({ 'top': '30px' }, 200, function () {
                jQuery('.toolbar_content').css({ 'width': '100%' });
                jQuery('.toolbar_dashboard').css({ 'width': 'auto' });
                jQuery('.toolbar_share_text').css({ 'width': 'auto' });
                jQuery('.toolbar_toggle a').removeClass('minimized');
                jQuery('.toolbar_content').animate({ 'top': '0px' }, 200);
            });
        }
        else {
            js_setCookie(toolbar_min_cookie_name, "min", 1)
            clearTimeout(reg_call_timeout);
            jQuery('.toolbar_dashboard .reg_call_out').hide();
            jQuery('.toolbar_dashboard .roll_up').hide();
            jQuery('.toolbar_content').animate({ 'top': '30px' }, 200, function () {
                jQuery('.toolbar_content').css({ 'width': '300px' });
                jQuery('.toolbar_dashboard').css({ 'width': '0px' });
                jQuery('.toolbar_share_text').css({ 'width': '0px' });
                jQuery('.toolbar_toggle a').addClass('minimized');
                jQuery('.toolbar_content').animate({ 'top': '0px' }, 200);
            });
        }
    });

    jQuery('.roll_up_link').live('click', function () {
        var cur_link = jQuery(this);


        if (cur_link.attr('id') == "rbox") {
            if (cur_link.data('dataLoaded') == undefined) {
                cur_link.data('dataLoaded', 'yes');
                linkClicked(cur_link,true);
                GetToolBarRecipeBoxData(this);
            }
            else
                linkClicked(cur_link,true);


        }
        else if (cur_link.attr('id') == "recent") {
            if (cur_link.data('dataLoaded') == undefined) {
                cur_link.data('dataLoaded', 'yes');
                linkClicked(cur_link,true);
                GetToolBarRecentlyViewedData(this);
            }
            else
                linkClicked(cur_link,true);

        }
        else if (cur_link.attr('id') == "glist") {
            if (cur_link.data('dataLoaded') == undefined) {
                cur_link.data('dataLoaded', 'yes');
                linkClicked(cur_link,true);
                GetToolBarGroceryListsData(this);
               
            }
            else
                linkClicked(cur_link,true);

        }
      

    });
}

function linkClicked(currentLink,isFirstTime) {
    var cur_link = jQuery(currentLink);
    if (cur_link.data('state') == undefined) { cur_link.data('state', 'down'); }
    var targ_list = ".toolbar_dashboard .roll_up ." + cur_link.attr('id');

    if (cur_link.data('state') != 'moving') {
        jQuery('.roll_list').not('.' + cur_link.attr('id')).css({ 'top': '0px' });
        jQuery('.roll_up_link').removeClass('selected');
        cur_link.addClass('selected');
        if (cur_link.data('state') == 'down') {
            cur_link.data('state', 'moving');
            var targ_top = jQuery(targ_list).outerHeight() * -1;
            jQuery(targ_list).animate({ 'top': targ_top }, 500, function () {
                jQuery('.roll_up_link').data('state', 'down');
                cur_link.data('state', 'up');

                if (isFirstTime == true) {
                   
                    WebTrendsCall(cur_link.attr('id').toString());
                }
            });
        }
        else {
            jQuery('.roll_up_link').removeClass('selected');
            cur_link.data('state', 'moving');
            jQuery(targ_list).animate({ 'top': '0px' }, 500, function () {
                jQuery('.roll_up_link').data('state', 'down');
            });
        }
    }
     
}

function WebTrendsCall(itemClicked) {

    switch(itemClicked)
    {
        case 'rbox':
            ntptEventTag('ev=membertoolbar_recipebox_bt&ActionType=Other');
            break;

        case 'recent':
            ntptEventTag('ev=membertoolbar_recentlyviewedrecipes_bt&ActionType=Other');
            break;

        case 'glist':
            ntptEventTag('ev=membertoolbar_grocerylist_bt&ActionType=Other');
            break;
         default:
         return true;

    }
    return false;

}
function CheckToolbarLists() {
    if (jQuery('.roll_list').length == 3) {
        jQuery('.roll_list').each(function () {
            var list_count = jQuery('li', jQuery(this)).length;
            if (list_count > 3) {
                jQuery('li.empty', jQuery(this)).hide();
            }
            else {
                jQuery('li.see_all', jQuery(this)).hide();
            }
        });
    }
    else {
        setTimeout("CheckToolbarLists()", 200);
    }
    jQuery('li.Error', jQuery(this)).hide();  
}


function CheckToolbarLists(ulElement) {
    var obj = jQuery("#" + ulElement);
    var list_count = jQuery('li', obj).length;
    if (list_count > 3) {
        jQuery('li.empty', obj).hide();
    }
    else {
        jQuery('li.see_all', obj).hide();
    }
    jQuery('li.Error', obj).hide();
}

function ToolbarErrorHandler(xhr, status, error, name, currentLink) {
    try {       
            jQuery("#" + name + "ID").attr("data-bind", "template: { name: '" + name + "TemplateBase" + "' }");
            var data = { "GroceryLists": null, "RecentRecipes": null, "RecipeBoxItems": null, "AvatarLink": null, "UserName": "pbuser", "IsKnown": true, "LastDateModified": null, "SerializedForm": null, "UniqueIdentifier": null, "DataCategory": 0 }
            ko.applyBindings(data, document.getElementById(name + "ID"));
            var obj = jQuery("#" + name);
            var list_count = jQuery('li', obj).length;
                jQuery('li.Error', obj).show();
                jQuery('li.empty', obj).hide();
                jQuery('li.see_all', obj).hide();
               
            }
     catch (err) 
        {           
            
}
 
}


function CheckToolbarRegCall() {
    var userData = js_getCookie("UserData").split("&");
    var len = userData.length;
    var pageViewCount = 0;
    for(var i = 0; i<len; i++)
    {
        var keyvalueArray = userData[i].split("=");
        if(keyvalueArray[0] == "UCONV-PgV") {
            pageViewCount = keyvalueArray[1];
            break;
        }
    }
    if(pageViewCount == 1){
        setTimeout("ShowRegCallOut()", 1000);
    }
}

function ShowRegCallOut() {
    if (isIE6) { jQuery('.toolbar_dashboard .reg_call_out').addClass('reg_call_out_ie6'); }

    jQuery('.toolbar_dashboard .reg_call_out').fadeIn(500, function () {
        reg_call_timeout = setTimeout("HideRegCallOut()", 10000);
    });
}

function HideRegCallOut() {
    jQuery('.toolbar_dashboard .reg_call_out').fadeOut(500);
}

//End Of File
/************************************************************************************************************************************
*	fb.wall				Facebook Wall jQuery Plguin
*
*	@author:			Daniel Benkenstein / neosmart GmbH
*	@version:			1.2.7
*	@Last Update:		06.06.2011
*	@licence:			MIT (http://www.opensource.org/licenses/mit-license.php)
*						GPL	(http://www.gnu.org/licenses/gpl.html)
*	@documentation:		http://www.neosmart.de/social-media/facebook-wall
*	@feedback:			http://www.neosmart.de/blog/jquery-plugin-facebook-wall
*	
************************************************************************************************************************************/

(function (jQuery) {

    jQuery.fn.fbWall = function (options) {

        var opts = jQuery.extend({}, jQuery.fn.fbWall.defaults, options);
        var meta = this;

        return meta.each(function () {
            jQuerythis = jQuery(this);
            var o = jQuery.meta ? jQuery.extend({}, opts, jQuerythis.data()) : opts;
            var output = '';
            var avatarBaseURL;
            var baseData = { id: "195184929562", link: "http://www.facebook.com/Pillsbury", name: "Pillsbury" };
            var graphURL = "https://graph.facebook.com/";

            /******************************************************************************************************
            * Load base data
            ******************************************************************************************************/

            meta.addClass('fb-wall').addClass('loading').html('');
            var type = (o.showGuestEntries == 'true' || o.showGuestEntries == true) ? 'feed' : 'posts';
            jQuery.getJSON(getHandlerURL(false), function (data) {
                meta.removeClass('loading');
                initWall(data);
            });


            /******************************************************************************************************
            * Parse feed data / wall
            ******************************************************************************************************/

            var initWall = function (data) {
                if (data == null) {
                    meta.removeClass('loading')
                    return false;
                };
                if (data == false) {
                    meta.removeClass('loading')
                    return false;
                };
                if (data.error) {
                    meta.removeClass('loading').html(data.error.message);
                    return false;
                };

                data = data.data;

                var max = data.length;
                var thisAvatar, isBase, hasBaseLink, thisDesc;

                for (var k = 0; k < max; k++) {

                    // Shortcut ------------------------------------------------------------------------------------------------------------------------------
                    isBase = (data[k].from.id == baseData.id);
                    hasBaseLink = isBase && (exists(baseData.link));
                    if (!o.showGuestEntries && !isBase) continue;

                    // Box -----------------------------------------------------------------------------------------------------------------------------------
                    output += (k == 0) ? '<div class="fb-wall-box fb-wall-box-first">' : '<div class="fb-wall-box">';
                    output += '<a href="http://www.facebook.com/profile.php?id=' + data[k].from.id + '" target="_blank">';
                    output += '<img class="fb-wall-avatar" src="' + getAvatarURL(data[k].from.id) + '" />';
                    output += '</a>';
                    output += '<div class="fb-wall-data">';

                    output += '<span class="fb-wall-message">';
                    output += '<a href="http://www.facebook.com/profile.php?id=' + data[k].from.id + '" class="fb-wall-message-from" target="_blank">' + data[k].from.name + '</a> ';
                    if (exists(data[k].message)) output += modText(data[k].message);
                    output += '</span>';

                    // Media -----------------------------------------------------------------------------------------------------------------------------------
                    if (exists(data[k].picture) || exists(data[k].link) || exists(data[k].caption) || exists(data[k].description)) {
                        output += exists(data[k].picture) ? '<div class="fb-wall-media">' : '<div class="fb-wall-media fb-wall-border-left">';
                        if (exists(data[k].picture)) {
                            if (exists(data[k].link)) output += '<a href="' + data[k].link + '" target="_blank" class="fb-wall-media-link">';
                            output += '<img class="fb-wall-picture" src="' + data[k].picture + '" />';
                            if (exists(data[k].link)) output += '</a>';
                        }
                        output += '<div class="fb-wall-media-container">';
                        if (exists(data[k].name)) output += '<a class="fb-wall-name" href="' + data[k].link + '" target="_blank">' + data[k].name + '</a>';
                        if (exists(data[k].caption)) output += '<a class="fb-wall-caption" href="http://' + data[k].caption + '" target="_blank">' + data[k].caption + '</a>';
                        if (exists(data[k].properties)) {
                            for (var p = 0; p < data[k].properties.length; p++) output += (p == 0) ? '<div>' + formatDate(data[k].properties[p].text) + '</div>' : '<div>' + data[k].properties[p].text + '</div>';
                        }
                        if (exists(data[k].description)) {
                            thisDesc = modText(data[k].description);
                            if (thisDesc.length > 299) thisDesc = thisDesc.substr(0, thisDesc.lastIndexOf(' ')) + ' ...';
                            output += '<span class="fb-wall-description">' + thisDesc + '</span>';
                        }
                        output += '</div>';
                        output += '</div>';
                    }
                    output += '<span class="fb-wall-date">';
                    if (exists(data[k].icon)) output += '<img class="fb-wall-icon" src="' + data[k].icon + '" title="' + data[k].type + '" alt="" />';
                    output += formatDate(data[k].created_time) + '</span>';

                    // Likes -------------------------------------------------------------------------------------------------------------------------------
                    if (exists(data[k].likes)) {
                        if (parseInt(data[k].likes.count) == 1) {
                            output += '<div class="fb-wall-likes"><div><span>' + data[k].likes.data[0].name + '</span> ' + o.translateLikesThis + '</div> </div>';
                        } else {
                            output += '<div class="fb-wall-likes"><div><span>' + data[k].likes.count + ' ' + o.translatePeople + '</span> ' + o.translateLikeThis + '</div> </div>';
                        }
                    }

                    // Comments -------------------------------------------------------------------------------------------------------------------------------
                    if (exists(data[k].comments) && exists(data[k].comments.data) && (o.showComments == true || o.showComments == 'true')) {

                        output += '<div class="fb-wall-comments">';
                        for (var c = 0; c < data[k].comments.data.length; c++) {
                            output += '<span class="fb-wall-comment">';
                            output += '<a href="http://www.facebook.com/profile.php?id=' + data[k].comments.data[c].from.id + '" class="fb-wall-comment-avatar" target="_blank">';
                            output += '<img src="' + getAvatarURL(data[k].comments.data[c].from.id) + '" />';
                            output += '</a>';
                            output += '<span class="fb-wall-comment-message">';
                            output += '<a class="fb-wall-comment-from-name" href="http://www.facebook.com/profile.php?id=' + data[k].comments.data[c].from.id + '" target="_blank">' + data[k].comments.data[c].from.name + '</a> ';
                            output += modText(data[k].comments.data[c].message);
                            output += '<span class="fb-wall-comment-from-date">' + formatDate(data[k].comments.data[c].created_time) + '</span>';
                            output += '</span>';
                            output += '</span>';
                        }
                        output += '</div>';
                    }

                    output += '</div>';
                    output += '<div class="fb-wall-clean"></div>';
                    output += '</div>';
                }

                // No data found --------------------------------------------------------------------------------------------
                if (max == 0) {
                    output += '<div class="fb-wall-box-first">';
                    output += '<img class="fb-wall-avatar" src="' + getAvatarURL(baseData.id) + '" />';
                    output += '<div class="fb-wall-data">';
                    output += '<span class="fb-wall-message"><span class="fb-wall-message-from">' + baseData.name + '</span> ' + o.translateErrorNoData + '</span>';
                    output += '</div>';
                    output += '</div>';
                }
                meta.hide().html(output).fadeIn(700);
            }

            /******************************************************************************************************
            * Get Avatar URLs
            ******************************************************************************************************/

            function getAvatarURL(id) {
                var avatarURL;
                if (id == baseData.id) { avatarURL = (o.useAvatarAlternative) ? o.avatarAlternative : graphURL + id + '/picture?type=square'; }
                else { avatarURL = (o.useAvatarExternal) ? o.avatarExternal : graphURL + id + '/picture?type=square'; }
                return avatarURL;
            }

            function getHandlerURL(isBaseData) {
                var _domain = document.domain;
                var _port = ('undefined' == window.location.port ? '' : ":" + window.location.port);
                var _proto = ('https:' == document.location.protocol ? 'https:' : 'http:');
                var _url = _proto + '//' + _domain + _port + '/Services/OAuth/OAuthHandlerService.ashx?feedtype=facebook';
                return _url;
            }

            /******************************************************************************************************
            * Parse dateStr as formatted date
            * @return: if dateStr can't be parsed as Date, return dateStr
            ******************************************************************************************************/

            function formatDate(dateStr) {
                var year, month, day, hour, minute, dateUTC, date, ampm, d, time;
                var iso = (dateStr.indexOf(' ') == -1 && dateStr.substr(4, 1) == '-' && dateStr.substr(7, 1) == '-' && dateStr.substr(10, 1) == 'T') ? true : false;

                if (iso) {
                    year = dateStr.substr(0, 4);
                    month = parseInt((dateStr.substr(5, 1) == '0') ? dateStr.substr(6, 1) : dateStr.substr(5, 2)) - 1;
                    day = dateStr.substr(8, 2);
                    hour = dateStr.substr(11, 2);
                    minute = dateStr.substr(14, 2);
                    dateUTC = Date.UTC(year, month, day, hour, minute);
                    date = new Date(dateUTC);
                } else {
                    d = dateStr.split(' ');
                    if (d.length != 6 || d[4] != 'at')
                        return dateStr;
                    time = d[5].split(':');
                    ampm = time[1].substr(2);
                    minute = time[1].substr(0, 2);
                    hour = parseInt(time[0]);
                    if (ampm == 'pm') hour += 12;
                    date = new Date(d[1] + ' ' + d[2] + ' ' + d[3] + ' ' + hour + ':' + minute);
                    date.setTime(date.getTime() - (1000 * 60 * 60 * 7));
                }
                day = (date.getDate() < 10) ? '0' + date.getDate() : date.getDate();
                month = date.getMonth() + 1;
                month = (month < 10) ? '0' + month : month;
                hour = date.getHours();
                minute = (date.getMinutes() < 10) ? '0' + date.getMinutes() : date.getMinutes();
                if (o.timeConversion == 12) {
                    ampm = (hour < 12) ? 'am' : 'pm';
                    if (hour == 0) hour == 12;
                    else if (hour > 12) hour = hour - 12;
                    if (hour < 10) hour = '0' + hour;
                    return day + '.' + month + '.' + date.getFullYear() + ' at ' + hour + ':' + minute + ' ' + ampm;
                }
                return day + '.' + month + '.' + date.getFullYear() + ' ' + o.translateAt + ' ' + hour + ':' + minute;
            }

            /******************************************************************************************************
            * Helper Function
            ******************************************************************************************************/

            function exists(data) {
                if (!data || data == null || data == 'undefined' || typeof (data) == 'undefined') return false;
                else return true;
            }

            function modText(text) {
                return nl2br(autoLink(escapeTags(text)));
            }

            function escapeTags(str) {
                return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
            }

            function nl2br(str) {
                return str.replace(/(\r\n)|(\n\r)|\r|\n/g, "<br>");
            }

            function autoLink(str) {
                return str.replace(/((http|https|ftp):\/\/[\w?=&.\/-;#~%-]+(?![\w\s?&.\/;#~%"=-]*>))/g, '<a href="$1" target="_blank">$1</a>');
            }

        });
    };

    /******************************************************************************************************
    * Defaults 
    ******************************************************************************************************/

    jQuery.fn.fbWall.defaults = {
        avatarAlternative: 'avatar-alternative.jpg',
        avatarExternal: 'avatar-external.jpg',
        id: 'Pillsbury',
        max: 10,
        showComments: false,
        showGuestEntries: false,
        translateAt: 'at',
        translateLikeThis: 'like this',
        translateLikesThis: 'likes this',
        translateErrorNoData: 'has not shared any information.',
        translatePeople: 'people',
        timeConversion: 24,
        useAvatarAlternative: false,
        useAvatarExternal: false,
        accessToken: ''
    };

})(jQuery);(function ($) {

    $.fn.tweet = function (o) {
        var s = $.extend({
            username: null,                           // [string or array] required unless using the 'query' option; one or more twitter screen names
            list: null,                               // [string]   optional name of list belonging to username
            favorites: false,                         // [boolean]  display the user's favorites instead of his tweets
            query: null,                              // [string]   optional search query
            avatar_size: null,                        // [integer]  height and width of avatar if displayed (48px max)
            count: 3,                                 // [integer]  how many tweets to display?
            fetch: null,                              // [integer]  how many tweets to fetch via the API (set this higher than 'count' if using the 'filter' option)
            page: 1,                                  // [integer]  which page of results to fetch (if count != fetch, you'll get unexpected results)
            retweets: true,                           // [boolean]  whether to fetch (official) retweets (not supported in all display modes)
            intro_text: null,                         // [string]   do you want text BEFORE your your tweets?
            outro_text: null,                         // [string]   do you want text AFTER your tweets?
            join_text: null,                         // [string]   optional text in between date and tweet, try setting to "auto"
            auto_join_text_default: "i said,",        // [string]   auto text for non verb: "i said" bullocks
            auto_join_text_ed: "i",                   // [string]   auto text for past tense: "i" surfed
            auto_join_text_ing: "i am",               // [string]   auto tense for present tense: "i was" surfing
            auto_join_text_reply: "i replied to",     // [string]   auto tense for replies: "i replied to" @someone "with"
            auto_join_text_url: "i was looking at",   // [string]   auto tense for urls: "i was looking at" http:...
            loading_text: null,                       // [string]   optional loading text, displayed while tweets load
            refresh_interval: null,                  // [integer]  optional number of seconds after which to reload tweets
            twitter_url: "twitter.com",               // [string]   custom twitter url, if any (apigee, etc.)
            twitter_api_url: "api.twitter.com",       // [string]   custom twitter api url, if any (apigee, etc.)
            twitter_search_url: "search.twitter.com", // [string]   custom twitter search url, if any (apigee, etc.)
            template: "{avatar}{time}{join}{text}",   // [string or function] template used to construct each tweet <li> - see code for available vars
            comparator: function (tweet1, tweet2) {    // [function] comparator used to sort tweets (see Array.sort)
                return tweet2["tweet_time"] - tweet1["tweet_time"];
            },
            filter: function (tweet) {                 // [function] whether or not to include a particular tweet (be sure to also set 'fetch')
                return true;
            }
        }, o);

        $.fn.extend({
            linkUrl: function () {
                var returning = [];
                var regexp = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi;
                this.each(function () {
                    returning.push(this.replace(regexp,
                                      function (match) {
                                          var url = (/^[a-z]+:/i).test(match) ? match : "http://" + match;
                                          return "<a href=\"" + url + "\">" + match + "</a>";
                                      }));
                });
                return $(returning);
            },
            linkUser: function () {
                var returning = [];
                var regexp = /[\@]+(\w+)/gi;
                this.each(function () {
                    returning.push(this.replace(regexp, "@<a href=\"http://" + s.twitter_url + "/$1\">$1</a>"));
                });
                return $(returning);
            },
            linkHash: function () {
                var returning = [];
                // Support various latin1 (\u00**) and arabic (\u06**) alphanumeric chars
                var regexp = /(?:^| )[\#]+([\w\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff\u0600-\u06ff]+)/gi;
                var usercond = (s.username && s.username.length == 1) ? '&from=' + s.username.join("%2BOR%2B") : '';
                this.each(function () {
                    returning.push(this.replace(regexp, ' <a href="http://' + s.twitter_search_url + '/search?q=&tag=$1&lang=all' + usercond + '">#$1</a>'));
                });
                return $(returning);
            },
            capAwesome: function () {
                var returning = [];
                this.each(function () {
                    returning.push(this.replace(/\b(awesome)\b/gi, '<span class="awesome">$1</span>'));
                });
                return $(returning);
            },
            capEpic: function () {
                var returning = [];
                this.each(function () {
                    returning.push(this.replace(/\b(epic)\b/gi, '<span class="epic">$1</span>'));
                });
                return $(returning);
            },
            makeHeart: function () {
                var returning = [];
                this.each(function () {
                    returning.push(this.replace(/(&lt;)+[3]/gi, "<tt class='heart'>&#x2665;</tt>"));
                });
                return $(returning);
            }
        });

        function parse_date(date_str) {
            // The non-search twitter APIs return inconsistently-formatted dates, which Date.parse
            // cannot handle in IE. We therefore perform the following transformation:
            // "Wed Apr 29 08:53:31 +0000 2009" => "Wed, Apr 29 2009 08:53:31 +0000"
            return Date.parse(date_str.replace(/^([a-z]{3})( [a-z]{3} \d\d?)(.*)( \d{4})$/i, '$1,$2$4$3'));
        }

        function relative_time(date) {
            var relative_to = (arguments.length > 1) ? arguments[1] : new Date();
            var delta = parseInt((relative_to.getTime() - date) / 1000, 10);
            var r = '';
            if (delta < 60) {
                r = delta + ' seconds ago';
            } else if (delta < 120) {
                r = 'a minute ago';
            } else if (delta < (45 * 60)) {
                r = (parseInt(delta / 60, 10)).toString() + ' minutes ago';
            } else if (delta < (2 * 60 * 60)) {
                r = 'an hour ago';
            } else if (delta < (24 * 60 * 60)) {
                r = '' + (parseInt(delta / 3600, 10)).toString() + ' hours ago';
            } else if (delta < (48 * 60 * 60)) {
                r = 'a day ago';
            } else {
                r = (parseInt(delta / 86400, 10)).toString() + ' days ago';
            }
            return 'about ' + r;
        }

        function build_url() {
            return build_handler_url();
        }

        function build_handler_url() {
            var _domain = document.domain;
            var _port = ('undefined' == window.location.port ? '' : ":" + window.location.port);
            var _proto = ('https:' == document.location.protocol ? 'https:' : 'http:');
            var _url = _proto + '//' + _domain + _port + '/Services/OAuth/OAuthHandlerService.ashx?feedtype=twitter'
            return _url;
        }

        return this.each(function (i, widget) {
            var list = $('<div class="clearfix bottomSpacerTen">').appendTo(widget);
            var intro = '<p class="tweet_intro">' + s.intro_text + '</p>';
            var outro = '<p class="tweet_outro">' + s.outro_text + '</p>';
            var loading = $('<p class="loading">' + s.loading_text + '</p>');

            if (s.username && typeof (s.username) == "string") {
                s.username = [s.username];
            }

            var expand_template = function (info) {
                if (typeof s.template === "string") {
                    var result = s.template;
                    for (var key in info) {
                        var val = info[key];
                        result = result.replace(new RegExp('{' + key + '}', 'g'), val === null ? '' : val);
                    }
                    return result;
                } else return s.template(info);
            };

            if (s.loading_text) $(widget).append(loading);
            $(widget).bind("load", function () {
                $.getJSON(build_url(), function (data) {
                    if (s.loading_text) loading.remove();
                    if (data == null) {
                        return false;
                    };
                    if (data == false) {
                        return false;
                    };
                    if (data.error) {
                        return false;
                    };                 
                    if (s.intro_text) list.before(intro);
                    list.empty();

                    var tweets = $.map(data.results || data, function (item) {
                        var join_text = s.join_text;

                        // auto join text based on verb tense and content
                        if (s.join_text == "auto") {
                            //if (item.text.match(/^(@([A-Za-z0-9-_]+)) .*/i)) {
                            //    join_text = s.auto_join_text_reply;
                            //} else if (item.text.match(/(^\w+:\/\/[A-Za-z0-9-_]+\.[A-Za-z0-9-_:%&\?\/.=]+) .*/i)) {
                            //    join_text = s.auto_join_text_url;
                            //} else if (item.text.match(/^((\w+ed)|just) .*/im)) {
                            //    join_text = s.auto_join_text_ed;
                            //} else if (item.text.match(/^(\w*ing) .*/i)) {
                            //    join_text = s.auto_join_text_ing;
                            //} else {
                            //    join_text = s.auto_join_text_default;
                            //}
                            join_text = '';
                        }

                        // Basic building blocks for constructing tweet <li> using a template
                        var screen_name = item.from_user || item.user.screen_name;
                        var source = item.source;
                        var user_url = "http://" + s.twitter_url + "/" + screen_name;
                        var avatar_size = s.avatar_size;
                        var avatar_url = item.profile_image_url || item.user.profile_image_url;
                        var tweet_url = "http://" + s.twitter_url + "/" + screen_name + "/status/" + item.id_str;
                        var retweet = (typeof (item.retweeted_status) != 'undefined');
                        var retweeted_screen_name = retweet ? item.retweeted_status.user.screen_name : null;
                        var tweet_time = parse_date(item.created_at);
                        var tweet_relative_time = relative_time(tweet_time);
                        var tweet_raw_text = retweet ? ('RT @' + retweeted_screen_name + ' ' + item.retweeted_status.text) : item.text; // avoid '...' in long retweets
                        var tweet_text = $([tweet_raw_text]).linkUrl().linkUser().linkHash()[0];

                        // Default spans, and pre-formatted blocks for common layouts
                        var user = '<a class="tweet_user" href="' + user_url + '">' + screen_name + '</a>';
                        var join = '';
                        var avatar = (avatar_size ?
                          ('<div class="leftMargined image_avatar"><a href="' + user_url + '"><img src="' + avatar_url +
                           '" alt="' + screen_name + '\'s avatar" title="' + screen_name + '\'s avatar" border="0"/></a></div>') : '');
                        var time = '<div class="left post_info"><a href="' + user_url + '"><p class="bold">' + screen_name + '</p></a><p class="data">' + $([tweet_text]).makeHeart().capAwesome().capEpic()[0] + '</p>';
                        var text = '<p class="data">' + tweet_relative_time + '</p></div>';
                        var reply_url = "http://" + s.twitter_url + "/intent/tweet?in_reply_to=" + item.id_str;
                        var retweet_url = "http://" + s.twitter_url + "/intent/retweet?tweet_id=" + item.id_str;
                        var favorite_url = "http://" + s.twitter_url + "/intent/favorite?tweet_id=" + item.id_str;
                        var reply_action = '<a class="tweet_action tweet_reply" href="' + reply_url + '">reply</a>';
                        var retweet_action = '<a class="tweet_action tweet_retweet" href="' + retweet_url + '">retweet</a>';
                        var favorite_action = '<a class="tweet_action tweet_favorite" href="' + favorite_url + '">favorite</a>';

                        return { item: item, // For advanced users who want to dig out other info
                            screen_name: screen_name,
                            user_url: user_url,
                            avatar_size: avatar_size,
                            avatar_url: avatar_url,
                            source: source,
                            tweet_url: tweet_url,
                            tweet_time: tweet_time,
                            tweet_relative_time: tweet_relative_time,
                            tweet_raw_text: tweet_raw_text,
                            tweet_text: tweet_text,
                            retweet: retweet,
                            retweeted_screen_name: retweeted_screen_name,
                            user: user,
                            join: join,
                            avatar: avatar,
                            time: time,
                            text: text,
                            reply_url: reply_url,
                            favorite_url: favorite_url,
                            retweet_url: retweet_url,
                            reply_action: reply_action,
                            favorite_action: favorite_action,
                            retweet_action: retweet_action
                        };
                    });

                    tweets = $.grep(tweets, s.filter).sort(s.comparator).slice(0, s.count);
                    list.append($.map(tweets,
                            function (t) { return "<div class='clearfix bottomSpacerTen'>" + expand_template(t) + "</div>"; }).join(''));
                    //children('li:first').addClass('tweet_first').end().
                    //children('li:odd').addClass('tweet_even').end().
                    //children('li:even').addClass('tweet_odd');

                    if (s.outro_text) list.after(outro);
                    $(widget).trigger("loaded").trigger((tweets.length === 0 ? "empty" : "full"));
                    if (s.refresh_interval) {
                        window.setTimeout(function () { $(widget).trigger("load"); }, 1000 * s.refresh_interval);
                    }
                });
            }).trigger("load");
        });
    };
})(jQuery);

(function ($) {

    $.fn.renderFeeds = function (objOptions) {

        var GLBVAR = $.extend({
            USERNAME: null,
            MAXPOSTS: 3
        }, objOptions);


        //  setTimeout(function () {
        //   $('#PBFacebookFeeds').removeClass("loading");
        //   $('#PBTwitterFeeds').removeClass("loading");

        //            //Facebook feeds
        //            $('#PBFacebookFeeds').fbWall({ id: GLBVAR.USERNAME,
        //                accessToken: 'XXXXXXXXXXXXXXXXXXXXXXXX',
        //                showGuestEntries: false,
        //                showComments: false,
        //                max: GLBVAR.MAXPOSTS,
        //                timeConversion: 24
        //            });

        //Twitter feeds
        //            $("#PBTwitterFeeds").tweet({
        //                username: GLBVAR.USERNAME,
        //                count: GLBVAR.MAXPOSTS,
        //                join_text: "auto",
        //                avatar_size: 32,
        //                auto_join_text_default: "we said,",
        //                auto_join_text_ed: "we",
        //                auto_join_text_ing: "we were",
        //                auto_join_text_reply: "we replied to",
        //                auto_join_text_url: "we were checking out",
        //                loading_text: " "
        //            });
        //}, displayLoading());

        $('#lnkPBCommunityFeeds').click(function () {

            $("#PBCommunityFeeds").css("display", "block");
            $("#PBFacebookFeeds").css("display", "none");
            $("#PBTwitterFeeds").css("display", "none");

            $('#lnkPBCommunityFeeds').addClass("activeText");
            $('#lnkPBFacebookFeeds').removeClass("activeText");
            $('#lnkPBTwitterFeeds').removeClass("activeText");

            if (!nonUserClick) {
                ntptEventTag('ev=Socialnetworkfeeds_PB_bt&ActionType=Other');
            }
            else { nonUserClick = false; }

        });

        $('#lnkPBFacebookFeeds').click(function () {
            ntptEventTag('ev=Socialnetworkfeeds_facebook_bt&ActionType=Other');

            $("#PBCommunityFeeds").css("display", "none");
            $("#PBFacebookFeeds").css("display", "block");
            $("#PBTwitterFeeds").css("display", "none");

            $('#lnkPBCommunityFeeds').removeClass("activeText");
            $('#lnkPBFacebookFeeds').addClass("activeText");
            $('#lnkPBTwitterFeeds').removeClass("activeText");

            var fbLength = $('#PBFacebookFeeds').html();
            if (fbLength.length == 0) {
                $('#PBFacebookFeeds').addClass("loading");

                setTimeout(function () {
                    //Facebook feeds
                    $('#PBFacebookFeeds').fbWall({ id: GLBVAR.USERNAME,
                        accessToken: 'XXXXXXXXXXXXXXXXXXXXXXXX',
                        showGuestEntries: false,
                        showComments: false,
                        max: GLBVAR.MAXPOSTS,
                        timeConversion: 24
                    });
                }, displayLoading());
            }
            $('#PBFacebookFeeds').removeClass("loading");
        });

        $('#lnkPBTwitterFeeds').click(function () {
            ntptEventTag('ev=Socialnetworkfeeds_twitter_bt&ActionType=Other');
            $("#PBCommunityFeeds").css("display", "none");
            $("#PBFacebookFeeds").css("display", "none");
            $("#PBTwitterFeeds").css("display", "block");

            $('#lnkPBCommunityFeeds').removeClass("activeText");
            $('#lnkPBFacebookFeeds').removeClass("activeText");
            $('#lnkPBTwitterFeeds').addClass("activeText");

            var twLength = $('#PBTwitterFeeds').html();
            if (twLength.length == 0) {
                $('#PBTwitterFeeds').addClass("loading")

                setTimeout(function () {
                    //Twitter feeds
                    $("#PBTwitterFeeds").tweet({
                        username: GLBVAR.USERNAME,
                        count: GLBVAR.MAXPOSTS,
                        join_text: "auto",
                        avatar_size: 32,
                        auto_join_text_default: "we said,",
                        auto_join_text_ed: "we",
                        auto_join_text_ing: "we were",
                        auto_join_text_reply: "we replied to",
                        auto_join_text_url: "we were checking out",
                        loading_text: " "
                    });
                }, displayLoading());
            }
            $('#PBTwitterFeeds').removeClass("loading");
        });

        //        $("#PBCommunityFeeds").css("display", "block");
        //        $("#PBFacebookFeeds").css("display", "none");
        //        $("#PBTwitterFeeds").css("display", "none");
    };



    function displayLoading() {
        //  $('#PBFacebookFeeds').addClass("loading");
        // $('#PBTwitterFeeds').addClass("loading");
        return 1000;
    }

    $(function () {
        $('#CommunitySocialRecent').renderFeeds({
            USERNAME: 'Pillsbury',
            MAXPOSTS: 10
        });
    });

})(jQuery);

//End of File
//**--**




var ProfileLogin = function (options) {
    jQuery('#LoginLink').click(authenticate);
    jQuery('#SignUpLink').click(innerJoinNowClick);
    jQuery('#EmailInput').focus();

    if (options.loginContainerSelector != null) {
        jQuery(options.loginContainerSelector).keydown(function (event) {
            if (event.which == 13) {
                event.preventDefault();
                jQuery('#LoginLink').click();
            }
        });
    }

    function authenticate() {
        var serviceInput = JSON.stringify({ data: { Email: jQuery('#EmailInput').val()
            , Password: jQuery('#PasswordInput').val()
            , RememberMe: jQuery('#RememberMeInput').attr('checked')
        }
        });

        jQuery.ajax({
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            url: '/Services/Profile/ProfileService.asmx/Authenticate',
            data: serviceInput,
            dataType: 'json',
            success: authenticateResult
        });
    }

    function innerJoinNowClick() {
        var isParentSecure;
        try {
            isParentSecure = window.parent.document.URL.indexOf('https:' > -1);
        } catch (e) {
            isParentSecure = false;
        }
        if (options.nonSecureRedirectUrl.indexOf('https:') > -1 && !isParentSecure) {
            document.location.href = 'http:' + options.nonSecureRedirectUrl.substring(options.nonSecureRedirectUrl.indexOf(":") + 1, options.nonSecureRedirectUrl.length) + '&action=joinNowClick';
        }
        else {
            document.location.href = options.nonSecureRedirectUrl + '&action=joinNowClick';
        }

    }

    function innerCloseLogin() {
        var isParentSecure;
        try {
            isParentSecure = window.parent.document.URL.indexOf('https:' > -1);
        } catch (e) {
            isParentSecure = false;
        }
        if (options.nonSecureRedirectUrl.indexOf('https:') > -1 && !isParentSecure) {
            document.location.href = 'http:' + options.nonSecureRedirectUrl.substring(options.nonSecureRedirectUrl.indexOf(":") + 1, options.nonSecureRedirectUrl.length) + '&action=closeLogin';
        }
        else {
            document.location.href = options.nonSecureRedirectUrl + '&action=closeLogin';
        }
        //document.location.href = options.nonSecureRedirectUrl + '&action=closeLogin';
    }
    function inlineCloseLogin() {
        document.location.href = options.nonSecureRedirectUrl + '&action=closeInlineLogin';
    }
    function inlineCloseRegister() {
        document.location.href = options.nonSecureRedirectUrl + '&action=closeInlineRegister';
    }
    function authenticateResult(msg) {

        if (msg.d.Result.IsValid) {
            //   ntptEventTag('ev=member_login_bt');
            if (typeof options.nonSecureRedirectUrl === 'undefined') {
                if (typeof options.modelessReturnUrl === 'undefined') {
                    document.location.href = '/'; // home
                }
                else {
                    document.location.href = options.modelessReturnUrl;
                }
            }
            else if (options.inlineLogin != null) {
                inlineCloseLogin();
            }
            else {
                innerCloseLogin();
            }
        }
        else {
            jQuery('#EmailInputError').hide();
            jQuery('#PasswordInputError').hide();

            if (typeof msg.d.Result.Messages[options.accessDeniedMessageId] === 'undefined') {
                setProfileError('EmailInputError', options.emailProfileFieldId, msg.d.Result);
                setProfileError('PasswordInputError', options.passwordProfileFieldId, msg.d.Result);
                jQuery('#LoginFailed').hide();
            }
            else {
                jQuery('#LoginFailed').show();
            }
        }
    }
};

function setProfileError(elementId, errorId, result) {
    if (typeof result.Messages[errorId] === 'undefined') {
        jQuery('#' + elementId).hide();
    }
    else {
        jQuery('#' + elementId).text(result.Messages[errorId]);
        jQuery('#' + elementId).show();
    }
}


function openDialog(dialogId) {
    var dialog = jQuery('#' + dialogId).dialog("open");
    jQuery('.ui-dialog').css('z-index', 99999);
    jQuery('.ui-widget-overlay').css('z-index', 99998);
}

function closeDialog(dialogId, clearFormFields) {
    jQuery('#' + dialogId).dialog("close");
    if (clearFormFields) {
        jQuery('#' + dialogId + ' input').val("");
        jQuery('#' + dialogId + ' textarea').val("");
    }
}
function applyUrlOptions(baseUrl, isSsl, options) {
    var url = isSsl ? '?ssl=1' : '?ssl=0';
    if (!(typeof options.esrc === 'undefined'))
        url = url + '&ESRC=' + options.esrc;
    if (!(typeof options.returnUrl === 'undefined'))
        url = url + '&returnUrl=' + escape(options.returnUrl);

    return baseUrl + url;
}

function setLocationFromOptions(options) {
    if (typeof options === 'undefined')
        options = {};
    if (typeof options.returnUrl === 'undefined')
        document.location.reload();
    else
        document.location.href = options.returnUrl;
}
function autoOpenFixForASPNet(dialogId) {
    jQuery(document).ready(function () {
        jQuery('#' + dialogId).parent().appendTo(jQuery("form:first"));
    });
}
function autoOpenFixForASPNetVariable(dialogId) {
    jQuery(document).ready(function () {
        jQuery('#' + dialogId).parent().appendTo(jQuery("form:first"));
        jQuery('.VariableWidth').css("overflow", "visible").addClass("VariableWidth-ui-dialog");
    });
}




/* End of File */


/*
 * jQuery Address Plugin v1.3.1
 * http://www.asual.com/jquery/address/
 *
 * Copyright (c) 2009-2010 Rostislav Hristov
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Date: 2010-11-29 11:54:20 +0200 (Mon, 29 Nov 2010)
 */
(function(c){c.address=function(){var y=function(a){c(c.address).trigger(c.extend(c.Event(a),function(){for(var b={},e=c.address.parameterNames(),h=0,q=e.length;h<q;h++)b[e[h]]=c.address.parameter(e[h]);return{value:c.address.value(),path:c.address.path(),pathNames:c.address.pathNames(),parameterNames:e,parameters:b,queryString:c.address.queryString()}}.call(c.address)))},z=function(a,b,e){c(c.address).bind(a,b,e);return c.address},B=function(){return A.pushState&&d.state!==i},K=function(){return("/"+
g.pathname.replace(new RegExp(d.state),"")+g.search+(J()?"#"+J():"")).replace(ba,"/")},J=function(){var a=g.href.indexOf("#");return a!=-1?C(g.href.substr(a+1),l):""},v=function(){return B()?K():J()},ua=function(){return"javascript"},s=function(a){a=a.toString();return(d.strict&&a.substr(0,1)!="/"?"/":"")+a},C=function(a,b){if(d.crawlable&&b)return(a!=""?"!":"")+a;return a.replace(/^\!/,"")},D=function(a,b){return parseInt(a.css(b),10)},ca=function(a){for(var b,e,h=0,q=a.childNodes.length;h<q;h++){if(a.childNodes[h].src)b=
String(a.childNodes[h].src);if(e=ca(a.childNodes[h]))b=e}return b},O=function(){if(!T){var a=v(),b=f!=a;if(E&&p<523){if(L!=A.length){L=A.length;if(I[L-1]!==i)f=I[L-1];M(l)}}else if(b)if(F&&p<7)g.reload();else{F&&p<8&&d.history&&w(W,50);f=a;M(l)}}},M=function(a){y(da);y(a?ea:fa);w(ga,10)},ga=function(){if(d.tracker!=="null"&&d.tracker!==null){var a=c.isFunction(d.tracker)?d.tracker:k[d.tracker],b=(g.pathname+g.search+(c.address&&!B()?c.address.value():"")).replace(/\/\//,"/").replace(/^\/$/,"");if(c.isFunction(a))a(b);
else if(c.isFunction(k.urchinTracker))k.urchinTracker(b);else if(k.pageTracker!==i&&c.isFunction(k.pageTracker._trackPageview))k.pageTracker._trackPageview(b);else k._gaq!==i&&c.isFunction(k._gaq.push)&&k._gaq.push(["_trackPageview",b])}},W=function(){var a=ua()+":"+l+";document.open();document.writeln('<html><head><title>"+n.title.replace("'","\\'")+"</title><script>var "+r+' = "'+encodeURIComponent(v())+(n.domain!=g.host?'";document.domain="'+n.domain:"")+"\";<\/script></head></html>');document.close();";
if(p<7)o.src=a;else o.contentWindow.location.replace(a)},ia=function(){if(P&&ha!=-1){var a,b=P.substr(ha+1).split("&");for(u=0;u<b.length;u++){a=b[u].split("=");if(/^(autoUpdate|crawlable|history|strict|wrap)$/.test(a[0]))d[a[0]]=isNaN(a[1])?/^(true|yes)$/i.test(a[1]):parseInt(a[1],10)!==0;if(/^(state|tracker)$/.test(a[0]))d[a[0]]=a[1]}P=null}f=v()},ka=function(){if(!ja){ja=m;ia();var a=function(){va.call(this);wa.call(this)},b=c("body").ajaxComplete(a);a();if(d.wrap){c("body > *").wrapAll('<div style="padding:'+
(D(b,"marginTop")+D(b,"paddingTop"))+"px "+(D(b,"marginRight")+D(b,"paddingRight"))+"px "+(D(b,"marginBottom")+D(b,"paddingBottom"))+"px "+(D(b,"marginLeft")+D(b,"paddingLeft"))+'px;" />').parent().wrap('<div id="'+r+'" style="height:100%;overflow:auto;position:relative;'+(E?window.statusbar.visible&&!/chrome/i.test(X)?"":"resize:both;":"")+'" />');c("html, body").css({height:"100%",margin:0,padding:0,overflow:"hidden"});E&&c('<style type="text/css" />').appendTo("head").text("#"+r+"::-webkit-resizer { background-color: #fff; }")}if(F&&
p<8){a=n.getElementsByTagName("frameset")[0];o=n.createElement((a?"":"i")+"frame");if(a){a.insertAdjacentElement("beforeEnd",o);a[a.cols?"cols":"rows"]+=",0";o.noResize=m;o.frameBorder=o.frameSpacing=0}else{o.style.display="none";o.style.width=o.style.height=0;o.tabIndex=-1;n.body.insertAdjacentElement("afterBegin",o)}w(function(){c(o).bind("load",function(){var e=o.contentWindow;f=e[r]!==i?e[r]:"";if(f!=v()){M(l);g.hash=C(f,m)}});o.contentWindow[r]===i&&W()},50)}else if(E){if(p<418){c(n.body).append('<form id="'+
r+'" style="position:absolute;top:-9999px;" method="get"></form>');Y=n.getElementById(r)}if(g[r]===i)g[r]={};if(g[r][g.pathname]!==i)I=g[r][g.pathname].split(",")}w(function(){y("init");M(l)},1);if(!B())if(F&&p>7||!F&&"on"+Q in k)if(k.addEventListener)k.addEventListener(Q,O,l);else k.attachEvent&&k.attachEvent("on"+Q,O);else xa(O,50)}},va=function(){var a,b=c("a"),e=b.size(),h=-1;w(function(){if(++h!=e){a=c(b.get(h));a.is("[rel*=address:]")&&a.address();w(arguments.callee,1)}},1)},ya=function(){if(f!=
v()){f=v();M(l)}},za=function(){if(k.removeEventListener)k.removeEventListener(Q,O,l);else k.detachEvent&&k.detachEvent("on"+Q,O)},wa=function(){if(d.crawlable){var a=g.pathname.replace(/\/$/,"");c("body").html().indexOf("_escaped_fragment_")!=-1&&c("a[href]:not([href^=http]), , a[href*="+document.domain+"]").each(function(){var b=c(this).attr("href").replace(/^http:/,"").replace(new RegExp(a+"/?$"),"");if(b==""||b.indexOf("_escaped_fragment_")!=-1)c(this).attr("href","#"+c.address.decode(b.replace(/\/(.*)\?_escaped_fragment_=(.*)$/,
"!$2")))})}},G=function(a){return la(ma(a)).replace(/%20/g,"+")},na=function(a){return a.split("#")[0].split("?")[0]},oa=function(a){a=na(a);var b=a.replace(ba,"/").split("/");if(a.substr(0,1)=="/"||a.length===0)b.splice(0,1);a.substr(a.length-1,1)=="/"&&b.splice(b.length-1,1);return b},R=function(a){a=a.split("?");return a.slice(1,a.length).join("?").split("#")[0]},pa=function(a,b){if(b=R(b)){params=b.split("&");b=[];for(u=0;u<params.length;u++){var e=params[u].split("=");if(e[0]==a||c.address.decode(e[0])==
a)b.push(e.slice(1).join("="))}if(b.length!==0)return b.length!=1?b:b[0]}},qa=function(a){var b=R(a);a=[];if(b&&b.indexOf("=")!=-1){b=b.split("&");for(var e=0;e<b.length;e++){var h=b[e].split("=")[0];c.inArray(h,a)==-1&&a.push(h)}}return a},U=function(a){a=a.split("#");return a.slice(1,a.length).join("#")},i,r="jQueryAddress",Q="hashchange",da="change",ea="internalChange",fa="externalChange",m=true,l=false,d={autoUpdate:m,crawlable:l,history:m,strict:m,wrap:l},t=c.browser,p=parseFloat(c.browser.version),
ra=t.mozilla,F=t.msie,sa=t.opera,E=t.webkit||t.safari,Z=l,k=function(){try{return top.document!==i?top:window}catch(a){return window}}(),n=k.document,A=k.history,g=k.location,xa=setInterval,w=setTimeout,la=encodeURIComponent,ma=decodeURIComponent,ba=/\/{2,9}/g,X=navigator.userAgent,o,Y,P=ca(document),ha=P?P.indexOf("?"):-1,$=n.title,L=A.length,T=l,ja=l,aa=m,ta=m,V=l,I=[],f=v();if(F){p=parseFloat(X.substr(X.indexOf("MSIE")+4));if(n.documentMode&&n.documentMode!=p)p=n.documentMode!=8?7:8;c(document).bind("propertychange",
function(){if(n.title!=$&&n.title.indexOf("#"+v())!=-1)n.title=$})}if(Z=ra&&p>=1||F&&p>=6||sa&&p>=9.5||E&&p>=312){for(var u=1;u<L;u++)I.push("");I.push(f);if(sa)history.navigationMode="compatible";if(document.readyState=="complete")var Aa=setInterval(function(){if(c.address){ka();clearInterval(Aa)}},50);else{ia();c(ka)}t=K();if(d.state!==i)if(A.pushState)t.substr(0,3)=="/#/"&&g.replace(d.state.replace(/^\/$/,"")+t.substr(2));else t!="/"&&t.replace(/^\/#/,"")!=J()&&g.replace(d.state.replace(/^\/$/,
"")+"/#"+t);c(window).bind("popstate",ya).bind("unload",za)}else!Z&&J()!=""||E&&p<418&&J()!=""&&g.search!=""?g.replace(g.href.substr(0,g.href.indexOf("#"))):ga();return{bind:function(a,b,e){return z(a,b,e)},init:function(a){return z("init",a)},change:function(a){return z(da,a)},internalChange:function(a){return z(ea,a)},externalChange:function(a){return z(fa,a)},baseURL:function(){var a=g.href;if(a.indexOf("#")!=-1)a=a.substr(0,a.indexOf("#"));if(/\/$/.test(a))a=a.substr(0,a.length-1);return a},autoUpdate:function(a){if(a!==
i){d.autoUpdate=a;return this}return d.autoUpdate},crawlable:function(a){if(a!==i){d.crawlable=a;return this}return d.crawlable},history:function(a){if(a!==i){d.history=a;return this}return d.history},state:function(a){if(a!==i){d.state=a;return this}return d.state},strict:function(a){if(a!==i){d.strict=a;return this}return d.strict},tracker:function(a){if(a!==i){d.tracker=a;return this}return d.tracker},wrap:function(a){if(a!==i){d.wrap=a;return this}return d.wrap},update:function(){V=m;this.value(f);
V=l;return this},encode:function(a){var b=oa(a),e=qa(a),h=R(a),q=U(a),H=a.substr(0,1),N=a.substr(a.length-1),j="";c.each(b,function(x,S){j+="/"+G(S)});if(h!==""){j+="?";if(e.length===0)j+=h;else{c.each(e,function(x,S){x=pa(S,a);if(typeof x!=="string")c.each(x,function(Ca,Ba){j+=G(S)+"="+G(Ba)+"&"});else j+=G(S)+"="+G(x)+"&"});j=j.substr(0,j.length-1)}}if(q!=="")j+="#"+G(q);if(H!="/"&&j.substr(0,1)=="/")j=j.substr(1);if(H=="/"&&j.substr(0,1)!="/")j="/"+j;if(/#|&|\?/.test(N))j+=N;return j},decode:function(a){if(a!==
i){var b=[],e=function(H){return ma(H.toString().replace(/\+/g,"%20"))};if(typeof a=="object"&&a.length!==i){for(var h=0,q=a.length;h<q;h++)b[h]=e(a[h]);return b}else return e(a)}},title:function(a){if(a!==i){w(function(){$=n.title=a;if(ta&&o&&o.contentWindow&&o.contentWindow.document){o.contentWindow.document.title=a;ta=l}if(!aa&&ra)g.replace(g.href.indexOf("#")!=-1?g.href:g.href+"#");aa=l},50);return this}return n.title},value:function(a){if(a!==i){a=this.encode(s(a));if(a=="/")a="";if(f==a&&!V)return;
aa=m;f=a;if(d.autoUpdate||V){M(m);if(B())A[d.history?"pushState":"replaceState"]({},"",d.state.replace(/\/$/,"")+(f==""?"/":f));else{T=m;I[A.length]=f;if(E)if(d.history){g[r][g.pathname]=I.toString();L=A.length+1;if(p<418){if(g.search==""){Y.action="#"+C(f,m);Y.submit()}}else if(p<523||f==""){a=n.createEvent("MouseEvents");a.initEvent("click",m,m);var b=n.createElement("a");b.href="#"+C(f,m);b.dispatchEvent(a)}else g.hash="#"+C(f,m)}else g.replace("#"+C(f,m));else if(f!=v())if(d.history)g.hash="#"+
C(f,m);else g.replace("#"+C(f,m));F&&p<8&&d.history&&w(W,50);if(E)w(function(){T=l},1);else T=l}}return this}if(!Z)return null;return this.decode(s(f))},path:function(a){if(a!==i){var b=R(s(f)),e=U(s(f));this.value(a+(b?"?"+b:"")+(e?"#"+e:""));return this}return this.decode(na(s(f)))},pathNames:function(){return this.decode(oa(s(f)))},queryString:function(a){if(a!==i){var b=U(s(f));this.value(this.path()+(a?"?"+a:"")+(b?"#"+b:""));return this}return this.decode(R(s(f)))},parameter:function(a,b,e){var h,
q;if(b!==i){var H=this.parameterNames();q=[];b=b?la(b):"";for(h=0;h<H.length;h++){var N=H[h],j=this.parameter(N);if(typeof j=="string")j=[j];if(N==a)j=b===null||b===""?[]:e?j.concat([b]):[b];for(var x=0;x<j.length;x++)q.push(N+"="+G(j[x]))}c.inArray(a,H)==-1&&b!==null&&b!==""&&q.push(a+"="+G(b));this.queryString(q.join("&"));return this}return this.decode(pa(a,s(f)))},parameterNames:function(){return this.decode(qa(s(f)))},hash:function(a){if(a!==i){this.value(s(f).split("#")[0]+(a?"#"+a:""));return this}return this.decode(U(s(f)))}}}();
c.fn.address=function(y){if(!c(this).attr("address")){var z=function(B){if(c(this).is("a")){var K=y?y.call(this):/address:/.test(c(this).attr("rel"))?c(this).attr("rel").split("address:")[1].split(" ")[0]:c.address.state()!==undefined&&c.address.state()!="/"?c(this).attr("href").replace(new RegExp("^(.*"+c.address.state()+"|\\.)"),""):c(this).attr("href").replace(/^(#\!?|\.)/,"");c.address.value(K);B.preventDefault()}};c(this).click(z).live("click",z).submit(function(B){if(c(this).is("form")){var K=
y?y.call(this):c(this).attr("action")+"?"+c.address.decode(c(this).serialize());c.address.value(K);B.preventDefault()}}).attr("address",true)}return this}})(jQuery);
