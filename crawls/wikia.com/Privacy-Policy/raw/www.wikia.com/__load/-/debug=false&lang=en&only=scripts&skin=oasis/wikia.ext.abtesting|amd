Wikia.AbTestConfig={"experiments":{"TESTGA":{"id":9,"name":"TESTGA","versions":[{"startTime":1361930400,"endTime":1362614400,"gaSlot":"49","flags":{"ga_tracking":1,"dw_tracking":0,"forced_ga_tracking_on_load":0},"groups":{"A01":{"id":21,"name":"A01","ranges":[{"min":0,"max":2}]},"B02":{"id":22,"name":"B02","ranges":[{"min":3,"max":5}]},"C05":{"id":23,"name":"C05","ranges":[{"min":6,"max":8}]},"D10":{"id":24,"name":"D10","ranges":[{"min":9,"max":11}]},"E20":{"id":25,"name":"E20","ranges":[{"min":12,"max":14}]},"F50":{"id":26,"name":"F50","ranges":[{"min":15,"max":17}]},"X1":{"id":27,"name":"X1","ranges":[{"min":20,"max":29}]},"X2":{"id":28,"name":"X2","ranges":[{"min":30,"max":39}]},"X3":{"id":29,"name":"X3","ranges":[{"min":40,"max":49}]},"Y1":{"id":30,"name":"Y1","ranges":[{"min":50,"max":69}]},"Y2":{"id":31,"name":"Y2","ranges":[{"min":70,"max":89}]}}}]}}};;(function(context){'use strict';if(context.define){throw'define is already defined in the global scope, cannot continue';}if(
context.require){throw'require is already defined in the global scope, cannot continue';}var mocks={},modules={},definitions={},processing={},arrType=Array,funcType=Function,strType='string',yes=true,nil=null,define,require;function process(id,reqId,optional){var module=modules[id],mock=mocks[id],pid=processing[reqId],dependencies,chain='',x,y,p,moduleDependencies,dependency;if(module){return mock?override(module,mock):module;}if(!pid){pid={length:0};}else if(pid[id]){for(p in pid){if(pid.hasOwnProperty(p)&&p!=='length'){chain+=p+'->';}}throw'circular dependency: '+chain+id;}pid[id]=yes;pid.length+=1;processing[reqId]=pid;module=definitions[id];if(module&&module.def){dependencies=[];if(module.dep instanceof arrType){moduleDependencies=module.dep;for(x=0,y=moduleDependencies.length;x<y;x+=1){dependency=moduleDependencies[x];dependencies[x]=process(dependency.toString(),reqId,dependency instanceof OptionalModule);}}modules[id]=module=module.def.apply(context,dependencies);}else if(!
optional){throw'Module '+id+' is not defined.';}delete definitions[id];delete pid[id];pid.length-=1;if(!pid.length){delete processing[reqId];}return mock?override(module,mock):module;}define=function(id,dependencies,definition,defMock){if(typeof id!==strType){throw"Module id missing or not a string.";}if(!definition&&dependencies){definition=dependencies;dependencies=nil;}if(!definition){throw"Module "+id+" is missing a definition.";}else if(definition instanceof funcType){if(dependencies===nil||dependencies instanceof arrType){if(defMock){mocks[id]=definition();}else{definitions[id]={def:definition,dep:dependencies};}}else{throw'Invalid dependencies for module '+id;}}else{(defMock?mocks:modules)[id]=definition;}};define.mock=function(id,definition){define(id,nil,definition,yes);};define.amd={jQuery:yes};require=function(ids,callback,errHandler){if(ids instanceof arrType&&callback instanceof funcType){setTimeout(function(){try{var reqId=Math.random(),m=[],x,y;for(x=0,y=ids.length;x<y;x
+=1){var module=ids[x];m[x]=process(module.toString(),reqId,module instanceof OptionalModule);}callback.apply(context,m);}catch(err){if(errHandler instanceof funcType){errHandler.call(context,err);}else{throw err;}}},0);}else{throw'Invalid require call - ids: '+JSON.stringify(ids);}};var OptionalModule=function(id){this.id=id;};OptionalModule.prototype.toString=function(){return this.id;};require.optional=function(id){return new OptionalModule(id);};function override(module,mock){for(var p in mock){if(mock.hasOwnProperty(p)&&module.hasOwnProperty(p))module[p]=mock[p];}return module;}context.require=require;context.define=define;}(this));;mw.loader.state({"wikia.ext.abtesting":"ready","amd":"ready"});

/* cache key: wikiaglobal:resourceloader:filter:minify-js:7:f86ed4e93835d71281bd5e145662a863 */