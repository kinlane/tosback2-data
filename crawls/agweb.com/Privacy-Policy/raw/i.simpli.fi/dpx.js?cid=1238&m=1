(function(win) {

    var hostname_as_int = parseInt(location.hostname || "local", 36);

    if (typeof win['dpx_'+hostname_as_int] != 'undefined') {
        win['dpx_'+hostname_as_int].run();
        return;
    }

    var dpx = {
        sifi_pixel_url: '//i.simpli.fi/dpx?',
        pixels_url: 'http://i.simpli.fi/p?',
        pixels: [],
        matching_pixels: [],
        protocol: (location.protocol == 'https:') ? 'https:' : "http:",
        pixels_to_drop: [],
        dropping_pixels: false,
        rescue_pixel: null,

        get_matching_pixels: function() {
            var script = document.createElement('script');
            script.src = dpx.pixels_url + 'cb=dpx_' + hostname_as_int + '._hp';
            document.body.appendChild(script);
        },

        _hp: function(pixels) {
            dpx.matching_pixels = pixels && pixels['pixels'] || [];
            dpx._drop_matching_pixels();
        },

        drop_pixels: function() {
            var sifi_pixels = dpx.get_pixels();
            for (var i = sifi_pixels.length-1; i >= 0; i--) {
                dpx.drop_sifi_pixel(sifi_pixels[i]);
            }
            if (dpx.does_allow_matching() && !dpx.already_dropped_matching) {
                dpx.get_matching_pixels();
            }
        },

        _drop_matching_pixels: function() {
            if (dpx.does_allow_matching() && !dpx.already_dropped_matching) {
                for (var i = dpx.matching_pixels.length-1; i >= 0; i--) {
                    dpx.pixels_to_drop.push(dpx.matching_pixels[i]);
                }
                dpx.already_dropped_matching = true;
            }
            if (!dpx.dropping_pixels) dpx._next_pixel();
            dpx.dropping_pixels = true;
        },

        get_pixels: function() {
            var nodes = document.scripts || document.getElementsByTagName('script'),
                pixels = [];
            for (var i = nodes.length-1; i >= 0; i--) {
                var node = nodes[i],
                    src = node.src || '';
                if (src.indexOf('/dpx.js') > 0 && !node.getAttribute('data-sifi-parsed')) {
                    node.setAttribute('data-sifi-parsed', true);
                    var params = dpx.get_query_string(src);
                    pixels.push(params);
                    dpx.pixels.push(params);
                }
            }
            return pixels;
        },

        get_query_string: function(src) {
            var str = src.substr(src.indexOf('dpx.js?')+7);
            return str;
        },

        drop_sifi_pixel: function(params) {
            params += "&cbri=" + Math.floor(Math.random()*(new Date().getTime()));
            params += "&referrer=" + escape(document.referrer);
            dpx.pixels_to_drop.push(dpx.sifi_pixel_url + params);
        },

        _next_pixel: function() {
            if (dpx.pixels_to_drop.length == 0) return;
            var src = dpx.pixels_to_drop.shift(),
                img = new Image();
            img.onload = img.onerror = function() {
              dpx.rescue_pixel = null;
              dpx._next_pixel();
            };
            img.src = dpx.protocol + src;

            dpx.rescue_pixel = setTimeout(function() {
              img.onload = img.onerror = null;
              dpx._next_pixel();
            },1000);
        },

        does_allow_matching: function() {
            if (typeof dpx.allow_matching != 'undefined') return dpx.allow_matching;

            if (dpx.protocol == 'https:') {
                dpx.allow_matching = false;
                return false;
            }

            for (var i = dpx.pixels.length-1; i >= 0; i--) {
                var params = dpx.pixels[i];
                if (params.indexOf('m=0') > 0) {
                    dpx.allow_matching = false;
                    return false;
                }
            }

            dpx.allow_matching = true;
            return true;
        },

        run: function() {
            if (!document.body) {
                setTimeout(function() { dpx.run(); }, 13);
            } else {
                dpx.drop_pixels();
            }
        }
    };

    win['dpx_'+hostname_as_int] = dpx;

    dpx.run();

})(window);
