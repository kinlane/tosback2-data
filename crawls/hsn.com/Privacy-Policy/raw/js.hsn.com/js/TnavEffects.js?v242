// JScript File

//this file will register the events for Tnav.ascx

var tvShowMenuTimer; // Delay opening the TV menu
var tvHideMenuTimer; // Delay closing the TV menu
var tvShowing = false; // Is the TV menu about to open?
var tvHiding = false; // Is the TV menu about to close?
var isFirefox;
//var currentNavCellId;
var currentShowTimer;
var currentHideTimer;
var currentVisibleMenu;
var flyoutShownArray;
var homeUrl = "";

if (navigator.userAgent.indexOf("Firefox") != -1) {
    var versionindex = navigator.userAgent.indexOf("Firefox") + 8
    isFirefox = (parseInt(navigator.userAgent.charAt(versionindex)) >= 1)
}
var isIE6 = (navigator.userAgent.indexOf("MSIE 6") != -1);
var isIE7 = (navigator.userAgent.indexOf("MSIE 7") != -1);
var isSafari = (navigator.userAgent.indexOf("Safari") != -1);

// Begin to open the TV menu
function tvMenuOn() {
    // Cancel the hiding operation
    if (tvHiding) {
        clearTimeout(tvHideMenuTimer);
        tvHiding = false;
    }
    // Begin the opening operation
    else {
        tvShowing = true;
        tvShowMenuTimer = window.setTimeout("doToggleTvMenu()", 300);
    }
}

// Begin to close the TV menu
function tvMenuOff() {
    {
        // Cancel the opening operation
        if (tvShowing) {
            clearTimeout(tvShowMenuTimer);
            tvShowing = false;
        }

        // Begin the hiding operation
        // This isn't necessary if the menu has already been closed.
        else if ($('hsnTvFooter').style.display != 'none') {
            tvHiding = true;
            tvHideMenuTimer = window.setTimeout("doToggleTvMenu()", 200);
        }
    }
}

// Hide or show the TV menu, depending on it's current state.
function doToggleTvMenu() {
    // Hiding and closing delays are finished.
    tvShowing = tvHiding = false;

    // Show the menu if it's hidden, and vice versa.
    if ($('hsnTvFooter').style.display == 'none') {
        $('hsnTvHeader').style.background = "url(" + setImageServer('/images/organic/hsnTvHeaderOut.jpg') + ") no-repeat";
        $('hsnTvFooter').style.display = "block";
        if (isIE6) { toggleHsnTvFlyoutShim(true); }
    }
    else {
        $('hsnTvHeader').style.background = "url(" + setImageServer('/images/organic/hsnTvHeader.jpg') + ") no-repeat";
        $('hsnTvFooter').style.display = "none";
        if (isIE6) { toggleHsnTvFlyoutShim(false); }
    }
}

// Hide or show the shim that is positioned under the TV menu to hide form elements behind it.
function toggleHsnTvFlyoutShim(show) {
    var shim = $("hsnTvFooter").getElementsByTagName('iframe')[0];
    if (shim == null) {
        shim = document.createElement("<iframe frameborder='0' scrolling='no'>");
        $("hsnTvFooter").insertBefore(shim, $("hsnTvFooter").firstChild);
        $(shim).setStyle({
            'position': 'absolute',
            'zIndex': '20001'
        });
    }
    if (show) {
        var flyout = $("hsnTvBody");
        shim.setStyle({ 'width': flyout.offsetWidth + 'px',
            'height': flyout.offsetHeight + 'px',
            'display': 'block'
        });

    }
    else {
        shim.style.display = "none";
    }
}

window.onresize = function() {
    // Go through each flyout and remove it's left position, so that it will be recalculated
    var flyoutIndex = 0;
    var flyout = document.getElementById(flyoutIndex + "Id_flyout");
    while (flyout) {
        flyout.style.left = "0px";
        flyoutIndex += 1;
        flyout = document.getElementById(flyoutIndex + "Id_flyout");
    }
}

function docMouse() {
    this.X = 0;
    this.Y = 0;
}
var mouse = new docMouse();
function getMouseXY(e) {
    if (document.all) {
        //if IE
        mouse.X = event.clientX + document.body.scrollLeft;
        mouse.Y = event.clientY + document.body.scrollTop;
    } else {
        mouse.X = e.pageX;
        mouse.Y = e.pageY;
    }

    if (mouse.X < 0) { mouse.X = 0; }
    if (mouse.Y < 0) { mouse.Y = 0; }
    return true;
}
//if not IE capture the mouse move events
if (!document.all) { document.captureEvents(Event.MOUSEMOVE); }
document.onmousemove = getMouseXY;

// Begin to countdown to showing a menu flyout
function showflyout(id) {
   if (document.readyState != 'complete' && document.readyState != 'interactive') { return; }
    if (id == currentVisibleMenu) {
        clearTimeout(currentShowTimer);
        clearTimeout(currentHideTimer);
    }
    else
        currentShowTimer = window.setTimeout(function() {
            //        if (currentShowTimer)
            runshowflyout(id);
        }, 300);
    
}

// Show the flyout that has an id.
// Each cell in the navigation bar has a corresponding flyout.
// If the cell's id is "X", its flyout's ID is "X_flyout".
function runshowflyout(id) {
   if (document.readyState != 'complete' && document.readyState != 'interactive') { return; }
    if (window.location.href.indexOf("/cnt/shared/") == -1) {
        currentVisibleMenu = id;
        $('topNav').select('a').each(function(a) { a.removeClassName('selected'); });
        $('navFlyoutContainer').childElements().each(function(t) { t.setStyle({ display: 'none' }); });
            
        var flyName = id + '_flyout';
        
        // Do nothing if a flyout doesn't exist.
        if ($(flyName)) {
            var link = $(id).select('a').first();

            var offset = link.cumulativeOffset();
            var bottom = offset.top + link.getHeight();
            var right = offset.left + link.getWidth();

            if (mouse.X > offset.left && mouse.X < right && mouse.Y > offset.top && mouse.Y < bottom) {

                link.addClassName('selected');

                // Calculate the space to the left and right of the selected cell. 
                var leftSpace = $('BodyWrapper').getWidth() / 2;
                var cellLeft = $(id).positionedOffset().left;

                $('navConnector').observe('mouseout', function() { hideflyout(id); });
                $('navConnector').observe('mouseover', function() { showflyout(id); });

                if (cellLeft < leftSpace) {

                    $('navConnector').setStyle({ 'left': (cellLeft - 1) + 'px',
                        'width': link.getWidth() + 'px',
                        'display': 'block'
                    });

                    $(flyName).setStyle({ 'left': (cellLeft - 1) + 'px',
                        'display': 'block',
                        'zIndex': 40000
                    });
                }
                else {
                    var left = (cellLeft + $(id).getWidth()) - $(flyName).getWidth();
                    if (!$(id).hasClassName('divider'))
                        left += 1;

                    $('navConnector').setStyle({ 'left': (cellLeft - 1) + 'px',
                        'width': link.getWidth() + 'px',
                        'display': 'block'
                    });

                    $(flyName).setStyle({ 'left': left + 'px',
                        'display': 'block',
                        'zIndex': 40000
                    });


                }

                // Use an iframe "shim" to hide form controls under the flyout in IE6
                if (isIE6) {
                    positionShim($(flyName));
                }
            }

        }
    }
}

function hideflyout(id) {
    clearTimeout(currentHideTimer);
    currentHideTimer = window.setTimeout(function() {
        runhideflyout(id);
    }, 300);
}

// Hide the flyout for the cell with a given ID.
function runhideflyout(id) {
    if (window.location.href.indexOf("/cnt/shared/") == -1) {
        currentVisibleMenu = null;
        var flyName = id + '_flyout';

        if ($(flyName)) {
            $(id).select('a').first().removeClassName('selected');
            $(flyName).setStyle({ 'display': 'none' });
            $(id).select('a').first().removeClassName('selected');
            $('navConnector').setStyle({ 'display': 'none' });
            $('navConnector').stopObserving('mouseout');
            $('navConnector').stopObserving('mouseover');

            // Hide the iframe "shim" ussed to hide form controls under the flyout in IE5.5+
            if (isIE6) {
                if ($('MenuShim'))
                $('MenuShim').setStyle({ display: 'none' });
            }
        }
    }
}

// Move the "flyout shim" to directly under the flyout
// to hide form controls beneath it in IE 5.5+
// Flyout: The div that contains the menu.
// State: Whether the shim should be shown or not.
function positionShim(flyout) {
    var shim = $('MenuShim');
    if (shim == null) {
        shim = new Element('iframe', { 'id': 'MenuShim' });
        $('navFlyoutcontainer').insert(shim);
        $(shim).setStyle({
            'position': 'absolute'
        });
    }

    if (flyout && shim) {
        var flyOffset = $(flyout).cumulativeOffset();
        var bodyOffset = $('BodyWrapper').cumulativeOffset();
        
        $(shim).setStyle({
            top: flyOffset.top - $('navFlyoutcontainer').cumulativeOffset().top + 'px',
            left: (flyOffset.left - bodyOffset.left) + 'px',
            height: $(flyout).getHeight() + 'px',
            width: $(flyout).getWidth() + 'px',
            display: 'block'
        });
    }
}

var iaz_preserved_elements = [];
var iaz_preserved_zindexes = [];

//this function loops thru the inner html of a given parent element  
//and modify the anchor propety href to apply CM tags
function generateFlyoutCM(parent_element_id) {
    var parentElem = document.getElementById(parent_element_id);
    var anchor;
    var link;
    var sParams;
    //loop thru the array of anchor elements
    for (k = 0; k < parentElem.getElementsByTagName('a').length; k++) {
        anchor = parentElem.getElementsByTagName('a')[k];
        link = anchor.attributes["href"].value;

        if (anchor.attributes["sParams"] != null) {
            sParams = anchor.attributes["sParams"].value;
            anchor.attributes["sParams"].value = '';
            link = GetUrlWithEnvironment(link, sParams);
        }
        else if (anchor.attributes["sparams"] != null) {
            sParams = anchor.attributes["sparams"].value;
            anchor.attributes["sparams"].value = '';
            link = GetUrlWithEnvironment(link, sParams);
        }
        //rewrite href value
        anchor.attributes["href"].value = "javascript:cmCreateManualLinkClickTagURL('" + link + "','','" + cG7.cM0[cm_ClientID] + "')";

    }
}

function HsnAddLoadEvent(func) {
    var oldonload = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = func;
    } else {
            window.onload = function() { if (oldonload) { oldonload(); } func(); };
    }
}

/**
* SWFObject v1.5: Flash Player detection and embed - http://blog.deconcept.com/swfobject/
*
* SWFObject is (c) 2007 Geoff Stearns and is released under the MIT License:
* http://www.opensource.org/licenses/mit-license.php
*
*/
if (typeof deconcept == "undefined") { var deconcept = new Object(); }
if (typeof deconcept.util == "undefined") { deconcept.util = new Object(); }
if (typeof deconcept.SWFObjectUtil == "undefined") { deconcept.SWFObjectUtil = new Object(); }
deconcept.SWFObject = function(_1, id, w, h, _5, c, _7, _8, _9, _a)
{ if (!document.getElementById) { return; } this.DETECT_KEY = _a ? _a : "detectflash"; this.skipDetect = deconcept.util.getRequestParameter(this.DETECT_KEY); this.params = new Object(); this.variables = new Object(); this.attributes = new Array(); if (_1) { this.setAttribute("swf", _1); } if (id) { this.setAttribute("id", id); } if (w) { this.setAttribute("width", w); } if (h) { this.setAttribute("height", h); } if (_5) { this.setAttribute("version", new deconcept.PlayerVersion(_5.toString().split("."))); } this.installedVer = deconcept.SWFObjectUtil.getPlayerVersion(); if (!window.opera && document.all && this.installedVer.major > 7) { deconcept.SWFObject.doPrepUnload = true; } if (c) { this.addParam("bgcolor", c); } var q = _7 ? _7 : "high"; this.addParam("quality", q); this.setAttribute("useExpressInstall", false); this.setAttribute("doExpressInstall", false); var _c = (_8) ? _8 : window.location; this.setAttribute("xiRedirectUrl", _c); this.setAttribute("redirectUrl", ""); if (_9) { this.setAttribute("redirectUrl", _9); } };

deconcept.SWFObject.prototype = { useExpressInstall: function(_d) { this.xiSWFPath = !_d ? "expressinstall.swf" : _d; this.setAttribute("useExpressInstall", true); }, setAttribute: function(_e, _f) { this.attributes[_e] = _f; }, getAttribute: function(_10) { return this.attributes[_10]; }, addParam: function(_11, _12) { this.params[_11] = _12; }, getParams: function() { return this.params; }, addVariable: function(_13, _14) { this.variables[_13] = _14; }, getVariable: function(_15) { return this.variables[_15]; }, getVariables: function() { return this.variables; }, getVariablePairs: function() { var _16 = new Array(); var key; var _18 = this.getVariables(); for (key in _18) { _16[_16.length] = key + "=" + _18[key]; } return _16; }, getSWFHTML: function() { var _19 = ""; if (navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length) { if (this.getAttribute("doExpressInstall")) { this.addVariable("MMplayerType", "PlugIn"); this.setAttribute("swf", this.xiSWFPath); } _19 = "<embed type=\"application/x-shockwave-flash\" src=\"" + this.getAttribute("swf") + "\" width=\"" + this.getAttribute("width") + "\" height=\"" + this.getAttribute("height") + "\" style=\"" + this.getAttribute("style") + "\""; _19 += " id=\"" + this.getAttribute("id") + "\" name=\"" + this.getAttribute("id") + "\" "; var _1a = this.getParams(); for (var key in _1a) { _19 += [key] + "=\"" + _1a[key] + "\" "; } var _1c = this.getVariablePairs().join("&"); if (_1c.length > 0) { _19 += "flashvars=\"" + _1c + "\""; } _19 += "/>"; } else { if (this.getAttribute("doExpressInstall")) { this.addVariable("MMplayerType", "ActiveX"); this.setAttribute("swf", this.xiSWFPath); } _19 = "<object id=\"" + this.getAttribute("id") + "\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"" + this.getAttribute("width") + "\" height=\"" + this.getAttribute("height") + "\" style=\"" + this.getAttribute("style") + "\">"; _19 += "<param name=\"movie\" value=\"" + this.getAttribute("swf") + "\" />"; var _1d = this.getParams(); for (var key in _1d) { _19 += "<param name=\"" + key + "\" value=\"" + _1d[key] + "\" />"; } var _1f = this.getVariablePairs().join("&"); if (_1f.length > 0) { _19 += "<param name=\"flashvars\" value=\"" + _1f + "\" />"; } _19 += "</object>"; } return _19; }, write: function(_20) { if (this.getAttribute("useExpressInstall")) { var _21 = new deconcept.PlayerVersion([6, 0, 65]); if (this.installedVer.versionIsValid(_21) && !this.installedVer.versionIsValid(this.getAttribute("version"))) { this.setAttribute("doExpressInstall", true); this.addVariable("MMredirectURL", escape(this.getAttribute("xiRedirectUrl"))); document.title = document.title.slice(0, 47) + " - Flash Player Installation"; this.addVariable("MMdoctitle", document.title); } } if (this.skipDetect || this.getAttribute("doExpressInstall") || this.installedVer.versionIsValid(this.getAttribute("version"))) { var n = (typeof _20 == "string") ? document.getElementById(_20) : _20; n.innerHTML = this.getSWFHTML(); return true; } else { if (this.getAttribute("redirectUrl") != "") { document.location.replace(this.getAttribute("redirectUrl")); } } return false; } }; deconcept.SWFObjectUtil.getPlayerVersion = function() { var _23 = new deconcept.PlayerVersion([0, 0, 0]); if (navigator.plugins && navigator.mimeTypes.length) { var x = navigator.plugins["Shockwave Flash"]; if (x && x.description) { _23 = new deconcept.PlayerVersion(x.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split(".")); } } else { if (navigator.userAgent && navigator.userAgent.indexOf("Windows CE") >= 0) { var axo = 1; var _26 = 3; while (axo) { try { _26++; axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + _26); _23 = new deconcept.PlayerVersion([_26, 0, 0]); } catch (e) { axo = null; } } } else { try { var axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7"); } catch (e) { try { var axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"); _23 = new deconcept.PlayerVersion([6, 0, 21]); axo.AllowScriptAccess = "always"; } catch (e) { if (_23.major == 6) { return _23; } } try { axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash"); } catch (e) { } } if (axo != null) { _23 = new deconcept.PlayerVersion(axo.GetVariable("$version").split(" ")[1].split(",")); } } } return _23; }; deconcept.PlayerVersion = function(_29) { this.major = _29[0] != null ? parseInt(_29[0]) : 0; this.minor = _29[1] != null ? parseInt(_29[1]) : 0; this.rev = _29[2] != null ? parseInt(_29[2]) : 0; }; deconcept.PlayerVersion.prototype.versionIsValid = function(fv) { if (this.major < fv.major) { return false; } if (this.major > fv.major) { return true; } if (this.minor < fv.minor) { return false; } if (this.minor > fv.minor) { return true; } if (this.rev < fv.rev) { return false; } return true; }; deconcept.util = { getRequestParameter: function(_2b) { var q = document.location.search || document.location.hash; if (_2b == null) { return q; } if (q) { var _2d = q.substring(1).split("&"); for (var i = 0; i < _2d.length; i++) { if (_2d[i].substring(0, _2d[i].indexOf("=")) == _2b) { return _2d[i].substring((_2d[i].indexOf("=") + 1)); } } } return ""; } }; deconcept.SWFObjectUtil.cleanupSWFs = function() { var _2f = document.getElementsByTagName("OBJECT"); for (var i = _2f.length - 1; i >= 0; i--) { _2f[i].style.display = "none"; for (var x in _2f[i]) { if (typeof _2f[i][x] == "function") { _2f[i][x] = function() { }; } } } }; if (deconcept.SWFObject.doPrepUnload) { if (!deconcept.unloadSet) { deconcept.SWFObjectUtil.prepUnload = function() { __flash_unloadHandler = function() { }; __flash_savedUnloadHandler = function() { }; window.attachEvent("onunload", deconcept.SWFObjectUtil.cleanupSWFs); }; window.attachEvent("onbeforeunload", deconcept.SWFObjectUtil.prepUnload); deconcept.unloadSet = true; } } if (!document.getElementById && document.all) { document.getElementById = function(id) { return document.all[id]; }; } var getQueryParamValue = deconcept.util.getRequestParameter; var FlashObject = deconcept.SWFObject; var SWFObject = deconcept.SWFObject;


//*****************************************************
//Custom HSN functions to use with flash implementation
//*****************************************************

function getDivXml(sDivName) {
    el = document.getElementById(sDivName);

    if (el.innerText) {
        return el.innerText;
    }
    else {
        return el.textContent;
    }
}


var flashVersion = 0;
var minFlashVersionSuported = 9;

function getUserFlashVersion() {//debugger
    var latestFlashVersion = 10;
    var agent = navigator.userAgent.toLowerCase();

    if (agent.indexOf("mozilla/3") != -1 && agent.indexOf("msie") == -1) {
        flashVersion = 0;
    }

    if (navigator.plugins != null && navigator.plugins.length > 0) {
        var flashPlugin = navigator.plugins['Shockwave Flash'];
        if (typeof flashPlugin == 'object') {
            for (var i = latestFlashVersion; i >= minFlashVersionSuported; i--) {
                if (flashPlugin.description.indexOf(i + '.') != -1) {
                    flashVersion = i;
                    break;
                }

            }

        }
    }
    //VBScript used for IE
    else if (agent.indexOf("msie") != -1 && parseInt(navigator.appVersion) >= 4 && agent.indexOf("win") != -1 && agent.indexOf("16bit") == -1) {
        var vbOutput = '<scr' + 'ipt language="VBScript"\> \n';
        vbOutput += 'On Error Resume Next \n';
        vbOutput += 'Dim obFlash \n';
        vbOutput += 'For i = ' + latestFlashVersion + ' To ' + minFlashVersionSuported + ' Step -1 \n';
        vbOutput += '   Set obFlash = CreateObject("ShockwaveFlash.ShockwaveFlash." & i) \n';
        vbOutput += '   If IsObject(obFlash) Then \n';
        vbOutput += '      flashVersion = i \n';
        vbOutput += '      Exit For \n';
        vbOutput += '   End If \n';
        vbOutput += 'Next \n';
        vbOutput += '</scr' + 'ipt\> \n';
        document.write(vbOutput);
    }
    //any other case that can't be detected
    else {
        flashVersion = -1;
    }

    return flashVersion;
}

function writeDownloadFlashContent(sDivID, sWidth, sHeight, sImageServer, sLocation, sMinFlashVersionOverride) {
    var noflashMsg = "";
    var minFlashVersion = "10";

    if (sMinFlashVersionOverride) { minFlashVersion = sMinFlashVersionOverride; }

    noflashMsg += "<div style='border:solid 1px #cccccc;background-color:#ffffff;text-align:center;width:" + sWidth + ";height:" + sHeight + ";'>";
    noflashMsg += "<table cellpadding='0' cellspacing='0' border='0' height='100%' width='100%'><tr><td valign='middle'>";
    if (sLocation == 'billboard') {
        noflashMsg += "<div  style='text-align:center;color: #007dca;font-size:30px;line-height:40px;'>Get the ultimate HSN.com experience</div>";
    }
    else {
        noflashMsg += "<div class='hdr8' style='text-align:center;'>Get the ultimate HSN.com experience</div>";
    }
    noflashMsg += "<p style='text-align:center;font-size:14px;margin-left:10px;margin-right:10px;'><a style='font-size:14px;' href=javascript:OpenWin('http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash','Promotion',600,500,true,true,true,true,null,null)>Download Flash Player</a> version " + minFlashVersion + " or higher for free - and enjoy the future of shopping</p>";
    noflashMsg += "<div style='text-align:center;'><a href=javascript:OpenWin('http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash','Promotion',600,500,true,true,true,true,null,null)><img src='" + sImageServer + "/images/flash/get_flash_player.gif' alt='Get flash player' /></a></div>";
    noflashMsg += "<div style='text-align:center;margin-top:20px;'>Please refresh this page after installation.</div>"
    noflashMsg += "</td></tr></table></div>";
    $(sDivID).innerHTML = noflashMsg;
}


var totalAlertCount = 0;
function setAlertCount(nbrOfNewAlerts) {
    totalAlertCount = nbrOfNewAlerts;
    var button = $('AlertCountSpan');
    if (button != null) {
        button.update(nbrOfNewAlerts == 0 ? "0" : nbrOfNewAlerts);
    }
}

function DoCustomerAlertGet(home) {
    homeUrl = home;
    try {
        GetNewCustomerAlerts("1", "showAlertPopup");
    }
    catch (err) {
        window.location = homeUrl + "/my-alerts_xx.aspx"; 
    }
}

function showAlertPopup(json)
{
    if (json.ResultSet != null && json.ResultSet != undefined && json.ResultSet.Alerts != undefined)
    {
        var alertCount = json.ResultSet.Alerts.length;
        $('AlertDiv').update();
        new Ajax.Updater(
            'AlertDiv',
            homeUrl + '/cnt/alert/AlertList.aspx',
            {
                evalScripts: true,
                parameters: {
                    alerts: Object.toJSON(json.ResultSet.Alerts),
                    newAlertCount: totalAlertCount
                } 
            }
        );

        setAlertCount(totalAlertCount - alertCount);
        DecreaseNbrOfNewAlerts(alertCount);
        HsnPopup.Modal = true;
        HsnPopup.UpdateTitle('my alerts');
        var newHeight = 181;
        if (alertCount > 0) {
            newHeight += (alertCount - 1) * 98;
        }
        $('AlertDiv').style.height = newHeight + 'px';
        HsnPopup.Show('AlertDiv');
    }
}

function CloseAlertInPopup( elementId, deliveryMethodId, eventId ) {
    var targetElement = $(elementId);

    targetElement.hide();
    if (targetElement.siblings().length != 2) {
        $("AlertDiv").style.height = ($("AlertDiv").clientHeight - 98) + "px";
        $("AlertListDiv").style.height = ($("AlertListDiv").clientHeight - 98) + "px";
    }
    else {
        $("NoAlertsMessage").show();
    }

    var sibs = targetElement.nextSiblings();
    for (i = 0; i < sibs.length; i++) {
        var sibling = sibs[i];
        if (sibling.hasClassName("AlternateAlertItemContainer")) {
            sibling.removeClassName("AlternateAlertItemContainer");
        }
        else if (sibling.hasClassName("AlertItemContainer")) {
            sibling.addClassName("AlternateAlertItemContainer");
        }
    }
    targetElement.remove();

    cmCreateManualLinkClickTag("cm_sp=sitealerts*hide*na&tid=8", '');
    
    UpdateAlertStatus(eventId, 1, "ignore");
}

function CloseAlert(elementId, deliveryMethodId, eventId) {
    var targetElement = $(elementId);

    if (targetElement.siblings().length == 5) {
        $("MyAlerts").style.height = $("MyAlerts").clientHeight + "px";
    }    
    targetElement.hide();
    if (targetElement.siblings().length == 1) {
        $("NoAlertsMessage").show();
    }
    
    var sibs = targetElement.nextSiblings();
    for (i = 0; i < sibs.length; i++) {
        var sibling = sibs[i];
        if (sibling.hasClassName("AlternateAlertItemContainer")) {
            sibling.removeClassName("AlternateAlertItemContainer");
        }
        else if (sibling.hasClassName("AlertItemContainer")) {
            sibling.addClassName("AlternateAlertItemContainer");
        }
    }
    targetElement.remove();

    cmCreateManualLinkClickTag("cm_sp=sitealerts*hide*na&tid=8", '');
    
    UpdateAlertStatus(eventId, 1, "ignore");
}