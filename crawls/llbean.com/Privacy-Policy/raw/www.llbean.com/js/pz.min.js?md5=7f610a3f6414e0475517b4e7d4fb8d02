/*
 Contains: jquery.url.js,llbean.vstrAttr.js,jshashtable.js,pzPromo.js  */
(function($, undefined) {
	var tag2attr = {
		a: "href",
		img: "src",
		form: "action",
		base: "href",
		script: "src",
		iframe: "src",
		link: "href"
	}, key = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "fragment"],
		aliases = {
			"anchor": "fragment"
		}, parser = {
			strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
			loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
		},
		querystring_parser = /(?:^|&|;)([^&=;]*)=?([^&;]*)/g,
		fragment_parser = /(?:^|&|;)([^&=;]*)=?([^&;]*)/g;

	function parseUri(url, strictMode) {
		var str = decodeURI(url),
			res = parser[strictMode || false ? "strict" : "loose"].exec(str),
			uri = {
				attr: {},
				param: {},
				seg: {}
			}, i = 14;
		while (i--) uri.attr[key[i]] = res[i] || "";
		uri.param["query"] = {};
		uri.param["fragment"] = {};
		uri.attr["query"].replace(querystring_parser, function($0, $1, $2) {
			if ($1) uri.param["query"][$1] = $2
		});
		uri.attr["fragment"].replace(fragment_parser, function($0, $1, $2) {
			if ($1) uri.param["fragment"][$1] = $2
		});
		uri.seg["path"] = uri.attr.path.replace(/^\/+|\/+$/g, "").split("/");
		uri.seg["fragment"] = uri.attr.fragment.replace(/^\/+|\/+$/g, "").split("/");
		uri.attr["base"] = uri.attr.host ? uri.attr.protocol + "://" + uri.attr.host + (uri.attr.port ? ":" + uri.attr.port : "") : "";
		return uri
	}
	function getAttrName(elm) {
		var tn = elm.tagName;
		if (tn !== undefined) return tag2attr[tn.toLowerCase()];
		return tn
	}
	$.fn.url = function(strictMode) {
		var url = "";
		if (this.length) url = $(this).attr(getAttrName(this[0])) || "";
		return $.url({
			url: url,
			strict: strictMode
		})
	};
	$.url = function(opts) {
		var url = "",
			strict = false;
		if (typeof opts === "string") url = opts;
		else {
			opts = opts || {};
			strict = opts.strict || strict;
			url = opts.url === undefined ? window.location.toString() : opts.url
		}
		return {
			data: parseUri(url, strict),
			attr: function(attr) {
				attr = aliases[attr] || attr;
				return attr !== undefined ? this.data.attr[attr] : this.data.attr
			},
			param: function(param) {
				return param !== undefined ? this.data.param.query[param] : this.data.param.query
			},
			fparam: function(param) {
				return param !== undefined ? this.data.param.fragment[param] : this.data.param.fragment
			},
			segment: function(seg) {
				if (seg === undefined) return this.data.seg.path;
				else {
					seg = seg < 0 ? this.data.seg.path.length + seg : seg - 1;
					return this.data.seg.path[seg]
				}
			},
			fsegment: function(seg) {
				if (seg === undefined) return this.data.seg.fragment;
				else {
					seg = seg < 0 ? this.data.seg.fragment.length + seg : seg - 1;
					return this.data.seg.fragment[seg]
				}
			}
		}
	}
})(jQuery);
(function($) {
	$.vstrAttr = function(options) {
		if (!options && cache) return cache;
		o = $.extend(defaults, options);
		vat.cookie = getCookie(o.cookie);
		if (vat.cookie !== null && typeof vat.cookie !== "undefined") {
			var vatHash = vat.cookie.slice(0, vat.cookie.lastIndexOf(":"));
			vat.rawData = vatHash;
			var ck = vat.cookie.split(":");
			var attrs = ck.slice(0, 10);
			vat.vstrAttrs = attrs.join(":");
			vat.couponCount = ck[10];
			vat.couponAmount = ck[11];
			vat.couponRetrievalTime = ck[12];
			vat.oapUrl = ck[13];
			vat.pcdUrl = ck[14];
			vat.expiry = ck[15];
			vat.chkDgt = ck[16]
		} else status = false;
		return $.extend({
			defaults: defaults,
			get: get,
			set: set,
			hasVstrAttrs: hasVstrAttrs,
			getVatHash: getVatHash,
			getVhString: getVhString
		}, vat)
	};
	var defaults = {
		cookie: "LLBVAT",
		debug: true
	}, vat = {}, status = true,
		cache = null;

	function hasVstrAttrs() {
		return isValidVat() ? status : false
	}
	function isValidVat() {
		var isValid = false;
		if (typeof vat.chkDgt !== "undefined") if (getCheckDigit(vat.rawData) == vat.chkDgt) isValid = true;
		return isValid
	}
	function getCheckDigit(rawData) {
		var offset = 32;
		var total = 0;
		var checkDigit = null;
		if (rawData != null) {
			for (var stringCounter = 0; stringCounter < rawData.length; stringCounter++) {
				var character = rawData.substr(stringCounter, 1);
				var ASCIIValue = character.charCodeAt(0);
				var weightedSum = (ASCIIValue - offset) * (stringCounter + 1);
				total += weightedSum
			}
			checkDigit = total % 103
		}
		return checkDigit
	}
	function get(key) {
		return vat[key] || vat
	}
	function set(key, value) {
		vat[key] = value
	}
	function getVatHash() {
		var vatArry = [vat.vstrAttrs, vat.couponCount, vat.couponAmount, vat.couponRetrievalTime, vat.oapUrl, vat.pcdUrl, vat.expiry];
		var chkDgt = getCheckDigit(vatArry.join(":"));
		vatArry.push(chkDgt);
		return vatArry.join(":")
	}
	function getVhString() {
		var arrayAttrs = vat.vstrAttrs.split(":");
		var vatArry = arrayAttrs.slice(1, arrayAttrs.length);
		var couponDigit = vat.couponCount == 0 || vat.couponAmount == 0 ? 0 : 1;
		vatArry.push(couponDigit);
		vatArry.push(vat.oapUrl, vat.pcdUrl);
		return vatArry.join(":")
	}
	function getCookie(a) {
		var b = document.cookie;
		if (b.indexOf(a + "=") != -1) {
			a = b.indexOf(a) + a.length + 1;
			var g = b.indexOf(";", a);
			if (g == -1) g = b.length;
			return unescape(b.substring(a, g)) + ""
		}
		return null
	}
	cache = $.vstrAttr()
})(jQuery);
var Hashtable = function() {
	var p = "function";
	var n = typeof Array.prototype.splice == p ? function(s, r) {
			s.splice(r, 1)
		} : function(u, t) {
			var s, v, r;
			if (t === u.length - 1) u.length = t;
			else {
				s = u.slice(t + 1);
				u.length = t;
				for (v = 0, r = s.length; v < r; ++v) u[t + v] = s[v]
			}
		};

	function a(t) {
		var r;
		if (typeof t == "string") return t;
		else if (typeof t.hashCode == p) {
			r = t.hashCode();
			return typeof r == "string" ? r : a(r)
		} else if (typeof t.toString == p) return t.toString();
		else try {
			return String(t)
		} catch (s) {
			return Object.prototype.toString.call(t)
		}
	}
	function g(r,
	s) {
		return r.equals(s)
	}
	function e(r, s) {
		return typeof s.equals == p ? s.equals(r) : r === s
	}
	function c(r) {
		return function(s) {
			if (s === null) throw new Error("null is not a valid " + r);
			else if (typeof s == "undefined") throw new Error(r + " must not be undefined");
		}
	}
	var q = c("key"),
		l = c("value");

	function d(u, s, t, r) {
		this[0] = u;
		this.entries = [];
		this.addEntry(s, t);
		if (r !== null) this.getEqualityFunction = function() {
			return r
		}
	}
	var h = 0,
		j = 1,
		f = 2;

	function o(r) {
		return function(t) {
			var s = this.entries.length,
				v, u = this.getEqualityFunction(t);
			while (s--) {
				v = this.entries[s];
				if (u(t, v[0])) switch (r) {
					case h:
						return true;
					case j:
						return v;
					case f:
						return [s, v[1]]
				}
			}
			return false
		}
	}
	function k(r) {
		return function(u) {
			var v = u.length;
			for (var t = 0, s = this.entries.length; t < s; ++t) u[v + t] = this.entries[t][r]
		}
	}
	d.prototype = {
		getEqualityFunction: function(r) {
			return typeof r.equals == p ? g : e
		},
		getEntryForKey: o(j),
		getEntryAndIndexForKey: o(f),
		removeEntryForKey: function(s) {
			var r = this.getEntryAndIndexForKey(s);
			if (r) {
				n(this.entries, r[0]);
				return r[1]
			}
			return null
		},
		addEntry: function(r,
		s) {
			this.entries[this.entries.length] = [r, s]
		},
		keys: k(0),
		values: k(1),
		getEntries: function(s) {
			var u = s.length;
			for (var t = 0, r = this.entries.length; t < r; ++t) s[u + t] = this.entries[t].slice(0)
		},
		containsKey: o(h),
		containsValue: function(s) {
			var r = this.entries.length;
			while (r--) if (s === this.entries[r][1]) return true;
			return false
		}
	};

	function m(s, t) {
		var r = s.length,
			u;
		while (r--) {
			u = s[r];
			if (t === u[0]) return r
		}
		return null
	}
	function i(r, s) {
		var t = r[s];
		return t && t instanceof d ? t : null
	}
	function b(t, r) {
		var w = this;
		var v = [];
		var u = {};
		var x = typeof t == p ? t : a;
		var s = typeof r == p ? r : null;
		this.put = function(B, C) {
			q(B);
			l(C);
			var D = x(B),
				E, A, z = null;
			E = i(u, D);
			if (E) {
				A = E.getEntryForKey(B);
				if (A) {
					z = A[1];
					A[1] = C
				} else E.addEntry(B, C)
			} else {
				E = new d(D, B, C, s);
				v[v.length] = E;
				u[D] = E
			}
			return z
		};
		this.get = function(A) {
			q(A);
			var B = x(A);
			var C = i(u, B);
			if (C) {
				var z = C.getEntryForKey(A);
				if (z) return z[1]
			}
			return null
		};
		this.containsKey = function(A) {
			q(A);
			var z = x(A);
			var B = i(u, z);
			return B ? B.containsKey(A) : false
		};
		this.containsValue = function(A) {
			l(A);
			var z = v.length;
			while (z--) if (v[z].containsValue(A)) return true;
			return false
		};
		this.clear = function() {
			v.length = 0;
			u = {}
		};
		this.isEmpty = function() {
			return !v.length
		};
		var y = function(z) {
			return function() {
				var A = [],
					B = v.length;
				while (B--) v[B][z](A);
				return A
			}
		};
		this.keys = y("keys");
		this.values = y("values");
		this.entries = y("getEntries");
		this.remove = function(B) {
			q(B);
			var C = x(B),
				z, A = null;
			var D = i(u, C);
			if (D) {
				A = D.removeEntryForKey(B);
				if (A !== null) if (!D.entries.length) {
					z = m(v, C);
					n(v, z);
					delete u[C]
				}
			}
			return A
		};
		this.size = function() {
			var A = 0,
				z = v.length;
			while (z--) A += v[z].entries.length;
			return A
		};
		this.each = function(C) {
			var z = w.entries(),
				A = z.length,
				B;
			while (A--) {
				B = z[A];
				C(B[0], B[1])
			}
		};
		this.putAll = function(H, C) {
			var B = H.entries();
			var E, F, D, z, A = B.length;
			var G = typeof C == p;
			while (A--) {
				E = B[A];
				F = E[0];
				D = E[1];
				if (G && (z = w.get(F))) D = C(F, z, D);
				w.put(F, D)
			}
		};
		this.clone = function() {
			var z = new b(t, r);
			z.putAll(w);
			return z
		}
	}
	return b
}();
var pzPromo = function() {
	var debug = false,
		dateNow = new Date,
		couponVars = {
			"count": "%cCount",
			"amount": "%cAmount"
		}, VATCookieData = strGetCookie("LLBVAT"),
		VPCCookieData = strGetCookie("LLBVPC"),
		replacedId = [];

	function log(str) {
		if (window.console && debug === true) console.log(str)
	}
	function getTimeElapsed(timerecorded) {
		if (typeof timerecorded === "undefined") return null;
		return Math.floor((dateNow - timerecorded) / 1E3 / 60)
	}
	function strToDate(eObj) {
		if (typeof eObj === "undefined") return null;
		var d = new Date;
		var mEpoch = parseInt(eObj);
		if (mEpoch < 1E10) mEpoch *= 1E3;
		d.setTime(mEpoch);
		return d
	}
	function replaceCouponValues(values, html) {
		if (typeof values === "undefined" || typeof html === "undefined") return null;
		var tmpl = html.replace(new RegExp(pzPromo.couponVars.count, "g"), values.count);
		return tmpl.replace(new RegExp(pzPromo.couponVars.amount, "g"), values.amount)
	}
	return {
		now: dateNow,
		log: log,
		datetime: strToDate,
		elapsed: getTimeElapsed,
		couponVars: couponVars,
		VATCookieData: VATCookieData,
		VPCCookieData: VPCCookieData,
		replaceCouponValues: replaceCouponValues
	}
}();

function doLookup() {
	var url = document.location.href;
	url = url.replace(/@/g, "a");
	var isLookup = false;
	var now = pzPromo.now;
	if (typeof globalVatLookupFlg !== "undefined" && globalVatLookupFlg != null && globalVatLookupFlg > 0) {
		pzPromo.log("[pzPromo] llbVAT: " + pzPromo.VATCookieData);
		if (pzPromo.VATCookieData != null) {
			var couponRetTime = pzPromo.VATCookieData.split(":")[12];
			if (couponRetTime != "-1") {
				couponRetTime = pzPromo.datetime(couponRetTime);
				pzPromo.elapsed = pzPromo.elapsed(couponRetTime);
				pzPromo.log("[pzPromo] Elapsed time (min) from last coupon retrieval time = " + pzPromo.elapsed)
			}
			pzPromo.log("[pzPromo] COUPON RETRVL TIME date parse value = " + couponRetTime);
			if (couponRetTime != "-1" && vatLookupExpTime <= pzPromo.elapsed || couponRetTime == "-1") {
				isLookup = true;
				pzPromo.log("[pzPromo] New conditions met!");
				pzPromo.log("[pzPromo] copounRetTime not empty AND couponRetTime was more than 60min ago!!! OR couponRetTime empty!!!")
			} else {
				pzPromo.log("[pzPromo] New conditions NO met!");
				var vatLookupDate = new Date(new Number($.vstrAttr().get("expiry")));
				if (now < vatLookupDate && $.vstrAttr("recache").hasVstrAttrs()) {
					var isPcdChanged = false;
					var isOapChanged = false;
					var currPcd = $.url(url).param("pcd");
					if (currPcd != null) {
						var vatPcd = $.vstrAttr().get("pcdUrl");
						if (vatPcd != currPcd) isPcdChanged = true
					}
					var currOappc = $.url(url).param("oappc");
					if (currOappc != null) {
						if (currOappc == "Y" || currOappc == "y") currOappc = 1;
						var vatOap = $.vstrAttr().get("oapUrl");
						if (vatOap != currOappc) isOapChanged = true
					}
					if (isPcdChanged) {
						resetPcd(currPcd);
						resetOappc(0)
					} else if (isOapChanged) resetOappc(currOappc);
					if (isPcdChanged || isOapChanged) {
						var vatExpiry = now.getTime() + 768 * 24 * 60 * 60 * 1E3;
						setCookie("LLBVAT", $.vstrAttr().getVatHash(), vatExpiry, "/", document.location.hostname);
						pzPromo.VATCookieData = strGetCookie("LLBVAT");
						getPzContent = true;
						deleteCookie("LLBOPSF")
					}
					var couponCountValue = $.vstrAttr().get("couponCount");
					var couponAmountValue = $.vstrAttr().get("couponAmount");
					var LLBWELCOME = strGetCookie("LLBWELCOME");
					if (LLBWELCOME == null && (couponCountValue > 0 || couponAmountValue > 0)) {
						$.vstrAttr().set("couponCount", 0);
						$.vstrAttr().set("couponAmount", 0);
						vatExpiry = now.getTime() + 768 * 24 * 60 * 60 * 1E3;
						setCookie("LLBVAT", $.vstrAttr().getVatHash(), vatExpiry, "/", document.location.hostname);
						pzPromo.VATCookieData = strGetCookie("LLBVAT");
						getPzContent = true
					}
				} else {
					isLookup = true;
					getPzContent = true;
					deleteCookie("LLBOPSF")
				}
			}
		} else {
			pzPromo.log("[pzPromo] LLBVAT does not exist!");
			isLookup = true;
			getPzContent = true;
			deleteCookie("LLBOPSF")
		}
	}
	pzPromo.log("[pzPromo] doLookup = " + isLookup);
	return isLookup
}

function checkPromo() {
	var getContent = false;
	var now = pzPromo.now;
	pzPromo.VATCookieData = strGetCookie("LLBVAT");
	if (typeof globalContentLookupFlg !== "undefined" && globalContentLookupFlg != null && globalContentLookupFlg > 0) if (pzPromo.VATCookieData != null) {
		var vatLookupDate = new Date(new Number($.vstrAttr("recache").get("expiry")));
		if (now < vatLookupDate) {
			if (typeof contentUrl !== "undefined") {
				contentUrl = contentUrl + "&vh=" + $.vstrAttr("recache").getVhString();
				if (typeof llJSP !== "undefined" && llJSP != null && llJSP == "app.jsp") contentUrl = contentUrl + "&categoryId=" + llCgyId
			}
			getContent = true
		}
	} else deleteCookie("LLBOPSF");
	if (getContent === false) showPContent();
	return getContent
}
function PzOffer(offerId, abSeg) {
	this.offerId = offerId;
	this.abSeg = abSeg
}
function PzInfo(divId, abSeg, qSrc, expiry, offerId, promoCd) {
	this.divId = divId;
	this.abSeg = abSeg;
	this.qSrc = qSrc;
	this.expiry = expiry;
	this.offerId = offerId;
	this.promoCd = promoCd;
	this.toString = function() {
		return this.divId + ":" + this.abSeg + ":" + this.qSrc + ":" + this.expiry + ":" + this.offerId + ":" + this.promoCd
	}
}

function processContent(data) {
	if (data != null && data.chtml != null && data.chtml.length > 0) {
		var tcdInfoList = data.chtml;
		var vpcOffers = new Hashtable;
		var pzInfoList = new Array;
		var jsonOffers = new Hashtable;
		var reqOffers = new Hashtable;
		var cookieData = new Hashtable;
		if (pzPromo.VPCCookieData != null) {
			pzInfoList = pzPromo.VPCCookieData.split("|");
			for (i = 0; i < pzInfoList.length; i++) {
				var pzInfo = pzInfoList[i].split(":");
				var oId = pzInfo[4];
				if (!vpcOffers.containsKey(oId)) vpcOffers.put(oId, new PzOffer(oId, pzInfo[1]))
			}
		}
		for (j = 0; j < tcdInfoList.length; j++) {
			var tcdInfo = tcdInfoList[j];
			reqOffers.put(String(tcdInfo.oId), "");
			if (!vpcOffers.containsKey(String(tcdInfo.oId)) && !jsonOffers.containsKey(String(tcdInfo.oId))) {
				var abSeg = 1;
				if (Math.random() * 101 <= tcdInfo.odPct) abSeg = 0;
				jsonOffers.put(String(tcdInfo.oId), new PzOffer(tcdInfo.oId, abSeg))
			}
		}
		vpcOffers.putAll(jsonOffers);
		for (k = 0; k < tcdInfoList.length; k++) {
			var tcdInfo = tcdInfoList[k];
			tcdInfo.abSeg = vpcOffers.get(String(tcdInfo.oId)).abSeg
		}
		var rotators = new Hashtable;
		rotators.put("pc1", 0);
		rotators.put("pc18", 0);
		var contentToShow = new Hashtable;
		var contentReturned = new Hashtable;
		var excludeKeys = new Hashtable;
		var now = pzPromo.now;
		for (l = 0; l < tcdInfoList.length; l++) {
			var tcdInfo = tcdInfoList[l];
			if (tcdInfo.abSeg == 0) if (tcdInfo.dId != "pc0") {
				var pzEff = new Date(tcdInfo.pzEff);
				var pzExp = new Date(tcdInfo.pzExp);
				if (now > pzEff && now < pzExp) {
					var addIt = false;
					if (tcdInfo.cId == -1) addIt = true;
					else {
						var urlCatId = getCategoryId();
						if (urlCatId != -1) if (tcdInfo.cId == urlCatId) if (tcdInfo.dFlg) addIt = true;
						else excludeKeys.put(tcdInfo.dId,
							"")
					}
					if (addIt && tcdInfo.oId == 0) if ($.vstrAttr().get("couponCount") != 0 && $.vstrAttr().get("couponAmount") != 0) tcdInfo.pzhtml = pzPromo.replaceCouponValues({
						count: $.vstrAttr().get("couponCount"),
						amount: $.vstrAttr().get("couponAmount")
					}, tcdInfo.pzhtml);
					else addIt = false;
					if (addIt) if (contentToShow.containsKey(tcdInfo.dId) && rotators.containsKey(tcdInfo.dId)) {
						var currHtml = contentToShow.get(tcdInfo.dId);
						currHtml = currHtml + tcdInfo.pzhtml;
						contentToShow.put(tcdInfo.dId, currHtml);
						var count = rotators.get(tcdInfo.dId);
						rotators.put(tcdInfo.dId, ++count);
						contentReturned.put(tcdInfo.dId + "-" + tcdInfo.oId, new PzInfo(tcdInfo.dId, tcdInfo.abSeg, tcdInfo.qSrc, tcdInfo.oExp, tcdInfo.oId, tcdInfo.oCode))
					} else if (!contentToShow.containsKey(tcdInfo.dId)) {
						contentToShow.put(tcdInfo.dId, tcdInfo.pzhtml);
						if (rotators.containsKey(tcdInfo.dId)) {
							var count = rotators.get(tcdInfo.dId);
							rotators.put(tcdInfo.dId, ++count)
						}
						contentReturned.put(tcdInfo.dId + "-" + tcdInfo.oId, new PzInfo(tcdInfo.dId, tcdInfo.abSeg, tcdInfo.qSrc, tcdInfo.oExp, tcdInfo.oId, tcdInfo.oCode))
					}
				}
			} else {
				var expiry = new Date(tcdInfo.oExp);
				if (now < expiry) if (!contentReturned.containsKey(tcdInfo.dId + "-" + tcdInfo.oId)) contentReturned.put(tcdInfo.dId + "-" + tcdInfo.oId, new PzInfo(tcdInfo.dId, tcdInfo.abSeg, tcdInfo.qSrc, tcdInfo.oExp, tcdInfo.oId, tcdInfo.oCode))
			} else cookieData.put(tcdInfo.dId + "-" + tcdInfo.oId, new PzInfo(tcdInfo.dId, tcdInfo.abSeg, tcdInfo.qSrc, tcdInfo.oExp, tcdInfo.oId, tcdInfo.oCode))
		}
		if (!excludeKeys.isEmpty()) excludeKeys.each(function(key, value) {
			contentToShow.remove(key)
		});
		contentToShow.each(function(key, value) {
			var $keyObj = $("#" + key);
			if ($keyObj.length > 0) $keyObj.html(value)
		});
		showPContent();
		rotators.each(function(key, value) {
			if (value > 1) if (typeof $.fn.cycle !== "undefined") $("#" + key).cycle();
			else $.getScript("/js/cycle.js", function(data, status) {
				$("#" + key).cycle()
			})
		});
		var now = pzPromo.now;
		if (pzPromo.VPCCookieData != null) {
			var pzArr = pzPromo.VPCCookieData.split("|");
			for (n = 0; n < pzArr.length; n++) {
				var pzArgs = pzArr[n].split(":");
				var exp = new Date;
				exp.setTime(pzArgs[3]);
				if (now < exp) {
					var key = pzArgs[0] + "-" + pzArgs[4];
					if (!cookieData.containsKey(key)) cookieData.put(key,
					new PzInfo(pzArgs[0], pzArgs[1], pzArgs[2], pzArgs[3], pzArgs[4], pzArgs[5]))
				}
			}
			if (!cookieData.isEmpty()) {
				var VLFCookieData = strGetCookie("LLBVLF");
				if (VLFCookieData != null && VLFCookieData == 1) {
					var keysToRemove = new Array;
					cookieData.each(function(key, value) {
						if (value.qSrc == "VID") if (!reqOffers.containsKey(String(value.offerId))) keysToRemove.push(key)
					});
					if (keysToRemove.length > 0) for (i = 0; i < keysToRemove.length; i++) cookieData.remove(keysToRemove[i]);
					document.cookie = "LLBVLF=0"
				}
			}
		}
		contentReturned.each(function(key, value) {
			if (cookieData.containsKey(key)) {
				if (cookieData.get(key).expiry != value.oExp) cookieData.put(key, value)
			} else cookieData.put(key, value)
		});
		var longest = new Date;
		var llbVpcValue = "";
		var idx = 0;
		cookieData.each(function(key, value) {
			idx++;
			llbVpcValue = llbVpcValue + value.toString();
			if (idx < cookieData.size()) llbVpcValue = llbVpcValue + "|";
			var tcdExp = new Date(value.expiry);
			if (tcdExp > longest) longest = tcdExp
		});
		setCookie("LLBVPC", llbVpcValue, longest.getTime(), "/", document.location.hostname);
		setPcdCookie(cookieData)
	} else showPContent()
}

function findParm(url, param) {
	var found = false;
	try {
		var value = $.url(url).param(param);
		if (value !== undefined) found = true
	} catch (err) {}
	return found
}
function resetPcd(currentPcdVal) {
	$.vstrAttr().set("pcdUrl", currentPcdVal)
}
function resetOappc(currOappcVal) {
	$.vstrAttr().set("oapUrl", currOappcVal)
}

function setCookie(name, value, msecToExp, path, domain) {
	var date = pzPromo.now;
	date.setTime(msecToExp);
	var expires = "; expires=" + date.toGMTString();
	var cookiePath = "; path=" + path;
	var cookieDomain = "; domain=" + domain;
	document.cookie = name + "=" + value + expires + cookiePath
}
function deleteCookie(name) {
	var hasCookie = strGetCookie(name);
	if (hasCookie != null) document.cookie = name + "=; expires=Thu, 01-Jan-70 00:00:01 GMT; path=/"
}

function getCategoryId() {
	var categoryId = -1;
	var url = location.href;
	var shopPatt = /shop\//;
	var searchPatt = /search\//;
	var catPatt = /categoryId=/;
	var remainder = "";
	if (shopPatt.test(url)) remainder = url.substring(url.search(shopPatt) + 5);
	else if (searchPatt.test(url)) remainder = url.substring(url.search(searchPatt) + 7);
	else if (catPatt) remainder = url.substring(url.search(catPatt) + 11);
	if (remainder != "") if (/\?/.test(remainder) > 0 && /\?/.test(remainder) < 7) categoryId = remainder.substring(0, remainder.indexOf("?"));
	else if (remainder.indexOf("/") > 0 && remainder.indexOf("/") < 7) categoryId = remainder.substring(0, remainder.indexOf("/"));
	else if (remainder.indexOf("&") > 0 && remainder.indexOf("&") < 7) categoryId = remainder.substring(0, remainder.indexOf("&"));
	else categoryId = remainder;
	return categoryId
}

function setPcdCookie(cookieData) {
	var pcd = $.vstrAttr("recache").get("pcdUrl");
	var PCDCookieData = strGetCookie("LLBPCD");
	if (PCDCookieData == null || PCDCookieData != pcd) {
		var foundPcd = false;
		var expiry;
		if (typeof cookieData != "undefined") {
			var promos = cookieData.values();
			if (promos != null) for (i = 0; i < promos.length; i++) if (promos[i].qSrc == "PCD") {
				foundPcd = true;
				expiry = new Date(promos[i].expiry);
				break
			}
			if (pcd != null && foundPcd) {
				var now = new Date;
				if (now < expiry) setCookie("LLBPCD", pcd, expiry.getTime(), "/", document.location.hostname)
			}
		}
	}
}
var LLBabPromo = {
	qei: "",
	popOptions: null,
	cookieVal: [],
	options: {
		ck_domain: ".llbean.com",
		ck_expiration: new Date,
		e_var: "eVar36",
		domain: "ww" + "w.llbean.com",
		name: "LLBabPromoLayer",
		segments: [],
		seg: 0,
		value: null
	},
	getRandInt: function(holdPercentage) {
		var segsToShow = 100 - holdPercentage;
		var seg = ((Math.floor(Math.random() * 100) + 1 ) <= segsToShow ? 1 : 0);
		return seg;

	},
	fireMetrics: function(title) {
		s_o_sc.eVar36 = title;
		s_o_sc.linkTrackVars = "prop1,eVar41,eVar36";
		s_o_sc.linkTrackEvents = "None";
		s_o_sc.tl(true, "o", title);
	},
	createPopin: function(popOptions) {
		var localSubrnd = util.getParam("subrnd");
		localSubrnd = localSubrnd !== null && localSubrnd == 1 ? true : false;
		var globalClass = localSubrnd ? "sigDialog" : "coreDialog";
		var objDialog = $("#ABpromoDialog").dialog({
			autoOpen: true,
			modal: true,
			width: 526,
			stack: true,
			dialogClass: globalClass,
			resizable: false,
			zIndex: 1001,
			open: function(event, ui) {
				$(".ui-widget-overlay").css("zIndex", 1E3)
			}
		});
		util.uri.getParams();
		util.uri.deleteParam("pcd");
		$(document).delegate("#ABpromoLayer", "click", function(e) {
			e.preventDefault();
			log(popOptions.vat);
			if(popOptions.vat===false){
				util.uri.addParam("pcd", LLBabPromo.popOptions.pcd);
				var params = util.uri.toString();
				util.uri.doSearch(params);
			}
			$("#ABpromoDialog").remove()
		})
	},
	init: function(popOptions) {
		if(typeof popOptions.exp === "undefined" || !$.isArray(popOptions.segments)) return;
		LLBabPromo.popOptions = popOptions;
		LLBabPromo.options.ck_expiration = new Date(popOptions.exp);
		LLBabPromo.options.segments = [popOptions.segments[0], popOptions.segments[1], popOptions.segments[2]];
		var today = new Date;
		if(today.getTime() <= LLBabPromo.options.ck_expiration.getTime()) {
			var LLBTodayDay = today.getDate();
			var promoCookie = util.readCookie(LLBabPromo.options.name);
			log("promoCookie ", promoCookie);
			if(promoCookie === null) {
				LLBabPromo.qei = util.getParam("qei");
				if(LLBabPromo.qei !== null) LLBabPromo.options.seg = 2;
				else LLBabPromo.options.seg = LLBabPromo.getRandInt(popOptions.holdout);
				LLBabPromo.options.value = LLBabPromo.options.seg + "|" + popOptions.segments[LLBabPromo.options.seg] + "|" + LLBTodayDay;
				util.createCookie(LLBabPromo.options.name, LLBabPromo.options.value, LLBabPromo.options.ck_expiration, "/", LLBabPromo.options.ck_domain);
				if(LLBabPromo.options.seg == 1) LLBabPromo.createPopin(popOptions)
			} else {
				LLBabPromo.cookieVal = promoCookie.split("|");
				LLBabPromo.options.seg = LLBabPromo.cookieVal[0];
				if(LLBabPromo.cookieVal[2] !== LLBTodayDay + "") {
					LLBabPromo.options.value = LLBabPromo.options.seg + "|" + popOptions.segments[LLBabPromo.options.seg] + "|" + LLBTodayDay;
					util.createCookie(LLBabPromo.options.name, LLBabPromo.options.value, LLBabPromo.options.ck_expiration, "/", LLBabPromo.options.ck_domain);
					if(LLBabPromo.options.seg == 1) LLBabPromo.createPopin(popOptions)
				}
			}
			if(LLBabPromo.options.seg == 2) {
				LLBabPromo.fireMetrics(LLBabPromo.options.segments[2]);
				log("Metrics segment: ", popOptions.segments[2])
			} else {
				LLBabPromo.fireMetrics(LLBabPromo.options.segments[LLBabPromo.options.seg]);
				log("Metrics segment: ", LLBabPromo.options.segments[LLBabPromo.options.seg])
			}
		} else return false
	}
};

function showPContent() {
	$('[id^="pc"]').each(function(i) {
		var $this = $(this);
		if($this.html().length > 0) if($this.attr("id") == "pc5" || $this.attr("id") == "pc6") {
			if($('#noPopinLayer').length == 0){
				$this.css("visibility", "visible");
				var activateGlobalPopIn = $("#activateGlobalPopIn");
				if($("#activateGlobalPopIn").length > 0 && typeof activateGlobalPopIn.data("options") !== "undefined") {
					var popOptions = util.getAttrJSON(activateGlobalPopIn.data("options"));
					LLBabPromo.init(popOptions)
				}
			}else { $this.hide(); }
		} else $this.show()
	})
};